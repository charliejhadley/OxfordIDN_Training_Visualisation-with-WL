(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1175280,      22913]
NotebookOptionsPosition[   1156721,      22412]
NotebookOutlinePosition[   1160750,      22512]
CellTagsIndexPosition[   1160668,      22507]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 "Data Viz: Data Analysis and Creating Interactive Visualisations with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Title",
 CellChangeTimes->{{3.655547488623551*^9, 3.655547536278241*^9}, {
  3.674206668383203*^9, 3.67420666856919*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and the Wolfram Language"
}], "Title",
 CellChangeTimes->{{3.655547995652112*^9, 3.6555480015118923`*^9}, {
   3.655551905279608*^9, 3.655551908925457*^9}, {3.663574491224098*^9, 
   3.663574491287712*^9}, 3.6737616317870703`*^9}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
GyHEWez8/nup/MuaNIYxyQPa3TjOqM3qzXjGREWL33//3XR7OHHihEfPpeMs
x8yYBGKPHD0aY0JsAt8GH0cIcQZnf/vNo7uh7moY65NUq6FlFV6P6fsLFlhm
F+i148mzWXmWczA41NSYBHrBIXX2fVHDTKhvAh8HX0cIsTc3btwQJYXq/Ttq
Our2bXbUxrRMr+v557dqrax+mjuMGjHSo+ez6ixH5V3g2jSotFy7vfizzKgL
C18Hn0cIsS/DhjyjfO4/GtiAteVrUKc87+8Ff7d1q6W2sX7deo+ez4qzHKti
EqhHIfNedQo+5FET+umgPg8hxJ7Mf3ee8jmPnqHswVe9luQXej2uvZ/sZbl9
XLlyxaOcI+QX7oxtatr4HQgJsywmgcpbtdFuM/4u+JISE3LxF7z3nuXziRBS
O7t371bei6+lS3sZk1Sr448Eijwv6+fi3OfkiZNa7KRrp04ePetUk3Iy9oVH
iaKsbMtiEqh1eoZ2u6HqGj6lpeJvC98HH0gIsQd//fWXaC7RJ646NQusL75j
TFKjPigu83psRz4/QputzJk1y6NnxX6G6rHbExVteUwCJcebt/dDeSb4lmaK
803gA+ELCSH6eezRbkrnd5RL6+oGavdddtXRgPqiZUqqV2MbGR5hyb3gmjh2
9KhHzxtcv4FxD1rV2P0QHStapaVbHpMYYx8apt12qP8JPiZK8TeGLySE6GXa
228rndfBLi1kLddaNUfiXvDrr72m22REi+QUj54Z76ti3HbEJYjs5i20xCRV
Qo0U3fZD/U/wNcGKvzF8IiFED6grFNLQuzuqNWk866bVKtSbT22W4NXYYq/k
z/P6e6KOePY5j54bvQhlx21b0ySRkaz2rLF1To7Hd593xqjb+6HUaLziumvw
iay5Roj1oMdbmpdnCTWpD2uUPFRTKiq9Hl877JWAdWvWevTcoQ2DjDxVb8ds
S3JzI7dDpa22yc0V58+fF3PnzPHo321unq7dhqgH1Udxrgl8o1l9MAkh1dPv
6T5K53Gxyy8cYZ5rrUKtjfjGTbwa3wjXv/3jjz90m40B+gsj1vDk+ee1864m
2YaMll6PWU0qKSgUf//9t/EuC+bP9+jfrmFPYVsK94eLFccm8JGEEGtY/PHH
SudvkssffM+Y5KGS2SsZ+dzzus3mHjp62GewZ5HnNclW5+R53TeoJpW3K/1v
TAI8nQvsKWxfwQclKY5NYB+EEHM5deqUiI5opGzehru0indvHqpDwaEiITbO
qzFGvZJTP/+s23TuYdaMmR69A+6yYAzcHa/P8gtFI9e/UbnGIJZCbbi7WfbF
Fx79DG/3fShrBF8UptBm4CvhMwkh5nDnzh1RWVau1NdP5d0bt/S2xF5J/z59
dZvOAxw+dNjj91jsZh131Hbx9JzoYere9dEHYhKwZvVqj37O2+zdZ3vBJ6m0
HfhM+E5CiHo8rYn1MPVmnqtbwt1Sb+/gQAcPHtRtOtWSmpjk0XsMLC176FjN
Lqswap6otNOejz1WY2+2bzZ949HPGmtRL0JKTr0Vn+fAdxJC1HL0yBEjd1LV
PM3CesmcErc0o9z7vZJuXbrqNp0aeXbYMI/eJS66sVFTrqZxmlThWc6KO8Je
U239Yrdu2eLRz3u+nPslThB8U5ZCO4LvhA8lhKjh9u3borigQNkcjXRpE3NK
3JLsXsnXGzboNp8aWbVypcfvs7J1frXjNEbinKsmDejbT9y6davWd9i3d69n
P9ONPR/KHoKPilRoT/Ch8KWEEHlmz/QsR/FhmsuYxG29I5HPk5WeYetzbdR3
8LQu38jye89B0L9wuMR+Uk1C7Td31pAD+/d79HO9uVdE6RN8lUq7gi8lhMjx
48kfRWRYuLJ5+RRzStwW1lyZuunz3nlXt/k8lPblntXUb56Q+N/xwZlOn3al
ymMS1HB1N55DX2ZPfnanPPnatZS1ekphrgl8KXwqIcR7OijcH09zze/9zClx
W6h14e1YR0VEiEuXLuk2n4cyfeo0j98NtdJwZ7h7QZHymMTTmri4A+rJzy/J
ydVuV5Rngs9KUxib4L45IcQ7Fi1cqGwuhgayTomnKm/dxuvxfmHkSN3m4xa4
K+Tpu410xcrt2+Qpj0kmTpjg8fN7Gpe0Ts/QbleU54LvClVoa/CthBDPQH+3
OIX1u19mPz6PtD4rV2q8jx8/rtuE3CapaTPlMYanmjZ1qlfPjnniye+5+xyK
cpZeVtjfL65JjC16aBLiJJ4ZNFjZHMwPbCCO28CvOEm9iku8Hu9O7TvoNh+P
GDp4iNaY5J05c71+9osXL3r0u2Iive8/SOkVfBh8mSq7g48lhLjHtu+2iaB6
as5TIwJ5J9hTbU1MlaoNtvyLZbpNyCNWLl+hLSZZ8N57Us/uaVyCngC67Yvy
XvBlEYpsDz4WvpYQUjuo19AqO0eZ35/I8xuPJXPvFfvD169f121GHoG1Heu1
lfEI4r5PF38i/ey3bt7y+HcfbhCs3cYo7zVR4XkOfO3DauQQ4u+8O/cdZXOu
iHeCPdbeyGijR523Yz7mpZd1m5BXVJaVWRqTLPnsM2XP7unv3xPdWLudUXIq
Ung/Bz6XEFI9yMOKdflMFXMNfYJ5fuO53pKspe6kfNe7mfb225bEJOjnt27N
WqXP7ukzbGuWrN3OKDltdPm2cEU2CZ/LHFhCquf54c8q8/+v8vzGYx2vW0+k
JyV7PeaoUeZU9u/bZ3pM0ig0THlMAjx9DtRf0W1rlLxeVXieA99LCLmXAwcO
KOvD2jqwgThqA7/hNC2WqKMGLflU3dmE1aC+akJcvKkxybebN5vy7J4+y+qc
PO22RskLPq61ovs58L127ftNiC66dOyoZH4FBbJ+mrdCjXJvx71xo0hx5coV
3WYkxZCBg0yJSTA26PtrFh7Hj22LtNsapUbwdUGK7BQ+mBDyL+g5q2oNGMBc
V6+0uXm61Lg/O2yYbjOSZtkXX5gSk+zetcvU5/b0mRYWlWq3N0qdBijMgbVz
/29CrAL7521y5WqLVineNT/3sv+NV3pWsifurp07dZuSNH/99Zeys0TDHmNi
xL69e01/7uiIRh4919x2FdrtjVIn+Lx4RbEJfLGde4ATYgWLPvpI2Towqy5z
Xb3R/rBIERUe4fW4Z2dk6jYjZZQr6g+MmOTQwUOWPHOTyCiPnm1KRaV2m6PU
Cr5PlR+FTybEX0H9reYS9z/uViHPb7zWdMm9khnTpus2JWVMeWuytC0mowfN
iROWPbOnccnrle212xylXgWK9kzgk2/cuGGZ/RJiJ9AXRMU8Qt7Xmro8v/FW
bTNbej32qJN69uxZ3aakDJy7yNhiamKS+PHkj5Y+s6dxydgKxiW+KPhAVTmw
Mj2bCHEqVy5fFonxTZXMoae5V+K1vszMlhr7Ht266zYlpdy+fVs0i43zaiwy
WqSJM7+esfyZQxp6VkN/RDnzS3xVTyvaM0GPbfhoQvyJ6VOnKZk/0S7ttIE/
cKqGlFVIjT963vka3twXzslsqSUmAZ4+K3KcddsdZY7gC6MV+FUIPpoQfwFx
eFzjJkrmzsus6+q1DoQ2ksp3xTd0Wo8+d1ixbLnHYzHyuee1Pa+nzzqgtEy7
7VHm6SVFdWDRg5N7JsRfULVXkhBYXxzkvWCvNatcbq9k1IiRuk3JFIz+wh6e
jeAMRxeefrenStpptz3KPMEnJig6z+GeCfEHEH/jDqWKOTON94KlJJPvCu35
YY9uczKN9l7EbKd+/lnLs3r6nD0KWe/V1zVN0b1h+Gqn13Em5GGouoOT7dJx
G8x/p+qrzCyp8W+dk6PblExl5vQZHo+JrroPnj4n+g3otj/KXME3ZinwsxDv
5hBfBrkIyPNWMVcWcK9ESiMkz3DmzJql25xM5cjhwx6PybAhz1j+nJcuXfL4
OStat9Fuf5T5WqBozwQ+2xfzyAgBCz/4UMk8yQtsoH3OO1lHAhuKeIm8Y+Re
/P7777rNyXRaJKd4NC466t4iF8bT75ef2VK7DVLWKE9Rv2H4bkJ8DfRcgN9W
MUcWca9ESh8XFkuNf8/HHtNtTpYw8vkRHo/N+fPnLX1Gb+KSNq55qNsGKWu0
SNGeCXw3++YQX2PN6tVK5kcxa6hJq4dkXLJq5Urd5mQJX65f7/HY4N9YyenT
pz1+xty0dO02SFmnYkV3c9auWWOpbRNiNqr6oX3MvRIp/RAdI0IbBnk9/qhp
4C+9M65evSoiQkI9Gp+33pxk6TOeOnXK42/YHP17bGCLlDVStWcCH06Ir7B7
1y4l8yKfeSXSertCrkff6FGjdJuTpaDOvifjY3Vd/mPHjjEuoR6qfEV5JvDl
hPgCA/r2UzInPuReibx/kqxZcuDAAd3mZCkL5s/3aHwS4uItfb4D+/d7/A0T
YmK12yFlrT5UtGcCX06I0zl37pwICwqWng+53CuR1qbmGVLfoLigQLc5Wc6v
v/7q8Tj9dsa6PjnexCVNGkVqt0XKeuUq2DOBL4dPJ8TJTJo4UUmcPpt7JdIa
I3mG8+H7H+g2Jy3kt27j0Tghx9sqtm7ZwriEckuzFe2ZwKcT4lRu3rxp7GvL
zoPkwPriqA3mtdOVnpTs9TeIiogwanj5I57G1uNfH2fZs3kTl4Q0aKjdFinr
BR+arOBuDnw6fDshTsSbvqzVaUIA7wbLam12K6lv8OywYbrNSRv79+3zaKwe
7dzFsmfD3U1vvqdue6T0CL5UhU+GbyfEiXTu0FHa/pu44vv97BksrefL5c5w
du/erductJKamOT2WKHXmVWsXL6CcQnltuBLGyvYM4FvJ8Rp/PTjjyKonrz9
D+deibSOusYwUeI8Lb9Va93mpJ1RI0Z6NGZnf/vNkuda/PHHjEsojzRcwZ4J
fDt8PCFOYuyrr0rbfrBLWx7hXomslrVpK/UdFi1cqNuctLNp40aPxmzDV19Z
8lzvL1jAuITySPCpwZK+GYKPJ8Qp3Lp5S0m+axfeDVaiwWXlXn+DuMZNjLqn
/g5q3DZuFOn2uE2fOs2S55o7Z45X33VfGO/k+LO6KLgzDB8PX0+IE1i/zvO+
ItXps7qB2uev07W7cZyIiYzi30QK6NO7t9vj1r9PX0ueafKkt7z6rnsjorTb
JqVP8K0qfDR8PSFOoHevXtL2nh7IvWZZHQwJFYVZ2V5/g+D6DYz+K+Rfli5Z
4vbY5bTMsuSZJk6YwLiE8krpCuIS+HpC7M5ff/0lwoNDpO399QDGJTJCrutj
hUVS3+DJno/rNidbcfHiRRHSsKFbY4caIdeuXTP9mV4aPZpxCeWV4GNl/TR8
PeYFIXZmwXvvSdt6mEu7bDBvnaxnJe8FQ1u+/Va3OdkO1CZxe+3fs8f053l+
+LOMSyivBB8bJukjIPh8QuwMemHL2nlP5rtKaYpkvXnIH3vhuAPuJrk7hh8v
WmT68wzs359xCeW1eirIf60oLTXdzgnxFvQ4U1Gz5FP2wvFaS9oWGXkhst9g
9apVus3Jlly4cMHtsxycsZjNEz16Mi6hvNanCnrmwOfD9xNiR2bPnClt4+jf
cNwG89WJ2pzSwujJJvsNkLN5+/Zt3eZkW9w9y0lLSRWHDx029Vk6te/AuITy
WvC1KnrmwPcTYkcK8+Xqd0EjmO/qlfZERomM5BTp8YdQQ5TUjCdnOdhbQd8/
1D8xg3ZFxYxLKCmNUJD/Ct9PiN34+aefpG07yKVNrFnisXD3prOCmBBCHxiz
1lBfwZOznCrl5bYSB/bvV/4sbXJzGZdQUtqkqJYJ1gBC7MTM6TOk7bogkL1w
vNErCvJcqzTvnXd1m5Ij8OReTpXCgoLF1ClTxK1b6mpktvByj4xxCXW32irI
f8UaQIidKC0ukbbrN9ijz2MtLvRuH786ca/EfTw5y7lfJYVF4uSJk0qeI65J
DOMSSlpvKOjlhzWAELtw9uxZ6Tsg6CO1ow579HmiLUmpSvJcq7Twgw91m5Jj
8OYs5241Cg0T782bJ+7cuSP1HBEhoV79/kPBodrtl7KPtteR7+WHNQBrASF2
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
8oi945KJqenK/dkvv/wiNe5HDh/WHnu4I/xdiToojE+I1Zz6+Wevemd7Y+Nj
K9qLI4ENtfsqXVLRG4f9yokqUMdL1h6/CLBvzdfjLqXFxSv1Y6hbKQv6W02a
ONG4WyfTQ8XK+GTYkGcMeyHEKpB3YtXeCXoAfp2Wqd1n6dDnAfI16OkbiCpQ
z0J2XZxl45qvi6KaKPdf06ZOVfoNUMth3Zq1YvSoUZb0YJURzndee+UV9uci
lmLV3klYULAYX9FeHHVYXSZZzZKs9Yo1hLWRiEpk63m9aOOar13SMpT7LvT6
MJNjx46JmdNniMqycktqdnsj1EHB37G3btIXEWvA3slHHy4UsQr7SNSkgpZZ
YmOLDO3+yyqNlqz1ijWEEJXgjqiMTfay6Z2cza7nUn3fBXX7reTChQvik8WL
Rc/u3Y2/5XTHI/cL9U8IsZI//vhDDOjbz3Tb9qe9kycl7whjDSFEJQP79Zey
ySKbxiXPpmcq91Xjxr6u7Tv9/fff4rNPPjX6voU01J+Tgp6FV65c0TYexL/Z
tHGjSG/ewnQ7x97JhvSW2v2ZmSqSvCOMNYQQlUycMEHKJpvZMC7ZXydANIlo
pNxH2SXn/MKffxp1qGT7G3krnDExJiG6QR3Aca+NNT1O9/U7O80k4xLUPCJE
JTgnkJ23+2xWw2RqsyTlvikhLt6WfelRiwr94xMU3zuqSQV5+cbeDSF2Ab0U
ykramW77uLOzIcO39k7gu2XHBWsIISpBn1lZu1xR1153hVuZ0Jt32DNDdX+q
WkEO6to1a4xcFLPuHrdMT2ctWGJLkBe75NPPRFKzBFNjE1+rFQvfLTsm27dt
1/35iY+BvlmydjndRneFPw81p9YB1nyngLpvI597Xun7I+cedVcIsTOXLl0y
9g/NzhNHrdgvM7O1+ztZTZe8IwxhDSFENegtK2OXw22Us/6ECfmuqNvhpHwK
9ClWua8dHdFIHDx4UPdrEeI2qFGMHHEzYxPsnbxcUSkOBTm3R/GwALncEqwd
hJhBu6JiKdvsaJPc1x11Akw5w8DZiFPAfnb/Pn2VvTtqqHz15Ze6X4sQr9jw
1VciK119HaO7hR7Fa7Nbafd/3qiDZM4r1g5CzGDo4CFStplgk7jktWRz7g0u
/OBD3Z/Ibd56c5LSd5//7jzdr0SIFMi9wv21xPimpsUmiN9fMPZOnJV3kiAZ
l2DtIMQMZs2YKT0vd2meX+iFk9IkRrm/QW02p5yfYl9DZS25kc+P0P1KhCjj
yuXL4u3Jk0WTyCjT4pOM5BSxsnW+9njDHcFny74v1g5CzADrmax9fqI593WR
CfVKoOKCAt2fxy1+/fVXpTW6O7XvwJ4XxCf58/yfYsxLL4vw4BDT4pOhZRVi
f1ik9tijNn2iIOcV52SEmMFvZ+T7Co/V3Cfn0ebm9LzD31d2B/EDap2peufm
SclG7TZCfBncW+v9ZC/TYpOUps3EJwXF2uOPmjRWsi8OdPa333R/RuLDxMfI
nYE8FthA2/zaGhAoghX3wqnSgf37dX+ahzJ1yhRl74v7lXt+2KP7lQixjJdG
jzYtNoGeLmknfoiO1R6H3K/HJPviYM0gxEw6d+go97eBxtzXF5Obm+JPklx/
7+B+i505fOiw0loNzHMl/gb2GytKze3pEI8e3CVl2mORu5UimfPapWNH3Z+O
+DivvDxGeu7pyH09UidAJESZ0/vc7rnmuGdQmN9W2ftiT5sQfwT9HKzo2f1o
QaHYEZegPSZRkfOKNYMQM1m6ZIm0nS7UkPv6XiO5mnC1aeXyFbo/S628M2eu
sndtkZzCvjfEr1Hxt5k7Qp3C6WWV4rjGuwILFeS8fr50qe5PRnwc1EeUtdOR
GnJfO6SYc4aD+mwXL17U/VlqBPlm0YruIKH2AvokEeLP4J5OZLg5fSyqU7vc
VuKb5ula4pLnJeu8QlgzCDGbuMZNpOy0pJ61OSabA+oprddxt8rbler+HLXS
7+k+yt4VveIJIUJMnDDBsrgEwt3+A6GNLI9LSiT9JtYKQqzg0c5dpGw1wqXD
dQIsm1ujklNN8xdT3rLv/eDdu3Ype89W2Tni+vXrul+JEFuAftnoh2VVXDKn
rMLymAQ+Olzyubt16ar7UxE/QcXfCsvrBloyt/7NdzUvt2Tf3r26P0e14H6Q
qp58OKvinWBC7mX40KGWxCS9ikssj0mgZQGB0s+OtYIQK/h6wwZpe33VohyT
D0LDTfMXCXHxtr0fvHrVKmXv+eoY5tMTcj9HjxwxPSZJbZYg9kZGa4lLXlVQ
T23j11/r/kzET/jnn3+k+/FWWJRj0jXVnHxXaMjAQbo/RbXcvn1b5LTMUvKO
qOl65coV3a9EiC1pX15hmn9Bnvmq3DwtMQlUIZlbgjUCawUhVpHfuo2UzVqR
Y7LN9fPNqu8KLfviC92foVq++PxzZe+4ds0a3a9DiG1RUTehJr1a0V5bTALf
HCH5/FgjCLGSF0aOlJ53SwLMzTEZ0yzZNJ+Bv2Xs2BtG5V7JY4920/06hNga
5IKr7INZpZKcXHE0QF9t7CUKcktGjxql+/MQP2P5F8uk7XaEiTkmx11KbSzX
y6c2tSsq1v0JqmX9uvVK3g97sMePH9f9OoTYnpHPPa/Ut8RERoltrr+pdMUk
0AgFuSVYIwixEtyTk60JkmdiD7/FJvYmhyZNfFP3J6gW2f5FVRo1YqTuVyHE
EezauVOpb1lYVKo1JoHyJHv1YW1A/TlCrCYvt5Wc7bq006R51dOk+q5V2rF9
u+7hf4CDBw8qeTfUh/3jjz90vw4hjiG9eQslc+8ZDXVK7hd8cpDke2BtIEQH
L7/4kvQ8nGFC7wfMq1DJ+0IPW7fRC89uPDNosJL3mzRxou5XIcRRjH99nPS8
y01LF4eCQ7XHJTMU9MTB2kCIDr5cL5/L0N2Es5wJMfGmxSTQ4z166B76B8B9
vEahYdLv1iQyytb9fgixI7L3clA7dmOLDO0xCdRd8gwHwtpAiA6uXL4sQhsG
Sdlv48D6Rk1WlfMqO66pqXHJvHfe1T30D/DB++8rebcJ48brfhVCHMXp06dF
fIxcjv3M8krt8QgEXwyfLPMuYUHBxtpAiC46te8gvRZ+ovAsZ2U9+Vj/YTp2
7JjuYX+AkoJC6ffCfosZuWrYy/ntzBnjfg/q2W/dssUQaqOsWb36AVX959/v
2GHU1MS/pZ8jduTatWuiML+t1Lx7skhPnfnq9ImCMxysCYToZPbMmdJ23D9Q
3T39gckppsYkKYmJuof8AY4cPqzk3Z4bPtzt3wl/fPLESbHl22/FZ598KqZO
mWLcl3z6qaeMGpioodI0Jlbp2OPuMn5mm9xco3fksCHPGPs7C957z4hn0Kfw
zK9nxM2bN80bbELuAjWfZWw6PSlZ7AuP0h6PVKm/5F4JhDWBEJ0cO3pU2o6b
KYpLDmIPMsy8fjgQckvtxhvjxyt5N8Q3d4M8E9yBXPLpZ8a96MEDBxq9ANEX
yMwxVqFmsXGibZs80b3ro+LZYcOM/mHvL1gg1q1ZK3bv3i3Onj0rbt2yX+4y
cQ7vzZsnZaM47/gyM1t7LHK3mimIS7AmEKKbtJRUaVteoaC/8OzwSNPXO+S3
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
AAAAAAAAAAAAAAAAAAAAAAAAAADguL4B4WBu4g==
     "], {{0, 550}, {550, 0}}, {0, 
     255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{142.6015625, Automatic},
   ImageSizeRaw->{550, 550},
   PlotRange->{{0, 550}, {0, 550}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Gawn2hvLBpvsb6xz8dm4ZKgpG5uID+dXMskoC9JPdCBrtFa/D2UVv5DEpki9
2L312fsbTGI9xufPkEkOii2mHnCC274x5E3/1Z3N2ZzN2f42zbqvi7KJ2E6C
CvJa7Yb4IFcEfvYW5nCMvPj9+3g8pAjCe+fHrZ55EdKLjNIrN0LIIiE93kfI
D2ST7rmUS34hn/QtSG7JjQeDi+DyDzmxneP/JY6X9360GHk9MSMK41gH9eVI
zrDBJp6v2k7W8fF6Uy/ZxEHCJ/vrqx1EclP/rKL5w+AYd6epxrFKrs0RqV9f
W3XQxibUCT5/gSxxxFPHYiOPWGJf+dr5eirxkxyqo9wgddCMXJqyyiTjJX7V
VblG4mju+znYSLxVYnO5IbnHUrte5vRroDwyxMWCYaXYU0NN9Supj4/X1X04
KnPlcNvHvZRPZO6b0BYaZxJM/rjjrdyUIFzS7Z/G/H4yP4/MdxzRWuf7i2ij
jBJGPeG4vlFieUtYMJUsMaW8sslUMslsk0vGuKotRuJKhEUMJhFbyecaIyIS
W0laV7F/5TBqp0lu1dJadsk8SFJHLYTbfCYxrp3UfyQxtyFdsmF/p2zG5262
1hr5IWZdFYNJPtLcZ8l5lv0420xjZiM/1/qyUgM/ZciHyJpYBpE/6hzUMu/B
Na7nPH9Pp/h4P8/x/dGFjNiPrI2eyNzhi8zjbYFt9WDd44+sS1+QIfzBH5T2
G+qo/2aQySNDHNhkmDJJIl9PO9oOOCtzC5MxhEcONYH1UFNd3kP2OOhH3mlp
2E2skoMjPqPNtTUGVnw5V/u96b+5szmbsznb36dlZQJrXJVNVuam8gPb+XhP
ZZwYVAATOaavldrn/fPj/oBCuNXrQwSTT2798j5u/Uwu+fED3OQ4dbXr2wjm
OBbaM7f6fXpJHbZiONpeY1AlbyKyT25EjyyJi19qrYxVdZRLbGyyhlor4vPr
6ti5ZL3JJpJzs51j924v1R4vjWsV9pF5eyU/NZ5jVCLvoy/w+ctSL03q1XNd
W3mPfpCvn+a4f0psLnWVU05xHcfqaUzsuXp2LrlQX2unzeF6+7toHo3IYJMy
6vPoU0RjZJ60UpvJLW/lGelvip3IlDx3n2wyhzzQp5hyyVCu83dTEluyvLJy
zQkv5RPRMR7XEZ7/E3V1/6T2veQABXP/YsXf0j0bMr9+27BhBDdXP044x/yw
VhprIr6gkJZkgw4aPyxxMWIzETYxVFG5ZBKPaVl1jSkRW4n4aZL4HSV8YWcS
kdhnUrr/06h5O4PrWS48UlNtXyKJVTlERnv+qfqTxFYS2VH9N+e7vIN5/B6O
+GiNfGGScOq2uXylpfKI1L8RJpH69FLjXuq4JfbKjvTxLogfUQzhX+v7JA5W
mERycs60V59hSO93yQxkgy0NkLnBExmHWyHroDJK1omOyDrzCaxb6xmcgoPk
hwXFjLpxBps4aqgySXIfC1L3yTw6nYADjfmZpgabWA1xeVc9I8/YiDWxMYnY
Yda66zyARn5OY1gv93zT/3JnczZnc7a/Vct8Fsp7yPJAANlkVS6ySV5gXQng
SA08WlgO83i/PllqkX79HqIGFUFEn4K42SMPgrt/gOAeHyCUbHK2c3Yjr1fy
M8P7FTFsK5JPHPJrISPv9yJZ4V6P7IgaWgxXf3gHi2tqbXIbmxhcwuXVdZRL
/o1N6thtJZvraL/bZBSpH3+CfDCb4+L4KlqbDBwTw/2VT674akzJNrLJAa5L
5qKRsV7sJcdMBjhj8+PUUz+OKExqvdXSWBKJCxldRu0kImGToVITrYqO/bdl
XPSxS9gk2GQU0ROO5Ztq6BzCwx24pG9xrYlyUmxT9ZVLhJVOcN+Oe2p/jMe7
v5ay0j0eUwTXm8YxOeu3/Mj65h9I+VpZ5FZL3ZdQU7blB+01VnZiOe4vGWSq
ySbTyit3jSqlNWPxUzajfn0iv8MXwiFdLHhmStgn8weey8/exnTyzBKxldRQ
e5Vojti/yFBRZIxHPPf3uc0HEucqcwp+kR0ryStr+X3f66A8InYSmUdZ/DuS
Z3TenK9RbCYyf47UvU/8kcc5rCASx7jgPn87EgN7mecxWD73L42DPWsyyeVv
zPoiO32QucYDWTv8kHm8HXtvZG1tiMwLX5JRWsG6yRPW7WSH3f6a+ytcMsCi
ecIDTS7pTf7qQW33BS59qv4e8QVR1gPKJNadWpPNKjXZjvCx5CFv8gICaxh5
wkbcifh4JEfnkpNLnM3ZnM3Z/ldb/OavgY1vk03eUzaRXJ1VhYF9VXhf6I5d
3XIbubXLxQbwcx7c718Yt3rkxo1uOXCru7BJHl7qNScmrFt2hPQpTGbJjcgB
BXGmSzaDWe5wrLnfvyCu/fyhwSSLzTjJlbV1TFtdW7lkjamXbGL2G+po7RLJ
v9ngobGtezme76mrNdNOS402jt8jy2ucSirHsWctNa41pJHaSnaQTfbVUTYx
7BGe6jcRHnjJJaYu8/1XqEkcxwe6KI+MMiXL4vsQ+8de7s+TZmpfsXGI2Ejk
sU0PJGeG+zm4hAVDSiqXiHoUsWBFFX3PSU/lE5tsTHKU5+UYjzeiqcavZMmc
MMJXXxYA+uRBgszH21LjYx15RFglnLrdWn08i6spgxhcQkl8iNhKFlW1IJks
YP1G+0RySLyNST7TOm3iM3r2/btGDdfZ5ZVJRIuqq09uThWtNxtHXookK0R1
UB9SCD+3raXm+wg33eHzoWbNt+C2Wg/ujDm/j8S9Sh6y1HFL+e19JJNHHvfL
Z8xtIPEm18wYm8TAKggb8A5OyJxG/F2dltr6m70MLslcWwdZG+si60BLZB5q
jawNnsja31K5ZIevYTux7mkM6+qasP5qxpb0MzVAmSSDzJO8xpM88ZnaSQwm
aWxImaS+IRw2Y01OtQLW1AaWV1E7ibDIYX+VxL6e//FN/72dzdmczdn+Vi0j
PpasUBrJC/KQTSwmm7yvbBJYFNhSgdfYeng4rzIC2r9tzPW2nePE3T4FcLtX
Hlz/8X2EdCejfJcLW7x0DuDwXvkQ/Et+3CLDRPQthP1mTkV039y42O1DLCQf
LJGYyTqazyH5pate5xPxIdXW+XKETYLc1U5yV/Jzm2vcyBYPjXE1VFdjR4Q1
pG6YzAd8h9t92ExzgW9KnXcfjRs5WEdZ5KjJJUdNVhEeOedlisvhfP9ajr2/
FteYVUcJm/QtrPXDosReUe9V302wgyRO9S7XNZUc0Keo2lp+I9P8zv6syUCn
66psXHKqrrLKIR7jZb4nuq3yVTQ1njwT6PsO7/ffxaNWap8w4mRbKJOEm0wS
ZupJR82hHs7tTS2nXDKDfDGqpM7djH8pjySJrYR9XBflEVHsJ2orOc7vb2oZ
01ZSXeNLhEtmVNJc7tiPdT9Ed9tprZLDHf+BhR6ayyy8IkwSLjk0UhetsdaC
kxwgqQOb8CV54CcyybCieDKkCMK+0Xq3YlORuZtlLqCU/fWRsdfTiAkSJjnK
Y05ZWYv83Bjpaz2RQT7I2OaH9MPtkLmzCbI21Ufm6c7IPNaRjOLFx2SW/S1g
nZ7POGb0Ndmkr/pujJjfpVVMJmmithLRPvLFfjLJDjLJdi9YD9iYpCWwoiaw
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
Ti3lEuETsY8cNtnksMkmElsiLCIxrhLzIX6dk3z+FJ8/XdvOC2ep83XsTHGD
vHFH6rrxPSOL634/FF+Kl91OIrpZz+7fCTV55oKDreSsue7TpoRL5H3CJeEO
XCK6Sy4J5zZCGyubCJfca6VcIjm6l/yUR0TBJpeE8HNhLZRLpA6d+FTSvlAb
icSTCIuIjSTmI82rkZqvh7j+KaWVY6aR92az31ZHz+vD1qa9RviI674icwoK
j/jp/IliKxF/jMxlLHVV5PEJrlfyc8546z7JPlzna5d8NH87qkdupG4W2wiZ
5KSv2kmOcEy/5ov7v+tcyQisjeQVdZBCFklZVlv7lV5I2dLM4JLUTY2QOsEV
aeuaIvVEF6Rv9Ef6ilpIX1sPGVRmT52vIOUzmdvPi0zSAVmbfWAl6wjvYIvY
OvyBzXXVdnLjO32+lwVZYwoa9eete/2QtYVMsqU+P9fAXkOWfGLMB/hS9VU7
TCU/edOXAmdzNmf7L7WUGzvweF49g09iJgufFMNz8knCDJErkjd+jrQLi5D1
9H9OTLw1Mx2JV7cgZvWXeDitMh5Or4x7E9xw94/yuEMmuU0miRhNLhlpcsmw
Mgge4Yabw8ri5qgKuDaoLC51zY+MJbyOb7L5c2xskpMqQC4pQZVVNlnnwCbr
PQ1bu3Fdl5zLG1/h4cpG2PltUaPOqMEn5In5HHvnm7aSpaY/Z6HJJlLXfKnJ
JctsbFLTwW7C5TW1tI7agqoWDHcjn7hpP0JiP0oro0gt0MimmouzvaadS2wS
HrHZTfa7K1/YYkFuSA1Y8al4qM7wtbOmztn4ROJO6qhf52Zd9RlJ7TPx5Ui9
eLGT3PRSfpHHho+nnubYnDdjV86ZTCLcc0pqqLkrs9yXuXU4hoeRD8KbaV01
4ZJ7HM8jJEbUX9kkuJHaUZK//gcef6w2C4nXuNHEziWhJpdESF369hrfGvux
3Wcjc+gIj0gMithPxO8ifptJZLwZPI/raipvPGqj2w9tqkwi+3VD5rJppHwh
7xE7iXDIVb7nkthP+Ph8a/XBXPFTH9NVk2Okhq3ElCTM5O/nXEsyiMzP28Co
l2MwyRlvWPfXwAtyUlp/skRQAyQvdkfyEmqphy6v8SWXNEfynrZIWV4bqX+W
RcreTkg52BFpQfXIJe5I39wIGXPdjDrAKR24vYXVYT3akUzia3CJCKId/kYs
iTGP8I7GyNzb1vD5ZI3Ip/XnySRWMonUcTO4RHqp6baF+yt8Ij1fN5Zf8gq1
g7q75U1fFpzN2Zztv9hkHI4/MBYPJxRS+8mkIng6hXxCRomfoYwitpSkVa2Q
InGzkaff9C7/729WK1LCjyNu31jELPLH4xlVEE0eeTi1Iu5PLI/75JLI8eVx
d6wbuaQsIkaVQ/jIspqL83tpBP9exuCSG7+Xw41RFXH2J1fcH5pdbSZBJpcE
mrGwBpsUcog1ec1usoFssonji9jHd3GsudSFfPINYtc0w77vi2NGZQvGFdac
jgXuai8xfDe1lEkW1bKzybIadruJ5AivMhXI51fX0Polkgc8jusaRC75nePo
CGoQ7/F7l1auEbvCdY6bu7i8111tJwdNLnHU3pr2+qzX6qov5YLpZ7Gxiehc
bc0XueDAJtfFV1NXP2fElZhsYuMS6cWOIlxyycxBPm9yyRnTTmLjEolFecD9
iPDWfBsZ/8Vnc1e4ROwmYgvx09eES+Q1o+5Il3cMDrGxyev2EsNm0kHzgJ98
pHEp0R1Uj0xJTbUNZi5yEM/rOV+tG/ewle6HMElIU41tkfVfaKRzOAuLGPYP
f5NT/DXe5xL341Jj9e8Is8jzkostdffv9ciPzO1+/G3I3HhSh6y+8oghjuWX
fJA6KzeSyS5JU1yRFOCFpIW1kLjI3eiTltdF0samSN7QGEk7+N+e7IaU2e5I
OdwZqVtbIHVZLaQF1CGX+MM6gGzDY4mfXAYZhzsga5PUf/V+KYOj9zZRJhF7
ylQ3ZEqNk2Ef6rw44rsRDtlUj++vZ/SOgvCJTVtek3DJ6QFv+grhbM7mbG+g
ZTy6gdigzoj6g3wysRD5pDBiJxdB3NSiyijT1ZYiywmLeO+1bxDSb2xCVvQN
WDNS3/Tu/y838WWlXN+KhH0jELesGZ7Nroxnc6ogZiaZhDzyaHIFRE2qiAcT
yCV/CJeUw10yye3RZcglZRA+glwyrIzBJbcGk02GllEuGeKKK0Mq4MIvpZCx
yLSZBDnqbYdYExeK96JrKpNNqr/KJhtNNtnG6/2uFsAF8sm1r/F8XTMc6+Vq
2EzGFbJgShmdi3aJGfMqjLK4hsqoeS62E/YrqIAaJpdQQTVUG8R+Qk0j7wwu
p3P9Dmc/jP2vLhaMLc8xn2P8bX/lD+GTV+wm3O4Rd83HEd9OJMfPp01MXqit
XCF8ctz067xiN6mtXHJJJLk9dUwGqaf+G9ENBzYJNrnE0U5i89+c8FA7zL2G
ZBCxJXgrBwh/GD4c4ZPGGj9j2GVMe4n0kkOT8OU7RoyJ+FNu2Hw5Zl7OS3tJ
B/XXiG1EOETsJw/N2vFiQznH9y3leTwmbCS1YtuoPcaWk3zLJj6+yO1c9NU4
EpHwyAU/9SXZloVbLpqSuZ5P8xivcT+eTauiNpKrbYBjPq8yidhLTondpBYS
pBatzJez2N3gkcQF5JKF2icF+ZJLmiFpc3MkBfL/PLI4UtY1R/KhT5Ea1BCp
i2sgbXV9ZC6vhfS2FjwfmgeZBzsgc2MjZK4jj6xvqOJv1Lq/OTDuXaC91nmT
enIYkU/nxdnN14VFpMb9hnqG9LEKfB6bbPJUP5D0tuWt1DYeV3rim75kOJuz
OdsbakmX1uDRjKpqP6EeTyyMmElF8GxKMTJK8Vf0XDSlKBLm1URiYHsk7+yF
tHPzkRm2D5lPgmFNjX/ThwNYs4zc6IyIQ9y3xUja+RterGiJ+BkVkDC/KhIW
VsNz8sjTmZUQM70SnpBJHk+pgGhyyUMyyQMyyf1x5XBvrHLJHeGSka4IH+5K
LimNkKGllEsGuuDmYFdcFw0pi9M9yTTj8/O6+jqXUKuza6yJYxzsGo41a8gm
ax18OsImm4VN/KlmwE6ORac/I598g+StrXC2vxsCeL/9Z1H1GyyoadYxMWNM
Fptzwxl2E5NNVtZQLhGbSaDJJuJrED5ZUIU8YtpLhEuGU33JJv1K6xw7Mq5L
LVdhEyMW1l25xJFNJP/kIPkhspGygoylwhkSFyJ2k1MOfh3hEkefjrDJFU9l
EJutRHTdxiYml9hiSmw2GFnncXfllnveOhfgbZMBQppovGuon/pvHki+MM/Z
DT+zTggV3Ylc8vW7Royp+EskL0bk6MuRXOOH5tx6widSQ9ZQe1Md1cciLBTT
Trcptphwk0kMDjK3J+wj9hDxwwSbuTUiYZHzfrosthbbstRkkVott3sUQto2
H+AWeeQ8fwtHuHykoQOTUIe8yLDeSFlQCPHknReDc+LF0rp4MbcGXsyvZfSJ
SzyRuK4JEtc2xosd7ZA0syqSRrsiaXcnpOxsh5SltZG6xB3pG3yROugtxP1E
1tjbFlmb/JCxpiEy15JH1tQnY/ggay+Z5E9ydgedr1BiYjEqv9afFyYRDtng
Bev6eoay1nvpY5HEU4k22FRHZXvexidbqIj1b/Y64mzO5mxvtGWlxCNu9xBE
jS+sfPIH+WRCEcRQT4VRJpNRhFMmFcNzkWFTKYp4KkHsKYZKIHFeVSQv80bq
uo+Qtrc3Mg4PQ9bVFbAGrwXCdwNRF4HYEOBpKJD4GJB8oMw0gyX+H5vYZ5Ke
AHGR/HworGKzCduLrOurkXFxBTIODUf6zj5IC+yApCW8ti6oYihlXmUkU0nU
ixluiP/TFc+nlUfc3Cp4Ri6JJZPETC2Px5PLI3pSeR67G89BOTwYVxb3yCSR
o8rgDpnk9ohSCCeThP1eCqFDyCWDXBA8oCRuUtcHueLawNK42LcsLg9wg1X8
N+sc4kxsssXB2vw5a4RNqimbSA6xkacj1+n6yiZbmwDbySbbOQ5sbwUc/Zj3
y115/e+AG6OqY23z7JhCNvmzmNYTlTxh8d0Il0j9c6l5voxaXt1uNwkgh6yq
pmyyurrO2xvAz45z0/yc313JJmUsGMy+Z0mt63aVY+V13rvvqalxJftNHhEJ
d2zm+vqX4Laqag6xjU1CTf+McMQJdzubnHuNTURXPTW+5EZd1XVTEody0fQN
nTWZRGwwwiSynjuSs8NtPPDRmFSxeUj9EokpueSlMSWPZJ5eH61/ct1P/SvG
fDZd3sHDjzTXRXJuhUtumrYN8b0Il4hdxJDkyLRVSV20e+21Por4bO630ngW
4ZEwM8b2VmPlkeuNNG9GfDbCJDfb8NjJUee8TRbx0XolZ32US6Su7tEqOjff
s4X8TVwhi1xvadS9wRHfV5lEJPGux8myh9wR15NMIrw1sSwSFrgjYU4NJMwV
1cSLAB+8WNsEL1b7I1FsJqNKkE08kLjvUySTV1IW1CCXeCBtaS08H1MSKUES
R9IEGYENkLFalSVssrsJrH8WAMSewnMXz3OOYfm0Dr3Emhh5yeSPdaJ62q/1
ZG9Kft+OWlfbziYGn9RWbaL2dPzvXPyczdmc7S/d0iLPIWZ5G3JJAUSL7eSP
Injyh/BJYYNPXnIJFW9ySfzU4i/Z5MU0akYJvJhZEkmzSiJ5tgtS5pZG2pzS
SJ/riswFZZC1oCysFBZVApbzvmglr6ur/DheN+X43MwUl4OawrqysWpFA1gX
VYN1fnlY57lxHeWRxeXMuRWQOb/iyz6Dfcq0Mty/UkidXxmp8ypxP8ojkXox
uyL3sRyejy6OuD/K4tmsSng6o4LBJU/IJNETyvO4y+KhcMnYsrg/uozBJXdH
kEuGl0YEmSRsKLlksAtuDSyJ4P7kkr7FcJ39tYGuuDqgFE72qIDYGTnt8a+v
sMlb9nqwq13Un7ParLkWVFNrmwibrJNrNsecTT68b+Q96Faej21kk20tuMwx
6gCv1xe/5rj0CSKn18WOjz/ErPLkk0IWLKig9dUkvkTmjFtissmyalrbZJu/
MklAZdOvw9c21tD59qZW1PlrhppsIjLmuSGv7KurNVV3S41YqXXC9R+oqb2w
gsSaDHexELPUvnGM7zllxn5InKuwx0k+Pk2dJbOc8zBtJ+LXoS7V1lgTsZlc
q2uXsMlFW06wySSS+yM+InlvJNknor6yyRHJwW2tNVmknprEo4TKXDxttRff
0nVv5Y3HX7+LJ59kQ/Sn2TS21GYzMeNMhEuk9pkwyYP2WjNedK+tzmsTaebY
3DZjbCXnJ6yx3UYitplrJpNck1poMg+O2EmkZm0Dk0e4L2cbKpec4v4fJBse
57GF9yuN1F383oPbAGeaaD65zLdr2Epe898c8AJXhJQlxfGM64//kbwwuwae
z6qB+BnUHHfEL/REQmBjyh8JG5rjxaI6SBxcBIn8nyXu6YSkFfXJ79WRQg5K
WUg+WeuHjPWNkL5SaplQgV7kEmESqd3K3y6PPb4jtyM5PwPf1folu8kk5BBs
qKv8saauanVdZK2pw2VTa8kbIuER+a3bcuZt+WmyvMGU1GiLOvlmL4jO5mzO
9pdpiWcWc6x2xZPxhRAznlzyR2GTTew2k/gppr1kcnEHmwm5xOATsskMFySS
TxJnlULi7FLKKFTaHFdkzCOfzC+jfGIwSjlgIbXA1Pyy+nih/XmDSUwuMdhk
vht5hJrthoxZ1MxySKcyZlcwajc8GVXEsJcImyTOcDPsJQmzKnK/y+L58EJ4
Nqoknk52M2wmwiWPJ5TFo/Fl8HBcGUSNdTW45N6o0uSSUrgzjFwytCTCB5dE
6CByyQDhkhIGl9z4rSiu9SeXUGd/KYNbv5dQe4mNR15hk7fNOXSKkkNKU+Wp
KnzswCZr5HpdR6/zG33IJxyXtjRVPhFtIZtsacX707Yct77gvXRnxC71w/Hu
LljK8XtyUQvmlVb/jcEn1VRiK9nJMfRI57zYzHFwORkmsJraTdbX0FrvUpv0
d9NeIlwyghrgor6d5VXUjyNcIhyy1+QSkcR/HJYas1WVX8TPcrSWsojYQcLJ
Dlfrqh1FnjvjoXxyXuq01VYJf9hY5KqpayaXyOckztUW6yq2EvHdCPPEcfzf
zeMYTH4K4z18ZGN9XeaLkbzg+62VHyTHOMJPc6GPtc2B519mx2NyiczVd8Ws
EfLSZtJEuURyiSPbap21u210Tj2p1xphxtaGOdhIxGck8SvXZV2S49Ncc25k
7r2bnbPjvJnrJDwi+b+nGyqPHOB+H5R6sP8qiMRNjYFbnYFrbXXOXYNHGpvz
7fooi9jyb6ReifhwTtbD86E8D+SkuMH58HyuO+KmVcPzebX5P62E5zNq4XlQ
MyQE+CFhc2sk/OmGxGH8T27rwO21RtKCWkieXxMp88kkK7yQFuSDtIB6SKcy
VtUll5BNdjZD1pTiAM/BC4n3ZZ8lc/jZar7Kb3W9l8HUBo8EeRrKMvra5BOR
hyGsdlcZdQZr2fnEZjNcZ2o9tavTm74UOpuzOdtfqGXGP0TC2m/JJYWUT8gm
T8WvM6HIv7GJ+nNsIp9MM9nExiczShqMIjaUJHJKypzSBp9kziWbkFEwz1VZ
xMYktmXRvLIvZWMS6xxyyVzVSy6ZpVySNsPNsJ88H1MYUYPycFsVDDZ5MbWc
IYkzeT61DOKGFsCzIYUQO7Y0Yia5kUvcEE0ueSRcMsYVD8gk90aWQuRwcsnv
LogYYnLJwBIIGVAct/oVUy7pXQTX+hTD1b6lcLmPC073KIfkRdnIFGY9E0e7
ySoHNgmUuYd5XKsrUtWUSxztJjY2WS/1vf3IJxyfNpNPNgubNGdPbaK2klGO
fcL75i+Qvr4ZrgyqgHXNsmEO2WJOEQuWVlSbieTjLCF3zKqfDbs+yYu9HC9X
cTxcWVnZZI34dWoqf4ziWDmQnx8mfCLz2pTiuE9trK5sIj6dPTXtfCK2k9Om
v+ZgLbVnyPIxk01umGwiNo5z5vtOm2xyziFnR+Jhr3mqX+eyuXzBtLWcMiXr
FF+P1EIJ57gezbF/GvfxXwW5vqZaW+0k33OB77nVSOuZSV0z8euIT2hqMXKY
TzbEfZvT8OPcaacxJpKXY9R/FZtHE+UPYRLhkzutdB5giZMNa2aPr7X5bIw4
Ej/1E4l95HprjSm5Ijk2n7yHE611bkRD3lojdx/Z8YAb3/N5DsQFegMhX1Gf
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
+NuYIYn0uENlfCDy3bYK/O88JpPk0746ZhzJ80FJcIvXHCznJGMoezgrjxhx
Kfm/l5sNl1h9KMIn7iaPuJvrwidrC30vmSt5HdP1PP7Gkny2zPP7GjK/deWz
HApcHAVcIcPcXQ54bgW8dgDeu5lHDgG+x4CAs0DgJeDVDeDNfeAt2SLksX4O
uMB9jgPP9wM+O6nt/O02shB56OFK5rV55I+x/C9pq2SdYJtznLYXUcn6Zjk/
XtdqXrtbNsQuZLm0m3n1ySH1p8Qv8ct/4yXs2laDTQx/icklXqJhyQx5s94i
8qGeDVU9p4RJ/IYlh+8QB4ROSIsHvRPCtSRtL23uM9rF++2VS261po2WvjRM
74mPxMolLdVPIm0wN1gu/92IKVnjTG1t04makRMxrrmMdhyjLWdsJoSOzkhl
JqM44VlXe9zhb7zJPCf4m42sMx6RNh0eO3BoRjzvnBieHezxVLikrXLJ/VYJ
Dd/JjaZ22MFz3cJ67U4jxiQr7ZvUSWhzNubSMV3Xsjxfk1nZRLhkJbnELSXL
xGQsT5Oyrsm64aJEyiXiT73aEF4sty/wnP7mOV3jeVzj9Z5trjyyu45qO+vU
W35nSi7ZznRjLQvWkY1ms559pmMGhCxsAN+p1eE3tQb8pjGdVkM1vSZ8Z/xu
zLn8ljbhxaSiZJOaeDGlHMKW10f4zta4RB66x7rmk4G/4DL//8U4lumrGyB8
nvTpKIsvCysgalEFRJNPYpZUMvgkdlkV8lZVXh+1gnbYnWX06t8pcokHtY48
sqGhamcL9ZcIl+xoo1yyv4OyicEnHePYxJDwQ6c4NjlqStqAbCVcIjrSXvfb
Ty5YlcNso+mq353uzv/lOW77Xfc5SB45RB1pq3xytF0cmxjtPx2+55MT7eJi
Zc+Tde4Nor0YRlvRDdEX6+HjriIIniBj2hQy5iIyuGSf+EqES2gjd9NG7Gb+
2MN7uqeAKT73vdlYD89BxkiOU1n47Jmn/iaXPGhiB+/RReE9ygXPRjrj+cjC
8COn+A8ll0woTp4siVfDc+I188rrwVkRMrMk3o7Pjw+uzohYUAx+DZmXs/Fd
IZM8Zr5+Qkk8rSfZxFsYReZMLGJBEN8Vgz3EPzIqrXKJaAq3Tcyg7SbdTMYQ
vpDt812Yh2WMEuZnvofoanKJSPbvY6qv6ecYYLbr2PLJUJNPrFwyiveO333l
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
rhtc0usHLun1r1xiMMk/cUnn77lEfCVWLvFrp0zyvLVK/CbeLLM9WX49pbzE
j9LenrYqFXzIJd5Mr0u7AG3lXZaF96Udh+Wd+P1v1NG+wv6js7O+Xov2TuYf
p7ZSm8rTRpXUsaJknCjpe7OcfLGK293KKJMsKqFMIu03c4opk8zm/jPJJDNc
EEMmiZrsjK+TCuPLxCKInSrcUgrRk5zxrEcmIy7WnQyyUPpQ0G6sKUt7Q1vi
ys8baLO2VLHDZmpL1YTYWi0RtlZPhI38vL2a+IjS4F1XB9bfCmNC+V9QycLr
8GiH4Dl/GDEm60orkwiPuNGmrJD6cmmdw2clj+9RRNlkWwmNPdjJdFcpjY30
yC7xoHlpf1kfXNkijk1EK6XdplUcm8jnLb3xdUopnBbbxf88LTzCazlXkfbr
Nwsukv0u8T6f5nfBQ3kvTw7/Zy5xLYgoPp9rtfhb2sb3o/KRedqQGVrpfls7
xLGJaH8vY4z8x62UMx/Qrj5kXnhszlt9t6WyycN2cfEmd4RPJJXxiLk9qIfJ
JRLvLGP7rsmt/hKRxJlY23PEX7LZbMvZnxuR63KRSdLgcg2JxSb/tsvM/8rA
/8qIx+QLL9psH9rfZ8xzfn8xHzdW2xvUKQmCaXdD+F0407CGygIfG2obzo9c
IrKOD/+Kx1qXz4K5Wcmx+fk8C6rWkTvWMV0vz7hwHJeIj2RlQe0fE8Ljyljz
wj7CQKGNfuAS8tE7GR+Y1wM3F3w90QAnWqTBivQ6VqGMK3SD13GD+5yRdhue
/0cZO4X3L7aXzpEj8/YZ8wZO+DWuLUeYZFlBREzifZG5g/nbpzwHPz4nfz6f
AJHJJkF8Nq/4TF7z+YTIWLLiO6Het9cx3T7yWX5uqf4eGfctRmJ++/E5ky0X
12cdQ+bmGWWPyHHkkDHJEUE+iRhHRrFqfEp8mkCNT4aPTD9OsKbcNjElwqVt
h5zyLdZkRlrDZyJ+FKNdZ056xB7oC0S8/6llcvwSv8QvwJt9UzTmVSRsQhZ5
0tsOj8kYD7vb4ZH0cehmMeYIfdojATy72sGrWwJ4kTUkfcbtIl9+9uVn3+4q
f+ERGyaxtuG8sOESaxvON39J2zguecayycfkEi+WeZ5NlU3ELjzh+pPWieDV
IRm8Oqc26nliQx5YuaSuto1fYJnt2Yfl51HWvXZUVibZbMaXiNZLvIj4RQoh
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
yTHCGtEzKui4shvb8Tw6/ev4KMcH4/XI3LhcUedtvEFdr69cIjFFl/icL/+p
7TovetJGjxMGYV1+SSpggQ2PiBaYWmJqqckn7nbkE0eNM9lSUOfxO14QwdMz
4XjVxLjdMr0xhvvyTDwH2vDHVU0uqaHxJc+t8SX8LpB57eUfP3AJFVZPuURk
Hcf1Iu/bDLLm7MzKItLvxs1kEiubrDR9JsIly7htaR5lunBeP8T/Ui+OSX7k
khDxR8l/7awKn0UVsYJ5amF6C/Yyf1z6Q30kV3kNZ3gtT3n+xnyAnTSmI5Zs
EtszjklAJsGQhHx/MxgSv9Qmme+Jz/GAOWbzcRm/uaY+E6kzPJN2HD6XZ821
D//Dpurrum2je2a80BOZF1p8KSxjvHgea4TXftcx8T6ROYIG2Bl6OTABXg22
o37hu0g2sXLJCHuDSd6NIouMSsp8bfpOxorPxMFo05FYE40xSUEmSYXP85wR
43n6Zxe58Uv8Er/8L5bPgU9xvyftew8d/0H08P9j7y2go7zatu3BAqWlUJzi
kAaHQou7J1hwh+DuUihFS/EAIZAgQYMFDQ6BhCR4cAkaXIK76/mf133taQae
vs/7f+v/vo/3+dfca51rTyYzt8/ex33tSzrZjI8J1SG+xSWSWzNaOMVLYzMl
h4Tke5X6XZf5uRtd+CzT8xtc7pQQN/qn5Hjwk/rr++RWTXXTVmrPePN/E/n3
BFd8GvcTPo7JgQ9/5cS7P3Pg9YisePFHZjwb/CMe/5YOD/ulw70+aa08axIr
fKltUsS0/gbnW7hYczmnGyew8oJKDpNI9pMRfH7dw/73WOtUwCYPYB2ZY2YS
jkXsX7dWBfbwOX2X5P2qq3HBk/KqP4nkUvMrwfGr5N+xwK/+zIe7A11xuUtW
PpNnxs1eOdkf5sUL8sjbYfnxbng+vBySB09/y2MxyRPqYb/cuN87F+6TS+72
dEUsx+zYrjlwvVM23OycDY96u2JXrSSYlIVswjFoNp+JZ+fWVnhlf61EeNiW
z/Vj8mNl00xwI5csbl3Y8gvxIXfIWBOQxyi3/h1YUOoUxcdsjmf+XOcsvjeF
49m8PBpfKr6SgWST6Wn5LNs5P8fhbjxOiQV2VHOqhUoYZV57vq5n+TRuMVwS
+qvKbjcRbcvGMbpLTuNf0pFs0UHb1WSfdT04vn2LexwHQ/id4+U51k0ULmmu
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
V9fYSnhchxprbSN5xpFcA/84h2PsJRcNlzgyyd1xhfHhye2v3WU6F+fiXP4v
LBf5vHzIxAaLjhgdbaG+aWJztfikmXKJVUOtqdZ6FR/7o3weOt5Ia2BI/QuJ
x4kljzzokAjPuiTCow583SYeHrAPut9KdU9qjoq/KdcZK7VI2Wfd4Dqusw+7
yvVd5nPZJak1z77tPPvBs+wbz9TUPvWkybEt9ouDdi6pmwDYUFvzz0v+kmC+
XkM2Wck2SLiEWsKxcJHhkrnUHD6rz6Lm8XO+FXGvXybEtEmIC+2SIaZ9Gpyn
TrdJh+jWVEtySfPUPAfCJ+lxpGEKq2burmLiexsfp7rlxeM1XsBtb+CZP54e
HordIyrBt4gLugifUFPSaD3ZqZl0jmV+XrWLbKmQBBtLJ8K64uSMAjZMI0v4
Z1ObiNhOdtbLYuXl+ttW8qV+Uh/XFfz88lz6t9SHE7vJuAw29Oa2DzV0tfxH
MKWparK05BJfYYdWyidBfXCnfzms4X5uza4sstrFhm0ZJPbjG9zsJzUQ25H7
BpJhehguMdrxBx78XgKx3QpwPb14Xr1UM8ht89iu7MmWnPEXz/U4XpNxZJPR
ZJIhpcgiXO8EXpeA+mSRDmSRQcD5SWQRP+DSRGBvP7xZUg93hudCNO+VPRKH
zPN2VPxqx4pvbV68GpvRqpG9k/dNcEWNEdnSKBEO9cmGixNL4PkK3hf7uN+h
3MY8fmeZ1v3bwvO1vyTPTwneyyXiuCSGHHKZukIuucr2Otd5U/xeqdvc7l2J
xyFPPOI9+KS6icdxV94Qu8hr4+P6robqvYj374ea2r6vpe8Lo0gcjviIiP/I
TW4rluuONbE/0gqXSL7ZS9zu23o6ZyNscstD876d5vunpM52FeWSc9W03p9I
eETitU9/ySXyOzKy2MTwybEa/zWX2NnkSy4RSZ5Xu/bVUSYR7ZH36imbHDFM
ctTM45xs6cAkbTUu57N5HHLJlR48973ZZ0yrRfZ/+XU7SufiXJzL/7Xl0aGN
ONTyv+CSZg6S/qSp1nc9Yeq8njCvTzRS/zZ7vTWp1SX54sWOe7VLcsT2Soeb
3VPjRrfUuNYlFa50Tm35ll7pkAIX2ydHTNsUOO/1Pc61SoazLZMhuvl3ONU0
KU42SULmScx1J8GR+glxpF5CMkgi9pHx/uaSvWWkr4yvdpLtHAfXib1EuIR8
sopawdfLaxkuERuJh9pK5nAsnFlNc2bM5nszPfBsxM+42C45OeRb9pNpcZZc
cqpVGpxqkRYnqWNNUuNY49Q4Sh1ukApR9VPx+TAZIstong+Zizndtwieb+oE
3JkK3PXFjW29sbZjUfhlsWF8PJvOyeTWnCPCJ9Mya36sqKoueNKtMA7Wz2nZ
VoQtxn9PNiiVCKuKaY3gL3lk4T8okP9bKnzCzy8rIDnXEmFT+dTksY5qI5nc
DPAml0xtQSZpHWczWTkAD8gei8gxa5PbsLu45JgojFe+/Oy2wcDu0cAmtku7
a9xxUDdlE9H2Ibj5RyXcH1iG57qnsZdQfk342Q6ac3acJzCK530YWXA4mWRC
TV6DxmRI/m/PH0AMz1fsTOACWSSsO174V8ONvplxvJ7W6JF4oPCyWp8lnGPo
No7FG8koc/Nq3veAIjxXtZMgqm8+3JvL67mD2z/AdUf1BiLJUcsKa2yO5IFd
o+PhZl6D/cWVS44YLonhOiXWWeZ0LpNDbgqDeGj+9+c11Cf1VQ0jsXdwvH/h
oe+/4Rj+luP2+9qaS/499aGW4ZBa+n+JxZHahg+53rd1NJ/aG3vcML/3yr4O
T43PuWXypkg+E5nTia6oOf6Pcj+PS2xzJZXksD9VRfkkuqqDDJeITjnoMy7x
+G+4pNa/55IDnl+wiWccm4j219f4YOlDLLurfR7H2EvEVmLllO6oMcMXO6u9
5EpPMuCMBl+5h3QuzsW5/N9ePr1/i8Ntv8PB5hqPY4/JkVg+8VH7jEuaqKT+
vNR5terQN1KdMHW7rLoYDdXmu5Bj9SLJbc3nzoUcuwPtKh0niU9cWFJjFReW
UMnrBcU0hlHyK4gWFIt7Pb+I5jg5zj43oqjYgznuhnEM3Cb2kroc6zw1d8lK
4ZI6f8fiYBHHwgU1yCUctwI4Rs4im3D8wwyyyXRqVg28n1AG17tnIXMlIXMl
w+lW6flslxYnmqe1arwdES5plBKHySQH6qZQeabE3to/IKKyC0LIFFslJqVK
EpwfUgbvdvYFbvvi47nxODG+jsUk42zKJ/PzaJyNL5lldUE+B7fMiFf9yuBF
/yq40CQPQsulsNhCOMSfn5lDVlno9s88sugLCZcsZnu8flbEeHFMnsjz499W
bSV2e8k0YyuReZwF3fFmWGWcreeKR+Pq8zwOBPaPA3aO4LnsqzaSZUZLu6rE
VrKqhzWPc39UNbwQ7ljM9wLaKJfMEX9UcskYnv/hPM9TuN75fG892SWSjHNu
Ms8NWeT0WL7XAY+9K+JSl0xWbg7xZ5GYIMlRv5vj606Ot2uLa34W7x9t8JH8
tpIz1Ssjrkk8z2oy6Z4u5BCuO1zqCPL4tnLb22QfsmgNnVmmTs4KjUm1uIT3
00Hec6d4P53hvbk+H3mQnDgxvbFb8Ryu5HubftZahjLvc7K82i+kFs5Nd+UW
yWfysLLG6dyn7lXW+R6ZlxHFCuOwvULeuVfF5FSTvGuVTb61JnH+Ih/J9zeq
a4zyI5nvqa2xOk+pV3W0xrDkpxefE5nDucX1XPfQWj4x3J9z1TVPnHCJ5LEV
HxOxLx2uonOfh6sZVVcdMZKYfDuPHPlvuOTgf8Ml++rGcck+suUB8X9trH2J
fR7HziWn2yqbyDWxmKSL2kruBbT42t2jc3EuzuUrLRe8G+NQi8+55HBT5ZIj
xufVLvEtkfmbY6Y93lBtJcIjYis5Xl9byaW2lc908/JprvnpHGf8RByz/fne
TLYzpRW/Csovj2oGx+0Zkkc9l9bh9eW4MM1IxiLRZI5N03NrDrbdksO84498
nmcftknG03oc46i15JPV5JMV1PLaHEfJJYGGTeaTTQLIJrM5js4km/hVUS7x
qcgxmn9PqYyHvxdCTLfsONM2M5/lsuJ0yx/JKml4/GSSBj/8zSX766j21kyO
XR6iZNhVPTlCy8bHOh5PsPhqVE6GmHHueLt/CF5GDkL0eE8sK54Uk1x4rGm1
fpvwyYXayXClzre42UliZHkME6kBFbG1bBIs57kKJo/5csyckV59XiV/2pc8
IgqkFkstnsw2rOF4eqK+K252ltrK7dRO4t1MNbWV2kxE8n4gGWPPaDLDn8A6
csmK3nEK6qlablqxmwijyBzNpoF482cFfJzEcz6fbODvpTE+AeQgf67bn6/X
8LM7BgF7h6v2jCA7dMODMeVxrnkyREltQFeNMd5bXGOsQiVetZAymQ+PeS7P
wcYaSXGqX34885OcvuSffb147bkPW9rzunM768gj63gsIdyP9WSxmT/w2CT/
a0KtLyxaqc/iW7i9feSSI+SbPbyPZnI7fZJqzb1eSWzolljVhepK9eD7vZPZ
MCiVanRGrR10lft6uXSc7L6y18sZvxQyyXWZDyqr9hHJa/ZhcAZ8HPIT8Hs2
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
jP8Sj/2r5hmzmERq5JTSfB2hpfQekfvGziXnm5MtJufDS3LJy4m/si2Cl5ML
4+WUglQ+vCKXvCKXvPbNTmXCmxlpySepySbJ8H6WC4/PBdFkm7mpyZY8H8G8
bhsc2ETsNDu4X6H5df928X67KfYOararDa3JIi2piXKuue/7xeeIn9lKbSOT
HOZxXCqjEjaJkbas2kssNqlgVFHtHmIneVtT6xlLrFlXcvfAbDaMKJQQE0p/
B7/qaTC/bgasaZENW9tlR2TnnDhCbjk70A3XBrsidnAOPBqSBU8GZcDzvsnx
tKsNj1qTWerp3M/FspqL9gzP5WnuyxmJPa6hPq+i89RZ/tbPe2pr2U74+z9V
T20lx0weZ8kFsM88m4iPicQEh1DbqqufibTicxJSI86fZLtIbKvtM3/VPs65
OBfn8p+1vLx+FnuER8gle+S5p67KsV65VY/LzOHsZbuvlvqWiK+rJQ/15Re/
171S76uKEfvc3dSuiqpIwyfi6yq168XHJKy0zulYdpOScXaTrY52k6LqY7KY
ffaRLuzj7nGMO9oK2N8U2MlxMKQe1Yji3yEtKf5vWzsr5hdbOqg2tdN85XZb
yRovBy6hllNLqSUcrwOpRVzHQnLPQrZLZLzmWLu2t8ayzmiEJ0PKIcbLlcfr
grX51d/Dl8/g0zjezcqiMTZzyA0+5JIJmTUvZ2B+Od7E2PBrfEuOfCJcElRA
4pET4HaDzLhROwOednRD/XTxUTSBDYvIJMFun3OJnUlEK4VNyD6r+X54sYQ4
5ZEVFzzdcLluLtxtXgiPWxfGxRrZcYD/OyM1c3pU5LGRKZaSQ+YLXwwhd3gD
h2cAx2dpu2cKecRbFUku2TeZvDfGxO7w84t6q83l3BzyCzWb53s8r8fCnsol
i+22kt7KJWF/4XqXn7GFPLeXx7u7sM537PyF98AvyiVSu0/8eXaU0PtCGFbs
bMIlwq3RfEb/NCkPXkwsjRcTiuK5t6gInk/6GS+ETXzILD65ySSueD0jO974
ZTY2kzR4NzMpr3cixPThNeI+rOD5XJ37czbZmkfndKSVeRvxC4lg+xs/3yix
DZ1T2BDgqj4k1lwfr+kmXrdQMslxyXvCfT5PBjhn7Bd2LpE4YWGTi4ZPLoof
bFXNOy/H/RvZtbfkP+P1G8l7ZjjvmT94PQelJaeksqHvD6oB6W34nf8fRQ6a
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
g46Iob25Rftzj/18n30aSTtxhzbjJt/zBhX+rRvCaG9C2Z6mHTvDe+cXs8gZ
W9mPy8gky7tpO68tsKqn5rU/OkW5JIDH7NeR/dVU2WRifTJJLfZFZWApX7Nh
oBVbGza0qsUlK8lABwq4WTyC/sWAH75DZO1UuMDzfEJ8Oe1yk2VGYiHv5Ttw
/1W0l5cNk1i1bfI59DtMctjBJIfewiSJvpKiSSUxJbv43KlKmjN9l7CKPYZj
+0rKJPWV2Fyyx8ElTl+JJbuO8L/CJTVd9fpe45K6v8Ml9TSfyXr+5qZK3tcs
GkPiyf78rcJ7Flc42WQJ+WI+235ZXGzSg2zSIh3ZhH16hp+/md/fJ7f6S5aL
DJvMzOuGATJXm/sEVnGxySqbS4rrfYWM40gN4YF8vw58Hw/uN47nYV5xzSsv
8+42lNV4919Kv4VJyrwh53yyPK/iJ7F8I+UMo5TTmqCWn8Rwidw7WeL5uLzF
7x1fhVOWlCVlsZeIgM1Y0zIdlvOeTJTIJOSR5VVVTiaxZHhkhZHNJauMVprx
25WGTRJzCFQwrT0WbPIzSoy9XHtWmhh7GbuR+6iVRitKqJ9k7uc6P+DGvqYm
h+twxD/xcjCJPXZjYkseDXHJzlliaYQqdoRyycPRSIinbb01TP0k82krp7up
v8TmEttf4uSS5DEmbxvLEb9JJ6qFjEnUJAiSH+5KzV/yxrVJGlMiLHLV4S+x
xm4maV5Yyc12l4zhmRHgNR08N6DdQRM5pqpApNQJXsn3mkkema3+kmumtjDZ
JAE7yFpd8JA25m4uZZJI9mkUbcFdcsltwyU3CymXXOP6ae57lvYpbnYDYA/7
ZWkn8khnF5Ms5nrwJKvWMI6QrU7OAHZwv+lNjK+Erxtfh1zC7+teltu5bTPP
yf6xePpzT6z6B+0umWcvbeGjttkBrzJA1wKIqPYBTvM4Lsj8pEMzcKJPVYtJ
5pBFz0p8a8E/ZpJDb/CTiI9E8suflvyxxVWn2Qen2Z6iTvB3dowKkfrB4hNx
zL/ZT+3hvmE1ZQ6R+kpOVtD8aLtLJY0r2Wv7Sio6mITy53/mMP87B9juq6y5
OKw6fdV0fmsSLnnLXJy3cYlzjnASLqE2is+knd4zjCdnjMmhYzrCJusrvW+N
ucyw2SS3sonEnXgIm2RULumV1Q0t+ZoR7OtTUsuYfTE/j3KJsM3ybzW/6yw+
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
dT+Jv2ESW8eKK1v0TO+GH9Iok7gbJrG5xCszeSMdWeFrzVViMUlprZ8r83F2
0AaeYB8ndOD/hO/ZNo3OK7tAu7tTxnMqq+z4EktVNI+ajHv8zPecUCzZGI7x
lQib+FZy2UeJe7W5ROK/JB/zDO4T0tUNNwdofe+tb+KShkmZxFJjZZNt7XW+
3Sh+T+/cmrN1OjUjr7LJ7GRsMp9c4sO+WPC15kzzNX4Ti014jhYVUkncumhJ
IReXLCmiuRElVljYRFgqoJ6O78o8pRUOLlnqYBOZIzywsMa6jnRwiTDJOMMk
42wu4WsmltTHY0ton2ysrWPMNpu8jUucTJLIJabvj8zu864v6ylLyvJvu1za
5usas7F9JEaLyCOL7MfVzDWuiotNZAxH7jGkzq/cu00vovMYpabeKl4DN5Mb
/Ht+gNNDP0G4dzpEzc+GR0ty4smyXHiwKCfu8fGtmZkQMS0TbkzNhOveGRE+
OSOZJCNCJ3xhMcm1cVlwZUJWa8zm8sh0uDz8I5yl3T3Oa0fEvJy0vTpn95WV
u9UjqY/kyZuV6A+xGMTLFUPyBh6xx3MSucTsa7HMg0Hkg6FAtGgYNYLbaH8f
kVEeC6tMAh5O5HZuuzNM5/BclBjQXrTXtOfBnYB7fD5KatwMpt0eZriECuN7
hY4wXML2Ep+7zO03+b4PZpGFFgNryDnVzZyb7sZHIrlhA9zZL2SWWzN1vrAo
nAqjQqdqneHnq4FzY628Jq94DX/B/nzM93rA83qfdiyK5zWS19fbMo7D6/E9
6hav+ddodx60+DvwK3lreXsySVMySXPV3MbAtPpak/i85HIdrUwibCJxr7f8
cLvxPxHyEXmBtiWINmpfVjeck/m+Ev86pJxhkmLAAKl785013wbd8qrvxK8N
HnQku/L4bkp9n8urcHFcAxzP4YanbdPjceu0uCK1Y2gXL/D4z1VUJjlNnaCN
OcbjP1xYfSbnZT4LbWvdf5AzPiMH0EYeK+LwkSRjErvmzXl+9oz8Gv9q84jN
JAOpQVn4mO87kO1ufq+gci4mOVBOY0m2cz2G/42wppoLxCMXt7P/Q2pqTtc9
37skPCL5Svaw3VdD85X48v2mFDdMQk70qWDiS5L5SuwxHLlnkHlykpNZYtf9
+F63B5HT+HtZXVPHczabPK+JXNLwdS6x2KQZ9+frfNj/o7PxOPIqmwiXWGxC
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
3lwaTiZZQR6ZRHmrJM9auLfmgA1je3uO5oT1+gSveG6f8tw+oX16wnvDx/xN
POTvIIa/gfu0U3d5Pb4lPhM+f4s2RObgYlUbZRKfRoBvE2UTH2pSTWBFO+C8
1LsZSx4ZpUwSONKqR4ygYbjGe+QztNdXS6m/QubnBps5uruyuiFUxqNGlAP6
kUn6kEV+KAj0yg90z4OELnnwqn0OxPf/DvdbkMGOzcPTk75Y8k/apvS01bSD
95t8hEtV1Ddylb/l8zz2s4ZNzlY2XCLxMfxuvty/cSrNPyLzfbt9pnlI9kqe
kmKv1+CzmcTf8ImwjdSI65bODV6ZDI8YP4nkOR2eS/Oh9s2m9vV0VcMllZRJ
RLslZ8n36uM6wv7vk13HQU801lo4e3mce2uo9tR0abfZJjnohT9mltdxVLGj
i4wknsSOCbPmxkmdCKmrWUu5ZBW5xI/b1jVzw72hZCSJga1l/CUNVRsdsrlk
Q1OXz0TYZHNrjeWQun5T8xk2YTvDaJaRk03mFdTY4TexycLvDJsUccnJJYuL
K4+IlpZwjeUsKZmUSZY42YTnaUFp5RLRWMMkEksi4zYWm5RSJplURrlE2vGl
NY5mQx2dSyhs8nt+kiS+EptLDJvsHt30XV/+U5aU5X/UEnkhEEfm9sTyxn97
jUeEUYRDppfUOP8ZpXTseU0LXgN7f4iTo9OSH75E7Mq8eLWedmJLIcRvKIwn
v36DB6sKInp5AdxfVgBRS/PjnmhJfkQu/hp3F32NO375cMc3n2GSPBaP3JyX
GxHCI8ZPEj4rlzLJdDLJtJy4mugnyYHLE7LidP+PcGbgJ7i9qSpevRik821e
DEaCgyfe5AN5I5c4WESU8IdMYmJIbB9JDHXfy/AI2ygjYRObSSwuMRImuSss
wuduU3f4+LYtbg8X5vA0bEKFD1JZjEJdkefEJzNRmeQm7fxFbj/nwf3G8DPI
GcM/AXi/LfN2EuKWkkPILde5f/gklyR//fUpOq4jOevX1CdDVAaWl0f8iGx4
2dwNj0pr/rRY/iaiqSibS6poXb4Yqa2zlNfWn4VJGiqTCI8Il3iTSRY2A86M
B85SIWSRY+SS4JEaYxI+B5G0d+c+Jy9IzhPagxPfmfzu3yqX7JPaKVLDx70Q
0F98JF8DPfLSZuexFN+DDMw2rmUavJjTHAiYhoRNvbCm5PvYmIY2mvbwTAXl
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
d43QufluO6icTSa5Rbt/q7eyyU2ywXXqGp+7JlzC/gp55IrMe2eO42SO5Vzo
mxUHe75PFps4mvXWJM7EyM3p81cuyaxnIlwiMa1H+mVxyKG+qrd9JZna7aDP
HSabjK9ig43f58Xrk20Qc6AForY3xLNdjfB8p4zXNEX09sZki6aIOdQCMada
I/6YHeL31UXirppI2lsLyWSOlDPN8drRHm9O2+LNKVukOTYl7rbkudkCicfI
7KfII6fIJacasCeTnCLDnqynOlVXddLUCbLKiXqqYzynjkkv/MJz+RDP470V
gR1FgS2f8//zPrlZYlNyGGyCfZ8Y/SsyiisZci95eB7/t1PIKH800DjXlS2y
sUkLHb8RPpHaJVt5fu3m+bSN59YanttL+Pqi5uo/WdrSFN93eeXwd30JtDZr
s7a/YXt8Yw/CD7WB/9pGCFhR35Df8nrwX1oXfoupRbXht5CMsqAWfMknvuQT
n9nklJnV4D2jKrzIJl5kE88pFNnEc1JFeJBN3Md/A7dfqZ+K4+6Qr+DWRWNA
b9fTeNDrMs9bl3y43UlzS42aobSPV3jNO8vr380O7yFyZT2NN5H6JzfET9JR
ucRJxm86K5/sagbstNN6+K8mmjXdhmotN6mTIvnIwiTCJx5cvjtYuUSYxNms
13ZNuKS/1muTOrLiL7nM1w+1AxZWBXgsMFdyg6sBc4RJeO85m89LjucuGb/x
xKNfuY/laN95fXYzx6wC24sPvQ1448j12CqTLKStmV3X8H24kR28f9DaIVKT
NXIY7cEy2puDnRGxpgW2f0N7STtwvanGlxhxJiaXBJmM4sPrfeLM/Lg65kuM
+ULnehMWMZhExm3a/pVJMn0kf+YBZ+YCd1A/yT3a2UDaXP9e6jMxxGXvniqP
7v+eSTK5RCTPufXS/BtDXKcr1+3C/rawz3C+3leXRRJn4iw+lGwSLrnhkOU3
uUpmuDpA+8t8fEnGdMz4VyMGls87ifqaXGLGm0isyZm+qtN9s7FJ7yxJHZOj
fbVGibDGAQeNc92fjU+yc0mmz0TY5AC3dQ81lr/Xjp6fIvVCe8QcbY2nUr9k
bxO83NcYr/Y3Qszuhojd2Rhxe2yNnJz4c22Q4NgSSYcbIvlgHbwWHWmAVMdm
SHVqibTzdkg7Z2sIF5sh46IdLE6NkXGW54gh/j8ceW46kjfOkDfO1CSb1CCX
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
8fCPSniwrBbC1zXC/XVNcH91Y4T/8hWCaVf9aHN8uondy4uQQfkQ3Dc3AnuT
TQZ/An+JiR1TEr6ji8NnRFF4Sz7xwALwJJeI3Hu9r3PsyJhO9zxkkzy4Qxnx
Jq00JvYMv2PH17yXdfqO1z1e6zzJHbz/NNhElt17mj6T7rzmCZd0Vy653lVj
YI+3Io+UJ1dUJZvwXm56HqPefQYO8d6O63DsBIvbYNzjdtxrpvEPRp2T/eSZ
LWSRLcIk9mSblmZeTjvjeWEyqeca0FVriNwy68CHmkwSmF20yZ7tdGwGy0sA
88lFJ5sZ878camyDq201FvSJjLOIr6SfxqOE9dbYVtfO/5pJPLLzSE/1kbzN
JOIjuSc11WjLHWk/NxSzwcaiyiOHKimTSI2y41U030ViXYVFRItMzefxX15C
a84Ij3iTAdzqaw61D9fp35r72Fp5JJT9fcm17qgs8oTbGiUS3wife87jIbE8
r7jN0VQMtz+ZkjFAl+6fIP73Injzk43BJ7FkkrhB2TRYFT/UBqnyHjKKn9RQ
aaDxJs51Nd8ndnZxxM/4CrFjcyD2l7zkj3yInZAfcezjhEXIJNLHk0niJ+RC
wm85kTjpfSRNIY/M+BzJv+fD6/E2eLOsFN5c/AGp4cORFjES6YEDkR7QHxbJ
X5faf0m/Ita9K24sLYft3KdZNciZ4z9GzIOj5OiYd/2X/3u0xEjg+TUgbI3G
qZNLEEJGCWiKV6eq4tb8wtje+z0slHkD+T/YwPN6OX/Tw3O6Wsd2rM3a/sOb
JTUZT499h2fHWiPqYAtE7Seb7GuOJ3vsKPLJ9qZ4sro2Hq+shcfLaiKSTBK5
uCoera6HiE1N8GCzLR6urIeHi2sifH4NBA75BH60NcEDPkDY0A8ROiAnQvrn
QvCwAggaW/zPvB3/McXhN7oYfEcWhe+PheE98DN49fsInqIeOeDe/T24kU+M
OmyZbEL7fof27Xan93COfLLtS81XRWg/III2waun6S8hh3iIv4Qs4kIWucP+
VrcsLpF5AffWJ49UIFdIrOtX7KuRSbbyush72q2N+R7eE6+vgfu0r0HNaSNn
fg2c6K48spUsspVcs6mFconoYFfETfwEbuIf6KY5qcIld6QGWntlktBsPhPD
b9JR66yJ7yT9j4+BP7gvZxrBe05Fo97tDZlThzb8cX/lkXCzD83kkn9Ro+TP
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
kuQ/CvExWWY3WWR3S+WSnSaXyHjOkR5IW1rJyK8J6qVcEiK5tz3MMZbO5lw0
XbS+WnAX5ZLgzlpPXpZ9O2oOMBZTa2iPaWOvtiCXtNOxHH+p4UGb+kB8JgNN
Lumq683OJJ7/BZME8HPBtNNneaw2ic+DPDKXHDH3KzJGKeWSE+a4zenqWsfu
vFk7VXJvJbZVmEV8LOIXES5ZWVJzc0RrqCVfaq0TqTNijNm015jW59zHF93U
BxIj4zTcplgHk0eGqBL5fBKfTxr3MZLH5kHSYL63o/JJPNcVI2NhXL7RiNtW
gftRReYXzI+UP0oAUz7Ea74/ZRh/r5HsR2Qp+SdqXC6kTvwQb8Zw/eSy5Inv
I3nyP5BMJkme+glSyCQpMz5DCjnk9ayCeD2nEN7M/Qqp84sibUERpM39Emmz
PkL69DyGDC6ZnY9clJ9iPyuX4TuxjOXvt6QgLIkh7/ov/Z/Z3rwCXjmSU6YD
3i0QfqAcLs78DBt53k/jeXdp20ykp6W+6620Nmuztv8FLTn8NGLOfmuM5UQf
sMOr7Q3xam9TvDxkj+fUi712eLGjMZ5vb4RnZJNnu+3wdF09RE0pjqjBeq//
eEJhRM6thMgVtfFoeS1EzK+Gh39UxoPZlRA+swLuTxM2KY+wyeWMfOJ7k8ry
cUUEjSnKe/4cuGzOV+c/6CODS3z6fqBskuk3kRhP4ZKe+Yw54U7U0PlzJNbE
uWMOI/8i8LdSvG4NAXy6KZsYXNJFJVziSia5/D2ZoiKwuSyw6ktC2XT1F+9t
BJz61phzOH1FcQTR/j0jH+B0R+AQn98r4zVtyCbUrtbKJnu5rv0/4NEgHb8J
7Usm6a3+Dd8e6tPwyIz76KYsInMCB7+lwG5a//X1dH7fZtph2k+ZP8b5exvc
lHr1fM+jgTLHi+r+AHPuvW5/9ZN4ZIspyc4kUr81mDb6OI/xhkI22FbGBovI
F/O+1rzfpRK7mlmzVWq6Z2OSK7W1HolLA328ymQS6VeZPLKWXLOOWsn17eH7
I6TeSAeqi8aNvOKxieHjOPJFHDkruR/5gIyV4KDjMAkjcyKZ+5LSyWSLiZ8j
ZfyHSBnF12Wch79zHH/zJK4jisfEs7nWlz9blseI/Pbst6+ABcUMLhA+kfjY
1z+rjOXR1MR/qMZx+Rfq9w/welp+6hO8JpMIj7yZ9QXe/PElUskhqfO+Qtp8
MsnCEkhbUgrpS0rAsrAwLH98/CeLGDwyO49qTh5k/PEBLBdXveu/8/8dTeq6
xF8AnsxEwlVbeKwtij3Dc2JOq5xwO7PrXW+dtVmbtf3/bEnh1xHn9C1ijjZH
zH5bRB9pgehjrfDqcAu82m+Hl8Iou5vgxb5meLHHDs+XVcGz0fnxjDzydOKX
iFpQBVHrGuAJ9XhZLUQurIpHonlVEEE2eTirIh7MqIBwconwSfjsqgj7vRx8
yR4yp73ES4rNc5dxjWEF4DcgP3z7fWiwiVfffAaXeHTUeiB3e/0Djra8Z65v
gzud3zO45FaHHAajnOU9fexBW+DZYNNf0pUs0ll1u6Pm6JxpDhpmYOlHgK/U
lZgOHGjK59sB58kuZ7/DU9rCe7SD2FkfcOQ69toD+8gi+8gke0RtlU1O9kLS
7IKGrySUdjaUnwvpw8+ST3x6Kotk1hBx66E5OqG00yFdTSZhH9RNuURyeF7R
XmKrDVJ/534Kk5g1b6VOSThZJFLqstLu3h+k6/yTS8yYEmOu3+xM4iDHk6zH
zx3m8d1Y2AYHKyhDZOb8LiBLLJa84CoaR2IwSa1sTGLm/7qSS1zqa26wxJWs
LqU8kskkG0qzJ6NsrKg5RHGdNIY1hiwSy32L5/FMYJ9A3nrK39Ei41bcF/GL
JI/Njzfc3jf8zBvuQ8rYj5Dye2Hyw4dI/fV9gy/iZdyHn03m+hI76ziR1KK/
QJa6TIX0zYU380sCsz9H6nCuRzTKlPDJBL4+7XO8nvIRXv/GZRG55A2Z5I2M
18z5Aql/FPqTSVLJJOkLiiJ9cTGkLyWTLCuJjBVlVEuLIWN+AcNnYpmVW8d0
yCWWlXXe9V/5/85mSQESL4M3OniwvxxOTvoIq/qVQNCdi+96y6zN2qztf7Kl
PPFE/Nm2iDneAjGnWyPmRCvEkE1iDtsj+mBzRB+yxys+frmtIc14Ubz4OQ9e
0G4YfLK1EZ5uaYKna+sgamVtPFlWA4+XVsfjxVUROb8KHs2tjIjZlQw2McZ2
ZlVC8LBPjXqoUoNL6l/daKzy7ZObdvRT+A/8RxabUDK24ynxobTjd3rkM+Yf
vmivecTCJuIvETlJ3fee+YBg8keQ5ON0Urma4ziuZIyjtB0r85M/7IDYGeSO
tkY9M5xpa8w5nLbscwRzPUmSH3OhO5mlBXmkFbA/G5eI3+Qo17WzmVFTROJJ
xIchbCJMcq+fcomXmRdjzN3L9/jL/C9ds7hEmERiZEVetOHid8E6GyMvx6eL
+kqESZypIK7zMRnjIRkjfIjGt77NJX+O3/TRPvhHG/gNtMGeysokks8r+b6S
QzMvW77vwmI22FdFWcTJZJKrdbQWmXM99ZW4NeS6mmg9taXFlUfWl9JY2A1l
bLCJvCJzDkqsitTPe0PFtFI/R0I7HYtJlFxr7std/uYnqRTuE7iNKb/mRyr3
PZW8kUr+SB0g/oyv8GZ6YbwZnw+pVNq0gnzfJ0bsSXxLvi7c00lzkWVOvkuV
tXZbwqTPkbGoBNJ/y4F0rjuVXJI6mhpLTf0MqTPJHtM+RurkvFRuPv4UaX98
jjRyiYzXpM79CmnzTCZZVEz9JEuLIyOTS1aVhWXVN2SQcny+JCwLCsEyJ7/h
M8kIvf6u/8rWJnX3E28h0XUQbq6qijPL++Ghv8u73iprszZr+//Y0uPuIfZM
G8Q6UqeES8gkx+wN/0n0ST4+wn55ZURPLIhXM4ri5ZqaeLmrCV7stsOLTQ3w
fH1dPFtXG09XUytrGmzyRNhEcoqFTZbVxqPFNRHx61fG3Lo+jWhLqdtNafds
tU74bdqa4KEfI4gKGPSRMZ5jsAnl0yOHYbe9e7+Pm13y4KQ5hiO1YV1pv+8Y
PhMbw28icxNHrqwBRA8CXDoCbuQRl046pnP9O2BrMfJEOeDpBLJKL+A4+eT8
t8BFvvdsG52LZYDk6/K9x6gD9mQSk0tEwiT72vH1noiebIMA2tIHtKnhA5VL
wvorl3j3zFYrRNiEnOAncwKbfhJDZIogmYfP9KUEcxkLNS9HxoNufae5wLdo
4324nse0sxEyx95Q0wfTNYtJPDNrlPTR3mCSwTbYTY7YVMQGB8gkR7m8sbSO
3wiPLC6alee7u7KyiNRtvSZMUvevTOLVWOu4iD9F4l4zeWSjySSby9lgC7Wy
qNa4Tec2xZNLEkweSeK+JH/PfePxeszfelER9eG8HpcXGeM/ROoIG6SRs9K4
7elku7SR7yF1TmlyQxGkTvoEab99SAYoi7SlVZA4Kp/hh0ni96RIvViZA9Fe
x5uCuc1J/C3S5xeHZX5hpJNLLMO5PnJJ2sScSJtViAxC9phJDpman7yTX7lE
Ykio9Hn8zMKiqsXFDCbJ9JVYDJVVJln9DTLWVNB+ZWmkb2r2rv/G1vZ2S48D
nuzGY+d5eBF6C5a01+96i6zN2qztf7Clxz8y/CXx51oj7kwrxJFLhE8MTtnR
ALFzSyHmj5KI2VAL0fvtEH2gOV7tbIyXWxvgxeb6eLGxHl4Im6yto2yyvCai
llXHk9V18Xh1fUROKYFHtJuPaDvC7LQOuUdznU9XfPEyh4mM04SN+hxBQz4x
aqAEDM4P/4Emm9D2eNP2eA/4GFck/6a21ktXLslhzKWTGWdymTbvync5kHa7
AxDqANwlb7h00Nzhc7bAyjw6B7HMb3K8KXChncEjkqeTPD8/wrhtGXtqAU7k
mENkksNkkoOtVQfa6HjO6Z5I31DdmNtX/CQPzLGVUNrDcPYh/TWuQ3JyRd7m
fDTCFsG0vSHdtBceERYx1EtrxKZIfsdGzR0xuER8RGaNEvGVRNJ+3/9R/SUy
NuTeS5nHs6/yiIzdvM0kRi35SlozbVkx5ZDFxVRSi0TGcnZU0vqowiQ3ZV7F
+n9lEt8m/F7+Znf4/Brxk5RR/8jmssoj28qr1kg+r73m9ybzWCZ9rzySIiJb
ppEf09kfq6pxLRGjCgLTP0Pq2JxI575YeCzSue0W7n/ar58hbWE5pM0uhrQp
ZIepnyN9aWVYdjTDm0WVEc/viOV3vOY6Y7tpjfvbMt8ht9vC77BMykeOKYn0
6f9QNhlH8bvS5hZH+lxyx5yCSJ9ZAGkzPkbaPC4LxywsokyySJikmMEklhWl
TCahVoq/pBwyVlNry8OyviIyNnKbfA+/43+xtf1XLS0xilzy5l1vhrVZm7X9
D7b0pKeIP98GCVT82VaId2qH+GP2iF9fHXFLKiB2cx3EHLVHzLGWiNlni5hd
jRG9oyGiJT6WbPJS2GQD2WRdbTxfXRPPNjTA0y1NETW/ohET+6Q1RXvxWHJH
eZ/r11K5xI1yIZc40+75Sz1T2qgQ8Zn8ySafwH9APqMWiMSVepFLnCTmsYn4
CHLDrRu5RPKHySaZ4zm3u+TGMd7Te4z9Cng2CHATnwm5xL0zsKMkcN4WuD9C
40wukDG4z7jaCXC0N+qQxs3MqXP7HSGPHG1JsT/E9xxuy546wnWd7ISnY5Ul
Hg4jl5AXwmhHwwbrcnB/5QPfvjonnk9mrdW+OmZjjOP00M8bEpaQ1yVvZYzG
vj7/WedSdu1mY85jSO7hdzz5WbnEne+/66C9p7l+YZ8gvuY7RMduMplExm+O
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
JMY8BsIlr0Lf9V/Y2qzN2qztP6pZEiKQ7NQayRfbGH3S2ZZIPtMCycIpJ5sj
6bgdko40Q+JhO3JJEySQSeL3NUH8bjLJ7saIOdYWsb/wPlXqVUgdrL5aZ1z8
Ji+7KJtIbS2pSe7TxhRtnBdthbu95Jd8gEe/fInwnwoYYzkGm4z4DCFD/2H4
E4K4HqlTf5ksc72Z2Py8yiW98hg+E/ceOp7j1j0PnLt/iOO85z8k9ToK0vYN
p8170AW4LXnA7YCrtF1XqEstjdzhtANV8Vzsn6MdcOEH4BQ55mQrzR2W/oT0
/NxJvna2HV6QXyIHmVxiSnwYwiSRPyk3BAzWmiFGTw7xEQ3QXmI/gvsolxgs
0teUuSx+hufjuD0rNX7WqJnGY+nK43BH5gD+Ub/P0+QSL+EcbsMZ8sP6L7UO
yeGqNjhSxWSSylrD1am65viKn2SFWRNNfB4iqUWynHIiJwTbmUxip36S+9mY
5Knk/H6nj3dW1JiS3SaP7K2sTLKf2sZ1OQoDDKf4fgt/e0tHVXqmz0T2n+/Z
UpTHaRA5ZMFXZBCpGU9umFIEmPgZeYRMMuY9YEJ+YHIhWGaWALaRQ8jDWF9T
WSS75LV9tuTJ1khfU9WYNye5q/JR/AD1z8kxxfbqfF8TZGypavhPMlZXosgX
KyuSR8ggkhcsWlUKWF1amWSDzD0t8zxmY5Kt/Pxuu3f997U2a7M2a/uPa5bY
IKRcbI2UC63x+lwrvCaXpJBLUk7ZI5lckkwuST5qi6TDTZF4sInGn+xrhIRd
DRC/tylij7VB7HhySXedf024JKZPFptEd1M2CZKY17a01TKW00brdsr884+k
dj3vmR+O+sxkk08Rxv7e4PcR0oP2sX8O+PxYCBcb6vw4AQP/AZ/e78PLIa+y
SU8dz5FasLe758NV2s3LtKfnGtngVG0bvD5JOxbcCbhOxrjWWrnkMvs7HREz
ja+vLURu6aaxsGdkvKaN9gabtNE6sDKWEzgcyTvKIJL79nQMmYR2NIr9k9Hc
B7JCJPkgfKTySIDM+TdUucSPLOI/1PSXyHjLAHMeHWGRftnUX31H9werv0RY
5273rDGbOw6aZxM5WuNJ3HmcA8lCMm61SWqQyLhNNZXEgGTOByx1XJ1q6GPD
P1JS/SNrSmtuzdrSmhtzpp4Nwlr8CyaRGCFyyXN+Txw5I56/2TFyzubyf+UR
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
Oifn2uc6T1jiJqG8H87913hMxI+P42bPfLj2Yx6bTcI75dJ8jrAJ2SGo+WO4
0jwrLksdbIvHOGYbLmmUGQHSB7ahsEkWnKovaw5n0ZgJ2eSwyef8Ucxk67tp
sO2DtPAsl7VyXuE4xfFlDceXVRxflguTcCxcZthkEW8vLKdcssDhEj5vltQZ
8Dr+yLdI3lAFoWSH8M7KJZfJJefakC3IJEFklbUf6PyZiLbad02YJLC5YZOm
yimXpN7kB8MmspXebC20fjaA/BLEnxfIn7esioVJz1iYXETzLxIrkTpXO07y
soVVFS2sp5dz38TntYfIrgp0NY2BHCQrnCAPHqil6/jNdsyfM116oxXT9YbX
kSXizfo1DpPYcZIPlUc8poe8Hacgc9x+X9ceuEXfJsfckt6+0kfvI10XSeYB
x7TMpPNpHC6ROcBdc9K5ue9Ju/bkOs/rptTUjuP7O7u69pZ34iTCI0PpYcWA
32SuLh9rbWpKvjL+2odJGpga20aGS+R821paL7LpfX7Wsv6RYRN7ayxsskSY
tZZdT+T5KTeSu2XV2pJlVbT2WZhknqk5ktvRYX7+A3blypWr+0ueyAAyyWtI
2Uom2VzL5hLPBnpdDXiESVZXIZdURsqKykhearhkQQUk8boxac0bZJNqSODY
mcDxNIFja0JjjmMcExLqaT+T69xe574bzdLgZsuHEdHuMUR0yI6I7nlwk77e
NY+XTTorm4S0z4OQ5o8iqPVjWmsiMZNmWXHh+yypbHL2u0y65nCDbDhZ38RM
yCZ2nQl98Ku75uZ8lg67P30Ia6ryGn7Qs8DhKryGJm+s4pizsoxyyTIfPllU
muNUGWWS+bw9V+Ik3D+rODA+P8eu14ATX+NGL821XP1Ra0nOy9zhbuQBmX/z
rvQW1X6wksO5LPUm4pbKIzaXSG6npWGSFsZmn8w5DufP3c6xfmJ+7V82rpCu
RSPrA8t8YImTSE3vGvLERnp1eV0XSLhkT0WNk+yXnv9vWDhJdjj2JlmmlKmX
LameaXq1Si2srLETy3E8/l2fOMmHWutqc8nHJn/yhY+dmMXnJk4hOZoOHM/b
ZUIyX0OSrHcjvUh6Pa0WLunD+z3z6v12aew+rtdq8Hf8QuZbUNNe5wa/8b0e
XNDLI8OLq6XHa5+cmstxmKSOYZCGpk+K48bGX5meKUPyAeveANa/rXGQu+3w
icROZM742GLw9Mphr9eHpZU1fiJcssBwSeQV//4Bu3LlytX9pqsb4dkhfVDJ
JlvIJpvIJOurk0uq2VziES5ZRS+vhJSlFZGymEyy4BUkzX4BiZvfR9I8bjn2
JHIsTeH1vfS9khqTKI65ES0ewM22j+B2p5y43SUHbnele+bB7d5P4laPvLjZ
7Qnc7Po4rhsuuSpc0iWPPW84hEwi83O0p0l2BDZ7BBebZEllk4BGWXHmu0cN
m2TBCekBW+/OmInUwHpjJuQSeoOM0Y0eBbZxTFlL7lhV2rAJeWRFOZ2ns7ik
cski4RJ6Xim1sMlMjotTeQ0/nePn+caImZydDEV+IItc6mAhmBxxmkyx7C2N
i1wnq1wxvWBle8lwSSqbtFAGke2FlsolFw2fCOuc5Ps5paCubSNzfMebWMmS
0haWkyFWkktWVyIDVbewmcy1/iXN0yzl43u5f7+sj/im9vs/I+sykzXWltO1
c5ZKH7TS2rN1iomd7OPPiSZ3JDlM8tGdTOJx5sDUMSxyN5vUcepahU3oLtmB
jtJf/gmdY9PHMInTm0TiKN2yI0n6AvN8k7o9Bix5TXu1Si2JcImwyIjimr+R
PvHjyYfDiyqHmN6xNnPUN7GSRj480tjMAfrB7BeG6WwpU6yXOcXVNEbiOJVR
KpnYSU2dKz5E1sopoHGSJRW987Qi3DX7XLly5eo/qsDJ8Owkj2zjWLCV/4M3
1+D/a8MlDpusrAzPCnLJMnrRq0iZ+zKSZ5FHdnyM5KkF4GmoXBLbykJkG44v
vF6OIItEdsuN6J65EdP7ccT0exLRffMiqvcTZJMncIvXyhE9lU1uOGxCLgnv
kg9h5JLQtjnsOli7p0mrR20uudQ0Ky4Kl0hPk8bZcLZRNpz+LitONTQxk2+z
2GySOjfnK3LJl3fWmez8+EFslF7mwha7pL6kjE/MhCyylOPfEnLJ4tLKJvMN
k8h2djGNl8zgeDqKY9uRL5C8pQbC+ZrDulq4zPEumNsV75F9OD5H8XZQa2US
xw6TBLby8oi9NfsuGjYJIs8EddQ+JdOe135pk0x9qvSXl3V/JE6yuiI5o4qF
DTUtbK2u/dPmFFXe2FdJ8zdH3rVwnOd05iNdW3fry+Sa4qYXLBllejGd63uy
hoUAcsx1MkmK9AgRJvlI17RJZZJPLG9fed8cSh2zlf18DTaXtMukbNKR7ppd
OeSnAt45wOJfyBc/5bPX/b3O15HM75G9XqL0SZvMz2dYES+POB5d2u4tb/+e
z3x4pKFPvERYROYmNzNM0sKcV0tzvDw+tYTGRJZX1zyN1LmK7+AU8skK7ltd
XXuZyJrCUlcic8kX8BxuuPOEXbly5eo/qlN9gJ217HgJOMbaXLKpus0mWKvx
Es8q5RLP4gpImf8KUua8iJR5LyF5/6dIHJUHsRwHbrVNY7PI7W683ysX4vrm
QfzAvIgbmA+x5JGYPnkQTUf1egKRwiW91BEmbmLncyRm8uOT5BKnziQXgoVN
WmfD5eZZySbZ7JiJzM0RB5BNzpBLJGZy0jdm8k1mHK77sNaZfKUxk70+MZM1
1cgBvfIC+zmurC6nMZPlZJFl9FJjYZOF5JD5HLsW8PF5JZRLZvP6fRqv/4fL
+Mkx8/S3uNVXOeJaH475HKfXc1yP7m4h3MwdlhoRYZJgMspl+lIrZRD7dkuN
j1ySOhK5bx6/yudveFNrSpaQHeaW0roS6aEmvUlWkj/WkDvWVuZxfD2balnY
Jq6k69QIl+yvqHNwjr+vOZwAMsXlLx+w58wsL6H9TdaX1T4kZ/jcs3RALe2Z
lvyJl0ucNfdS+4XUNbUcdXzyJ9+YmIVshS06ZFMm6cT36sdHdds7HzCwoM7/
lT5p4p+L2PNuPFIvLGvyyDzf6S9rzET6yI8s4eUSe90afhZjS+l6Rb0e1pyS
EytpZJikoWGSFj52mKSVsXBJ3zRax7qihmGSyl42sW87JpuQybFG+tlXUD6R
OeMyh/y6yyWuXLly9R+VvRZdTWWSO7ikms0lcLiE14eeBS/BM/8lpMyWuSw1
kLikKiLapUXEj9kQMyA/EsggST/nRdKvTyGRt+P7P4FYcb+8iP3JcEnvJ2w2
uW24ROImUmdi53O6PoFr5JKrHXLb84YdNhEuudKSXNI8mz1v+IKsNyzzhr/X
mImwidSZnHBiJlJnQjZx6kxSYyafp8MeetPbD+BAg8f4Ol8ANgqXFOe4U1zZ
xOYS3l5cTLlkQQllk9m8Tp7NcXRmZmAKx7QxUqNJn/sOsVNy4mpHC8c4Hi95
U2p6LUT1tBAqeZ12tMQ+Wmns5EobZQ9hkMuGRS621trWwDbKJNd66dzgyQW0
v7vUkUhtqvQZkdzL8vJaTyJMsr46uYLj+ZbXLeyobWFXFT1mBbnkIB8//jaZ
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
iyR2yY2kH3PRjyOlax6yyAM6bjs5GptHyBnt0iiTtE9PBknv5RanjiS1ntSH
SXpmUvfN6cMk+ZRLfJlEeERyNsMLaE3JNDLEeH63fiMnTCmtNU32vHTy8JrX
NFcj7OHwyHwfLrE5xYdVnMeFT6Rn2oJX9XdJD9qWhqV6mdjJ+Kz68x0u+SML
k9i3fTnFrNmw49u//LvsypUrV/eNos4pk4i3VlEm2WCYZHUF7Vkyv7wyyfyy
6nkmbuJwieRwhEkmOVzCcWVEfo2X/GbYZKjWmSRNrIzkjd3hCTrk71duKykm
Esd7vUU2MTETcsm2D9LhUIPM5LFcwEryyRKOUwssjZc49SVTLW+/V6fn6zgz
F4dckjj8Ti65/YuFG/19uITjXzAdzvuhfUwNSSkL6ypoDcm6yma9m6oWZpNJ
VpBVttc084ENk0j/tG2v8P7LFvZVt3CsbmacrP8IzpBJzjV+BBeb50BQk4cR
/LmFizVockk4b99qkQ7RXXIhtnMuxHfNjYQfySV0UtdcSO6WB54eTyp7pNaL
OCzykLKI7Uy6Dl/bdMosToxE6lulT2t3HttDeCQLx3tZOzirconUi4idWEkq
kzynPCLxkdGF1MIhkssZ+Tzf4xLKJsIkE0vqXF7J5QiDzDfMsbCCYZNXvPvE
C1698754cSXlE3mO/E7pje8w2Mi0yhlbyCUba/0xl2ysoXbY5A5zX2Kkv7/a
rly5cnVv6spk8GIb2MbryC2VNX8jPCK9SqTn/KKXlEkWlFEmka3NJaWUTSSH
I1wyhde3su6dcMkYGV+eUiYZLn4WnlWt4Tm/yc8v9n9WwKCPcbBBFjtmsvvz
dNjxUQbET+e19EayyWKOtQt9uGS6YZJpd3HJWJ2LI3kcm0voOLJJtMMlAy1c
FS7pTSYhmwSRSyLILQe+tLCoKDmkonLJ+krKJDLPZjl5ZG45C1vIFdteVyaR
Wtc9H3NbiyaX7OExB3jsyW8z4fR3jyKAjCXrGAa2yongH7Ii/CsLp3nssdoW
rvN3RbbOhJiueRAnTNL9cSR2Uyd3J5PQ6Eku6ZzF9EXla+9IxuiUTnu2Sj95
sbPejazH184nb9PVxEgcJhEe+Yls15fun8PESfJ58zdDn/UyifDHaHpMEeWS
8cXIvmSMcfxuTeDt6eX4npfRnjnz5ftZS9fxXVBB+WJRBWWQO1zBZ3uXfflE
jplQXNcSFDaZxds73wA2v6ZsIgyyqZaXR+T2phre+7are33j78Hdrly5cnXP
6WhjYEcVZZJNPkwifdSWvsz/+2SPRWWURxzPLaVcYs/FKWqYxHgCrz3HPqtc
Mq0qsG84PJEh/n6V/5ICfvkIhxtmxZ4v02HTW2lxdUhmvjfkkkWWl0tmGy6Z
5lNb4uRxyCXJo9XShz6OjiV3RA+ycOsXzdekcgmZ5Br3XexiYaWsq/ei9iSx
XdXiMGdh62uaw1lK9tglTPKmMsnuDy3s/Qe3Vbjl8fvJM4fJHafIVWe/fwzn
ySTSY+5y28cR1iobQuvyGImn8GdE1OP5tHsYsd2fQHyPPEjsmQdJZJEk3vb0
fAKeHnmBPvl0LRu734fhkS5kkR/5fvz4CB/Lppa1brrn5GOZNXdzR96GPNIn
q/JIv+w633cg/YtP/kbqWSVHY8dJCiiTCI8IlwiLjC2sta0SJ5lILplRXtlE
LOvYCE/Iur7CFIuN5fbCV4wreL3oLvs+JowifLL+Na11Hc1zGfiY1rHueFMZ
RPjE3tZU21xi2MTXG836DZcX+vvr7MqVK1f3nuKvKZNIrGQzvaaC1rlK7mbF
qxoXESZxvLCMcopwiViuKWdw/JheTGtMbC7h2LL4Mw7ya/396v5POtq5Gg5/
m9GufT0vMYMtmZVLxAtMbYnT69V3Po7J4ySPsZBELok3XBIz1EIkuSRCuETi
Jf01bxNCXxtM1iBnLC9BDqlMHqmsc282VtdYiXDJigraq2SnzAl+l3xCHtn3
KXnkLQt7yCMHyDCH+bzjtS277/65ZtpbTmIlQR3y4lq7nAghixwk5wR/9xAi
m6RBVOssiO+VFwl0Yu+8Npsk87an1xO20ZfM0D23xkmER7o+ou5GxuguNmvv
2WvdPK45kK5pvEzS2zCJzSM5lEd+zkMmoQeRS4Y8TR7h7xguTPIcMNKHSYRF
xtHji6glNiL9XCeXUBaZIXVNEjcpbdbXq64MsqSilzfuZpBFFdWLff2qbheZ
59lMQw5fR9bY+x5/9ov6N7CttjKJeIvZCpdsqellFNuGS2S7hT45wN9fZVeu
XLm69yTrB++sorGStYZJpIea1JbMN0yy2GfrxErmmXjJzGLGxTWfs7EVEHJv
x6+T4qJxtGl+7P40Iw43JJcss9ROvMTp8zrN8q6PY/q9eny5ZLiFWDpqGLmE
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
yhByyegi8AiL8DGMIJeMlW0RjZuMewGICvX32+w/RZ4HjvXU+Mdmh08Mlzg5
HHv+7+vKJMImwhu7ecz2qiZeUtsbM9ntEzPZT4ct9/crdOXKlau/h0LXKZP4
1rlueg9IuOnvM7unFHdu6e/rS+7iEsnlJIwll4yix5AThpBD3iaPSI95csmW
2prHOUAuOfC5YRGnxlWYhPuOkDeO1SWTSJyEXHKKnHKGxwXwsfO8fYGPB36t
8ZEQ8si1+mSUr5VLIgbkR/Sooogha8SSSeLHFEPixNJIHkYmGfYsPOOKkT+K
6Rq+wiJji6rl/vVz/n6L/x66vg840BzY4vAJuWNDVe1fYrPJ67rdR67fT++V
mpKq2hPWyeU4dSaSz9nH5+2nT7Xx9ytz5cqVK/9LemGur6m1rlLnajPJB5pb
d/VvKUnWA5p1V7zE5HFSfLnEzMWJJ7Ocak0Wkb5pb2p/+a3Sz/VdrR85+KXh
kQ/JI+SUw59ZOPqlMomdvyFvnPouDU6TRc5KnISPXSB/XCKPXOYxwTzmKo8J
pc+TW0JbZ0bUyCKIHlnUZpK4MRIrKY6kKWWQPOo5pAx/FphQXD2+uMZKxhtO
Cdzu77f376fgZeSMD5RPNlbVXI3UvNp8IrkcwyXiPWSS3dW19/zdbGLHS2pr
zMTN5bhy5eq/XccHaKxE6lyFSXbUB5Jj/X1W96RSyHIp0+/qqebLJROUS6Tm
VXq+3hxmYdfn6ex5wbIe8E7DJrve137y9hxg8sZhMsURcspR7jtWx8RJGlg4
2dDC6e/T4Cz3nZNYyVcWLvJ2oNSS1FMeufod7/PnBPL+rcEFEDWiEGLIJrFj
iyN+fAkkTSyJ5GllkTymADyjCgC8b3OJbIVJJtDH5/j7rf37KikaOD1I2US8
2+RvhEskl2NzyVtaQ7KnumGTWl4u2WlqTSRmcpDHX1vl71fkypUrV/7T7XNk
ElPnKkyyp6m/z+je18Ic3nk4vlwySbkkabzWvCZz/7kuFrZ9nBX7Pn/Q7t8q
6wLvMGsDHzZ9SY5Ifeunhkl4/7gTJxEmaWTh7A8PIkBqRyR/Qx65xNtXeEww
2SWcTBJSX+cKX+ueG1FjiyF6uHBJIcSNK44EYZLJ9PQySBlXCBjzPM+1FE0m
mVxCt9v7+vsdvTd04wDZ4judH3zgbZ2Ps9twyYG31Hv42N7qZg7x63eyieRz
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
yK55DWhkmOQ7Cxd+MDUlrdOkxkqudEmPoK6ZEdI7J0K7Wgj/nkzS+CHc+DUf
IkYX1HrXsYUQM6EI4icrkySSSZJnlkTK7LLwzFEm8Wxt7uc3zJW9Vp/0nz9g
+r1Kv3onnyNsErLU32foypUrV67uUcWH7Pv9+jgLyA3jK9mPX9u1GOfbZMap
HwyT0MIkNpe0SIuTjR60+6cFNFYmOU8+udDcwsU2ljJJ+wdwuVNaBHXJjOBu
WRD6Uw6EdU2Pa2SZ610exc3RBXBrxHMaK5lQGLGTiiJeYiXTSyJppuZvUsgk
HomTzHfn3/ytdGmoxk2ETexak5pmbeJ3ZFFIf5+dK1euXLm6B3X77DJdH2eq
N4cjvrplvP14cmw0TrXMirOtMqXyyJkfMtDpENBSYyZ2P9fGhknoiy3IJJK7
af+gzSR2/qZrJoT0yIKwftkR/mMWXOPxNwZprOSW1JWMK4iYiUUQN7k44iVW
MqMUkmeXIZPQ88oCC8kkZ2b5+d1y9Tud/xk4VFvZZEdN7Wsic4YvjPX3mbly
5cqVq3tQ8WenKIs4MZP5Fm4NtZAUG5l6zPnhX+Fi+4dxprlhkuYZ7FiJcMm5
Fg/hnMy9aUI3Vi651Mqy595cNjUlQV0zIJhMEtLrEYT3z4mrnbPgevt0uDn6
OZtJIsc8nxoriXNiJbNKI1mYZG4ZeBaUg2fNx358l1z9rwroDhw2tbDbfeYO
J7jr+bly5cqVq39PKWdHaqzEmY+zyELQpHfvOOba9nk2l8hawMok6e319861
ymhzyXlyyYVmNNlE1r4JbENLnKRzegT9mBEh3TIhtOfDCOuT1eaS6z2y4cbA
xxExxswNtmMlhRA7pSjipxVH4sxSZJLSNpOkzC8Lz8Ly8ESc89M75Opf0qlW
yiZ7Ta2JzM859ZO/z8qVK1euXN1jSjk13O5VYsdKpmoO5/ruOXcckxwbhbOt
suJ86wx2jCTAYRL6vHBJM+WSS3Qg2SSwrUUmeciudU3N3/TKgqs/PYprA3Pg
Rv8cuDn8adwaLbEScskEcsmkIoibWgzxM4ojaXZpJM81+ZvF5ZGyu6uf3h1X
/7I8ScDx+mST2sDumt65wzFB/j4zV65cuXJ1Dyli9wC7ztXmktkWbg+3kJIQ
+7vjAkd8gcAOmXGObOJY1gY+L2zSPI09ByewOXlE1r5pR3fNiGCJlXTPhFDJ
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
CA==
     "], {{0, 550}, {550, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{141.2109375, Automatic},
   ImageSizeRaw->{550, 550},
   PlotRange->{{0, 550}, {0, 550}}]}]], "Input",
 CellChangeTimes->{3.655548194890024*^9},
 TextAlignment->Center],

Cell[TextData[{
 "Both ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and the Wolfram Language are developed and owned by the commercial entity ",
 StyleBox["Wolfram Research",
  FontSlant->"Italic"],
 " - the use of both these technologies are subject to their licensing and \
EULA agreements."
}], "Text",
 CellChangeTimes->{{3.655548245914282*^9, 3.655548297215069*^9}, {
  3.655548336707088*^9, 3.655548361859696*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a powerful IDE for using the Wolfram Language to investigate, analyse \
and visualise data. It is fairly unique in that the UI is generated from \
intepreted Wolfram Language code and may also be programmatically manipulated \
using the Wolfram Language. "
}], "Text",
 CellChangeTimes->{{3.6555477587308483`*^9, 3.655547892339087*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["What is this course about?", "Title",
 CellChangeTimes->{{3.662797673799967*^9, 3.662797677349916*^9}, {
   3.663574494731917*^9, 3.6635745005130053`*^9}, 3.673761634472423*^9}],

Cell[TextData[{
 "This course introduces the Wolfram Language and the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " environment from the point of view of an user interested (or experienced) \
in visualising research data and creating interactive content."
}], "Text",
 CellChangeTimes->{{3.6627963070797367`*^9, 3.662796350872816*^9}, {
  3.662797630399006*^9, 3.662797780999569*^9}, {3.662797828742887*^9, 
  3.662797836342244*^9}, {3.662797972878335*^9, 3.662797986595508*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`chartType$$ = 
    Histogram, $CellContext`col$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`chartType$$], Histogram, "Chart Type"}, {
      Histogram, BoxWhiskerChart, DistributionChart}}, {{
       Hold[$CellContext`col$$], 3, "Property to Plot"}, {
      3 -> "Height", 4 -> "Weight"}}}, Typeset`size$$ = {360., {115., 122.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`chartType$17176$$ = 0, $CellContext`col$17177$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`chartType$$ = 
        Histogram, $CellContext`col$$ = 3}, "ControllerVariables" :> {
        Hold[$CellContext`chartType$$, $CellContext`chartType$17176$$, 0], 
        Hold[$CellContext`col$$, $CellContext`col$17177$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`chartType$$[
        Part[$CellContext`grantHolders, All, $CellContext`col$$], AxesLabel -> {
          Part[$CellContext`columnNames, $CellContext`col$$ - 1], "Count"}, 
        PlotLabel -> StringJoin["Distribution of ", 
          Part[$CellContext`columnNames, $CellContext`col$$ - 1], 
          " Amongst Grant Holders"]], 
      "Specifications" :> {{{$CellContext`chartType$$, Histogram, 
          "Chart Type"}, {
         Histogram, BoxWhiskerChart, 
          DistributionChart}}, {{$CellContext`col$$, 3, "Property to Plot"}, {
         3 -> "Height", 4 -> "Weight"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{409., {179., 187.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`grantHolders = {{
         "DAVID", 1, 153.05699698060732`, 72.40819579515212}, {
         "PAUL", 11, 144.3674982863825, 96.74491738625878}, {
         "ANDREW", 1, 179.38115872110308`, 97.43329733118253}, {
         "MARK", 2, 130.66533135707104`, 93.03143494731813}, {
         "JOHN", 5, 158.25993207472257`, 113.56690755579984`}, {
         "MICHAEL", 3, 166.2358678024236, 101.14331111181112`}, {
         "STEPHEN", 4, 189.29999244066659`, 89.44246497817487}, {
         "IAN", 10, 128.46405858778132`, 76.86079823646568}, {
         "ROBERT", 2, 143.0659772441906, 94.28215164804448}, {
         "RICHARD", 11, 159.99477696163834`, 93.4502934527263}, {
         "CHRISTOPHER", 7, 141.6904706177919, 97.65362819782949}, {
         "PETER", 11, 144.51388888773886`, 75.87919657211998}, {
         "SIMON", 11, 149.26111091779373`, 85.51702893779121}, {
         "ANTHONY", 7, 188.05995866206436`, 98.33016368890605}, {
         "KEVIN", 4, 173.83256531918656`, 82.19090490314944}, {
         "GARY", 9, 120.64150392617289`, 81.43824554235479}, {
         "STEVEN", 9, 154.612482768071, 110.13012837474264`}, {
         "MARTIN", 7, 155.49377370959124`, 111.90495698871295`}, {
         "JAMES", 8, 180.89023816227976`, 103.42863849722647`}, {
         "PHILIP", 3, 186.97600254046344`, 93.78504059845466}, {
         "ALAN", 10, 172.23293423103996`, 124.74331800029675`}, {
         "NEIL", 11, 159.28998527661275`, 89.98271910103195}, {
         "NIGEL", 4, 163.11926599087215`, 88.39991093355661}, {
         "TIMOTHY", 10, 130.9581782604533, 85.24457842248002}, {
         "COLIN", 8, 147.08617088913692`, 77.83101743336577}, {
         "GRAHAM", 6, 169.8739499609269, 78.04591246489966}, {
         "JONATHAN", 4, 153.405341896703, 103.15689488095288`}, {
         "NICHOLAS", 9, 129.687150997123, 99.17710299753823}, {
         "WILLIAM", 9, 166.8752697896192, 83.95094483868246}, {
         "ADRIAN", 8, 144.7164894334626, 78.47316667653678}, {
         "BRIAN", 11, 165.9821953259068, 69.62636399610572}, {
         "STUART", 7, 185.81905097996224`, 85.853184700319}, {
         "KEITH", 5, 178.50825888849607`, 92.3607861601794}, {
         "THOMAS", 6, 163.71962245450445`, 90.42141291440085}, {
         "PATRICK", 3, 201.2816079489377, 84.68362960429252}, {
         "SEAN", 5, 171.50649674964174`, 83.99963519033888}, {
         "CARL", 8, 158.16546501154784`, 86.97074185370158}, {
         "TREVOR", 2, 186.3473675226552, 71.30923035864053}, {
         "WAYNE", 10, 170.9513386935156, 80.3017516765964}, {
         "SHAUN", 1, 116.26111698059464`, 87.96707046804946}, {
         "KENNETH", 12, 173.9517895559707, 83.83981834083956}, {
         "BARRY", 3, 172.9949329686951, 91.93117705891878}, {
         "DEREK", 11, 136.4607107724595, 103.69875927325432`}, {
         "DEAN", 7, 194.34923609509343`, 85.99160671269492}, {
         "RAYMOND", 10, 138.08063908899294`, 92.93413209857687}, {
         "ANTONY", 4, 163.69033518592167`, 88.43260987740891}, {
         "JEREMY", 3, 187.4964465136431, 80.41755603403224}, {
         "JOSEPH", 3, 187.46101472856907`, 91.56578379997795}, {
         "EDWARD", 12, 174.58515916576061`, 75.27407495294867}, {
         "LEE", 11, 170.98245129173392`, 103.15109498112926`}, {
         "TERENCE", 2, 170.6429263181309, 102.52442785391356`}, {
         "MATTHEW", 12, 143.43536854259492`, 92.73441885512997}, {
         "DANIEL", 3, 160.25959872829787`, 96.92255421728046}, {
         "GEORGE", 9, 144.61030240212432`, 78.89188371018778}, {
         "RUSSELL", 7, 148.93883259530088`, 101.81064170706821`}, {
         "CHARLES", 11, 148.88096748298813`, 89.63361836774594}, {
         "JEFFREY", 12, 191.04101738888858`, 96.48363099988603}, {
         "CLIVE", 5, 140.43696943306006`, 115.76175089678591`}, {
         "PHILLIP", 1, 145.64839564521128`, 91.42186125132616}, {
         "CRAIG", 4, 167.69616479991092`, 139.71762947968568`}, {
         "ROGER", 1, 147.48950082893097`, 106.3760686028615}, {
         "JULIAN", 4, 119.87685329175437`, 69.84150941200626}, {
         "GEOFFREY", 2, 105.95551380732303`, 94.84693965763923}, {
         "KARL", 3, 176.52652919771978`, 97.72866793996516}, {
         "MALCOLM", 5, 229.10136104746567`, 96.96766423512457}, {
         "DARREN", 9, 208.78014260791267`, 72.669515904182}, {
         "TONY", 2, 126.9718691663387, 100.46381449127784`}, {
         "ADAM", 6, 127.68880770146589`, 94.48028221612822}, {
         "ROBIN", 12, 141.4599469528744, 111.98404127435619`}, {
         "GARRY", 4, 206.71154959410143`, 84.6768422446463}, {
         "ROY", 12, 163.8539141284106, 84.15697102253009}, {
         "VINCENT", 2, 160.1213249700257, 77.0446765932462}, {
         "MOHAMMED", 2, 151.7836293134373, 78.13564123597185}, {
         "GORDON", 8, 181.44419355072654`, 94.82713879880006}, {
         "DUNCAN", 4, 193.09290144456824`, 83.91489379815732}, {
         "LESLIE", 11, 154.75174723535383`, 87.32542821039573}, {
         "ALEXANDER", 6, 169.22410119159633`, 108.30252203150654`}, {
         "GREGORY", 2, 154.29681994903666`, 82.95987299315436}, {
         "GARETH", 4, 193.2110389226156, 83.59190213634156}, {
         "RONALD", 9, 161.95644405334897`, 85.64444737674407}, {
         "DOUGLAS", 4, 150.64818907747568`, 107.56682611705162`}, {
         "FRANCIS", 11, 138.09177132764862`, 80.52985597266105}, {
         "STEWART", 11, 151.05205304062127`, 101.95801961610327`}, {
         "GRAEME", 10, 156.0335430540477, 91.77175186776087}, {
         "GUY", 1, 124.57256218718436`, 81.65467968455754}, {
         "TERRY", 2, 146.16751199269305`, 79.11383847840595}, {
         "MARTYN", 4, 137.13803190305305`, 101.53066053567007`}, {
         "ERIC", 5, 172.29250970856467`, 77.75735658358776}, {
         "ALLAN", 4, 164.60048206584625`, 86.10022649731647}, {
         "GERARD", 6, 181.85444864043038`, 68.7501447845252}, {
         "GERALD", 6, 145.25052474082028`, 88.26846724654592}, {
         "HOWARD", 3, 136.62285584281238`, 87.49595405429011}, {
         "JASON", 2, 170.0348897175493, 122.38839723027769`}, {
         "IAIN", 10, 145.49730460626753`, 72.88261695587897}, {
         "GLENN", 5, 135.4407079475314, 87.18477046716872}, {
         "DENNIS", 4, 165.14624643335776`, 82.23620350949983}, {
         "GAVIN", 6, 176.23193719254925`, 115.15320471750704`}, {
         "BRUCE", 3, 149.07119230784724`, 99.43225371318356}, {
         "DONALD", 6, 170.337454459101, 96.75321322303873}, {
         "DOMINIC", 1, 172.71051491107636`, 71.69724645980943}, {
         "SUSAN", 11, 152.5421599770109, 101.00837045746091`}, {
         "JULIE", 3, 157.11797114142047`, 77.80264325704188}, {
         "KAREN", 2, 146.986722004392, 89.44171968339825}, {
         "JACQUELINE", 10, 173.38511640238693`, 124.67744206118425`}, {
         "DEBORAH", 2, 169.73706977240633`, 79.99217502416418}, {
         "TRACEY", 1, 160.26608687294748`, 78.02485623712724}, {
         "JANE", 12, 128.68046215448234`, 78.00861341373839}, {
         "HELEN", 11, 185.091525294274, 78.66553208210432}, {
         "DIANE", 2, 110.94650406355507`, 109.14057304670334`}, {
         "SHARON", 6, 166.89690134866333`, 85.8601081469395}, {
         "TRACY", 6, 183.40735270307533`, 87.63424257180796}, {
         "ANGELA", 11, 161.21530159820688`, 86.18718224812194}, {
         "SARAH", 3, 134.9382624328121, 73.25733241570984}, {
         "ALISON", 10, 173.11607709033655`, 85.72641502143426}, {
         "CAROLINE", 8, 150.86618593744893`, 100.24076867409453`}, {
         "AMANDA", 8, 130.34899182596146`, 97.53504040881036}, {
         "SANDRA", 11, 169.79780794969815`, 82.1549916233784}, {
         "LINDA", 5, 152.8188441117288, 89.09710202914869}, {
         "CATHERINE", 1, 163.33952357516313`, 89.5950862353509}, {
         "ELIZABETH", 7, 176.29129258765772`, 82.90698583783207}, {
         "CAROL", 9, 175.13634992809267`, 101.86417444139364`}, {
         "JOANNE", 9, 136.85921292649266`, 91.28211844494145}, {
         "WENDY", 4, 180.75403493416258`, 83.57795798792746}, {
         "JANET", 8, 194.2630327301081, 94.64980160529915}, {
         "DAWN", 9, 164.65158151389124`, 88.45384038940477}, {
         "CHRISTINE", 5, 155.94472494135837`, 107.33290617965682`}, {
         "NICOLA", 4, 167.19931733411173`, 94.59570390951187}, {
         "GILLIAN", 2, 171.56827824364018`, 78.7237261808526}, {
         "SALLY", 11, 125.03424313206318`, 114.78672941493934`}, {
         "MARIA", 8, 153.30870978104576`, 107.77689885575363`}, {
         "MICHELLE", 9, 152.26145406957954`, 87.30768422277582}, {
         "DEBRA", 5, 157.0759526406178, 96.10460191359488}, {
         "PAULA", 5, 185.45827545765678`, 107.69038779867782`}, {
         "ANNE", 3, 154.14540246860867`, 118.9690123437473}, {
         "LORRAINE", 7, 167.12427438454623`, 103.34629135119962`}, {
         "PATRICIA", 11, 132.74138361730712`, 91.78774290236815}, {
         "MARY", 10, 199.63889357008384`, 97.5805957419186}, {
         "DENISE", 4, 125.84472314047512`, 99.26474358683468}, {
         "MARGARET", 7, 150.16206757739917`, 83.76650697083167}, {
         "ANN", 1, 151.33756035387142`, 86.56533007552348}, {
         "BEVERLEY", 7, 131.44848132842355`, 93.01938470570256}, {
         "DONNA", 4, 114.57656438669204`, 113.51700036003179`}, {
         "ELAINE", 11, 145.025298831917, 101.41638654307926`}, {
         "FIONA", 5, 137.17738208303356`, 94.13575401835656}, {
         "JENNIFER", 4, 152.50580716141351`, 86.44763756596542}, {
         "LESLEY", 2, 150.7750097000099, 79.42336398024335}, {
         "LOUISE", 9, 143.08006491418837`, 85.80083315688282}, {
         "MANDY", 1, 167.63830272621573`, 104.55798982003577`}, {
         "TINA", 10, 157.7197620089166, 89.07876415054176}, {
         "JAYNE", 1, 170.90499888657098`, 78.70201063547256}, {
         "SUZANNE", 7, 161.2122790124351, 79.67287666658835}, {
         "ANDREA", 7, 162.7305463195309, 99.34980212516021}, {
         "PAULINE", 9, 179.05529647719953`, 85.5312677062828}, {
         "LISA", 2, 116.69414381814249`, 97.06904442895089}, {
         "CLAIRE", 8, 149.0292012363618, 78.4228693468191}, {
         "KIM", 6, 187.76515717559573`, 83.20412702152069}, {
         "JULIA", 6, 156.14852994118095`, 85.37889703368607}, {
         "TERESA", 6, 151.17879489630934`, 102.71367272666635`}, {
         "HEATHER", 6, 163.07286611103962`, 92.40100451386219}, {
         "KATHRYN", 12, 184.75303949166766`, 86.52149578589932}, {
         "LYNN", 10, 150.17817241678418`, 93.72711343678498}, {
         "RUTH", 8, 162.76431483389447`, 99.62689640287944}, {
         "YVONNE", 6, 144.10893436289984`, 99.62426505750014}, {
         "JUDITH", 5, 149.91887417331418`, 86.40255856193437}, {
         "MELANIE", 3, 136.28771493784708`, 94.80692490214447}, {
         "MARIE", 2, 167.6653048144736, 89.65238548044184}, {
         "PAMELA", 11, 158.89027280054248`, 94.53763636888264}, {
         "CAROLE", 12, 147.69964354295337`, 85.35773367247377}, {
         "BARBARA", 2, 199.3407114555873, 78.60259219368085}, {
         "GAIL", 3, 159.50892514196858`, 105.61993355210532`}, {
         "LYNNE", 8, 123.45120422882107`, 98.73106755897471}, {
         "CLARE", 8, 179.06459801368496`, 73.27199826779383}, {
         "JANICE", 2, 162.6692851509827, 85.8776485076234}, {
         "RACHEL", 1, 155.66935422033617`, 78.2114410984266}, {
         "JILL", 12, 140.33618437706988`, 92.10863031514283}, {
         "KATHERINE", 6, 176.97180029602384`, 93.27870824127933}, {
         "KATHLEEN", 2, 115.24776264831024`, 77.42400739754079}, {
         "SHIRLEY", 1, 139.2283038574463, 86.16989739830949}, {
         "ANNETTE", 3, 173.1940199550529, 87.7035182790227}, {
         "CAROLYN", 12, 169.841032761887, 95.2398797184451}, {
         "ANNA", 7, 152.8414988373677, 110.39908370304303`}, {
         "SARA", 2, 157.44782946880386`, 76.02727779193724}, {
         "VALERIE", 10, 144.76141736737858`, 96.66639876419364}, {
         "CHERYL", 8, 168.12079778406425`, 84.10735587269843}, {
         "JEANETTE", 8, 179.43840178465385`, 87.86855322944584}, {
         "KAY", 9, 168.16480833599834`, 79.91980517689723}, {
         "ANITA", 3, 187.0129413660036, 100.30645322383455`}, {
         "MAXINE", 9, 162.63770883696924`, 76.07390451273785}, {
         "FRANCES", 11, 122.51333136410926`, 92.73398206810488}, {
         "JOANNA", 6, 158.7750403176811, 90.33375507283642}, {
         "THERESA", 5, 177.65535841698554`, 87.09556485059869}, {
         "DEBBIE", 8, 152.9384121511354, 83.94182035014143}, {
         "LYNDA", 5, 173.79508583582347`, 83.07747012152355}, {
         "MAUREEN", 2, 147.6184015257136, 77.47736639487685}, {
         "ROSEMARY", 3, 182.59531443916367`, 84.3036448849383}, {
         "MICHELE", 3, 156.61567501849584`, 84.9104493028288}, {
         "LAURA", 1, 180.06997914014616`, 79.74417454363066}, {
         "REBECCA", 9, 173.67803213221538`, 85.14494797798156}, {
         "SHEILA", 8, 154.72353923990676`, 88.10499652485782}, {
         "STEPHANIE", 9, 155.46215199650666`, 
          89.26396727334539}}, $CellContext`columnNames = {
        "Birth Month", "Height", "Weight"}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.661686481225089*^9, 3.6616864849765253`*^9}, {
   3.6616865407910137`*^9, 3.661686559513768*^9}, 3.6616866209018106`*^9, {
   3.661686701176491*^9, 3.6616867080498247`*^9}, 3.6627127084496937`*^9}],

Cell[TextData[{
 "In this course we do not consider the nature of the Wolfram Language from \
the point of view of a computer programmer and in fact deliberately gloss \
over functionality required to build generic solutions to programming tasks. \
It\[CloseCurlyQuote]s advised that you investigate the ",
 StyleBox["Wolfram Language and ",
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" Fundamentals",
  FontWeight->"Bold"],
 " course to solidify the knowledge you develop here."
}], "Text",
 CellChangeTimes->{{3.6627980019432287`*^9, 3.662798090175458*^9}, {
  3.689932023437142*^9, 3.689932026836582*^9}}],

Cell["\<\
This course also does not cover the diverse analytical capabilities of the \
Wolfram Language, for instance its network analysis, machine learning, or \
analytical calculus functions. Future ITLP course may concentrate on these \
features if there is sufficient interest.\
\>", "Text",
 CellChangeTimes->{{3.662797857982873*^9, 3.662797949965293*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Why use the Wolfram Language?", "Title",
 CellChangeTimes->{{3.6591673240861053`*^9, 3.65916732477063*^9}, {
   3.659169774064814*^9, 3.659169780509164*^9}, {3.662798124189246*^9, 
   3.662798128981336*^9}, {3.663574503449436*^9, 3.663574506329434*^9}, 
   3.6737616374317923`*^9}],

Cell["\<\
The Wolfram Language is an example of a scripting language, for our purposes \
a scripting language is defined as follows:\
\>", "Text",
 CellChangeTimes->{{3.662798130738488*^9, 3.6627981610101233`*^9}}],

Cell["\<\
Scripting languages allow users to write code that automate tasks in a \
\[OpenCurlyDoubleQuote]read-eval-print\[CloseCurlyDoubleQuote] loop, do not \
require a deep understanding of computer science and typically provide a wide \
array of libraries of built-in functions for performing complex operations in \
a simple way. Often without understanding the specifics of the alogorithm or \
underlying mathematica principles.\
\>", "Text",
 CellChangeTimes->{{3.662798223925988*^9, 3.66279840389142*^9}, {
  3.6627989595713177`*^9, 3.662798961907424*^9}}],

Cell["Scripting languages include:", "Text",
 CellChangeTimes->{{3.66279840989503*^9, 3.662798422814374*^9}}],

Cell[CellGroupData[{

Cell["Python", "Item",
 CellChangeTimes->{{3.662798426171769*^9, 3.662798430300476*^9}}],

Cell["R", "Item",
 CellChangeTimes->{{3.662798426171769*^9, 3.6627984310885897`*^9}}],

Cell["Wolfram Language", "Item",
 CellChangeTimes->{{3.662798426171769*^9, 3.662798433998742*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Why use the Wolfram Language?", "Title",
 CellChangeTimes->{{3.6591673240861053`*^9, 3.65916732477063*^9}, {
   3.659169774064814*^9, 3.659169780509164*^9}, {3.662798124189246*^9, 
   3.662798128981336*^9}, {3.66357450881564*^9, 3.6635745146659117`*^9}, 
   3.6737616404587297`*^9}],

Cell[TextData[{
 "The Wolfram Language is fairly unique in the scripting languages in that it \
was originally designed for solving calculus and algebraic problems.\n\nIt is \
therefore often described as a ",
 StyleBox["symbolic language",
  FontSlant->"Italic"],
 " which provides two benefits to all users"
}], "Text",
 CellChangeTimes->{{3.662798130738488*^9, 3.6627981610101233`*^9}, {
  3.662798450476117*^9, 3.662798548089115*^9}, {3.662798602041827*^9, 
  3.662798626568694*^9}}],

Cell["Mathematical problems can be solved directly and simply", "Item",
 CellChangeTimes->{{3.662798862086813*^9, 3.6627988726104507`*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"x", "^", "2"}]}], "+", "x", "+", "2"}], "\[Equal]", "0"}], 
    "}"}], ",", "x"}], "]"}]], "Input"],

Cell["\<\
Output can be represented symbolically, allowing the user to understand how \
expressions are evaluated\
\>", "Item",
 CellChangeTimes->{{3.6627988766739483`*^9, 3.6627989070869493`*^9}}],

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", 
     RowBox[{"b", "^", "#"}]}], "&"}], ",", "1", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.662798908684688*^9, 3.662798944856968*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Why use the Wolfram Language?", "Title",
 CellChangeTimes->{{3.6591673240861053`*^9, 3.65916732477063*^9}, {
   3.659169774064814*^9, 3.659169780509164*^9}, {3.662798124189246*^9, 
   3.662798128981336*^9}, {3.663574517155889*^9, 3.663574522304779*^9}, 
   3.67376164304637*^9}],

Cell[TextData[{
 "Other scripting languages have a broad community of users who contribute \
small, dedicated packages/libraries for specific functionality, for instance \
in R there is library called ",
 StyleBox["lubridate",
  FontSlant->"Italic"],
 " that is incredibly useful for handling dates."
}], "Text",
 CellChangeTimes->{{3.6627990730792427`*^9, 3.662799104112599*^9}, {
  3.6627991719006977`*^9, 3.662799272642511*^9}}],

Cell["\<\
In the case of the Wolfram Language, the vast majority of functionality is \
developed by Wolfram Research and built into the product. This is often an \
advantage as functions work together seemlessly and handle multiple data \
types, however there is a disadvantage in the inner workings of functions \
often being unavailable to the end user.\
\>", "Text",
 CellChangeTimes->{{3.662799276486226*^9, 3.662799432545575*^9}, {
  3.662799470243355*^9, 3.662799480189274*^9}, {3.662799713072604*^9, 
  3.66279977304539*^9}, {3.663574451924965*^9, 3.663574452553383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"digit", "=", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT//6ln1Frx9z8cdDIBQcoPGPenF3dTOTtT3Fso/6FQ2P//HexM+TAF
U1+BNLGyTvmPDAwYpVH46xiF7qEIMDLNR+VLfEPmBqHq38/GMB2Je5yHKRiJ
+8mPSfUigvsxkEkPybDLpkwePxDcmwZMzreQ9AYySZ+AMN+tWrXqVDETU2aZ
qqqqiqqqPJOv80RuJghgdMxve/7z++84Jvnq6sdfvnz5BdEEANRq+sc=
          "], {{0, 
          20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCv69cyfZgknmGEDnbZsPMzMTMzHwVKvD3fAMXkMvMJCxh9Aoq9hKk
hMNp1upXCI1pzMwO/TeRDf8/g4lp5X9U0C/EbPQFVeggF7P8e1ShKwJM1ldR
hf6nMzMlTJ069RKS0EsmJkYmIGBoQhIDOk0+XJ6ZSeIMXOzvq1f7Pv7/+IqJ
ufE/OtDDIoZF3UEGpn0w9m0o7cYk/xHKrOcTF8/f+/PveXGmBJiyj+22QLc4
+TMzq19AGPT7qioodJmnwkUAW303kA==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 45, 1, 66, 255, 255, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 112, 3, 2, 127, 255, 255, 255, 
          255, 255, 255, 255}, {255, 255, 255, 111, 4, 2, 70, 252, 255, 255, 
          154, 14, 14, 14, 100}, {255, 255, 214, 20, 2, 34, 148, 255, 255, 
          152, 7, 2, 2, 67, 184}, {255, 255, 39, 2, 35, 214, 255, 255, 151, 9,
           2, 154, 230, 245, 255}, {255, 217, 18, 2, 133, 255, 255, 255, 66, 
          2, 18, 201, 255, 255, 255}, {255, 107, 2, 80, 249, 255, 255, 155, 
          11, 2, 158, 255, 255, 255, 255}, {220, 14, 2, 93, 255, 190, 139, 12,
           2, 29, 217, 255, 255, 255, 255}, {143, 2, 2, 67, 72, 11, 2, 2, 2, 
          2, 37, 188, 255, 255, 255}, {143, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 40, 
          151, 255, 255}, {143, 2, 2, 2, 52, 61, 14, 2, 46, 49, 2, 2, 27, 232,
           255}, {224, 184, 117, 184, 244, 255, 53, 2, 190, 240, 160, 19, 2, 
          131, 255}, {255, 255, 255, 255, 255, 255, 76, 2, 190, 255, 255, 85, 
          2, 28, 255}, {255, 255, 255, 255, 255, 255, 183, 2, 190, 255, 255, 
          172, 2, 10, 185}, {255, 255, 255, 255, 255, 255, 183, 2, 174, 255, 
          255, 220, 13, 2, 151}, {255, 255, 255, 255, 255, 255, 227, 37, 24, 
          130, 255, 255, 92, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 141,
           7, 23, 195, 245, 85, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
          255, 73, 2, 2, 58, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
          255, 228, 111, 2, 2, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255,
           255, 255, 229, 109, 2, 2, 83, 204}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfyg4NdWR1xjG+X9muSUbAyMjZ+9rCH8+F6Nc+qzjDeGM5SDu39WM
rPmfQazfGQKngFQXI+NMmF7FoP//bzEy7oUbttX8//9iRlE4//82yVePhVkm
IwS+yPaeYBT5jwTcLU8whiILCKudYFyBLCCkeoKxFIm/m9nyAnsSksA2xob/
qsiGrmdc/l+V9ylCIEbzy/+djIpw/hGFwP///2Qwpj+H8NeogT33SJJRrPj4
rVvLJnPyHQFLvO6TYmEEAfNDcM1bYmwYzTrfg5gAPlYFyw==
          "], {{0, 20}, {17, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzC4nZAgKMvGnDAHwj3pqSBbWbf/bJWoyHUQv1k49xZE5o2JPJA8
yjjh338o2MQKJL5t+QLj/7/B+h8VTFJD5e/kPYfCPy0fhcI/qBv0A5k/R2zp
LyTutwrJpcjSzzSVjiFxvy7gTXyExL8VJHLqDxJ/naXKBSTux3YBj5dI/H/h
zF0orjnB2ABlPX369P+X3We3cbLLQoCQkJCsBCPH/4vJxm6JQJBe3wok2w8C
AJoHGZQ=
          "], {{0, 20}, {17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 252, 118, 33, 0, 1, 1, 1, 1, 1, 24, 155, 
          255}, {255, 165, 37, 22, 46, 60, 64, 137, 152, 120, 64, 25, 23, 
          212}, {174, 11, 85, 209, 247, 253, 255, 255, 255, 255, 255, 178, 1, 
          130}, {55, 80, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 1, 
          206}, {178, 244, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1,
           220}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 
          1, 220}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99,
           38, 244}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          42, 55, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          208, 5, 55, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
           174, 1, 133, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 174, 1, 144, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 168, 1, 213, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 86, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 
          255, 255, 255, 252, 34, 1, 233, 255}, {255, 255, 255, 255, 255, 255,
           255, 255, 255, 254, 78, 1, 233, 255}, {255, 255, 255, 255, 255, 
          255, 255, 255, 255, 251, 13, 36, 244, 255}, {255, 255, 255, 255, 
          255, 255, 255, 255, 255, 209, 1, 68, 255, 255}, {255, 255, 255, 255,
           255, 255, 255, 255, 255, 161, 1, 135, 255, 255}, {255, 255, 255, 
          255, 255, 255, 255, 255, 255, 161, 1, 220, 255, 255}}, {{0, 20}, {
          14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 252, 150, 123, 123, 123, 65, 0, 2, 2, 25, 123, 
          156, 252}, {255, 255, 126, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 150}, {
          255, 255, 74, 3, 3, 3, 3, 20, 38, 39, 39, 39, 39, 39, 214}, {255, 
          255, 74, 3, 3, 3, 99, 211, 255, 255, 255, 255, 255, 255, 255}, {255,
           220, 23, 3, 23, 63, 237, 255, 255, 255, 255, 255, 255, 255, 255}, {
          255, 206, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {255, 166, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255}, {255, 86, 3, 3, 191, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255}, {239, 50, 3, 3, 207, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255}, {218, 3, 3, 3, 52, 134, 134, 134, 133, 145, 
          255, 255, 255, 255, 255}, {255, 91, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 
          88, 223, 255}, {255, 211, 27, 9, 3, 3, 3, 3, 2, 3, 3, 3, 3, 184, 
          255}, {255, 255, 255, 181, 159, 159, 159, 159, 153, 39, 34, 3, 3, 
          30, 225}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 243, 
          59, 3, 3, 207}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          200, 26, 3, 3, 207}, {255, 255, 255, 164, 103, 244, 255, 255, 255, 
          248, 71, 3, 3, 3, 207}, {255, 255, 255, 62, 3, 179, 255, 214, 164, 
          46, 3, 3, 3, 102, 246}, {255, 255, 255, 62, 3, 16, 38, 21, 2, 3, 3, 
          3, 26, 218, 255}, {255, 255, 255, 62, 3, 3, 3, 3, 2, 3, 3, 99, 237, 
          255, 255}, {255, 255, 255, 246, 106, 3, 3, 3, 2, 14, 198, 251, 255, 
          255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 219, 87, 139, 253}, {255, 255, 255, 
          255, 119, 1, 1, 212}, {255, 255, 255, 255, 62, 1, 46, 236}, {255, 
          255, 255, 218, 26, 1, 94, 255}, {255, 255, 255, 177, 1, 1, 206, 
          255}, {255, 255, 255, 68, 1, 1, 206, 255}, {255, 255, 255, 68, 1, 1,
           206, 255}, {255, 255, 255, 68, 1, 15, 215, 255}, {255, 255, 255, 
          68, 1, 103, 255, 255}, {255, 255, 213, 18, 1, 138, 255, 255}, {255, 
          255, 165, 1, 1, 200, 255, 255}, {255, 255, 74, 1, 1, 200, 255, 
          255}, {255, 239, 51, 1, 56, 244, 255, 255}, {255, 205, 1, 1, 69, 
          255, 255, 255}, {255, 205, 1, 1, 69, 255, 255, 255}, {255, 155, 1, 
          1, 118, 255, 255, 255}, {255, 80, 0, 0, 193, 255, 255, 255}, {235, 
          45, 1, 1, 193, 255, 255, 255}, {211, 1, 1, 60, 252, 255, 255, 
          255}, {232, 40, 89, 218, 255, 255, 255, 255}}, {{0, 20}, {8, 0}}, {
          0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{8, 20},
        PlotRange->{{0, 8}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/f5a2/vwfCXwQYmz9fuKEsYhjXl77b6DAUUYuRSYmRnERIJH98//f
bkY2xfz8ky+enDypzzTlfzYT40yY3qlMDf83eO2FcY8wqF5EMnkZL2M9Encp
F3/VHzjvcyqX4CGE5F5pJttrcN6XfmmGyk9w7g45Jibp3MVQ3kVVViZWdT4m
9gsQ/iqRzDln/2/jYDqJZNk9oHnvEdyb0gzxEPOuTTnRPiVPnin+I0SmHuhL
JibWdphty8B8J4RTNsTGaMYijAIAQDnsvw==
          "], {{0, 20}, {16, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 229, 134, 121, 2, 2, 0, 58, 242, 255, 255, 255,
           255}, {255, 226, 47, 3, 3, 3, 3, 2, 3, 14, 218, 255, 255, 255}, {
          133, 22, 3, 3, 3, 3, 3, 96, 57, 3, 67, 235, 255, 255}, {42, 3, 3, 3,
           68, 216, 145, 255, 182, 54, 3, 69, 234, 255}, {63, 52, 3, 3, 162, 
          255, 255, 255, 255, 186, 13, 3, 189, 255}, {220, 188, 3, 33, 231, 
          255, 255, 255, 255, 255, 70, 3, 91, 255}, {255, 188, 3, 43, 255, 
          255, 255, 255, 255, 255, 187, 11, 48, 242}, {255, 174, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 176}, {255, 54, 2, 42, 255, 
          255, 255, 255, 255, 255, 255, 54, 2, 175}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 120}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 162}, {255, 98, 3, 9, 134, 255,
           255, 255, 255, 255, 229, 39, 3, 176}, {255, 188, 3, 3, 30, 255, 
          255, 255, 255, 255, 139, 3, 3, 176}, {255, 237, 52, 3, 24, 232, 255,
           255, 255, 235, 34, 3, 14, 192}, {255, 255, 90, 3, 3, 128, 255, 255,
           238, 136, 3, 3, 147, 255}, {255, 255, 235, 67, 3, 8, 95, 164, 56, 
          3, 3, 60, 231, 255}, {255, 255, 255, 217, 15, 3, 3, 2, 3, 3, 57, 
          233, 255, 255}, {255, 255, 255, 255, 242, 59, 3, 2, 60, 136, 236, 
          255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 246, 172, 89, 50, 1, 1, 0, 1, 76, 199, 255, 255, 
          255}, {178, 33, 1, 2, 41, 62, 127, 135, 75, 5, 71, 248, 255, 255}, {
          199, 135, 240, 240, 250, 255, 255, 255, 255, 130, 5, 227, 255, 
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 226, 27, 60, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 188, 97, 24, 2, 100, 255, 
          255, 255}, {255, 255, 255, 255, 204, 19, 1, 0, 8, 29, 1, 67, 246, 
          255}, {255, 255, 255, 165, 17, 2, 2, 35, 186, 252, 162, 27, 123, 
          255}, {255, 255, 255, 50, 3, 30, 157, 246, 255, 255, 255, 131, 12, 
          226}, {255, 255, 255, 166, 173, 255, 255, 255, 255, 255, 255, 215, 
          1, 153}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 45, 92}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 75, 37}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 76, 2}, {255, 255, 255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 76, 2}, {255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 76, 2}, {255, 255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 255, 54, 77}, {129, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 149, 0, 188}, {23, 239, 255, 255, 255, 255, 255,
           255, 255, 255, 178, 20, 83, 247}, {89, 37, 217, 247, 255, 255, 255,
           244, 200, 113, 10, 55, 228, 255}, {231, 42, 1, 33, 61, 61, 61, 19, 
          2, 18, 95, 230, 255, 255}, {255, 246, 172, 112, 55, 77, 55, 85, 151,
           231, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 232, 127, 0, 2, 136, 255, 255, 255, 255, 
          255, 255}, {255, 255, 242, 46, 3, 2, 3, 68, 223, 255, 255, 255, 255,
           255}, {255, 195, 46, 3, 3, 2, 3, 3, 116, 255, 255, 255, 255, 
          255}, {255, 14, 3, 3, 3, 115, 40, 3, 15, 255, 255, 255, 255, 255}, {
          141, 0, 2, 11, 180, 251, 76, 11, 68, 255, 255, 255, 255, 255}, {142,
           2, 3, 162, 255, 226, 116, 149, 217, 255, 217, 86, 161, 255}, {55, 
          2, 85, 242, 217, 173, 236, 255, 179, 157, 46, 3, 78, 255}, {30, 2, 
          46, 55, 18, 17, 117, 30, 6, 2, 3, 3, 3, 204}, {92, 1, 2, 2, 2, 1, 2,
           2, 2, 1, 2, 2, 14, 255}, {217, 109, 21, 3, 28, 52, 3, 47, 84, 2, 3,
           3, 140, 255}, {255, 255, 217, 199, 224, 248, 199, 242, 142, 2, 3, 
          3, 227, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 92, 2, 3, 
          128, 252, 255}, {255, 255, 255, 255, 255, 255, 255, 195, 14, 1, 8, 
          205, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 2, 84, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 24, 236, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 30, 255, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 57, 2, 141, 255,
           255, 255, 255}, {255, 255, 255, 255, 255, 255, 217, 21, 3, 142, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 242, 46, 3, 142,
           255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 
          192, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 246, 129, 5, 105, 255,
           255}, {255, 255, 255, 255, 255, 255, 255, 112, 2, 2, 134, 255, 
          255}, {255, 255, 255, 255, 255, 255, 227, 15, 2, 64, 240, 255, 
          255}, {255, 255, 255, 255, 255, 255, 153, 2, 2, 134, 255, 255, 
          255}, {255, 255, 255, 255, 255, 182, 1, 2, 2, 158, 255, 255, 255}, {
          255, 255, 255, 255, 255, 106, 1, 2, 119, 252, 255, 255, 255}, {255, 
          255, 255, 255, 178, 4, 1, 5, 213, 255, 255, 255, 255}, {255, 255, 
          255, 247, 56, 2, 6, 148, 255, 255, 255, 255, 255}, {255, 255, 251, 
          99, 2, 2, 34, 255, 255, 255, 255, 255, 255}, {255, 255, 195, 2, 2, 
          2, 178, 255, 255, 255, 255, 255, 255}, {255, 204, 10, 1, 1, 112, 
          250, 192, 111, 111, 135, 247, 255}, {255, 137, 2, 2, 2, 189, 116, 2,
           2, 2, 2, 100, 249}, {209, 11, 2, 2, 35, 53, 1, 2, 2, 2, 2, 2, 
          233}, {94, 2, 2, 2, 2, 2, 0, 2, 64, 65, 2, 2, 233}, {89, 2, 2, 2, 2,
           2, 46, 167, 240, 98, 2, 2, 233}, {59, 2, 2, 2, 2, 40, 231, 255, 
          220, 8, 2, 33, 241}, {2, 2, 2, 2, 39, 229, 248, 214, 33, 2, 4, 145, 
          255}, {17, 2, 2, 2, 32, 100, 44, 2, 2, 5, 139, 255, 255}, {89, 2, 2,
           2, 2, 2, 1, 2, 2, 139, 255, 255, 255}, {233, 135, 11, 2, 2, 2, 15, 
          112, 203, 253, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/weD122WjPY7/6OAuUxMTIwOX5BEntlxgcSYchFCT62YmLgi0xmZEhBi
XUxMShf+P0YWm8vD5Hb8/58mRqYauJg0E9Pe///vMDEKv4SLVbExrXzxJ5GJ
EcmK/0uLOOQSmZjYd6M4b/81oFsqUZ38P4CRkRFNyJeNickTVWgCB1Ark5T0
5IWvYUK7QD4D+Y2JSVFzIkSVGhNcDOhJMzOzp14gjTZ79+7ds9fVgpeJicOi
vhAowtP7DGrMgfXrd/z/zwBUPh/NGRxMfIvQhP4fa/+ELvQfADqYF6c=
          "], {{0, 
          20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 244, 163, 41, 2, 173, 
          255, 255}, {255, 255, 255, 255, 255, 255, 173, 82, 3, 2, 3, 12, 215,
           255}, {255, 255, 255, 255, 234, 123, 2, 1, 2, 1, 2, 1, 104, 255}, {
          255, 255, 255, 234, 52, 2, 3, 2, 125, 104, 23, 2, 104, 255}, {255, 
          255, 234, 123, 2, 1, 42, 214, 255, 224, 22, 1, 164, 255}, {255, 255,
           153, 2, 3, 83, 245, 255, 255, 204, 3, 22, 225, 255}, {255, 255, 52,
           1, 22, 255, 255, 255, 255, 255, 214, 21, 103, 173}, {255, 255, 52, 
          2, 63, 255, 255, 255, 255, 234, 72, 2, 3, 52}, {255, 255, 72, 1, 2, 
          163, 224, 183, 103, 1, 2, 31, 133, 173}, {255, 255, 153, 2, 3, 2, 
          23, 2, 3, 22, 104, 235, 255, 255}, {255, 255, 255, 41, 2, 1, 2, 1, 
          83, 214, 255, 255, 255, 255}, {255, 255, 173, 2, 3, 2, 3, 42, 245, 
          255, 255, 255, 255, 255}, {255, 204, 22, 1, 2, 1, 2, 1, 184, 255, 
          255, 255, 255, 255}, {255, 22, 3, 2, 125, 124, 3, 2, 104, 255, 255, 
          255, 255, 255}, {153, 1, 2, 72, 255, 255, 52, 1, 2, 234, 255, 255, 
          255, 255}, {113, 2, 3, 72, 255, 255, 52, 2, 3, 153, 255, 255, 255, 
          255}, {113, 0, 2, 92, 255, 203, 22, 1, 2, 255, 255, 255, 255, 
          255}, {235, 2, 3, 12, 52, 22, 3, 2, 84, 255, 255, 255, 255, 255}, {
          255, 173, 32, 1, 2, 1, 2, 52, 194, 255, 255, 255, 255, 255}, {255, 
          255, 235, 104, 23, 2, 125, 235, 255, 255, 255, 255, 255, 255}}, {{0,
           20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU////v7sphIEhc9F/JBDGBAaqD1GFtAr9mZha4UKnWZl073/+/9OQqRgu
tolF9xmQamVn2ofQ++AtiNRjQhYDgy4OJsuvqEKbOZgkDqApq2diykcT8udk
SviMKvRMlEnsDpoySyamIjShjexMTmg635hjKqtkYgpCU/afnYnp2X9MsSuv
geDX/1+vX9/KzMzM+QoSA4Pwgkgoq+V/IBMCsHFwhHV1Hfv/v7OlpQWkJKWl
5RrEOABHySpQ
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxh4sz/TkJHB/SVc4JoKExh0wQTexgB5bNJMTHwfoSIFQAH5yRuA
5CIw/1MsKxNT+I3/N/hgIvZMTALFf4EMaajIDqCKXLAUVOStDBOT939kkW6g
odfBAn+lmLg+/P9/mpOJaTlEyWwmJkUgFcnEZP4WLHBKl4mp5P//+cxMTPch
SmyYmHiBzGImJsvvYIE8VibODWAJ1q1ggcmsTNztQPoRB5MMiP++A6i7AMRa
yAQWOZDBxMQZ/R0ucriCn4lJYwPEfKAIqyob0M9G76DBcIcdHFBS1W/ggTdT
lokpdu0TOP8/ADHi5B0=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyRfa8rd/48EbjExHUbjb0Ljz0bj56LxveGc4x+R+ceCeTUeAfmVEO59
XiYmprW5cPuWMTGZMSUnwfifTZhsNjMlJzIyQvgPGBm3WDLehsvnMcnNYDL+
gMQXkWVa+B+Jz8Rk/B6FL7D+P4i/AMT97c/ENAtIH4a4b60eUPl2iPt52uca
MDNahjJ1gNQ1MoGA2dqvr6LYTwAF/syJ0Kp++RPE+vLn/38AlgPa0g==
          "], {{0, 
          20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzg4xOD68T8S2CTJxLQdib9CholJ+B6C/1uaiYkpD8H/kcjExMP0
AiGwiIlJ7vzGX3D+Rx4m1hn//39YYnQRIjCRianq/5c57ExMks9B/P1sTKbv
/9QwgUALkP/Tnonv3v82MJ/JBKJh0v81PExMfOvsQAIfRZgE/77SZuLw//pJ
AqQllokp4b8zE5P//y9eTKbf/v93YWK6dYSFyezjfVemyC///z8RYWKaagF0
mB0T98zvQCPfKEGMZxKrewx2w48F7GC+RS/U1X//rwwDCjUe+YEUGCdBSlYh
CXwNYHLa8w/CBgByed3X
          "], {{0, 20}, {17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 157, 22, 154}, {255, 255, 255, 255, 
          1, 2, 39}, {255, 255, 255, 223, 0, 67, 205}, {255, 255, 221, 36, 1, 
          163, 255}, {255, 255, 162, 2, 1, 163, 255}, {255, 255, 151, 1, 23, 
          255, 255}, {255, 255, 47, 2, 98, 255, 255}, {255, 255, 47, 2, 139, 
          255, 255}, {255, 255, 47, 2, 234, 255, 255}, {255, 191, 6, 2, 255, 
          255, 255}, {255, 69, 1, 1, 255, 255, 255}, {255, 70, 2, 76, 255, 
          255, 255}, {242, 51, 2, 118, 255, 255, 255}, {208, 2, 2, 212, 255, 
          255, 255}, {103, 2, 2, 232, 255, 255, 255}, {92, 1, 94, 255, 255, 
          255, 255}, {93, 2, 94, 255, 255, 255, 255}, {93, 2, 94, 255, 255, 
          255, 255}, {187, 2, 94, 255, 255, 255, 255}, {229, 33, 146, 255, 
          255, 255, 255}}, {{0, 20}, {7, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{7, 20},
        PlotRange->{{0, 7}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{38, 78, 255, 255, 255, 255, 255, 255}, {39, 2, 143, 255, 
          255, 255, 255, 255}, {39, 1, 41, 229, 255, 255, 255, 255}, {39, 1, 
          1, 142, 255, 255, 255, 255}, {189, 18, 1, 41, 230, 255, 255, 255}, {
          255, 159, 1, 1, 190, 255, 255, 255}, {255, 176, 1, 1, 146, 255, 255,
           255}, {255, 176, 1, 1, 60, 255, 255, 255}, {255, 198, 15, 1, 60, 
          255, 255, 255}, {255, 255, 52, 0, 14, 200, 255, 255}, {255, 255, 
          149, 1, 1, 153, 255, 255}, {255, 255, 197, 12, 1, 53, 255, 255}, {
          255, 255, 255, 58, 1, 53, 255, 255}, {255, 255, 255, 58, 1, 18, 203,
           255}, {255, 255, 255, 58, 1, 1, 160, 255}, {255, 255, 255, 72, 1, 
          1, 18, 202}, {255, 255, 255, 228, 39, 1, 0, 160}, {255, 255, 255, 
          255, 72, 1, 1, 40}, {255, 255, 255, 255, 195, 1, 0, 43}, {255, 255, 
          255, 255, 195, 1, 92, 214}}, {{0, 20}, {8, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{8, 20},
        PlotRange->{{0, 8}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 223, 119, 34, 1, 52, 
          236}, {255, 255, 233, 141, 221, 179, 31, 2, 1, 2, 2, 103}, {255, 
          255, 64, 2, 14, 23, 2, 53, 175, 96, 2, 95}, {255, 238, 31, 2, 1, 2, 
          53, 236, 255, 117, 2, 95}, {255, 149, 1, 1, 0, 131, 255, 255, 210, 
          10, 8, 205}, {242, 29, 2, 2, 131, 253, 255, 255, 185, 2, 25, 255}, {
          102, 2, 4, 127, 255, 255, 255, 255, 143, 2, 34, 255}, {1, 2, 127, 
          255, 255, 255, 255, 255, 26, 2, 151, 255}, {104, 121, 238, 255, 255,
           255, 255, 162, 1, 14, 221, 255}, {255, 255, 255, 255, 255, 255, 
          255, 113, 1, 49, 255, 255}, {255, 255, 255, 255, 255, 255, 252, 64, 
          1, 124, 255, 255}, {255, 255, 255, 255, 255, 255, 198, 2, 1, 207, 
          255, 255}, {255, 255, 255, 255, 255, 255, 139, 1, 45, 246, 255, 
          255}, {255, 255, 255, 255, 255, 255, 123, 2, 88, 255, 255, 255}, {
          255, 255, 255, 255, 255, 250, 43, 2, 162, 255, 255, 255}, {255, 255,
           255, 255, 255, 208, 2, 36, 230, 255, 255, 255}, {255, 255, 255, 
          255, 255, 149, 1, 94, 255, 255, 255, 255}, {255, 255, 255, 255, 255,
           117, 2, 95, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 117, 2, 
          95, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 166, 27, 186, 
          255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eC348e1RszMTEd+A8HZ+qZmZmZgLgPyFkGEnkTzAnk+009flyi782q
r5+AQp9smZn5eh7/ATIDNtsyPwYpK2LibjoDMeOTMZPEM7AYs8sPiNAbWybN
N/8hYsz7wIy1Gszc6yCyjzWY+UF6/XmYmbfAXNLOxMTg68vEwMRUD3ddjTXI
LUD3hX5DOPl/Gch9x49/Qog87ZMDij1GUvNpsTqTdCM3E5IY0E3M+i//hzHP
gAtdArqpEGhOGHMJXCyJ2RTsJiSxR0zq78G0OsK8l6LMvseAQJ1Z7CVc71pI
WDKJHURY++NxfXEUc0Y9QtV/ANbjHlo=
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxfzB4dnf+/AIzJiaj3v//f+5J9/cXY2ZiBgPlt/+NICyIQFzl5/+8
YJaYhGRJ27mv/4DagQJBy5d//g8DG1iZmS/9RwLpQPWvkAWkgQITbyEJBICM
5Jt6GS7wiRtsi2DCWrjQtgndyspsDExMy5GN2lMizsw57QOy0GERZmbvb8gi
p4WYmZeBGLei9r0EixwXY2bfB6Q/6zKrdAGdfidXlJm5HCSzkIWZWVRcgh9k
PdthkMg8uPeZuU6CBP6sEocKsM2D2vC8vkCFmaew8Pr//wDnH9Oj
          "], {{0, 20}, {
          17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwj4yLj///98xtr/cFDExLYrVy2QxQQuksPEOO/F2x+20negAt+8
mBg/AWkXJkOoSBUTk8I3IL2WSewRRIk3E9NUEOMkE9MUsMhBJiZxMOOdBUTk
jjwTM0TqfyBTG4g6xMTE/x8mIgYkbysyMYXBRUCKTRkZpWHuCmAAitxRYGKa
AxWYzMZ78P8dDSamiK8QgWfaTLL//y9kYtL/BFUykUkF6AtzJiYLqMB+Xia/
//9fiDExzYIInHNmcnv1/389E5PBKxD/2lwuJlcQi4+JSaq6PS4ujoGJyfn1
f4gIBDDwt78Da+4Ngwh4tv2Emg8AlT70Eg==
          "], {{0, 20}, {18, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/I4Ek4Rcgam3LPwi/kjEQRDkzroLwdzNqAsnfVoxnIfw73CD+C0bG
31ADxDhv/P+/DInPeO7//yBG67/IfFPGtf+R+K/E2e4i82czZvxH5mswJre2
7vwA4St9eyXOCALyrpO3fPolqvY7h5HRe8eOVH9WJkZxU0bGHmnGfIjevZ2B
CoyM0s9W/oUbt4NR8hmyfyH+QeazHUPlM5bi47/W5z8KAD608rc=
          "], {{0, 20}, {
          16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyB4GMEQ9R8C9n4AEt+KOMX8WCRXnXDT0hBltnv//38XI2PGvTJp
IXZGMDj4/7+5q1///68r6uvnz56rysh/////ZQ+nt0BNeVjEmA2kfrUL10BF
yhkFH/7/n6zFmAYVOMbOqPX//3Vu7m3/IAJ/7RgZZwH1vPsAVfH/j70D453/
yGA3I2PBLyT+7yl8jOafkQSeOjNyH/2LJHBZmZExEcUMA0YrrefIAtlB9/8g
G/p/o8E+kJ8R4EzRtqXVyAKvzRgdl99FFuli9Jh0GcUeO3sUWwD4cB2A
          "], {{0, 
          20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 2,
           174}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 85, 1, 
          143}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 69, 1, 
          113}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 10, 
          190}, {255, 255, 255, 255, 255, 255, 255, 255, 239, 40, 1, 138, 
          255}, {255, 255, 255, 255, 255, 255, 255, 253, 79, 1, 32, 195, 
          255}, {255, 255, 255, 255, 255, 255, 255, 193, 1, 1, 142, 255, 
          255}, {255, 255, 255, 255, 255, 255, 242, 33, 1, 5, 253, 255, 
          255}, {255, 255, 255, 255, 255, 255, 106, 1, 1, 109, 255, 255, 
          255}, {255, 255, 255, 255, 255, 172, 4, 1, 73, 221, 255, 255, 
          255}, {255, 255, 255, 255, 198, 9, 6, 75, 224, 255, 255, 255, 
          255}, {255, 255, 255, 218, 3, 1, 90, 255, 255, 255, 255, 255, 
          255}, {255, 255, 250, 76, 1, 24, 235, 255, 255, 251, 218, 251, 
          255}, {255, 247, 76, 1, 52, 213, 255, 255, 249, 49, 1, 23, 212}, {
          255, 232, 1, 77, 250, 255, 255, 255, 95, 3, 98, 3, 143}, {255, 181, 
          9, 248, 255, 255, 245, 85, 5, 137, 236, 202, 245}, {255, 66, 6, 226,
           255, 196, 40, 1, 1, 104, 151, 255, 255}, {225, 11, 5, 138, 113, 4, 
          1, 1, 1, 73, 255, 255, 255}, {220, 40, 1, 1, 5, 5, 12, 14, 27, 237, 
          255, 255, 255}, {255, 174, 1, 62, 204, 206, 245, 255, 255, 255, 255,
           255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 160, 1, 57, 88, 189, 255, 255, 
          255}, {255, 255, 255, 250, 52, 1, 0, 1, 90, 246, 255, 255}, {255, 
          255, 255, 237, 1, 23, 180, 6, 238, 255, 255, 255}, {255, 255, 255, 
          140, 3, 184, 255, 205, 90, 255, 255, 255}, {255, 255, 232, 10, 56, 
          255, 255, 255, 42, 217, 255, 255}, {255, 255, 143, 10, 204, 255, 
          255, 255, 148, 92, 250, 255}, {255, 239, 30, 19, 255, 255, 255, 255,
           221, 13, 220, 255}, {255, 183, 1, 92, 255, 255, 255, 255, 255, 33, 
          184, 255}, {255, 131, 2, 196, 255, 255, 255, 255, 255, 118, 68, 
          253}, {255, 72, 28, 255, 255, 255, 255, 255, 255, 220, 13, 211}, {
          226, 15, 54, 255, 255, 255, 255, 255, 255, 255, 35, 211}, {211, 1, 
          116, 255, 255, 255, 255, 255, 255, 255, 36, 211}, {211, 1, 116, 255,
           255, 255, 255, 255, 255, 255, 36, 211}, {211, 1, 116, 255, 255, 
          255, 255, 255, 255, 244, 29, 211}, {211, 1, 145, 255, 255, 255, 255,
           255, 255, 141, 9, 219}, {211, 1, 104, 255, 255, 255, 255, 255, 213,
           15, 100, 255}, {246, 45, 28, 255, 255, 255, 255, 238, 34, 34, 236, 
          255}, {255, 198, 8, 196, 255, 255, 209, 27, 39, 219, 255, 255}, {
          255, 245, 76, 6, 71, 71, 1, 34, 244, 255, 255, 255}, {255, 255, 237,
           83, 1, 62, 116, 252, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJyNUEEKAjEQC548CvoBf+FxPHpd8QG7WBcvFbqCeJqnzdN0OtuWVgQNtDBJ
mobZDrfusgAwLfXq+sc+hP55XOlw8tN19O588Hc3urAbom2jZ63nVSAEMLgi
GDMKR8AnFQdSbxWVVRNaUJ1vYPxDNUXncj9Mworv3al8U4GThdiMJooxbAyJ
LQiSxRRTxvg0BXPeXNMwrleawm8gkfaJ
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfzj4fXN9rjIjgyaMf67bkQkEos4AOX/TFN20eIE8NuGS+f+AAt+T
mAzdJLh1U2e8hij/m8Sk8+z//TMIA48xsa75jww+uDBloAj838wkcAVdROLy
NzQRJiad2PW/ECLvM8EOs7yLEPr3fl6zIztT4C1U0/ZqMnn8RhVazcR0DFXk
XyRTM5T5GErHwkWsIIqPCjKth4qEsLXcuze7iJcp5h9U5EUI2D1s8ecRZh7P
sxbLu4ywBACzIRxb
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/A8EsRSam3s//4UCOmZmZSVpOb9V5JD4QM0u9gvC56lbLsYEEn0D4
nTBFT2BGHPBnAoINUN6bWfxA/bzLoFx/PZB5yrtR7GNmtg6b/AfVPqapMCUb
ioojmZgYDJ8hXPnzNFDRCQT/UzIzUyqSL7Yhu+f//0YZZmZHhPQZQST3/T8W
Iwi0rgHI2mxlZWllJQo0Wv8EyDIrqFPk5uwDq+wA84X7YToB5WvL+w==
          "], {{0, 
          20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 229, 39, 20, 210}, {255, 
          255, 255, 255, 255, 255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 
          255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 255, 81, 1, 37, 
          248}, {255, 255, 255, 255, 255, 201, 7, 1, 158, 255}, {255, 255, 
          255, 255, 255, 81, 1, 1, 170, 255}, {255, 255, 255, 255, 255, 65, 1,
           1, 170, 255}, {255, 255, 255, 255, 255, 65, 1, 38, 240, 255}, {255,
           255, 255, 255, 202, 13, 1, 47, 255, 255}, {255, 255, 255, 255, 189,
           1, 1, 147, 255, 255}, {255, 255, 255, 200, 48, 1, 40, 235, 255, 
          255}, {255, 255, 255, 155, 1, 1, 80, 255, 255, 255}, {255, 255, 240,
           43, 0, 11, 196, 255, 255, 255}, {255, 255, 155, 1, 1, 80, 255, 255,
           255, 255}, {255, 255, 45, 1, 1, 190, 255, 255, 255, 255}, {255, 
          202, 18, 1, 41, 230, 255, 255, 255, 255}, {255, 159, 1, 6, 148, 255,
           255, 255, 255, 255}, {250, 37, 1, 80, 255, 255, 255, 255, 255, 
          255}, {162, 1, 3, 205, 255, 255, 255, 255, 255, 255}, {162, 1, 146, 
          255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {10, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{10, 20},
        PlotRange->{{0, 10}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPx//+T2mSZmJgCHBmYmHSe/QeBRBZmCGACYt4DQJFL3MxIQsx7gUJt
QNo5GASCgs2YnS9BhCRu/IeA16e+/IcIbYUIdLq65p/8CGTMZGXe9u3//+tB
QWCzVoAk+ZmZfZbGq0KNF98HFBJD2MjPw8ys+ev//zPhUCHHjs83U5mZY4HK
zlZZKTIxcRwA2+HCJHAGRP/49unTZ4i1N1WZp/5HA0EYQsv5mXPAjGyfwxCR
t8bMzIJgliszl2vXyT//L/oDbS4GC0WB3eUXBHQ2M/sysNB5KVjgMLPXQE19
N9UDIsRmhrDqRwdIKHchkAkAPQjWGw==
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyi4r8104D8yuG/AzJyPIlLHzMzchOD+e5XPxJw9GUlBJTMzk/I1
ZDNkmJkVLyH4P9t1mDmrkVW8d2Rm1kCx5RYTE5MaVHtd6MQP//9vZGaW2AER
aALasOn/KXFm5s0QJdpANzFJbN8GpO5ARJhAIswa25iYDF+DbXBgYEr9z8Ck
BlRTAFYRx8zk9LWJiTkQKJLwCyTixcy0+Wc8E9+hFGZmJ6CN/68qMTsci2d2
2PT/ajwTk85CoIgiEwPQZXlAyV8JzMwcaqpqvEB7mHXBllyr4gDZCvJ//wOo
RxbVg0TCJ38A8wBpr+qS
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyRXMjEwRRU9evTmPwTs5WRiZmZmYpa/DBWYDeEzS0P5/x8/7i4p1mBm
PvMfGaxikkXh7+XkPo4iUMa0GoXfh8Y/w2iFwv/PpP8Jlc+MaqAJ81QUfh2T
729k/ktR5lMoCsKY/VD4HczMKPynCkyoNgYzO6PwVzFz7EXmf/XluwAAHgkP
Ag==
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/Q8AqBsaM71D2/wmFU1iT281tYPx31kxMiw+Gm8P4/6eymIsI+hyG
cT9qh/9/8Qwu+/8GU8//L/m6Be+g/F6mnedUtePFdR7B+B2izi/+P5DVeQyx
j4lJ/TmQfiwWDOY/YVKHmLZI+BWYnj4JovE2Y8d/ZHCbqRmFf4zzIgo/RB+F
e5Jj4f+r037BuLs1Y779L2E6BeUuk6wFkh+W6HrvBSm5rej/DWKJO4t5W4O7
TPADmMbtpkxMkzb+BLMBOPYEGg==
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 235, 
          49, 55}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
          20}, {255, 255, 255, 183, 172, 255, 255, 255, 255, 255, 86, 1, 
          77}, {255, 255, 238, 12, 37, 241, 255, 255, 255, 255, 86, 1, 159}, {
          255, 255, 201, 1, 93, 255, 255, 255, 255, 251, 54, 1, 208}, {255, 
          255, 141, 1, 176, 255, 255, 255, 255, 245, 1, 0, 208}, {255, 230, 
          34, 1, 246, 255, 255, 255, 255, 161, 1, 44, 250}, {255, 169, 1, 36, 
          249, 255, 255, 255, 236, 55, 1, 52, 255}, {232, 45, 7, 171, 255, 
          255, 255, 207, 52, 1, 1, 142, 255}, {179, 1, 20, 255, 255, 255, 184,
           7, 1, 1, 1, 142, 255}, {179, 1, 98, 255, 215, 61, 13, 37, 163, 47, 
          1, 219, 255}, {179, 1, 77, 138, 4, 1, 65, 227, 255, 57, 1, 237, 
          255}, {224, 33, 1, 1, 14, 148, 252, 255, 255, 57, 18, 241, 255}, {
          255, 216, 124, 155, 226, 255, 255, 255, 236, 30, 77, 255, 255}, {
          255, 255, 255, 255, 255, 255, 255, 255, 147, 1, 77, 255, 255}}, {{0,
           20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 47, 2, 
          191}, {255, 255, 255, 255, 255, 255, 255, 255, 210, 19, 3, 160}, {
          255, 255, 255, 255, 255, 255, 255, 255, 102, 3, 34, 255}, {160, 255,
           255, 255, 255, 255, 255, 217, 15, 3, 118, 255}, {244, 255, 255, 
          255, 255, 255, 255, 208, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 
          255, 252, 85, 2, 2, 180, 255}, {255, 255, 255, 255, 255, 255, 210, 
          3, 3, 62, 247, 255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 178, 
          255, 255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 210, 255, 
          255}, {255, 255, 255, 255, 255, 255, 64, 3, 3, 210, 255, 255}, {255,
           255, 255, 255, 255, 244, 0, 2, 71, 255, 255, 255}, {255, 255, 255, 
          255, 255, 139, 2, 3, 72, 255, 255, 255}, {255, 255, 255, 255, 255, 
          139, 2, 3, 155, 255, 255, 255}, {255, 255, 255, 255, 255, 45, 2, 3, 
          186, 255, 255, 255}, {255, 255, 255, 255, 255, 25, 2, 45, 249, 255, 
          255, 255}, {255, 255, 255, 255, 255, 24, 0, 48, 255, 255, 255, 
          255}, {255, 255, 255, 255, 195, 11, 2, 70, 255, 255, 255, 255}, {
          255, 255, 255, 255, 131, 3, 19, 230, 255, 255, 255, 255}, {255, 255,
           255, 229, 31, 3, 120, 255, 255, 255, 255, 255}, {255, 255, 255, 
          185, 3, 3, 192, 255, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 234, 94, 32, 8, 131, 243, 255}, {255, 255,
           223, 33, 40, 161, 104, 1, 170, 255}, {255, 235, 40, 91, 229, 255, 
          254, 94, 83, 234}, {255, 57, 80, 241, 255, 255, 255, 118, 1, 203}, {
          200, 9, 233, 255, 255, 255, 203, 41, 15, 237}, {128, 85, 255, 255, 
          255, 190, 18, 16, 38, 255}, {128, 159, 255, 247, 106, 7, 166, 90, 
          142, 255}, {141, 43, 124, 26, 56, 199, 232, 11, 170, 255}, {249, 
          179, 151, 196, 255, 255, 159, 1, 193, 255}, {255, 255, 255, 255, 
          255, 255, 87, 64, 255, 255}, {255, 255, 255, 255, 255, 255, 3, 127, 
          255, 255}, {255, 255, 255, 255, 255, 176, 30, 240, 255, 255}, {255, 
          255, 255, 255, 245, 41, 104, 255, 255, 255}, {255, 255, 255, 255, 
          211, 27, 225, 255, 255, 255}, {255, 255, 255, 254, 70, 87, 255, 255,
           255, 255}, {255, 255, 255, 178, 13, 204, 255, 255, 255, 255}, {255,
           255, 255, 68, 52, 255, 255, 255, 255, 255}, {255, 255, 201, 13, 
          200, 255, 255, 255, 255, 255}, {255, 249, 35, 38, 255, 255, 255, 
          255, 255, 255}, {255, 247, 19, 142, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {10, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{10, 20},
        PlotRange->{{0, 10}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 233, 141, 19, 1, 2, 2, 99, 212, 255, 
          255}, {255, 255, 255, 255, 128, 3, 3, 2, 3, 3, 3, 3, 82, 234}, {255,
           255, 255, 255, 128, 3, 20, 128, 129, 110, 3, 3, 2, 139}, {255, 255,
           255, 255, 204, 66, 241, 255, 255, 128, 3, 3, 2, 157}, {255, 255, 
          255, 255, 255, 237, 255, 255, 255, 84, 3, 3, 2, 192}, {255, 255, 
          255, 255, 255, 255, 255, 247, 54, 2, 2, 2, 123, 255}, {255, 255, 
          255, 255, 255, 255, 255, 132, 3, 3, 3, 3, 255, 255}, {255, 255, 255,
           255, 255, 249, 233, 54, 3, 3, 8, 156, 255, 255}, {255, 255, 255, 
          255, 255, 191, 3, 2, 3, 43, 192, 255, 255, 255}, {255, 255, 255, 
          255, 237, 34, 3, 2, 3, 173, 255, 255, 255, 255}, {255, 255, 255, 
          255, 246, 68, 2, 0, 37, 159, 241, 255, 255, 255}, {255, 255, 255, 
          255, 255, 212, 52, 2, 3, 3, 44, 109, 255, 255}, {255, 255, 255, 255,
           255, 255, 246, 128, 129, 75, 3, 3, 39, 223}, {255, 255, 255, 255, 
          255, 255, 255, 255, 255, 248, 59, 3, 2, 122}, {255, 255, 255, 255, 
          255, 255, 255, 255, 255, 193, 16, 3, 2, 87}, {255, 255, 255, 255, 
          255, 255, 255, 247, 132, 54, 2, 2, 0, 192}, {127, 109, 126, 234, 
          212, 170, 170, 54, 3, 3, 3, 3, 16, 213}, {95, 3, 2, 18, 13, 3, 3, 2,
           3, 3, 8, 24, 149, 255}, {234, 127, 110, 18, 3, 3, 3, 2, 3, 88, 192,
           255, 255, 255}, {255, 255, 255, 144, 108, 82, 134, 108, 187, 234, 
          255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cFnx5Nl+JDEbmZb8jELHYEWcRSlJmZqe0WklCjEBOzZsnjbwiRxepM
TAJNyAYdCwOak3cTWWitBjOT9UEU6zbzMDP7fkMR+sTIxI1iEtAsQyan4yDG
mWNA8BQs1sLMDRRaFW/FycTMzKywFyTLydz0/6YWiA/Ges/+//Zh4vs9XYqJ
kcOlr/fmVylGjrP/TzIz9/gwM8us3gcyZyIzU8j//0XMrguYmF0fgES+xvOD
zXZgDtdi8rsCtheonvkZkMHApM6nCQq3k74gMz+BJH2BcgZhYaBws3bfB3Hx
ZXmIG8IXIYXbm+6S4pKS68g+AwCMthGl
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 226, 125, 62, 26, 0, 
          64, 250, 255}, {255, 255, 255, 255, 255, 231, 159, 23, 2, 2, 2, 2, 
          2, 148, 255}, {255, 255, 255, 255, 246, 44, 2, 2, 2, 8, 25, 2, 2, 
          69, 255}, {255, 255, 255, 255, 205, 2, 2, 19, 125, 199, 231, 175, 
          25, 7, 194}, {255, 255, 255, 255, 125, 2, 70, 239, 255, 255, 255, 
          255, 208, 14, 77}, {255, 255, 255, 255, 32, 19, 226, 255, 255, 255, 
          255, 255, 255, 27, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 255, 
          255, 255, 255, 243, 25, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 
          255, 255, 255, 229, 73, 7, 157}, {255, 255, 255, 255, 34, 12, 216, 
          249, 249, 232, 181, 37, 13, 67, 255}, {255, 255, 255, 255, 156, 2, 
          2, 2, 2, 2, 2, 2, 71, 205, 255}, {255, 255, 255, 255, 156, 2, 2, 2, 
          2, 2, 36, 155, 240, 255, 255}, {255, 255, 131, 111, 4, 2, 2, 2, 75, 
          146, 227, 255, 255, 255, 255}, {242, 90, 6, 2, 2, 2, 2, 2, 204, 255,
           255, 255, 255, 255, 255}, {218, 2, 2, 10, 130, 240, 150, 2, 106, 
          255, 255, 255, 255, 255, 255}, {218, 2, 95, 203, 255, 255, 251, 32, 
          70, 253, 255, 255, 255, 255, 255}, {218, 2, 123, 255, 255, 255, 255,
           150, 2, 156, 255, 255, 255, 255, 255}, {243, 47, 10, 155, 191, 255,
           255, 175, 2, 77, 255, 255, 255, 255, 255}, {255, 118, 2, 2, 4, 37, 
          37, 15, 2, 43, 255, 255, 255, 255, 255}, {255, 255, 111, 2, 2, 2, 2,
           2, 2, 43, 255, 255, 255, 255, 255}, {255, 255, 250, 179, 14, 2, 2, 
          2, 42, 172, 255, 255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mSAQiwDxfzhYefPm4/P/kUHXMyYlpXIZyxq4yLEw+XomZiBgki/7ChWLAXGZ
IUQcRKg3gYmJiSG9uLi4yJeJqR8kdB6s5MkfEHsVM7MQkKqWYWIW8D4B0QIU
Y/7/9bA8M5PPPphts0BiIIn+z3AXyIHEcpiYHBHOZGAC2SHHLAtTtWdVDBOz
WMbndk7mXqi7p/MD3ed65f//BGbmGZ/ePz0cFgZ20OrjQNk+IMPJhB/iBeF+
iBeYQF5gYvItNi4uvgAx5bMXUEl4RPm3/x8Qtr9ZMfPEf1QAAMkk12Y=
          "], {{0, 
          17}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 17},
        PlotRange->{{0, 20}, {0, 17}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 221, 144, 69, 2, 2, 
          40, 228}, {255, 255, 255, 255, 255, 234, 93, 2, 3, 3, 3, 3, 3, 
          124}, {255, 255, 255, 255, 194, 61, 3, 15, 102, 193, 193, 3, 3, 
          124}, {255, 255, 247, 79, 7, 9, 121, 246, 255, 255, 252, 79, 3, 
          124}, {255, 242, 83, 3, 12, 118, 255, 255, 255, 255, 232, 3, 3, 
          124}, {247, 83, 3, 3, 133, 255, 255, 255, 255, 176, 52, 3, 3, 37}, {
          131, 3, 3, 119, 246, 255, 255, 255, 255, 103, 3, 3, 3, 115}, {56, 3,
           18, 237, 255, 255, 255, 255, 255, 94, 3, 3, 3, 142}, {13, 3, 64, 
          248, 255, 255, 255, 255, 172, 14, 3, 3, 30, 240}, {109, 3, 3, 132, 
          144, 144, 144, 144, 46, 3, 3, 3, 186, 255}, {187, 13, 2, 2, 2, 2, 2,
           0, 2, 2, 2, 9, 207, 255}, {255, 181, 69, 69, 69, 69, 69, 68, 23, 3,
           3, 87, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 241, 49, 3, 
          21, 240, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 154, 3, 3, 
          34, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 2, 3, 3, 
          158, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 216, 2, 3, 37, 
          248, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 92, 2, 3, 102, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 241, 29, 2, 3, 169, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 177, 3, 2, 23, 225, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 211, 17, 2, 117, 255,
           255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxD4cMKbiUG89PZ/CHh3IVaFmZmZiZlZZTlY4I0ziCPjUeMhyqwE
FolmZjYpufQIyCpkZl4ApK5wMpt/gWjfycx8ACTClws175cDkyOYcRUq8P8C
M3PZf2RwM4VZ5jyKiDcz814UgalAJ9gfQBI4w8PABAReb+Aim9nZDA0NZZiE
L8OFDoB03FdkTv+PCi4z89/6/7/8FULkObPSs//rmMy+wAS+mDIF/f8/h5vZ
pPjChacv/3+6YMfEfRwocVwY6BRmJXV3E2AgBYLVLoyDhhgzc+Y7qP4PL7vK
zHzLylaBOAD4LADx
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0eAw3vsGRkZtt9BElrNzwQGtnehAj8fWIoB+dw8rExM+yBCT71AKhT9
Pv9vZGVqAwt98QHrygKxuZiYQPre+IFE+PY+AXI+cjIJAKnNIBGe8IMgVTeM
web9BJvVBzG4F8jc971eFUh53/4JFroGtFzgaDlIEedUqJPOMzFJrP3PABIT
hbk7gonJ+v//J0/uysLE3t8UZGJ6DGZuholNB2rx+YUi9hToDv9n/5HFsoAa
g77+h4nxbv7/qdcMqAomBPKHtI8LyKxn8IA7Ig0JONNupNDcVgISCvj4Hxn8
2ucvse85nAsAzOUDGw==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxVjq9zwjAUx5NvzO6omNiih2TYitnJ2ebmMHCUFFNuZXc7jk1iQeePKLp2
aGqLxhYL+q3pD1ZeLrl88t73m293NPMmYIzN74rDG369RtFwoe4LeA/nUx36
47fw09d+9DKyYw/Ftk2qa6250kne4ADCro+GY3Oi2ANLqFWXPoI27yX7rm6/
JibKpJDHSs3BoSVH7edW7vg51UrXsROPx6vVIU1TBdV2p4wjv3mAMHS+/DOH
oaW67eur5uxxZJQId1enFegT5U/sOSsz9tDZ2p8hnJUxAwdiW4Uvs3F0Vk22
TQAhg0MJf3Bb6HI=
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 231, 150, 107, 75, 36, 28, 76, 163, 255}, {255,
           148, 17, 2, 2, 1, 20, 2, 2, 2, 215}, {82, 4, 21, 148, 232, 240, 
          244, 226, 2, 2, 180}, {121, 160, 251, 255, 255, 255, 255, 226, 2, 2,
           237}, {255, 255, 255, 255, 255, 255, 255, 100, 2, 24, 255}, {255, 
          255, 255, 255, 255, 255, 230, 10, 1, 181, 255}, {255, 255, 255, 255,
           255, 255, 94, 2, 26, 241, 255}, {255, 255, 255, 255, 255, 178, 4, 
          2, 143, 255, 255}, {255, 255, 255, 255, 255, 80, 2, 62, 241, 255, 
          255}, {255, 255, 255, 255, 166, 1, 2, 166, 255, 255, 255}, {255, 
          255, 255, 214, 10, 0, 74, 250, 255, 255, 255}, {255, 255, 247, 43, 
          2, 35, 221, 255, 255, 255, 255}, {255, 255, 117, 2, 6, 180, 255, 
          255, 255, 255, 255}, {255, 244, 14, 2, 112, 255, 255, 255, 255, 255,
           255}, {255, 85, 2, 51, 234, 255, 255, 255, 255, 255, 255}, {224, 
          14, 1, 129, 255, 255, 255, 255, 255, 255, 255}, {132, 2, 32, 244, 
          255, 255, 255, 255, 255, 255, 255}, {50, 2, 118, 255, 255, 255, 255,
           255, 255, 255, 255}, {1, 2, 223, 255, 255, 255, 255, 255, 255, 255,
           255}, {45, 59, 249, 255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 
          20}, {11, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{11, 20},
        PlotRange->{{0, 11}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 239, 26, 56, 239, 255, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 122, 1, 1, 181, 255, 255, 255,
           255, 255}, {255, 255, 255, 255, 197, 45, 1, 1, 122, 255, 255, 255, 
          255, 255}, {255, 255, 255, 255, 64, 1, 0, 1, 174, 255, 255, 255, 
          255, 255}, {255, 255, 255, 150, 2, 1, 1, 1, 208, 255, 255, 255, 255,
           255}, {255, 255, 240, 56, 1, 49, 102, 1, 208, 255, 255, 255, 255, 
          255}, {255, 255, 97, 1, 12, 190, 125, 1, 208, 255, 255, 255, 255, 
          255}, {255, 219, 10, 1, 128, 255, 125, 1, 190, 255, 255, 255, 255, 
          255}, {255, 115, 1, 30, 229, 255, 125, 1, 150, 255, 255, 255, 255, 
          255}, {255, 89, 1, 130, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
          255}, {255, 17, 10, 219, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
          255}, {221, 9, 103, 255, 255, 236, 108, 1, 64, 94, 47, 47, 89, 
          245}, {185, 1, 80, 60, 52, 25, 1, 1, 1, 1, 1, 1, 19, 217}, {239, 22,
           1, 1, 0, 1, 1, 1, 0, 1, 12, 63, 200, 255}, {255, 167, 29, 22, 15, 
          22, 4, 17, 149, 195, 221, 255, 255, 255}, {255, 255, 255, 255, 233, 
          235, 23, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 207, 1, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255,
           255, 241, 28, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 
          255, 255, 255, 40, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 
          255, 255, 255, 255, 154, 99, 255, 255, 255, 255, 255, 255}}, {{0, 
          20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mTAQiwDxf1Tw9CaCvfsSmHpUZgQXusUjB6a7mNnXwMTSmAXBtDkz8yKYWBB+
MQcsYnJQoddeCDHpz///f6rKzZVnZubc9PHf//8tzMzMU//v52SGAqaSj//L
wGLuTDDAAKX5/zMxw9VBaUE8YgKJXcFBmsHB5akgMVWw1EqQQx4D8UmQ2AI2
ILkCHhgf7Zj5Tv6vYVddiRSA6czMEv//r/mAHKgf7Hgu/0cHa1P+AwAwwOhu

          "], {{0, 19}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 19},
        PlotRange->{{0, 20}, {0, 19}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 218, 92, 1, 1, 1, 0, 1, 32, 99, 136, 255, 
          255}, {255, 255, 246, 89, 22, 22, 60, 97, 13, 2, 2, 2, 85, 252}, {
          255, 255, 255, 255, 255, 255, 255, 255, 219, 177, 113, 2, 1, 148}, {
          255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 252, 109, 1, 
          29}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 157, 1,
           22}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 0,
           104}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 11, 
          51, 249}, {255, 255, 255, 255, 255, 255, 255, 255, 248, 109, 8, 33, 
          157, 255}, {255, 255, 255, 255, 255, 255, 224, 118, 34, 2, 24, 161, 
          255, 255}, {255, 255, 255, 255, 255, 239, 38, 1, 2, 2, 176, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 179, 156, 25, 1, 138, 255,
           255, 255}, {255, 255, 255, 255, 255, 255, 255, 242, 38, 2, 146, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 69, 2, 125, 249,
           255, 255, 255}, {255, 255, 255, 255, 255, 248, 140, 1, 28, 219, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 103, 2, 1, 194, 255, 
          255, 255, 255, 255}, {255, 255, 255, 250, 99, 1, 1, 141, 255, 255, 
          255, 255, 255, 255}, {176, 78, 255, 144, 2, 28, 194, 255, 255, 255, 
          255, 255, 255, 255}, {89, 2, 117, 14, 27, 212, 255, 255, 255, 255, 
          255, 255, 255, 255}, {21, 2, 1, 73, 242, 255, 255, 255, 255, 255, 
          255, 255, 255, 255}, {133, 2, 122, 224, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{213, 24, 0, 57, 158, 255, 255, 255, 255, 255, 255, 
          255}, {90, 1, 1, 1, 4, 77, 222, 255, 253, 192, 230, 255}, {54, 1, 1,
           36, 1, 1, 14, 186, 152, 1, 41, 243}, {54, 3, 159, 243, 163, 29, 1, 
          81, 12, 1, 58, 251}, {54, 10, 247, 255, 255, 121, 1, 1, 1, 1, 68, 
          255}, {54, 1, 137, 254, 255, 220, 34, 1, 1, 1, 137, 255}, {116, 1, 
          1, 189, 255, 194, 15, 1, 1, 28, 249, 255}, {245, 125, 1, 4, 88, 14, 
          1, 1, 86, 222, 255, 255}, {255, 251, 48, 1, 1, 1, 1, 91, 250, 255, 
          255, 255}, {255, 255, 219, 4, 1, 1, 1, 150, 255, 255, 255, 255}, {
          255, 253, 87, 1, 1, 1, 1, 20, 142, 255, 255, 255}, {255, 208, 1, 1, 
          1, 64, 26, 1, 2, 146, 254, 255}, {255, 124, 1, 1, 45, 246, 210, 57, 
          1, 1, 180, 255}, {255, 68, 1, 1, 176, 255, 255, 249, 77, 1, 68, 
          255}, {233, 3, 1, 46, 248, 255, 255, 255, 161, 1, 4, 234}, {245, 39,
           1, 73, 255, 255, 255, 226, 71, 1, 1, 214}, {255, 82, 1, 36, 186, 
          255, 179, 42, 1, 1, 12, 224}, {255, 198, 10, 1, 12, 50, 10, 1, 1, 
          10, 213, 255}, {255, 255, 182, 8, 1, 1, 1, 13, 136, 212, 255, 
          255}, {255, 255, 255, 207, 76, 1, 86, 211, 255, 255, 255, 255}}, {{
          0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{254, 146, 22, 2, 2, 145, 240, 176, 146, 192, 255, 255, 
          255, 255, 255}, {130, 3, 3, 3, 3, 2, 33, 13, 3, 111, 255, 255, 255, 
          255, 255}, {34, 3, 3, 3, 3, 2, 3, 3, 3, 95, 250, 255, 255, 255, 
          255}, {65, 3, 87, 3, 3, 2, 3, 3, 3, 2, 96, 214, 255, 255, 255}, {
          172, 112, 203, 44, 3, 2, 3, 3, 3, 2, 3, 122, 255, 255, 255}, {255, 
          255, 58, 3, 3, 33, 76, 24, 3, 2, 3, 8, 121, 255, 255}, {254, 156, 
          13, 3, 3, 130, 255, 177, 3, 2, 3, 3, 3, 255, 255}, {254, 3, 3, 3, 
          87, 255, 255, 239, 147, 2, 3, 3, 3, 171, 255}, {254, 2, 2, 18, 193, 
          255, 255, 255, 255, 145, 2, 2, 2, 110, 255}, {213, 3, 3, 40, 255, 
          255, 255, 255, 255, 146, 3, 3, 3, 17, 225}, {111, 3, 3, 143, 255, 
          255, 255, 255, 255, 224, 28, 3, 3, 2, 220}, {111, 3, 3, 101, 255, 
          255, 255, 255, 255, 255, 38, 3, 3, 2, 220}, {110, 2, 2, 23, 208, 
          255, 255, 255, 255, 255, 37, 2, 2, 110, 255}, {111, 3, 3, 3, 147, 
          255, 255, 255, 255, 161, 8, 3, 3, 111, 255}, {130, 3, 3, 3, 44, 234,
           255, 255, 255, 146, 3, 3, 3, 214, 255}, {254, 3, 3, 3, 3, 48, 235, 
          255, 255, 64, 3, 3, 3, 255, 255}, {254, 64, 2, 2, 2, 0, 2, 85, 2, 0,
           2, 2, 64, 255, 255}, {255, 240, 75, 3, 3, 2, 3, 3, 3, 2, 3, 14, 
          178, 255, 255}, {255, 255, 234, 75, 3, 2, 3, 3, 3, 2, 14, 153, 255, 
          255, 255}, {255, 255, 255, 239, 65, 2, 3, 3, 3, 64, 178, 255, 255, 
          255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfxj4ksXEpPPpPxJ4Z8fEzMz8EknkjDMzmtA6fmZmLhVkoZfcQBXb
4pCEvpgyMdkf+B/LxPQCyWSXd///I1S9AZrMfxYoI83s9hOixhlo8gYg4zkz
cwdE0RyQySDGZmbmS2CRFUxMTGVAG/7/B9rR9fz5vNLSUqAindg4k7g4kFOB
7uWPLoUwYIRG7Nn/t/1APDsZVVMmZpm9l16BDPv18uXLF9/ffexmYq79jwoa
GNgOoAlJMrn9xxBajC7kzGT6DE3oSzbzLggLABFcBvg=
          "], {{0, 20}, {19, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 115, 1, 0, 54, 167, 255, 255, 255}, {255, 116, 2, 2,
           2, 4, 144, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 255}, {255, 
          116, 2, 2, 2, 2, 101, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 
          255}, {213, 20, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 
          101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 
          2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 
          2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {
          242, 87, 2, 2, 2, 2, 91, 248, 255}, {255, 116, 2, 2, 2, 2, 2, 190, 
          255}, {255, 137, 6, 2, 2, 2, 2, 190, 255}, {255, 255, 25, 2, 2, 2, 
          2, 190, 255}, {255, 255, 63, 2, 2, 2, 2, 47, 255}, {255, 255, 189, 
          2, 2, 2, 2, 12, 174}, {255, 255, 251, 138, 4, 2, 2, 2, 43}, {255, 
          255, 255, 255, 116, 2, 2, 2, 117}}, {{0, 20}, {9, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{9, 20},
        PlotRange->{{0, 9}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfxjQd5zyCcL6BBOyZmSUtm1sfvQbruj/HTlGMDiAEPq/K80CJKTy
Hxn83a7HyMh6ClnodyVI2UEkkRmOIBGNp3CBo14sIJHUVwg1BhALW5G0gcxR
ZGVkuYQQ+lPosvv9UWdGIyS3gkEtqo1AcIoVXeiuEiMj/y0kgU99skArIhEC
96dJMzIyMDp+hHB/nZtpzw1ylUAPmH9tdxkLxJmyLitBAr1mPBA+k1I41GBL
D9sIRtGMusRNcFMBw38Qig==
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/g0AWI0PY1f8IEMvExMTh7r4Nxv9So8cMFGJVVDwFE1qXpMsFFFqA
pKuRiUn5DxJ/BhPTbCTuUREm+3cI7ncrJrE3SNKBTExtSNw17EwOv5G4vEzi
JxF669mZmFchZBOBLlkG5/3q4GViKoO75NtqJib+SoTDJjIxSZxF6F3Hw8S0
CcF9p88kdvEvgu/IJHEGyVn/FZkakLn/AVgv/zY=
          "], {{0, 20}, {16, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 244, 105, 1, 175, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 238, 114, 5, 18, 92, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 78, 2, 55, 211, 236, 255, 255,
           255, 255}, {255, 255, 255, 255, 229, 30, 2, 181, 255, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 132, 2, 55, 255, 255, 255, 255,
           255, 255, 255}, {255, 255, 255, 197, 1, 9, 181, 255, 255, 255, 255,
           255, 255, 255}, {255, 255, 219, 35, 2, 167, 255, 255, 255, 255, 
          255, 255, 255, 255}, {255, 255, 116, 2, 84, 242, 255, 255, 255, 255,
           255, 255, 255, 255}, {255, 212, 21, 19, 211, 255, 255, 255, 255, 
          255, 255, 255, 255, 255}, {255, 87, 1, 48, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 255}, {246, 21, 1, 171, 255, 255, 255, 252, 210,
           116, 158, 242, 255, 255}, {162, 2, 24, 255, 255, 255, 233, 136, 2, 
          2, 2, 43, 255, 255}, {130, 2, 108, 255, 255, 255, 108, 1, 14, 155, 
          66, 2, 138, 255}, {47, 2, 139, 255, 255, 255, 24, 9, 176, 255, 238, 
          115, 15, 221}, {47, 2, 139, 255, 255, 118, 4, 181, 255, 255, 255, 
          87, 1, 163}, {161, 1, 127, 255, 255, 46, 106, 242, 236, 238, 147, 1,
           97, 255}, {221, 16, 9, 175, 255, 47, 2, 42, 18, 26, 2, 23, 255, 
          255}, {255, 139, 0, 14, 70, 14, 2, 0, 2, 2, 2, 201, 255, 255}, {255,
           255, 137, 2, 2, 2, 2, 1, 2, 27, 189, 251, 255, 255}, {255, 255, 
          252, 232, 148, 75, 108, 117, 191, 239, 255, 255, 255, 255}}, {{0, 
          20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 141, 50, 255, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 255, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 188, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 249, 255, 
          255, 255}, {255, 68, 255, 255, 255, 255, 255, 118, 1, 176, 255, 255,
           255}, {218, 21, 255, 255, 255, 255, 255, 119, 2, 176, 255, 255, 
          255}, {176, 21, 255, 255, 255, 255, 255, 119, 2, 243, 255, 255, 
          255}, {176, 9, 219, 255, 255, 255, 255, 94, 2, 255, 255, 255, 
          255}, {176, 0, 157, 252, 255, 255, 255, 40, 1, 255, 255, 255, 
          255}, {188, 1, 2, 69, 161, 215, 215, 34, 2, 191, 215, 215, 215}, {
          255, 104, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 62}, {255, 253, 175, 92, 80,
           50, 2, 2, 2, 80, 104, 164, 247}, {255, 255, 255, 255, 255, 255, 
          209, 1, 56, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 137,
           2, 117, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 137, 2,
           158, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 90, 2, 
          158, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 59, 1, 212,
           255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 60, 11, 239, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 244, 29, 127, 255, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 247, 38, 138, 255, 
          255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfzC4FsTECIFa//+/KjQxMeFhYobBa680wTKFM8FgLQPT2kNMzMFn
z36FaP4/k4n5///C1//h4IwYg/1/FJDOLHYWRWAtI5MHisArBSbt1ygi1UyM
S1D1MDHXfEUWOCPGKIZqjx26PQcZmVpQ7TFh0kbVE8Qkj2rxNSbmWBSBL1qM
9mh60O35z8g0E1XgPxPzIQQHAFuMHkc=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPxfzBY02bFxMDExNT9HwoeVbAzMzMzATGbE0TkoSEzM1SI2RIiZMfM
LBAcdeNGHULoUqLbShCtDRRa9B8ZPOVlZg58hyzysgio/zKYuXYFmPqby8TM
mwZm7nT7AhaZB7QxA6L+2C4wNRfoCJvPyAZNB7rc6geyyGSg621QRA5xMTNz
bIHxzgLxbmtmZh6YGz9FK/7//0yBmZlvPoj7bM+eKH1mwf//7YH+6AUGx8mJ
OmDvC/7fyg3ybVCQBjgkmLm0a/9PYYYCoBCPXMNGUDhIQkS4+AU7tkPtuCQB
MqDjONxNALyI8OM=
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf2TwfTsXYz2I8Xw/mH+8yZaJiWkOiLmMufHB7B5dTiCfKegzUGC5
AhMzJxMjE5MoE5PgBaBAvwJITsrCcspZJqbJQDOqWZiYdKLWPADKVTExvfz/
35iJidP4FdjkUwJMhl/+/+dnMrsDtVuXSRmo5P/FvX+gAqt5maJRXPdBl4n7
LIrIPEbGVhSBh0pMTJdRRCYwMtX/RRb4ocyg8gpFSSYTxxwUgfc6TEooAv9m
MjEJ3UIW+Qz0quhDZJGFTEzKR1F0bWViWgDnAAB3qBCc
          "], {{0, 20}, {18, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwj4GsbAyBD58z8C1DOBQN0zuMANAbmSkihWJv9/MJE7c0DkdSnZ
Q//+o4CL0kxtqCL/w5mU0ESeych8QBPS4T2LLoKuC1PkuSyayJ8gpigY+ymY
DGWSug6it9oYGsp6vvr/wo2ZKRPI/2DOAvYlJzcnE5PBc6BILxMCOBwGCjxQ
QxL5CjLEE0mAyQYkkgrlCHrUb9nyByTyuRLIFcvL2w13FADANwKZ
          "], {{0, 20}, {
          18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 96, 39, 99, 143, 196, 228, 232, 173, 107, 237, 255, 
          255, 255, 255}, {194, 7, 2, 1, 2, 2, 23, 26, 1, 2, 177, 255, 255, 
          255, 255}, {255, 119, 2, 20, 81, 56, 33, 63, 80, 126, 231, 255, 255,
           255, 255}, {255, 200, 2, 60, 255, 249, 243, 250, 255, 255, 255, 
          255, 255, 255, 255}, {255, 155, 2, 60, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 255, 255}, {255, 193, 1, 59, 227, 196, 143, 136, 
          209, 255, 255, 255, 255, 255, 255}, {255, 119, 2, 33, 38, 2, 2, 2, 
          10, 124, 205, 253, 255, 255, 255}, {255, 51, 2, 1, 2, 27, 96, 140, 
          62, 2, 2, 138, 255, 255, 255}, {255, 21, 2, 1, 126, 242, 255, 255, 
          250, 183, 14, 5, 186, 255, 255}, {255, 96, 2, 159, 246, 255, 255, 
          255, 255, 255, 184, 10, 25, 217, 255}, {255, 239, 157, 255, 255, 
          255, 255, 255, 255, 255, 255, 103, 1, 83, 246}, {255, 255, 255, 255,
           255, 255, 255, 255, 255, 255, 255, 188, 29, 1, 209}, {255, 255, 
          255, 255, 255, 255, 255, 255, 255, 255, 255, 225, 90, 1, 120}, {255,
           255, 255, 230, 249, 255, 255, 255, 255, 255, 255, 255, 120, 1, 
          120}, {255, 255, 217, 24, 51, 195, 255, 255, 255, 255, 255, 255, 82,
           1, 120}, {255, 255, 120, 0, 29, 195, 255, 255, 255, 255, 255, 255, 
          120, 0, 81}, {255, 255, 164, 1, 20, 138, 246, 255, 255, 255, 255, 
          229, 48, 1, 164}, {255, 255, 255, 100, 2, 2, 44, 154, 255, 255, 230,
           83, 2, 42, 243}, {255, 255, 255, 250, 183, 29, 2, 2, 20, 21, 15, 2,
           18, 202, 255}, {255, 255, 255, 255, 255, 237, 107, 25, 1, 2, 2, 55,
           197, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 233, 178, 131, 79, 0, 65, 149, 
          252, 255, 255}, {255, 255, 255, 255, 255, 121, 1, 1, 53, 91, 1, 1, 
          139, 255, 255}, {255, 255, 255, 255, 255, 222, 160, 229, 250, 253, 
          162, 1, 8, 235, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 252, 55, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255, 255,
           255, 255, 254, 97, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 250, 1, 51, 249, 255}, {255, 255, 255, 255, 255,
           255, 255, 255, 255, 255, 250, 1, 129, 255, 255}, {255, 255, 255, 
          255, 255, 255, 255, 255, 255, 255, 137, 1, 245, 255, 255}, {255, 
          255, 255, 255, 255, 255, 255, 255, 255, 238, 6, 69, 251, 255, 
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 142, 4, 215, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 218, 11, 
          59, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 236, 
          47, 22, 239, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
          253, 175, 13, 194, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 168, 1, 121, 255, 255, 255, 255, 255, 255}, {255, 255, 
          255, 255, 255, 187, 11, 1, 93, 192, 255, 255, 255, 255, 255}, {255, 
          255, 250, 166, 82, 9, 1, 1, 1, 3, 58, 201, 253, 255, 255}, {255, 
          176, 52, 1, 1, 13, 94, 130, 130, 90, 1, 1, 35, 136, 249}, {232, 23, 
          1, 1, 50, 219, 255, 255, 255, 251, 205, 118, 31, 4, 107}, {205, 1, 
          3, 53, 235, 255, 255, 255, 255, 255, 255, 255, 255, 117, 190}, {240,
           29, 87, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cFfy4pMs1HFbrSyczM7IskcGlnNCcTM7PMbITQGVugGqBYPEKXMg9Q
yLxMh3ky1OR5ikxMDExGr/7/z2Dq+gMSehkKVKJrUP0MyJ7DrPsZSB0zYmI2
LfoJ0bKRWeb9/3eL5Jm5Sj5Bjf1my9wBNACobxvcqs3MzHP/P2di4mqEC+03
BVm0l5m/Bi50s5iJe9L//4rMHnChN8rMTC1AWox5Gcz4XmVm3bnvgCwm5l0Q
oalezMxJL8FMUyaQcR9OlPIw63W/gkibMcu0X5ioAnSQHtxcR2ZIaMhsuA8X
++AHFOOK3/QIOWh/vewqe4Ua2gDMqh37
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 249, 149, 92, 40, 14, 99, 234, 
          255}, {255, 255, 255, 162, 38, 2, 1, 2, 2, 2, 80, 255}, {255, 255, 
          149, 7, 2, 2, 12, 39, 20, 2, 2, 255}, {255, 158, 6, 2, 4, 86, 216, 
          255, 199, 2, 2, 183}, {255, 27, 2, 2, 118, 255, 255, 255, 218, 2, 2,
           164}, {106, 0, 1, 96, 255, 255, 255, 255, 218, 1, 1, 163}, {74, 1, 
          2, 213, 255, 255, 255, 184, 17, 2, 2, 164}, {12, 1, 49, 250, 255, 
          255, 255, 97, 2, 2, 2, 83}, {2, 1, 14, 220, 255, 255, 223, 12, 2, 2,
           2, 59}, {54, 1, 2, 38, 113, 164, 118, 2, 2, 2, 2, 107}, {157, 0, 1,
           1, 1, 1, 0, 1, 1, 1, 27, 255}, {255, 153, 26, 2, 2, 2, 1, 2, 2, 6, 
          160, 255}, {255, 255, 234, 174, 128, 128, 1, 2, 2, 66, 255, 255}, {
          255, 255, 255, 255, 255, 215, 1, 2, 18, 205, 255, 255}, {255, 255, 
          255, 255, 255, 131, 1, 2, 71, 255, 255, 255}, {255, 255, 255, 255, 
          178, 1, 0, 37, 209, 255, 255, 255}, {255, 255, 255, 247, 83, 2, 1, 
          76, 255, 255, 255, 255}, {255, 255, 255, 140, 2, 2, 38, 233, 255, 
          255, 255, 255}, {255, 255, 255, 89, 2, 2, 120, 255, 255, 255, 255, 
          255}, {255, 255, 255, 70, 2, 100, 255, 255, 255, 255, 255, 255}}, {{
          0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 250, 128, 24, 61, 172, 255, 255, 255, 255,
           255, 255}, {255, 255, 220, 52, 2, 2, 18, 18, 56, 249, 255, 202, 
          202, 255}, {255, 255, 31, 2, 27, 132, 237, 166, 8, 201, 242, 42, 19,
           228}, {255, 164, 1, 13, 212, 255, 255, 205, 96, 255, 73, 2, 11, 
          222}, {255, 157, 1, 22, 255, 255, 255, 255, 255, 156, 7, 2, 135, 
          255}, {255, 217, 0, 9, 207, 255, 255, 255, 175, 1, 1, 122, 255, 
          255}, {255, 209, 1, 2, 29, 183, 160, 115, 23, 2, 2, 197, 255, 
          255}, {255, 187, 1, 2, 2, 2, 2, 1, 2, 2, 45, 215, 255, 255}, {255, 
          255, 236, 153, 44, 2, 2, 1, 28, 206, 246, 255, 255, 255}, {255, 255,
           255, 255, 80, 2, 2, 47, 224, 255, 255, 255, 255, 255}, {255, 255, 
          255, 159, 31, 1, 1, 59, 255, 255, 255, 255, 255, 255}, {255, 255, 
          250, 38, 2, 21, 7, 10, 177, 255, 255, 255, 255, 255}, {255, 255, 
          128, 2, 57, 249, 127, 1, 52, 255, 255, 255, 255, 255}, {255, 239, 9,
           2, 170, 255, 210, 1, 19, 243, 255, 255, 255, 255}, {255, 120, 1, 
          55, 237, 255, 255, 77, 2, 140, 255, 255, 255, 255}, {230, 24, 0, 
          179, 255, 255, 255, 99, 1, 80, 255, 255, 255, 255}, {215, 2, 1, 216,
           255, 255, 202, 16, 4, 169, 255, 255, 255, 255}, {243, 73, 1, 76, 
          176, 87, 20, 1, 22, 255, 255, 255, 255, 255}, {255, 172, 1, 2, 2, 2,
           2, 48, 185, 255, 255, 255, 255, 255}, {255, 255, 174, 17, 2, 55, 
          137, 232, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 251, 186, 19, 1, 37, 243, 255, 255, 
          255, 255}, {255, 255, 255, 255, 119, 3, 3, 2, 3, 234, 255, 255, 255,
           255}, {255, 255, 255, 203, 13, 3, 11, 19, 3, 137, 255, 255, 255, 
          255}, {255, 228, 129, 23, 3, 19, 144, 212, 3, 103, 255, 255, 255, 
          255}, {255, 149, 2, 3, 56, 189, 255, 212, 3, 68, 255, 255, 255, 
          255}, {244, 36, 1, 16, 238, 255, 255, 212, 2, 146, 255, 255, 237, 
          255}, {156, 3, 16, 187, 255, 255, 255, 226, 87, 241, 233, 127, 70, 
          255}, {86, 3, 53, 255, 255, 255, 255, 255, 255, 244, 88, 3, 5, 
          197}, {65, 3, 175, 255, 255, 255, 255, 244, 156, 44, 3, 3, 2, 
          166}, {73, 3, 210, 255, 255, 184, 149, 36, 3, 3, 3, 3, 2, 131}, {86,
           2, 18, 28, 2, 2, 2, 0, 2, 5, 78, 2, 0, 192}, {122, 3, 2, 3, 3, 3, 
          3, 2, 66, 189, 191, 3, 16, 213}, {249, 103, 23, 24, 33, 129, 129, 
          146, 250, 255, 95, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 2, 61, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255,
           255, 255, 255, 255, 129, 47, 193, 255}}, {{0, 20}, {14, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf2Sw35Sp7AOKSDcTM3M8iogFVOTKdAMguPL/fwc7RKScH0gzM0tc
/W/ADBZZx8TEwAQEDDqlIBbH1f/uzMxgNRCCe+5/sIj+7F27ICKB/8Eiou/+
/3cCi4BYIBG+q//LWcEi28CuYmNi8A4FG29/AOIsV5ihLe+gDn0mjDAUAsAu
BYq4wX3HDtVlCBV4qghzM1MNRGQ33LnMHhCROAyRPQiRIojIryllZUzM5kll
ZV0/ISIAhOa1sw==
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 103, 0,
           221}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 2, 2, 
          107}, {255, 255, 255, 255, 255, 255, 255, 255, 249, 47, 2, 2, 
          155}, {255, 255, 255, 255, 255, 255, 255, 255, 108, 2, 2, 2, 173}, {
          255, 255, 255, 255, 255, 255, 255, 246, 50, 2, 2, 74, 243}, {255, 
          255, 255, 255, 255, 255, 255, 186, 2, 2, 2, 218, 255}, {255, 255, 
          255, 255, 255, 255, 244, 94, 2, 2, 59, 242, 255}, {255, 255, 255, 
          255, 255, 255, 192, 2, 2, 2, 113, 255, 255}, {255, 255, 255, 255, 
          255, 255, 105, 2, 2, 59, 242, 255, 255}, {255, 255, 255, 255, 255, 
          183, 20, 2, 2, 173, 255, 255, 255}, {255, 255, 255, 255, 255, 75, 2,
           2, 92, 243, 255, 255, 255}, {255, 255, 255, 255, 215, 18, 2, 2, 
          200, 255, 255, 255, 255}, {255, 255, 255, 241, 80, 2, 2, 24, 217, 
          255, 255, 255, 255}, {255, 255, 255, 168, 2, 2, 23, 194, 255, 255, 
          255, 255, 255}, {255, 255, 177, 14, 2, 2, 110, 255, 255, 255, 255, 
          255, 255}, {255, 242, 58, 2, 2, 100, 247, 255, 255, 255, 255, 255, 
          255}, {244, 71, 2, 2, 22, 212, 255, 255, 255, 255, 255, 255, 255}, {
          230, 2, 2, 2, 51, 255, 255, 255, 255, 255, 255, 255, 255}, {230, 2, 
          2, 2, 109, 255, 255, 255, 255, 255, 255, 255, 255}, {242, 50, 20, 
          146, 253, 255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfwR4t/Se824k/v+T9oz+/1FAHKPUOxSBTCZGxsBvCP4fWxZGLnHG
pwiRSYwMWpsrxd/CBQ6yMvIe/u9eDxf47czIe+P//y/P4CJTGVm3oVhzS5Kx
GUT/OPUAar8fozHI2n5dRlHlnSCBGUzM8f//dxkCHaTGZ/b+//+HvAxAgU28
jPJpBz+aMS78/zqQkXPz/7dsjDlf//9fysh2+f8uRsYp/19bMRb//f//mRBj
2P/vwoyK3///iGTkmnjUS4hRa/v/BQyMTf/v7Z7KCAaFT/7/X8DIKKwiDOay
SEz+DbR6GzMjIwOIr1d2COrgw+6McplNFy9+hfkAAJGd+CI=
          "], {{0, 20}, {18, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 240, 54, 
          157}, {255, 167, 70, 212, 255, 255, 255, 255, 255, 156, 1, 66}, {
          253, 86, 1, 196, 255, 255, 255, 255, 255, 154, 1, 160}, {173, 1, 9, 
          206, 255, 255, 255, 255, 255, 48, 5, 188}, {173, 1, 50, 255, 255, 
          255, 255, 255, 235, 33, 28, 255}, {123, 1, 50, 255, 255, 255, 255, 
          255, 190, 1, 28, 255}, {86, 1, 19, 180, 230, 255, 255, 255, 87, 1, 
          28, 255}, {173, 1, 1, 1, 29, 59, 99, 66, 20, 1, 28, 255}, {248, 229,
           58, 17, 9, 1, 1, 1, 1, 1, 127, 255}, {255, 255, 255, 255, 210, 163,
           78, 50, 1, 1, 206, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 
          1, 1, 245, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 245,
           255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 173, 255}, {
          255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 136, 255}, {255, 255, 
          255, 255, 255, 255, 255, 233, 1, 1, 147, 255}, {255, 255, 255, 255, 
          255, 255, 255, 233, 0, 1, 217, 255}, {255, 255, 255, 255, 255, 255, 
          255, 233, 1, 1, 136, 255}, {255, 255, 255, 255, 255, 255, 255, 235, 
          12, 1, 30, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 87, 1, 28,
           255}, {255, 255, 255, 255, 255, 255, 255, 255, 158, 63, 171, 
          255}}, {{0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHx//8/TaULtm2bGhOTuW3bk/8gsJSJkQkIwASv+mKgSCuSCCOTCFDZ
Qw0gx3BF/uGTjU6MTKxngYqeOjExsa8GMi6KMzK5g03678vI6PTk/2ZRRgbB
pxCRr+FMTI6JrExMqlCB//8fyIJNtv0EE/j/QhEowpr8Hi5Qrga0WPMgnP/E
iREIGCzgAmfVgUYoxDNawgTugwytfbWR0fAnROC3GdB5c77/38DIdg8icgJo
KdC9H8XhuvIYGWP+//+SyciwBibCxKTZPsWOiUn7O1SkGhYQR+FWSYBFBPvh
rvl/e0KsTWzWNYQAAHaK2xo=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mTAQiwDxfzTw59eD+3DO29h7TxYV+8szMspCRf4uUmMEAQ5e3rgNUEXZQD5L
VMWORwhTeoFCEXtRDfZkZMz4gmrZEka+ouuze12tFiLEchhNuYH2KfHznYAJ
veMFGqew6fv/GYzTYGK/J9UtufgNyPgiGozuh///Jc3/oAs94LECi72+ixCr
YewBUbt0xeBC9635n4FoDkZbmNBZMcYuMMOdsRwq1MPFmP0OzFqm9BRE3Vsd
zqy29y9Edhkjb0JCgjU7I2P2W7h7cwJAoHz9979wuwChbCmh
          "], {{0, 19}, {20, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 19},
        PlotRange->{{0, 20}, {0, 19}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU//////2FCyf9GRwm/PsPB1PVmYBAK946Ei60h42JSVrn4s//l8TuQoXu
CDAxmb8CM4NKoWJHmZi4dkGYFlFQMQUmplAIaxczTIwBLjaHCSbGyMRVD2E1
Mbn8hrD0mdgP/wHSZ4O4mJh0tNpvAtk3eZmYTBqOJAsCXTT3bTC7+Vmg4AZW
JjAQS1kO5J3w4rgFpH6t42Vi0a5fDTHrr4rMEyA1m42pGeFVVaY1QNKFSeMD
QmwvkxFYzAsh9P8KExNYTP05XOiqHJMpkFrAzqQxfQ9IYP/sEBkmwd0gZgnI
OapAwMLExGL/GKJhX5G1FdiR2nm7kYz+d3FF9cWLn8BsAKFFFFY=
          "], {{0, 20}, {
          20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxdUDEOwjAMtJgYEeID/ILRjKxFPKAVoWIJUoqEmPw0Py04cRvsWnKUO93F
OR+HV/fYAMC0laPrP+eU+u91J+AWp+cYw/0S32EM6TQU2UF6L52XYgDKtoTw
lEAkxJWAEBxRC7lZRFE0AOynkFJ2LNU7zdK/3BAFUEbzb3W5n86MM6GwRsJr
E9VdYGMYNT3rO1wjaCzU1HY9S3K7Li7JG/oBdlL2Qg==
          "], {{0, 20}, {18, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwLxf2TwtoVJHJn/0oKJuQvB/V4vxOyz5C+cfzOEmTnlDkL+kj0z96Yf
CP4JYQaBqUjGnRZnNt6NxL/iyCxyCokPNE/4AbL99swiKPxmoHmPald8gfFX
8zJVAw1lKoTyv+gwx50X5eBnCod5gJl5fT/HXH+4wETm6P+OLv91mNZD+Ge5
mK4eYtpVwpQJVbCKmflqtloOM/MOqMBGFuacZGZm5hlwV1QwMzMxc8R+hAv8
7nNwyLmAcCYATP0GOA==
          "], {{0, 20}, {17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyi432nAyMjIwFgKZG/tFgUCASYIkL71yIGbCQXMn4fKZ1J8sZod
wuJWUckD0dr//6+sUZoBBFv+//8AFYGDleYgkSKEwCsTkEDVX7jAMxuwcScR
ArYgvlzJV7iII0hA8gLCkBUgZ7JdhPO/57OABKIQKtaCDV2GEFgGdnbGL7jA
Ih6QgN03hBJ7kIDEPiTXr+AHeecpksj/OKDIRmSB/++bmTo+I7gA6Xnb6w==

          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          239, 29, 214}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 229, 1, 57}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
           255, 204, 1, 71}, {255, 255, 157, 249, 255, 255, 255, 255, 255, 
          255, 255, 83, 1, 123}, {255, 255, 25, 156, 255, 255, 255, 255, 255, 
          255, 234, 21, 1, 204}, {255, 246, 22, 86, 255, 255, 255, 255, 255, 
          255, 133, 1, 64, 250}, {255, 179, 1, 86, 255, 255, 255, 255, 255, 
          249, 57, 1, 27, 242}, {243, 42, 1, 140, 255, 255, 255, 255, 255, 90,
           1, 1, 81, 255}, {197, 1, 12, 211, 255, 255, 141, 62, 97, 10, 1, 1, 
          118, 255}, {36, 1, 1, 78, 89, 5, 1, 1, 1, 1, 1, 25, 253, 255}, {78, 
          1, 1, 1, 1, 1, 1, 85, 2, 1, 1, 107, 255, 255}, {239, 19, 8, 61, 61, 
          61, 177, 255, 119, 4, 61, 195, 255, 255}, {255, 228, 220, 255, 255, 
          255, 255, 252, 107, 3, 183, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 255, 182, 1, 1, 170, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 250, 96, 1, 73, 245, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 204, 1, 1, 215, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 204, 1, 1, 176, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 204, 1, 46, 245, 255, 255, 255, 255}, {255, 255, 255, 255,
           255, 255, 213, 9, 61, 255, 255, 255, 255, 255}, {255, 255, 255, 
          255, 255, 255, 255, 207, 139, 255, 255, 255, 255, 255}}, {{0, 20}, {
          14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 235, 217, 128, 
          97, 0, 166}, {255, 255, 255, 255, 255, 255, 206, 139, 35, 2, 2, 2, 
          54, 225}, {255, 255, 255, 255, 253, 97, 13, 2, 2, 3, 49, 172, 245, 
          255}, {255, 255, 255, 255, 149, 2, 2, 2, 42, 140, 255, 255, 255, 
          255}, {255, 255, 255, 239, 41, 2, 19, 122, 251, 255, 255, 255, 255, 
          255}, {255, 255, 254, 151, 2, 2, 107, 255, 255, 255, 255, 255, 255, 
          255}, {255, 255, 244, 2, 2, 2, 142, 255, 255, 255, 255, 255, 255, 
          255}, {255, 255, 244, 2, 2, 2, 14, 60, 60, 131, 238, 255, 255, 
          255}, {255, 255, 144, 2, 2, 2, 2, 2, 2, 2, 18, 137, 249, 255}, {255,
           255, 207, 22, 20, 155, 163, 163, 109, 20, 2, 2, 92, 245}, {255, 
          255, 255, 222, 220, 255, 255, 255, 255, 219, 125, 2, 2, 212}, {255, 
          255, 255, 255, 255, 255, 255, 255, 255, 255, 157, 2, 2, 157}, {255, 
          255, 255, 255, 255, 255, 255, 255, 255, 255, 131, 2, 2, 129}, {255, 
          223, 161, 255, 255, 255, 255, 255, 255, 164, 11, 2, 2, 212}, {250, 
          63, 70, 255, 255, 255, 255, 255, 164, 5, 2, 2, 76, 253}, {137, 2, 
          121, 255, 255, 255, 255, 231, 13, 2, 2, 9, 195, 255}, {104, 2, 77, 
          255, 255, 204, 128, 29, 2, 2, 2, 162, 255, 255}, {163, 2, 2, 6, 6, 
          4, 2, 2, 2, 49, 183, 254, 255, 255}, {242, 77, 2, 2, 2, 2, 2, 57, 
          173, 229, 255, 255, 255, 255}, {255, 208, 68, 150, 110, 162, 218, 
          247, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eAL9u2NTHN3bYNzLman59/7f/qeBYWJhYgyDsIFJMGMuapCrNAxZgk
jv//D2GxsBgXFhQmgliSB6FiOTuugQzdYQ7kFv4/pcjExMSQte0qxC4GIG/7
/4MSYL1G+SDjpwFZzg///3/Yxwc1Xk0NyFJuAWuYUWAEt9f5NdTF//PhYlNg
Qtv8QRYxgYm5ENumgZXoTKkHKy4EihwFmcypsfLZ/193ooFiwof+/1cDyZZB
DNkA8tG1/9P4QP74ChJ54i0B1rsNZPKp///vA8MKbAfvjP/+IOMV8/MdoW5h
6f//fwUimIBYLvrOL6Aha4ThYkmF16AOPrRjR3POjh07tu/4ChUBAIxxtyc=

          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxf1SwibEUTUSb0R3CWDb5L5g+zAYR+ZEuAVUcyAgRucjIaPAcxHgl
ysiYBaR/BzNq7gIr8WdkFL0OpLMYGXPBAodYGBl7gfRdfkbBG2ARL0ZGxk3/
///LZGScCtT69d8koJIp//7/f8TIyH7naqqHxmsXoJIrQKXmjIzMZryMjBqb
gAISj4EiCoxgYMFuz8jIdxEocIYbxJfKPZuTy8goAzI/GshnXfr49/+TMoyM
c0Ei6xgZo7+CGEArTX+BGM8kQl+B6JuCjAz1EG/fglBzGBklH6EETAwjo9d/
NBH2A6giOxgXQlkAhSL11A==
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/weBTUuqGMyWHP+PAHe8ebltt4kLyUW/+wgVuqjEFLMXSP/KlWXShgh9
UmISugNhHmLi7v8FYrxjEtoD1fGMiYnpPojxZ5Lff7gYV8ev/6igG2YeHHyX
5FA4gyp0JoFJ8BSaMl4mJuaQNddRxAQF1s3j4tSp+PYTTfHTVD4mn///3z5D
kZjNJLqnW4sJ2e//jzIxLZvCx7QGXez/fCahmqloYn9m8TNx1MDMfKivkvMF
SM8Eer198WywWA0TRM/fD2k+vBzsgiDA6bwFbkxzRiETSPkykEYAXp00Cg==

          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{61, 230, 255, 255, 255, 255}, {69, 52, 255, 255, 255, 
          255}, {197, 12, 255, 255, 255, 255}, {220, 43, 182, 255, 255, 
          255}, {93, 4, 156, 255, 255, 255}, {118, 0, 156, 255, 255, 255}, {
          247, 36, 62, 251, 255, 255}, {255, 67, 1, 178, 255, 255}, {255, 147,
           1, 100, 255, 255}, {255, 249, 1, 100, 255, 255}, {255, 253, 79, 
          100, 255, 255}, {255, 255, 99, 2, 233, 255}, {255, 255, 99, 1, 146, 
          255}, {255, 255, 99, 1, 133, 255}, {255, 255, 99, 1, 42, 255}, {255,
           255, 192, 1, 42, 255}, {255, 255, 202, 1, 14, 213}, {255, 255, 247,
           96, 1, 193}, {255, 255, 255, 232, 4, 127}, {255, 255, 255, 196, 2, 
          89}}, {{0, 20}, {6, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{6, 20},
        PlotRange->{{0, 6}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCjxcUFMgwcl8Fcx5Mq/aTlZEVYgSDvSChHn0Ih5FDj9vPreQDUOgF
H5Arx2hQt+ox3JjNjIxpxz6//YFs9BpG5p3/UcEPKUYRNKH/DxgZl6OLTWcU
PvUNQ4yRUX8TqtgVsOv0bMq/Iwl+y7TgBQlHoppw/Xi5AiNjOLpV92MYudHF
/pczOsCYRyaCPfW1iZGxACp0QZXR/+bOlUUajAwy76Bie4AWsjGDrOWvhmm9
IwkJOn7HuQijV8fI2SbU772LZBsANFYpUA==
          "], {{0, 20}, {20, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{172, 62, 53, 226, 255, 255}, {24, 1, 1, 56, 255, 255}, {
          24, 1, 1, 9, 255, 255}, {45, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255,
           255}, {188, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255, 255}, {188, 1, 
          1, 9, 255, 255}, {188, 1, 1, 4, 158, 255}, {188, 1, 1, 1, 100, 
          255}, {233, 67, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 
          98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100,
           255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 
          189, 4, 1, 100, 255}, {255, 255, 7, 1, 6, 145}, {255, 255, 7, 1, 1, 
          25}}, {{0, 20}, {6, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{6, 20},
        PlotRange->{{0, 6}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 173, 82, 2, 21, 103, 103, 143, 234, 
          255, 255}, {255, 255, 255, 92, 12, 2, 3, 205, 43, 2, 3, 52, 194, 
          255}, {255, 255, 193, 1, 22, 132, 255, 255, 214, 92, 32, 1, 2, 
          255}, {255, 255, 113, 2, 104, 255, 255, 255, 255, 255, 235, 83, 3, 
          173}, {255, 255, 72, 1, 104, 255, 255, 255, 255, 255, 255, 123, 2, 
          113}, {255, 255, 153, 2, 23, 214, 255, 255, 255, 255, 132, 2, 3, 
          235}, {255, 255, 255, 62, 2, 41, 224, 255, 173, 41, 2, 52, 235, 
          255}, {255, 255, 255, 204, 23, 2, 23, 52, 12, 2, 84, 235, 255, 
          255}, {255, 255, 255, 255, 214, 82, 2, 1, 2, 1, 104, 255, 255, 
          255}, {255, 255, 255, 255, 255, 245, 205, 2, 3, 2, 144, 255, 255, 
          255}, {255, 255, 255, 255, 255, 244, 123, 1, 2, 173, 255, 255, 255, 
          255}, {255, 255, 255, 255, 255, 163, 3, 2, 84, 255, 255, 255, 255, 
          255}, {255, 255, 255, 255, 193, 1, 2, 31, 235, 255, 255, 255, 255, 
          255}, {255, 255, 255, 234, 52, 2, 3, 215, 255, 255, 255, 255, 255, 
          255}, {255, 255, 234, 82, 2, 11, 174, 255, 255, 255, 255, 255, 255, 
          255}, {255, 255, 72, 2, 3, 93, 255, 255, 255, 255, 255, 255, 255, 
          255}, {255, 123, 2, 1, 63, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {255, 2, 3, 2, 185, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {92, 0, 2, 113, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {93, 2, 43, 235, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 111, 99, 0, 9, 61, 114, 241, 255}, {
          255, 255, 253, 137, 8, 22, 81, 120, 52, 4, 152, 255}, {255, 255, 
          167, 2, 139, 255, 255, 255, 255, 183, 207, 255}, {255, 223, 30, 139,
           253, 255, 255, 255, 255, 203, 21, 164}, {255, 158, 60, 255, 255, 
          255, 255, 255, 255, 43, 2, 195}, {194, 0, 179, 255, 255, 255, 255, 
          159, 31, 1, 1, 255}, {157, 51, 249, 255, 255, 247, 115, 70, 46, 2, 
          48, 255}, {187, 19, 228, 255, 212, 131, 139, 243, 109, 2, 100, 
          255}, {255, 153, 65, 142, 125, 250, 255, 255, 80, 2, 190, 255}, {
          255, 255, 255, 232, 255, 255, 255, 239, 20, 33, 241, 255}, {255, 
          255, 255, 255, 255, 255, 255, 137, 1, 63, 255, 255}, {255, 255, 255,
           255, 255, 255, 255, 137, 2, 146, 255, 255}, {255, 255, 255, 255, 
          255, 255, 255, 70, 27, 242, 255, 255}, {255, 255, 255, 255, 255, 
          255, 147, 5, 96, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 99, 
          10, 207, 255, 255, 255}, {255, 255, 255, 255, 255, 194, 0, 81, 255, 
          255, 255, 255}, {255, 255, 255, 255, 255, 113, 6, 167, 255, 255, 
          255, 255}, {255, 255, 255, 255, 255, 60, 127, 255, 255, 255, 255, 
          255}, {255, 255, 255, 255, 203, 7, 157, 255, 255, 255, 255, 255}, {
          255, 255, 255, 255, 119, 40, 232, 255, 255, 255, 255, 255}}, {{0, 
          20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfxj4Nb02iIHBZBuU++d6uRwTGJj+AAt8agRxOERERJiZ1gL5v6ep
gvg124FsNaYDQIF2kALz7WDVU5k+/38JEpCufwbif8wxZ/r8TR0oIL8XrOCD
F5D9+RaQUNwJFnjvDWRLfI0FEk/A/OM+IPN6/gOJuK8HDhxIMwY7J+8XSITT
jAkGVv/8/38mEwJIV4EcfM8XIVIP8dLvKx2Rq1aDBFy/w739/50bUED2HELg
gytI4DxC4P9SoIAMssAjDqDIZiSB/1lMTJKT/iAJfCpkEr+MxAcAUX7Zpg==

          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 191, 175, 175, 175, 59, 48, 175, 247,
           255, 255, 255}, {255, 255, 255, 177, 20, 1, 1, 1, 1, 1, 1, 87, 178,
           255, 255}, {255, 255, 255, 161, 56, 1, 1, 1, 1, 1, 1, 1, 9, 215, 
          255}, {255, 255, 255, 255, 243, 83, 1, 1, 1, 1, 1, 1, 1, 115, 
          255}, {255, 255, 255, 255, 255, 240, 93, 45, 16, 1, 1, 1, 1, 36, 
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 87, 1, 1, 1, 1, 36, 
          255}, {255, 255, 255, 255, 255, 255, 255, 184, 18, 1, 1, 1, 1, 54, 
          255}, {255, 255, 255, 255, 255, 255, 251, 98, 1, 1, 1, 1, 1, 212, 
          255}, {255, 255, 255, 255, 255, 251, 115, 1, 1, 1, 1, 39, 185, 243, 
          255}, {255, 255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 
          255}, {255, 255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 
          255}, {255, 255, 255, 220, 165, 5, 1, 1, 1, 1, 1, 54, 255, 255, 
          255}, {255, 255, 255, 131, 1, 1, 1, 1, 1, 1, 1, 157, 255, 255, 
          255}, {255, 255, 178, 13, 1, 1, 1, 1, 1, 15, 157, 252, 255, 255, 
          255}, {255, 181, 17, 1, 1, 1, 1, 1, 1, 34, 123, 123, 123, 140, 
          255}, {246, 98, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 255}, {193, 1, 
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20, 191}, {240, 87, 1, 1, 1, 1, 1, 
          1, 1, 1, 1, 41, 194, 194, 221}, {255, 114, 1, 1, 1, 1, 1, 1, 1, 28, 
          98, 130, 255, 255, 255}, {255, 211, 177, 92, 1, 1, 1, 1, 1, 193, 
          255, 255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/I4FGhmsg6m/KHDD3jjJTO4huYxK4AaLDGMXOAqmfEoysJ4D0K17G
SBA3gokxDyTtwcS4FUjdZ2ISfwmkH4gyqfwA0mlMTLtAhkYzMdUB6YPMTHK/
QboZmTTeAOm9jIw5IN3TGBkng+h9jEz8Wcc/f9ViZNn9//+PT0A+EKhrMjGy
lO6dZnLgmT4jDDAxMqn8//+kVIobyAIjnnqwwx+tXq3AxOS8etUzuNcEGc1/
Ifn0IQuTHbLP5zMy2uLjOzAyrUPmpzCFQlkAmHHaJA==
          "], {{0, 20}, {16, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/w8HvTnYGpTsw3pt+USYg2PL/6GYgsNBSAvGYRE4dFWBCAg7/93KB
aEUVlboVQDr4///JAgLhM74ATfjAxMR2BmH8B3MmptkI7v/HQOV3kfgZTEzh
LxHc60JMKl+RpLOYmOqQuN/tmJi7kfg5TEy8SNzLUkz8x5H4S5mYZP+j8r2Q
+c1MTMuQ+TJofHU0/lImmWsQFgAk0uwa
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHx////f6cu/I8Cnvowh///3xu2a/IbqEgfE7OoVY4oMzOT4xu4CJAH
xsfBAof5GJiY+GQz45kYFZ+BBA6IMjNpJl74/ymYmckarCQMqHo1UKUekOZf
BxLhYWbe+O3/fwewOTxNQBED7i0giSImJiZGILa/8L9mHcR8Uah9CXB33jwO
BK3MTBpv/iODrxuZmJNRffTfnikcTSSSGV2ECV3kDFzkQNFhIPljOhMjx1mY
/0Vrjh3LBLonBBFGEBeGH4eKfIKKmALZACzs8Yc=
          "], {{0, 20}, {18, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 41, 83, 255}, {255, 255, 2, 3, 255}, {255, 255,
           21, 2, 153}, {255, 255, 103, 3, 153}, {255, 255, 41, 2, 214}, {255,
           255, 2, 3, 255}, {255, 214, 1, 2, 255}, {255, 173, 2, 3, 255}, {
          255, 153, 1, 2, 255}, {255, 153, 2, 43, 255}, {255, 153, 1, 104, 
          255}, {255, 153, 2, 104, 255}, {255, 52, 1, 205, 255}, {234, 32, 22,
           225, 255}, {183, 2, 52, 255, 255}, {103, 3, 52, 255, 255}, {103, 2,
           152, 255, 255}, {22, 3, 235, 255, 255}, {0, 63, 255, 255, 255}, {2,
           144, 255, 255, 255}}, {{0, 20}, {5, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{5, 20},
        PlotRange->{{0, 5}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 236, 192, 19, 10, 135,
           233}, {255, 255, 255, 255, 255, 234, 140, 34, 2, 2, 2, 2, 67}, {
          255, 255, 255, 250, 88, 32, 2, 1, 2, 41, 6, 2, 36}, {255, 255, 208, 
          20, 2, 2, 21, 148, 239, 92, 2, 2, 196}, {255, 218, 59, 2, 35, 91, 
          243, 255, 116, 2, 2, 111, 236}, {247, 82, 2, 5, 190, 255, 255, 255, 
          78, 45, 6, 81, 255}, {131, 2, 2, 167, 255, 255, 245, 229, 41, 2, 2, 
          62, 255}, {122, 2, 2, 233, 227, 128, 14, 1, 2, 2, 2, 167, 255}, {
          122, 2, 2, 62, 27, 2, 2, 140, 58, 2, 18, 232, 255}, {170, 2, 2, 2, 
          2, 35, 208, 240, 45, 2, 168, 255, 255}, {255, 230, 144, 144, 211, 
          255, 240, 48, 0, 57, 250, 255, 255}, {255, 255, 255, 255, 255, 234, 
          59, 0, 19, 189, 255, 255, 255}, {255, 255, 255, 255, 237, 109, 2, 1,
           159, 255, 255, 255, 255}, {255, 255, 255, 254, 96, 2, 2, 148, 251, 
          255, 255, 255, 255}, {255, 255, 255, 147, 2, 19, 153, 255, 255, 255,
           255, 255, 255}, {255, 255, 224, 15, 2, 118, 255, 255, 255, 255, 
          255, 255, 255}, {255, 204, 15, 2, 28, 221, 255, 255, 255, 255, 255, 
          255, 255}, {251, 117, 2, 28, 216, 255, 255, 255, 255, 255, 255, 255,
           255}, {150, 2, 2, 205, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {228, 64, 150, 252, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwHxfyD4OsGbkdF+/6//MHBBmgkIGJkmwwSeqzPJh86fL8Sk+AkmlOj1
HkieFWNaDRN5+w5M5SFEoCCPyR9DxAhDZBaGCJo5n9nQRSoZVeHst4fzgMCE
SfnZs58g/s9OWSaIL4DAOymp8Fc5E5OAkZEsE6OckTS/pGbi+ZNMvNGn/z83
Y0p48P/O6ZsfQXb2/f//zJxJ9RHMWJD/nlkwqT2EW8TElO0uzaR+H+GM6SAr
1JAE/n+q1pKf+x3ZqQDJ/w48
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 219, 33, 2, 2, 0, 75, 148, 250, 255, 255}, {
          255, 219, 36, 3, 3, 3, 2, 3, 3, 120, 250, 255}, {255, 85, 3, 3, 28, 
          72, 71, 72, 53, 3, 118, 255}, {160, 2, 3, 28, 205, 255, 255, 255, 
          185, 3, 3, 212}, {139, 2, 3, 176, 255, 255, 255, 255, 248, 44, 3, 
          87}, {24, 0, 111, 255, 255, 255, 255, 255, 185, 2, 2, 34}, {25, 2, 
          163, 255, 255, 255, 255, 255, 185, 3, 3, 139}, {25, 2, 163, 255, 
          255, 255, 255, 255, 102, 3, 3, 139}, {120, 2, 53, 230, 255, 255, 
          246, 89, 15, 3, 3, 139}, {192, 2, 3, 19, 25, 25, 22, 3, 3, 3, 3, 
          192}, {255, 74, 2, 2, 2, 2, 0, 2, 2, 2, 2, 255}, {255, 246, 142, 49,
           49, 49, 111, 134, 3, 3, 24, 255}, {255, 255, 255, 255, 255, 255, 
          255, 177, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 255, 135, 
          3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 255, 208, 3, 3, 170,
           255}, {255, 255, 255, 255, 255, 255, 255, 93, 2, 2, 222, 255}, {
          255, 255, 255, 255, 255, 255, 255, 94, 3, 3, 118, 255}, {255, 255, 
          255, 255, 255, 255, 255, 126, 3, 3, 34, 255}, {255, 255, 255, 255, 
          255, 255, 255, 208, 3, 3, 98, 255}, {255, 255, 255, 255, 255, 255, 
          255, 250, 118, 3, 170, 255}}, {{0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 59, 23, 231, 255, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 176, 11, 1, 171, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 255, 51, 2, 1, 149, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 129, 4, 2, 71, 252, 255, 255, 
          255, 255, 255}, {255, 255, 255, 239, 20, 2, 2, 157, 255, 255, 255, 
          255, 255, 255}, {255, 255, 255, 152, 1, 1, 24, 217, 255, 255, 255, 
          255, 255, 255}, {255, 255, 227, 23, 2, 2, 144, 255, 255, 255, 255, 
          255, 255, 255}, {255, 255, 136, 2, 2, 45, 215, 255, 255, 255, 255, 
          255, 255, 255}, {255, 239, 39, 2, 2, 117, 255, 255, 255, 255, 255, 
          255, 255, 255}, {255, 157, 1, 2, 2, 236, 255, 255, 255, 255, 255, 
          255, 255, 255}, {255, 134, 0, 1, 103, 255, 255, 255, 227, 128, 46, 
          77, 121, 246}, {176, 11, 1, 19, 243, 255, 255, 242, 90, 2, 2, 2, 1, 
          133}, {119, 2, 1, 52, 255, 255, 194, 31, 2, 2, 2, 2, 1, 120}, {81, 
          2, 24, 224, 255, 181, 29, 1, 2, 2, 2, 2, 24, 186}, {119, 2, 1, 179, 
          255, 43, 2, 1, 2, 2, 2, 2, 84, 246}, {80, 1, 0, 84, 69, 1, 1, 0, 1, 
          1, 1, 122, 255, 255}, {166, 7, 1, 2, 2, 2, 2, 1, 2, 2, 51, 246, 255,
           255}, {255, 60, 1, 2, 2, 2, 2, 1, 2, 33, 243, 255, 255, 255}, {255,
           165, 116, 26, 14, 2, 2, 129, 21, 72, 208, 255, 255, 255}, {255, 
          255, 255, 232, 147, 10, 2, 84, 171, 255, 255, 255, 255, 255}}, {{0, 
          20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "6"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"digit", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/0cCe9wZJ/1/PRlJZIcrF5Pmq6NCzAlwoVeGTExZz/8fYGLShgnN0WPi
aH/wHyTWDRVayMXE0QZiHGBinQUW+baKhYm3HczMZ5KDqMpgYjJ4AWZdkWGa
D9HIwsQ0DSJbyAQRm8PFxHT/D1joljhTxFcgfZCXia33L1jobj6TyUcQw5+J
qRSi8W82E9MSsOUCTOq3wUJ/JjExub8BMn4HMDGvBwv9BAo5fgCxOpmYLCE6
XZmY7H+AWexMTLtB9CINVt5ciNB/RiaX7//PpimzMgmlw/zOyCS0IEWciYnJ
ZN1/hBgYiMR8RIRkAjNQhE/8GHJ4/58iodB9AUXkPwDBoBwJ
       "], {{0, 20}, {20, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 196, 106, 255}, {255, 144, 74, 255}, {252, 64, 74, 
       255}, {236, 2, 74, 255}, {204, 2, 74, 255}, {145, 1, 73, 255}, {237, 
       28, 74, 255}, {158, 2, 87, 255}, {146, 2, 164, 255}, {146, 2, 164, 
       255}, {145, 1, 163, 255}, {146, 2, 164, 255}, {146, 2, 164, 255}, {146,
        2, 126, 255}, {146, 2, 48, 248}, {145, 1, 0, 205}, {146, 2, 1, 237}, {
       191, 2, 64, 252}, {244, 40, 74, 255}, {255, 164, 74, 255}}, {{0, 20}, {
       4, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{4, 20},
     PlotRange->{{0, 4}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgU/4eAAxMzmZgYmJiYJn74DwP5TMzMzGCcgBAT0tCortJQYmbygYsdPAim
biGLQYEXptgrM0yxhUA7ElGFDggxMzt8QBULAboPVeRUChMz3zwUoWRxZia+
mShCeSCzNiGLvHcA+tUBWeR+jyIzk9NmZBtf6QD9rvYQWdU0Q6BQOLLIBTGg
o5jUoLwNkw4srJs8iRkEONRU1dSAmJdZkIMZKgYNTxBW1lh8YbIOXGwyCABt
BwDO0xJ3
       "], {{0, 20}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQgyT/A8HXrqqqyjxGiaqqByDuVTEmJiZGJhBQewXkbwMyVFXV1NR4mJhu
A/nPVq9e/RukMJGJ6ch/BNhvwcS0E8a5sW2JKBOT8zcw556NoTjIuLT7EEkz
iPkp36CKVSF8T5jm3urq+i9xTCzHkEz/f4uBsfn//9/PfkD5b7SYNF7872da
CuWfZGKa+v9/EpMdhPvLn4n3HIgvfAXM7wdL/9/HxJQO4q6XZlJ/BzKViYl/
/f9bBYxMfBtA4j8rmJj4VMWYGLkroeaUg0OCbRvMHX/WMdmYVe+C8gC6b9R+

       "], {{0, 20}, {16, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{16, 20},
     PlotRange->{{0, 16}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 110, 92, 255, 255, 255, 255, 230, 255, 255}, {255, 75, 
       57, 255, 255, 255, 235, 42, 211, 255}, {236, 17, 130, 255, 255, 255, 
       232, 23, 170, 255}, {141, 1, 151, 255, 255, 255, 255, 56, 170, 255}, {
       141, 1, 204, 255, 255, 255, 255, 56, 170, 255}, {141, 39, 250, 255, 
       255, 255, 255, 56, 170, 255}, {141, 86, 255, 255, 255, 255, 255, 56, 
       170, 255}, {40, 86, 255, 255, 255, 255, 255, 56, 98, 250}, {23, 13, 37,
        37, 37, 97, 118, 9, 111, 252}, {159, 95, 95, 95, 95, 70, 0, 1, 170, 
       255}, {255, 255, 255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 
       255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 255, 255, 255, 255, 
       255, 56, 97, 255}, {255, 255, 255, 255, 255, 255, 255, 56, 76, 255}, {
       255, 255, 255, 255, 255, 255, 247, 46, 76, 255}, {255, 255, 255, 255, 
       255, 255, 233, 25, 76, 255}, {255, 255, 255, 255, 255, 255, 255, 123, 
       51, 248}, {255, 255, 255, 255, 255, 255, 255, 150, 1, 236}, {255, 255, 
       255, 255, 255, 255, 255, 196, 1, 111}, {255, 255, 255, 255, 255, 255, 
       255, 249, 32, 83}}, {{0, 20}, {10, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{10, 20},
     PlotRange->{{0, 10}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
GUhCBIj/o4J/T9cVT0QRebs2mZGRwQMhsCtOT4SRMWHXxV9woS18HKIh827/
QdJ2WigGmQsWElF/iyZ0ToTRIboaReFPVUZGWXWmKchiv3199339L6/wDVnw
L9D+GxwOf9GM/L+KeR6UdRUm9MWW8wmUaaYHYv38/yWKMQEmncEoVNASqmGp
xp7/Am5lGjsjCMTvRnHIeiC48Q9JBABCvQ8W
       "], {{0, 16}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 16},
     PlotRange->{{0, 20}, {0, 16}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 255, 255, 232, 173, 54, 80, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 251, 108, 1, 19, 198, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 148, 2, 20, 198, 255, 255, 255, 
       255, 255}, {255, 255, 255, 255, 197, 18, 18, 202, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 247, 50, 2, 175, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 40, 1, 101, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 115, 8, 2, 184, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 1, 2, 125, 249, 255, 255, 255, 255, 255, 255, 
       255, 255}, {248, 103, 1, 13, 219, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {215, 2, 1, 134, 255, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {193, 1, 14, 225, 255, 255, 255, 255, 255, 255, 185, 61, 
       158, 246}, {73, 2, 68, 255, 255, 255, 255, 255, 253, 137, 5, 2, 1, 
       141}, {21, 2, 157, 255, 255, 255, 255, 206, 88, 2, 2, 2, 72, 243}, {21,
        2, 195, 255, 255, 233, 140, 9, 2, 2, 2, 2, 172, 255}, {59, 2, 37, 142,
        195, 74, 2, 1, 2, 2, 55, 175, 255, 255}, {224, 37, 0, 1, 1, 1, 1, 0, 
       59, 187, 255, 255, 255, 255}, {255, 240, 92, 2, 2, 13, 134, 216, 249, 
       255, 255, 255, 255, 255}, {255, 255, 99, 2, 27, 212, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 28, 212, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 194, 255, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQgQCwPx//+PHv//f+zYylUrVxWVrFx17D8QWFmHhcvJM7FAYDhQjRUDEwgy
QqFs+P9VLDB5a+sSiKpj4WHHQdp7gXgVUFXYfxRgBVR1HFkApIbRGkON9WOE
ilUQ+xAm9cJslYNaBjEFDsNgpiAg3E4M246Fo9gGMw3N3asgvkMGlmiugqpC
UwfxXy+y0OM1TCyrYTYCANRP8Vg=
       "], {{0, 20}, {19, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{19, 20},
     PlotRange->{{0, 19}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 252, 207, 207, 207, 226, 255, 255, 255, 189, 
       10, 68}, {255, 245, 130, 53, 1, 1, 1, 22, 174, 255, 255, 73, 1, 68}, {
       243, 68, 0, 1, 24, 125, 120, 23, 19, 220, 209, 3, 1, 83}, {95, 1, 1, 
       123, 231, 255, 255, 228, 188, 238, 43, 1, 1, 172}, {67, 1, 121, 252, 
       255, 255, 255, 255, 250, 114, 2, 1, 84, 248}, {67, 1, 177, 255, 255, 
       255, 255, 255, 183, 1, 1, 85, 247, 255}, {13, 1, 171, 255, 255, 255, 
       255, 208, 58, 1, 22, 216, 255, 255}, {67, 1, 56, 221, 255, 255, 242, 
       75, 1, 1, 204, 255, 255, 255}, {190, 54, 1, 26, 170, 247, 73, 1, 1, 
       121, 252, 255, 255, 255}, {255, 193, 38, 1, 1, 1, 1, 1, 64, 255, 255, 
       255, 255, 255}, {255, 255, 240, 148, 1, 1, 1, 1, 189, 255, 255, 255, 
       255, 255}, {255, 255, 255, 222, 1, 1, 1, 1, 20, 145, 252, 255, 255, 
       255}, {255, 255, 229, 46, 1, 2, 153, 76, 1, 1, 203, 255, 255, 255}, {
       255, 238, 117, 1, 1, 159, 255, 249, 17, 1, 38, 255, 255, 255}, {255, 
       93, 1, 1, 78, 243, 255, 255, 109, 1, 32, 255, 255, 255}, {171, 2, 1, 
       23, 246, 255, 255, 255, 109, 1, 32, 255, 255, 255}, {67, 1, 20, 198, 
       255, 255, 241, 146, 36, 1, 129, 255, 255, 255}, {67, 1, 41, 140, 140, 
       137, 29, 1, 1, 45, 246, 255, 255, 255}, {91, 1, 1, 1, 1, 1, 1, 23, 118,
        232, 255, 255, 255, 255}, {239, 60, 1, 1, 1, 3, 126, 226, 255, 255, 
       255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 210, 82, 0, 1, 0, 11, 190, 255, 255}, {
       255, 255, 255, 173, 3, 16, 123, 165, 114, 1, 58, 255, 255}, {255, 255, 
       191, 13, 16, 166, 255, 255, 166, 1, 82, 255, 255}, {255, 215, 14, 1, 
       187, 255, 255, 244, 69, 1, 114, 255, 255}, {255, 117, 1, 16, 233, 255, 
       255, 252, 45, 1, 17, 104, 194}, {238, 14, 1, 186, 255, 255, 255, 255, 
       176, 1, 1, 1, 26}, {185, 1, 35, 244, 255, 255, 255, 227, 84, 1, 1, 1, 
       97}, {185, 1, 109, 255, 255, 255, 123, 16, 1, 53, 31, 1, 123}, {185, 1,
        62, 207, 207, 87, 6, 9, 102, 248, 57, 1, 191}, {221, 10, 1, 1, 1, 1, 
       82, 208, 255, 249, 47, 5, 201}, {255, 141, 5, 1, 23, 115, 235, 255, 
       255, 211, 1, 23, 255}, {255, 255, 191, 170, 233, 255, 255, 255, 255, 
       68, 1, 105, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 250, 46, 1, 
       195, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 220, 1, 13, 221, 
       255}, {255, 255, 255, 255, 255, 255, 255, 255, 176, 1, 27, 255, 255}, {
       255, 255, 255, 255, 255, 255, 255, 255, 48, 1, 68, 255, 255}, {255, 
       255, 255, 255, 255, 255, 255, 255, 48, 1, 199, 255, 255}, {255, 255, 
       255, 255, 255, 255, 255, 224, 15, 1, 199, 255, 255}, {255, 255, 255, 
       255, 255, 255, 255, 129, 1, 24, 238, 255, 255}, {255, 255, 255, 255, 
       255, 255, 255, 188, 1, 146, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{13, 20},
     PlotRange->{{0, 13}, {0, 20}}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6627996710747347`*^9, 3.6627996873829403`*^9}},
 CellID->481840482],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "1", ",", "4", ",", "7", 
   ",", "8", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.663574442271957*^9}]
}, Open  ]],

Cell["\<\
This course will not explore these capabilities or further compare the \
Wolfram Language to other scripting languages. However it is useful to \
understand from the outset of learning a language what it is useful for and \
how it differs from other languages.\
\>", "Text",
 CellChangeTimes->{{3.662799003602046*^9, 3.662799047400137*^9}, {
  3.6627997779723454`*^9, 3.6627998045148087`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Five Things You Need to Know", "Title",
 CellChangeTimes->{{3.655538778786396*^9, 3.655538780380795*^9}, {
   3.6555391064935503`*^9, 3.655539108237183*^9}, {3.655547734410591*^9, 
   3.655547753465281*^9}, {3.659181322118554*^9, 3.659181347442875*^9}, {
   3.663574532478681*^9, 3.663574532542241*^9}, 3.6737616455099993`*^9}],

Cell[TextData[{
 "To use the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " environment there are five things you need to know:"
}], "Text",
 CellChangeTimes->{{3.655548503434332*^9, 3.655548527251725*^9}, {
  3.655549496172131*^9, 3.655549496671089*^9}}],

Cell[CellGroupData[{

Cell["Cells", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.65553878605378*^9}}],

Cell[TextData[{
 "Content in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks is arranged is ",
 StyleBox["Cells - ",
  FontSlant->"Italic"],
 "the ",
 StyleBox["cell brackets",
  FontSlant->"Italic"],
 " to the right of content are used to select cells and ",
 StyleBox["cell groups",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6555490620792723`*^9, 3.655549171994112*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
BwAAAAAAAOg96HEAAAAAAACA3oMeBwAAAAAAAOg96HEAAAAAAACA3oMeBwAA
AAAAAOg96HEAAAAAAACA3oMeBwAAAAAAAOgezz6/VNfZenBBjwMAAAAAAAD0
DvT42qJWKUl2flamJidlYmLCCZMyM5+RUvVyx6z/KRfzks1mpVB6r4tvWZF8
Liu5XM55V14qaeJVcO6t35/rQjnWpJjP1dOd72q6+4tSvpGfxfKlyx2V/qa2
LHmnbmRzBembJqTXcerHPIAIfjuWoo28DOVZKR6X2el9Xp/shMlpmc++4cS6
Q1TPSs5JUy5fDJ5putZH9Ka/vUystjwqS/V710KbU7dPXPuhmMaaeZ/Tr31J
J+LVr2lzYpObf0QmPT00NX1ISv3YICbA/PgapLoo02Ofl4GBgcQwet+hVPqv
0xQP3yubt/+g9+928mRqZLNMnjif4uYVmRhs5NPVd77QvTgt/0IGtTKZKbTQ
g879G7T7dx55p/13V5dk+rY/lPW7ntZfIGN+um/vYrovF8Y0n5HRq66qp3nd
XS9drph1H6v6b6Zy9NuNuvfBjbLQJ+aWitMHPtyTOPVjHkCECy+qdnKsRRvZ
0/Isn5Tx4Y8n98sfuUnm8u1/nz65fX/aeN7v3SS5WvK1y0XcBliR8V70t5eJ
1ZZH+fC3VBs339dtznJQjl2yH4qZB2Xon1wjc6XOjp133S419L/92pd0Il5t
PaMDNkqLF8j0tkib22d5bwN6fA1w4VUZ8fSFHwY3bpWRkWEZWh+pizse7elY
eeX4/2i89xP39FiPO/p6QyPN48fSaNje2AeqzRrw49asHarJ7M3/JtSOzLX7
rV08pTTo5vteCa6vvChDV3la/+BbbT68T0lKszYm0sp2X7vY1n8z6vv9p9dL
pk/6sF7HqV9tKNBw9PgW71tvVd97VZ6Vkw+GxlJdbbVlZFR2jo7I0GD4estx
2aZUZeYr/7bxrM/+yJubMl27PJhtgBWZHGqkf9MVNya6+vLIfu/PGvd+9HYp
dj/C7XPhZfXdjR54s+OPLzzyxUY+/LPPSraDlbj7dqm5/+3H/tSlI3rcOm2d
sVGaUT399+H2d3iTbLrpR5dlXrIToMf7nRWZ2hz07eu23yPZyLqh0vGfqjbT
DRNNNWBnUd/o9b3X435/n/ZbL2bmZWZmVhby3dNo2X03hPR4SCdGCLUlXt9c
aPfFS48pDaqXf/Xk91VbNV24wtYNJqRZamdlYW5WZmfnpdhfC6s6iH39N9GP
9kPP41RZlLlZt74ckfIaWuf2vsJCj/eiPGuLPw2tg1p/y8ORtqYqmYe+GbTt
169mnu6M7PT0/aa9LzW5dnkw2wBXsh5fbXk4eePbdD2eP7FFt1Gmf9lp+6Em
czf/UVfsx+7bpeb+tx/70zodaBPb0eOdsFFSxWnVY579AXq8vykf1uZbb0oe
d62d/nGLvr8m5WJRCoWCE4pSSflNVkqN3xSLJeNvykeDcchyUtwqJe+9znNK
KRupWkWKXlxLZdNvlmWiC996q/Q2pypT2wbkA9rcyPo7n024txF//d6rb3o4
1jfXqmUvH9w4lRP77tIz/1WNf85rBZF/6Ea1hi7vxbHk1YNSiwRWyiVVBjZ5
4edhqRyprU6ZloqN50X/FLptlWluHb9Syu/A+WZKwTdTtq8Q2jvT16taRUt/
4veSpv7XvPxOTqvex2bdv/t5X3TLqHV608XV7v52bRq/vrp5nCbuvX1uVdWl
opu3ldYDRY06k1BHvfbRnIf272rd3pri5taTUqq5Wes+oOrEp+jXQ+ffF19N
r8dbxX3V5bms5n3qY657k9dbzd32R03bqFRtrLanadxf72O65mH7Ta4Wsw2g
6fG9jTHparmk6kzrNrANmyGJel0qpntWvY9qca9lecS4GKx3HNnvzjnXvHc2
7xf1OJq/ffv+qlVf2O78dTrbYUnGvO/o6l0mOylss6bKG490dulqvhNz/xvq
u+rprqo+uHW72rq/Tk3T/iFOmvbcPm2rs9HTlE/Zn/d34nQlrG1Dj/cztWAN
1Ac+LLNNFzY59277AxkY3CjDt9wnhVpwPTvznfC6Ou958f3mDT3p/n1yISvT
/tilFkb2Puvpo/C8vXEsoLookzdfG7tn3XW3y0IxPNZaPemNw27/gWQP/zAe
341flXnvN2rONxImmu5RcfeZ/IFnP72irqVPbwq09dMqJKyXUloyNJf+uvp7
rXRcJkbieefadeMHTgRxcuwAfz26Hq7e8aiTumA9/Lqtd8vc7Hdj+TryQHz+
vrjwkAxviDzTqS879x+Ljxf480ROezg9PydjQ1eH03RXo59dmPx6aD7JDWNP
vBF+VkfSXFX1MjpPUUhM14loqiTr5FVozak/vrL9Lsm2HGBur1656TftRV13
3S0yXzCseWhS/wvP3BvPI/ebf+BIqL9VfayTx2MTd8Tqx+ZbfiRFQ3LTxrWd
+5P0ePX0T4P4afZh0WkvtpjKautuyaTYk6jaHueZ+vtW+9xGwpfqfj+idd9v
02bzern+vfet7papOz4dKrep3NuNeu3899jUZGg91MBNDzfamDbelaa91Snn
HpOR6Df0kR0yOfnNxn//3k1hu92iD2iwLLPjX47V25GdX1H/bmXbdbU8RbMB
vTanWWugf6sTWrxt2tiyttbU389kulbfq3nbZwxlv11mTnRjfqqZDRDo8Q2O
PTJ52yeNbWDM9reuL01I8Lnjfl+xNjzpXue90bqRujwSqC39RH2jG0ZGw9+y
UwfGD/4ycr+3Duya22XeqTd6u974Fuz7q7R9oRpPCs0z12R+j5ZXTvvjl2Pa
er2w58/j9cZdw+fNwSd9q8N3HkjU1w1a26W2fVeUZv2v3p9OTO8Ll63Xrs4Z
1imm7a9bpjuhfygltIk27blN2tqz0S3K58LLMhx9vxe6t1e9+6DH+5gLrwZ1
LtUesZiFL7O3hbXA4OBguP5uvUeC4l1R41nNwsj+M6KPf4eCrz9XXgx/L047
MRjZUzeV0/xg+N96s/D7OyRfS763uZ0WpC1YP2eT3hRo66e3jGxWcY77djkT
1+16W3X257F9iYOD5jgl5cX6+h75JeXLTQ8fiFybygf9Q3bf58L1ZcNQyL7f
dFd4Lqj41N+0LrekoI+5dyrNF0+puQd9r0A0XVdFvoNRbWxg/o4/bHqvXw+T
sa9XtcXH4umP1o8j55qm36//mRZpVfot6VnOu8Pf9N2idwE2cW3nfl2P+2Pe
rhYf1H4/5emLyvFIvz+4MfzslmVlfl8nnutUahmP2Dqx9lf7BhLbwPpY7DuJ
derqW5/u3LuapLGqr8Ey1ZNIHtr2AY09uNE0JNfz3pdnI46q33PLJYVtVK1W
Qz2zbRub/Z63B0rbzxS/Vg3pkKucZw5tWBd6T+fXGzezARL+FgnDD7yuPc62
vjSL2osxez1U3h+6NZizMLw3lHduPdJEYLrySKZk6DOj36o+dmO6vx487W/b
X6XvC4M2Zb3yuVOTuTs0Le3Yj34+pq/XCXXD29usxtO8MLRlU7js6uPuiQXf
1C617YtMNOt/07arOS0BNv11Msk2h9s/mPtUu/bcJm3t2egW5aP5NYiGNJq/
X0GP9zGaL65Ne5P3ISehj+MPXHOrLHj7zmvl0zLhzRXX+0SlCyJt2da7vb3q
NSke1eZQtLHSkr+e3rHZi7WaVGu1+v2zml01os3Dh57zsd3Kzg99v+4Y34ET
9fU6tcqSTI38sfY9e99abUn1FWOH3nL+XWsxj23az2af3qb57ftMdfqV6flH
Gu2FYR1N7v4bVVs3NvaVSLunje+6Y+Vzr6m+p1I8LKO+faKvw1p+XsV1+IFX
nKxwyyF83Q267wHXF9GgytNGGxka07zmdskoPwXLwRxv3QYI5gsW9L7ZHTf1
4hvST/W83a2el3/oP3ctzTV9T7nXLof2cmjfQXXpFzKiPbtSz5fvh+pDTh2u
tCKZ+7+Usl+xrVfh9a/BmHhN8k99N8hH3a5KqP/u3It670d2BOPJ1fB3tPOQ
WdvvPPBa4zuK3D/6xNuqLtjF1T5tsXVxi9q8uDuHotnkC74t+tFbnfrl640V
WdgXlNWYhX7z5w468VzVHjhhy11PB/v2qmdlRpv/9utSrA2cPiSZuftl9M4D
Tp5F69Rumc9kZGrsZpl57fzq39WqvY3ofXcOz68nofUfKg/t+4DQ3iznm8l7
PygcvjfUltjo8U6WZx3rMfIw9m2sprPVfibDtZXnla0wdjAYWywdD3zOre+S
H1OzDRCvr37fEyp/5zeNNt2+viQT9rnstjmNZ4XLu1G3w/Opow8cU2Va1vNO
radOWR5NCPWZ9f6oUR9LTjpVPdfqVmguuT7XfEQK+aMy88QJeceyv7LpC/U6
tfPQb+rp1Od31t/yqCqjtmwHP11O2+/O4deqjbhn/OvX3y0FPzm1s6HnLLTY
n2auk230s0kk9L/R/tRvV+v9qdZO+n5mbfvrZJr3D/E20bY9t0+bvY1uVz5u
kRa1PYtzznfk16G1Cnq8j9F82Nj7RKnKjN8nRdaoNFhS/kcCH5/aN204s0O1
k9oabKPfDG2u0xTvqvZd+5pJ/9ZDY+b1aAX9QmCL6b4i0p131lSPp0xvMzJa
/5Irn1R2W8jXmJaWob0HZdbvm307w12H45XLtgfi8/I531+csmPcMcWgj518
LZgDqRzV2s+oz8kLwVhPY7+b1ha67V30xRcDOzTYHxfsD4rNXSwH6YzOryq7
29fjHUyz2gegtP5y4DvH8B2oM2q8Nl6N8ZvWNfzu5ZR7WO3qlW4jmXwB6fMj
gY98c/2f9+0lJ63x/VRavLz1e/p3F/c9qLURzv3VNuLaTtpUnJy8m8s8HtQj
p8+dCc3xaXawY7uFt/M4tsDwFhkZvcu47lonbqt05rl6XYrNmf0uvh86XBaR
NjBSp6J7OVfzrjTtrW5vx9cLae2An4fWfYC2N8vwzRQfD+qJvR7vTHnW0frk
eBm1oo02NrTe5/XEa/pc1/ih8D6gWT9fV+VTLplW/txM9TXQXN5v2rAZkuMT
1NVYm3PxZVW33XkIfc7CtA5OjZ37fU/K8khmJfStRHVlxve7rvrMlVAfOxmp
+3b9lV1fqPLc9X1QKoXOghne+4KmrdqxHWoJ/uiDfYV1Pa6nSdOurXwWm+pk
e/1sEub+t2kbHmpXG7+x7a/TxMf0vUXbROv2vI202droq7IV+s1/Xpugx/uY
VenxZW2tkdmnWPHx/xTRLsH3sy50nnOD/ENfCukIF9O5EvqZX67mzGYysrDg
hUxWMo//N/V3f22UvjcltgZQ839i1uPpzjtrpsfTpjfN8922s6ata9TXQqv9
WK7NWQ3GKNfd8mRk7NDzyZTPSTbr5NnCvMxM7VFtnr5vUdmqkT5W6VjDuspw
fl+q7wP3y2TgpkelWFqUfD7vBdf30XHle0Xlt7ZmKJp/up0TtZ8WomMQHUyz
svP8Z2t+dozfkOu/zPXrVK6E8r/q+hIpFiSXyzpxycj83CMy7u9tb+nL065e
qfGJRL90ge/e9Ya6G9R/zS5y8mWunof+t7cgGScdakzcW1ep1wPTu9U6TG8d
mm1c20lb4lq3E3G9pM4N8sply+idMj13TIrl9PuBTX16J54bpiaVsuufJicL
bl0aDfb5xjRy/SyE6Hu09qWlT2aLd6Vsb03rHXXK2jiYm4f2fUCgO4zzuBfS
joV1uTw13Wi7LrKdNta43sdwzc0fff/p4NZdMpt5Q9WTWi2Fb69i4APQD+6/
W/nRanXe2dU7on2b1j947Xc7NkMSai1EUl11+phSqSyVqnZGmROmc8W6/yi/
TFyfWjn/vZ6uS10eSWj12KQ5lE7Sxqr9+xv7Usyk6q8s+0I1FuF+L5v/XaDf
IuN3bdkOIX/04XHgnH5GjbseYPIJKfjOzVrOsTYw1cn2+tkkWvhXN9oIQf/c
KHv7/jpNfEz9Q7RNtG3P7dOWnEdJrMpWQI9Dt9HWq1uvNdPW1SW1LdVYXdZ9
oprGqL8fa+OMejzNPpOBcLqaf1em77qzejxtehO5GM9vfzzZf58+p7vN9at6
IVhzPaLtGZibiPs+iwZ9fFLtH9Pmj0Nr9gzr7VWf96Fb62Phqu9NEdScmXYW
StQO0XVceO1XYHcH9kWn0hx/tt6HzBZb296V/M9lNOKTLhYM489h7OqVvn/B
7CO0ed01fRMtg7dXT+VPgv/caL9tG9d20pboH8AwtiGVk0ZfDG4YHNoukxHf
SCaMbU8Hnlt/zOIzMja8KdX3pJdFJlYWcX/VHXlXyvY2+Xs256F9HxDYWmZf
y+nb+26WZ9g/W4o5H00/tNPGxtf7mK+5FJ/6TvxZH7lJZrKt1rq6nFFjMLHy
aXF+V8vzxw31NdqutGMzmAn6AHeMuylan90yeHulbMrDhOozE/y+qTri9cvN
+th6Plr0V3Z9YS00VqGH6Hqadup1U3/0tUUZN/Rjri+3UtpzgQx1sr1+NokW
erxVG15/vn1/nSY+rb43t020bc/t05acR0msylZAj0PX0cbPQrrDTMGb7x7a
eovM5V9V9kdbetzwm6baO0mPb9wqw8PD5rBlk4zufz38m8ulx1OmNwn9PNox
b6+PavPq8+W1YM2ktz+gqq0nb6y5robWhNXLcsuwjO4ck/HJaZnU/hb4kNTW
QYTs2MBnXLx91rS6t1ZMzR857b6prEZGRmTUCcNOfPz9u8lnoTTZT6eN948c
eLOzadaf7Y1v6GvjW7XX1ciZwgMfvk6GR0ZlbGyvTM/sC/5msXYsTb0qPBLd
T5/mea31+Jak784JQ1t3hW20JD1+NGw328a1nbSF2g+nPg6t1+w541lCK5J1
91knaNGRA839MSa3Pat8bsQvkW8Lu+3z2G1N5qxbtIHGOtWld8X0eEI9ifYl
9n3AmcBPxK1d0OPeM1ZTnnW0Nma01ZpWbd50232vtNXGxtb7JFzzqZVPypTB
T3h9/2YzVp5PHA9N7X8hSY83awPbri9JBH1DS02lzXdsGNouI7H3jThlMuqE
Ydm2q7FX2rY8oqj2UO0RDKPm9qN9g2E9um1/ZdMXhvYqeXVWPc/1hafd2U69
bu2Pvia5+fvjvtqv2W3MtyimOtleP5tEO+ePN9fjafrrNPFJ873Ztuf2aUvO
oyRWZSugx6EHqO8m0Rb1Cfqhxr6kiqq77axXt9bjmkZRNnwT/7PVSkUq2tmv
q9Hj6dYNdlePKz/j2tiz6nMczVvU7GW/HLP7gjaxPt64EsyXr//qw7Gx4IK/
zllfo63taQh8bkloXWW8LQy0un/2m9q3Vh87iFMt5iWTyUq+GIwKqbX30fxp
sp9OH++fcscgOphmff+Rv6c8tKc/mrDSURkfHZWdjv0yX3gvuNexEaaic0q/
C9JkmvMOY1evWq0Z17WKab16UP9Naw+iVKVSCdbmt1q3pmytlOvbo3FtJ22h
dXGu8aX5OoiuTahVK1Jy19Qq/2UVKeQOy6SuSVp8v6a2Z/XPDdtaYweOSUk/
B9ypT8NN1oTb6fHuvUvd38J+1vuSxvpj2z5AX69u6K9+F5wl2Y4e70Q9aURT
q4st/Lnp44zuGRb2bay270XtZ4pfK2Yel8mJCZnS941Xz8rsHpu0VdVZv9HQ
6nhHkw1grcfbsBmMaPtYY34RnNzKTO+R0Z07ZcL1FaWV5cRrpvniquQzGcnm
8l4epCuPZqj9wqYxXd1ntLfmWN2vnSnmY9tf2fSF+vy16wPRbXNrJ/82aGM0
/2Lt2A5Gf/TVRZmdmpSJif2hfeOlk48p/zJptZ3RLm2rn03CbH/a6nHb/jpN
fNJ9b3btuX3awtfS2OirshXQ49AL9HOgHFs0kzBJnvfHltS3rfkNNa4v0cY/
1bjuKvS45sdDnys2tTNVzd/KlgdWPz8+nOo8su7qcTWura3/UdpzcKNs8PNa
2XDBGdX+2gfd/9pMdBB4JdCg+loJtX4ysqdH9/Uea9sMWl0fm4zdr83zDKi9
gKazUBo020+n3uONy3YyzaoP0eq7GhMx6E1lL9fzqBL4MHFsoSjpx8XqEbeq
V/oa2M2GtWa6H5PADjLV/1rgu8ndFxybSIj4mYucS9JYr6Cjncvn1VvbuLaT
NlNboMo2ZPcG8VtvePa8Nl7UbG1R/H2deK6mLw3rr0vPaP4VjkV8Wrahx7v1
LtM+5k1RvaxpZf959n2AVncN/ZXue91ej3emnngxD9ptt84mzJEXtP3O7p5a
t75at7HaGbtqP1Ps2kqwhs7Qbtn6JG0Hkw1gqw/asRnMLCf2S3oer3PrcG0x
sO8Na+DntPGUGXeMPVV5NEPzaW3wWaj3MY3x5CAtcV+bK9b9Vfq+MKLXVF2N
9wcu9rZDYJvqPmF0HwIxW0D3P2ujx7U62V4/m4TZ/rRrw+376zTxSfW9Wbbn
9mlLzqMkOmUrrGXQ4/2P3rbWz6aZOiiFUlmq7ph//qhMaOci6POzIf/a12jn
vFQWZVI77yzo31ahx912cu6ElOrOX6oyrZ0hMqydv1PO/zzQWJp/0dXocfcM
zFyhKJWmg4jd1OPavgJ9zkSf1xuI6EdtDtm3od2zL/w2UvdfWiloZ35FbG41
L+/2he55D96PMtq8ZrSZN/nNCJ35udU/Z6QmxcyDQXnpY6n6WSgRm7TZfrq5
iO3byTSb7OqQz85dT6qxkAXtLJiGLVYLbBKn71tQ57KsOPd+PcibxPV1Orb1
KnLOx/7gzJ3CM9o5H6G5YXP919cf1P2T573vpbYsc3uCc6/W3xXx2+CFCX9d
a3UxdCZiYJ/YxtU+bea2YCXwDaxsTG3fhTtHtBD4r3LnVFS9/Wx8bslYHpo/
7tU/N+xzOKPqUy12fpdva7evx7v3rqC9rQXndbh9xp37Je/0QcX8MzKqrynV
89CyDyjr/dV1u+tnINXzXDt3Ko093p3yDAid7VRvt56QgtPvuXvFy4XjMnnz
taH8WGizjTWt94lfq4V045i2D75WOSljmwZS9mHtY7YB7PRBO/XFjFbWzr2z
hUa+VYuHg/O8lG4Mn9k+7p0T5575p58R6PszSFceTVgJ2wPrb/HXg1Ul+9A3
g7rhz4WvvGjwWe1j31+l7wuTz1PPaj5iZzw709p20OaC3LUwVd/Hgq7drw/O
O3TJa+NbaXx1m+tkO/1sEub+17YNt+2v08Qn3fdm256vTo+ns9E7ZSusXdDj
a4FlmdJs42Zh5xO6X5rweZFuGNywLvyb6+/R9jwFY66p9bh+xrn+XZz9RViL
uu8eDP9bH/Ntvm7WrMcnInuLmq8xMqXNPr1GdD/4oXG9s8qvaD1+mqbUdWiw
5tq5X8+jwY0yFC2vgfBYfj7qS+Vj7v4q3bdt3NemmjMJaXXHrrvtX4fLK1a3
gvWQzXxtLiTupzPNqXcqzUnnCYTPog2tVXCD5zfHRY0jeGHD0FB8T6VpDiCG
fb2qLT4W0hxuvka/l/Ej58LvSKj/83v+LHT9qsHBcBq0tf8mP0rR+9d9NaxT
bONqe39iWxBZK5Q1+IFy474h8uzoGUGJ5aG9rxPPzejjqF59CuVDpF1o1QY2
q1Odfpdx39/Ky4k+v/TvQz3Psg9wUX4aE+6PxclAt8pTJ6tpmGZ5MZPXtYNd
G+v7g9HXC5iuhfxbe23clqH1oWtJ8/idwGwDVNK1gausLyb0s98a30I4L0Y1
PwH6PKGxrbxmt1o7nbY8EvMpwWddqA44/VHOoDVMfY59f5W2L1wJ+X8JJctp
g/13BH2yXb02+dFrjOm7/u4HImnaEo5j2v3jCXapfT+bhLn/bacNt+mvm8bH
9nuzbM/t02Zro3fQVlijoMfXCp5/iwRfmkNf3SvZkqlDqEl25jtx28yp56N7
n4iszwvW4pnWi6hzPUP+updlOjofoMT6aZkYuTYe3w9fJxNPvBY+X8ofYzW2
PcHcmO7TtnzywfB4c9NvvarGNIK0tZNeA0tJe7W1fs3da6A9RD3bPdtIP1O5
dDQ8Punl19TCa8FZ5focfPnFYNy/Hld3v1QwDmDaQzd7c2OMJr7fbTm859AL
665z/QOGx6SLT3m2QGwvmtPne2uwYv6wtXOUQnPqnUhz0rPrnJVpzaeVH7bs
2i/FUNxrktHnFvxv65YfSe74T1Vdm8y1Gp9vs16Vj8v48MeN+T+bi2uFZvU/
/9R3Y7ZtIy17JadtCFXf3fV3y6w+R+OFkfsOmecMLeNqc3+ztkCdFTcQ+CYo
LjwU9/vjho3bZeZEa42V9L7VPtf9/ue+92VD+7dVpjO/dOwwb/7D9++ox8Pg
v9ZvS8yaZBXvStneNliWmbGvBPa2034N37VfZr73OfX80Lk8Fn2AVxqycP83
Y/b8yMSUjHlnLrXai9i98gxTzj0mI6b++IMb632r2Rd0+jZWnS19fbDex3TN
xfWzvVM7k0ov/8lDzc8HWz0mGyBlG+idoxj8wba+mCkf1+Zm9W/hSHxcouKU
Y6xeuPaR0/bpn4ZNeZhQ+nnHo1Ja+kVoT7Tfz4T2Tfv3X5PkJ66d/ipNXxic
Px0/T107H1ydkd74Tdp67ZLZFx7P0n2gzE/eZvQtuNnNnzQLWLz4JNqltn1X
Aqb+N227GrXL0vbXyTTvH5Ljlb49bydtdja6/yMbW8FrR1Ktaeh/0ONrj/pZ
k8rfSlHKrXycNH4lpWLBO1+0JKl+YoHrL6dcLhv9rdQqJeUbplgsp+5TU75Z
Kk5+lFP5vFg7lP2yKqXJr5qUSyUplSup1lu2flylfpap+373mb2i22mulkva
N9P0Rstvq7Po8Sy1Ovy3af2vqW++npbmi8Uav6ikzKO24mp/vw0V59nFLjx7
1c+tBu1117+nrr3LsZOnJmV69oiywfXa1GqfsnUf4LRBjbqbl2Kf15NKqeid
V23Rv3Wpja1q+dzLttulmQ1g/ayO2AyazZOiT3HLsf5Oxz5K0VR2AL99Ttc2
J9JGf5W6L7TFol7XnHiXnD68Ykx7UHarKY9mdbIzfVEn7U/7/rp9Vtee29Fe
HnXTVuhX0OMAAACQiHYOQmzOTF9nbNgfAwAAfQTteV+CHgcAAIBklkJ+HjZs
3yWT09MysXNbaE1h670cAABweaE970fQ4wAAANCM2tIv4ntytRD2JQoAAP0K
7Xn/gR4HAACA1lQlvzAnkxPjMj7uhgmZmTsmxSvAty0AwPsL2vN+Aj0OAAAA
AAAA0HvQ4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9Bz0OAAAAAAAA
0HvQ4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9Bz0OAHFqUsznJJvN
Sal6uePSZWrLkstmJZsryJWeVBPlQt4p56wUytWm19Y+fVinq2frdS+XLzqx
a3INAAAArljQ42BD8fC9snn7D6TyPnv3+44LL8qGgQEZcMLYkXdS/WStlk/l
6Lfr6Rz44EZZ6FXkq4syNbJZJk+c79ELk1iR8cFGOV995wtNrl0BtFGnu01u
35826t7v3SS5WvI1AAAAuHJBj0NaKsf/R8NO/MQ9Pddcl/Pd70sc7bLlqqvq
eT5+rLV2Wcvlo+L+T6+XTE8ivyITGwZS52234zI51IjLprteanLtCsCyTnef
qsx85d826t5nf+StzTBdAwAAgCsZ9DikRemW6y+jHr8M735f0q4eX4Plczn0
uK93L78uRI9fPs7ITm8dwqa9LzW5BgAAAFcy6PG1Q61almKxIIVCQUot9nXW
Ks69hca9xVI6kVEpFRv3F0tSMayTLB8N5kDLyW+WkhfHQqFofI4hsl5ci066
zHFN924z1Yqfb0UnL8pSTRGnRl6Y4t9G+jpBteK8txGnklOerV5bq5S8OKYs
f+f59Txy3lGvWhdftdIuacqnnTppimen86G1Hrct85qUvW+p4HxL8S91WSZW
ocft2oFW6W9Dj1uWQRLtf5fJbVQ0nqup0+bnFdPV35qfR03uXf6FWj8/7q+f
N11Lgf5tpW6TvHY3Hj+t/ha8vOsG9TxK80058Sn2ID4AAACXCfR4/1MrHZXx
4U0NzaCFwa27ZKH4XuTe4869H4/du+66W2S+oO9VrcrUtsbfJheyMn3zH8V+
M7L3Wc/WXpGpzQOxvw9cH94rXHjmXhm6KnLPBz4sow8cCWmS6sm/b/xt+w8k
e/iHyv5UYeNXZV6lK927TZQyD8rwhnXx3zph+K6nQ7/347Ru626ZuuPTofhP
5c5bpS+ZIC2b73sl9tfc/TfG01ZbkqnbPhNPwwc3ys79x+JaqLookzdfayj/
22N1pcGyzI5/OZamkZ1fUf9url1al0/6OtmELuZDMz1uV+Y1yTzyHeP9O737
qye/b6yPEyn2kdu0A+nTb6HHbcsggfTfpU0bpbPaOh3Bycvpsc/H89JpK7Ll
Wrp7nXzPlC6Fbi1rfgvmSsnXmlI+KRMjkXJ26vFM/pws7PnzRluzt9HW1JYe
k0H379fcLvMLD4XqqZ8fRac93jIYL5eRvQcj7W1NZr3yuHrHo7EyyD/0pcZv
r9ktRf8Xp3/cuPaRm2Ryek+43XfKZ/zgL2PJS4rP8J0HrMdlAQAA+hX0eJ+z
/HzYvnfslsGI7bXgGSa1xcdiNs5gxI6ZOHLOe/CKmqNrFkb2nxHdPg8Fba9w
Zt/nQn+7anAwfO9ND6t7lf5pFn5/h+RrkurdJkrPfDsWn8GIXTekaeLEODl5
OFu8ZJW+ZII8N807Zr/3ZyptjSJdlsmI1t0QeW+jfPzHvyjD3vyfKv/BcFr8
sYUG7l7ViLYz2L6t9Hiz8rGrk0l0Nx+S9LhtmWc8/RPkZfj+9Xe9kFjPWupD
i3bALv1p9bhlGSRg913atFE+najTGtG8dJ+nP+tDt0qhlnCvk89D+riDXkbi
fu83NK5/9HYpNLmWyNlfhOpErH76+XPgzUbeP/U35jysa/9LsuC/2y/foaFw
Wh3dHYxBLcnYYFCvw7ha/d80fqPtXyk88p9j745+IxNauahxW79ebNnUJD4A
AABrF/R4P7Mi09s0u+q+Fzzbpia5RwLbqjH/sax8RLkhmL+rSf6p7wZ2TJLO
3Xq3ZIt1BSXFo9qctWZPlQ57tvQn7pZirSbVWsMQrS39JHjOR3YEc57VJZka
+WP1t52HGrorpEkcm3XswIn6esVaJXz/+LFAMyW928xZGffz4p99VubygY1X
Ov5TtWZVX1sdi9P0IcnM3S+jdx6Q85bpa1aezdYBK1vcH2vQ1q6OPHBM2Z7V
4mEZ8TXGx/7WS4NjA2s6ZOS+Q6rcQuX5sd3if87lw98OlX/e+0Hh8L0huzeN
djGXj22dTKDL+WDS47Z1OqQdnPsXvPtr5eOyU6uLmWr94ap+jh16y/l3rcXc
sk07YJv+lHrcqgySsP0u7duoTtZpV9vr+e7W34oXr4V9X4q0U+F1IqNaHpWP
P6jiun7Xs+rZ6v6bHvbK33QtiUAP1+Nw8JeN+2tnY+sIpvKN9RAL+niRu2Zj
/xEp5I/KzBMn5K1n/mvwt+t2S9Y/EM55nl7fp17z1lZo40NjsXYviJvezs3f
psXro7dKxntH6ahWNpoPOzW+df3dUvAv6ulzz0NgkhwAAK4A0ON9zIUXlc0T
2HE+NZn2bTfXfvXXAg6Y/QDpcyM7DzoaQLd1DefqKFtIm4dO8tml7CzHxo6f
F6W9x1vDrGvf4Qdej9we2Hm6zWzlL+zCy2qeyp8b0snvuyH2LD1Om+8Lx8k2
fcnY6XFd4427uk2j+NR3ZMvwiIz7Gvfsz5XNb3p2VUtfY210LfDjbCj/4uNB
fWnXn1vNuk6a6W4+mPW4bZmrtQ3uXGNEI9QWf6zl5fnQ7/Uxp0Qs2oGKdfrT
6XGrMkhMh+13adtGdbpOfz+5/l58WZXJ8P4zwTrzAfM6AbUX5RN3N8YaLp6S
ES8vVHtjupZA4ZEvNvl2zsior9Wd+putF4q21sDR4pOh9C8pH3KuTo6NjV0M
ys3PB/XNOPXdXT8UwtHq6lw5pdWXQ2Mx0W9q4Y4/j4wTuWMhfxDocT1O2ljZ
RJrvBwAAoM9Bj/cvygZ27KfpwqXY311fTa7/M9dUUfNCjn00b5wzCPz2rq/b
2IGtu27X07G71f4/kx4PrRXX5kDdOa9sVjILGVmohwXJZDOBHeatwQzZctG6
dfFVZZMa9Xgb52nVqpW6f6JcdkFmpvbIsB8fU9pieW2fvmQs58cvvBxajzq4
cauMTU5LJvdWbO6soumBob0HJZvx4+iEjBPnx/+b+vvoE2+Ibp+vN50x7bx7
teed2dfJBLqaDyY9blvmwbymaS9twx9cSSrKYZmdf3WbdqCdepBqftyiDNLS
+ru0baM6W6cX7vhDVS9M59K7cS+Vyk65ameUOWE6V6z7Scvn8/Xg+iDL+fnu
jTWovdzauJDpmhltnYGv70ME5+mpsQ0t7VffGs5LfSwyPtfdeF60PuT8sZMP
xfV75ahBq68EY0qmsYaq1if4c97qHV7d3zn5hBR8x28t15QAAACsHdDj/Yuy
k/x1rk1Q8y8JtmPcptL+bZi7rPpzQy31eML+YVNwba1KK3/WZq1ir8dXZH7q
Dhky7B1VwZS2WF7bp69ZnKz0uEPuoS+Z3+XYp8O7HlDrcVPtyR/QtUqgha+O
zbkml0MSpvKxr5PJdC8fTPXRtswrgV+AvXE/fR3L2xTtgH360/tzS1sGrdKe
/ru0baM6WacDbb/ulieb33rx1dge82Zpc+VmyV8frn0bpmvmqAXa1rxnP0in
X8erp4P1DVGtn/V17+/viK0piD6vUR+0dfyGM9JNWl35MUzwU6fGVj56u/L/
JrVFGTd8h64vtxJiHAAAriDQ4/1LyA5vYesqXznt6HGDFjLpqzR6fMvwsAwn
hKGtu+prJ7uvx1eUX2Y9DG4YkpGx8dA+1VjaYnGyT1+zeNnq8Xrcisdlavxm
s4bxbN6QDtu4NTGOw1s2yeh+d35KW9N6a3f0uH2dbPGOruRDaz3euswrmm7s
sh5vUfnt02933lmaMmiWbrvv0raN6mSdDtZXt6ybmj7eMLRdRmL5PSIjI6NO
GJZtux6tx1Wttdf8GJiuGdHOUR85+I/xv2vjA/5advUtGjR30O6Y5tob6dui
1qu79dvJ59C/QzcHfv80rZ73x+acOlKUKJr/t1j7XpPc/P3B2gk/aH7bAQAA
1jro8f5Frfv7wIdlxrBOtXL6Mdnp2HljE/vl1ReC9X5Ja4NHE9arW+vx0D7p
YB4pug4yoCqVSnBO8ar0eIpzzkKaZOtuyRRKobONC2ovZzo9bpu+ZFaa6jY1
r6Tth62US1Ioar7ASwVZmN0Xsk/dfNLrSmwPgB9LJ476mulgba9Bu/zulLK5
7faP/yCep6nrZBLdzAezHrcrc+3+HU8a6sGKzE3cJqM7x2T6SNh3Q5pzzqza
gee+a10P0unx9GWQmA7r79K2jepgndb8WMR8XLjn2k3vccpzp0y4e+Y1PT7x
Wrx83LqSz2Qkm8tLOeJL05179+tQ/FoCmh431R+lvbX6ovwh3PRwfD5b08qm
KlPQ1kVMuv7c9DPSo/morbnfrNo418egt57f5PNPS0/9+6kuyuzUpEw49Vnf
N146+ZgMD6arawAAAGsJ9Hgfo9mEpv2Qc76N49hRv9TONd5s0Hq676zGHsFV
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
    "], {{0, 164}, {996, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{683.56184375, Automatic},
  ImageSizeRaw->{996, 164},
  PlotRange->{{0, 996}, {0, 164}}]], "Input"],

Cell["\<\
When a new notebook is opened there is a flashing horizontal cursor \
indicating the cursor placement, if you type then content will be entered \
into a new cell.\
\>", "Text",
 CellChangeTimes->{{3.6555491961828957`*^9, 3.655549242004808*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt2L1Kw1AYxvGgDo5uzt6Fq6NrxQtoMRaXCq0gXopX02bJR6eOga7ZsoRC
MqUcz5OpaHPS1tbF/w/eQvKehywPgfRm8Np7PvM8b3Jpf3r997vxuP/xcGUv
HkeTl+HIf7ofvflDf3w7OLc3r+182rmwYwAAAAD8K7PZzFRV5dy3UU776XS6
0+iT45iz63OZv53voij6VceUB1zoGE4tDMMfHVOv2maTcsoDLts6tqnrPUbH
0EUdKcuyde/qmHJ0DF3m87kpiqJ17+qYcsoDLmmamizLDsoqpzzgslqtTJIk
B2WVUx5wWa/XzbtouVzuldN55ZQHXNSRuq6bviwWC5PneXPdRnud03mdo2PY
h/oTx7EJgqD5b3XbaK9zAAAAAAAAp/AFxGUi6A==
    "], {{0, 23}, {153, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{153, 23},
  PlotRange->{{0, 153}, {0, 23}}]], "Input"],

Cell[TextData[{
 "Cells have different ",
 StyleBox["styles",
  FontSlant->"Italic"],
 ". By default, new cells are ",
 StyleBox["Input Cells",
  FontSlant->"Italic"],
 " - where Wolfram Language code is written. As an example, type Hello World"
}], "Text",
 CellChangeTimes->{{3.655549276199471*^9, 3.655549330434297*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3d9PU2ccx/EOd7HL3ewP2LWt17trvdxNu7jsRq40FLMbNLqJ3Q1yxTSR
6AWyBKMJCYZlCwZDZrKwkPDDlsoPWxoKWhVQJJJRtRiLPeu+e86PntNCoRTQ
6fZ+JQfa5zl9ztPeffJ9nnM+P3r8UH2Ny+U69Yn6c+hI48GTJ4+Evv5Uvfmm
4dS3xxqCdV82fBc8Fjz5xdF9qvEzdXyvXnys/gsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA/Asi0afSPzAn5y6MlhzvjPZKulpi0tySkNDZ+5LKVtn/vtjm
PBdHH0ioKaHOi8nFnvS7nSMAAACA/5yFhYxcahs3/hdUk+mme+5KjXdYvOqo
bUpKc8OouP1h2e8ZkUsjrysPkH0mXs+QfOQeEpcnKpHVKvu3QZtfkIBPzdE/
LPsDU5LUVOP8nPjVHO223WbFbc4z1hYxzjHOO3hPSHUAAAAAdmt9rqsm0421
3bYzSo3/jgS8g/b7+r5XRWfmJZNek0zZ7JSXsMo6ehYaL5uFKvWLZFZz6tDK
9mVn7jk5yhORuN6YKm4rGlfTzLEqZTwtJ8vLb6T0ipXnaVhdUnlSXbc2JZkt
TgMAAACA7SrOdVWtvcyq8/2DKseMyC296JR+YtSr3GcXxYxFeYn1Je0alpH1
Li9uqE/FOrbOQpv1L0/NS7AoR7oPJyTy9K8Nn9friXp/qO9P6e+Iybm+tMSs
NrOeqEm4OyZud9E8Wx9b88xLf0tU3Ho9svGRxCceGZnMuJ76nsW5brN5pmcW
JFQ3Km5fVE6cvmNmSTIdAAAAgD1UyHXV7afLydXDZqYKNMQlZOWVwJUVo/d+
z4Tx3tswK7cGHkt7k9nv+XGpZJSdZLrsTMrJX8a6z7Cz9nFdaMxOzRh957tn
jNzmOjAp7Rei5phZvd4YsT/b3DoltX7zO9Ucf6Rylyb9bVH7Wvrhq7tjjlP7
sCSXVZqnT+U6uz4YINMBAAAA2FsvXq7tONPptTq3VTMLXF4x+tqtvn3BuJxr
nZbm02am0TNVsqjAtZNMV8hhJ244yai/xVwL+sNA6V4+bX7OqcH5wvZr14Ex
GX+eluMec13mH8uFD6zYbebeOM3+nhcLY2uarF/tWW6eepsxz59fGO+zqYdm
HiTTAQAAAHgLqst0ZtbRc0zcCDgrUuvR63TP1es1abfqXV+1PpDenjn5RR1d
nSrbXVkqyTPTndGiMTYq11/IdKHfnfwWbjXb6m+sS0vZZ8a8zLz3QgYvDDnr
H1V+C1r5bciu772UM57i+53kze+pMmByi19jq3meH8mZDatLxlpUvcb3vt7G
EwAAAMCHq5pMtzg8a9e86q88kd6OSTMr+cbk18QbGbNqVN5gQm4OLMlv3TPG
ukb9no8ZlZPGuqcl1JKQoH/YWkMZl1BTUiLLf4tU6F8eTdr1weZOlRVbx+37
oAyt37CnPXdqcaovOzFdsqdtsMWq4fkn5HrfnDTXDVv9+trKNeltm7TXTNY2
xo3nEQzNF/btbT3PxYG4va7zYvdDOeN36prX1W8EAAAAAHupmkwX63T2mbmD
d1Wmce5XYq6J1GSww8lD5trHqFyL6vfEzMnVusHSPuu4Nqtto18kNTBbcv8V
l29SbibKVb806dLHCj4w64PZtFGbK+z702uKvVYmLBzexvuS0mt01jrM9XP4
KVEoxlWaZ17Cnc5voD/7wd4HaK3HBAAAAIC98laeOa7lJJ1ek/QmzxvYHfM5
Cel0bvdDZc15Zlbzux+r7Ni5DXvwAAAAAGAvvZVMBwAAAAB4J8h0AAAAAPDh
GL79xMhxxQcAAAAAAAAAAAAAAAAAAAAAAAAAAP9H/wDCpfhw
    "], {{0, 21}, {885, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{885, 21},
  PlotRange->{{0, 885}, {0, 21}}]], "Input"],

Cell[TextData[{
 "This input will be interpreted as the multiplication of two symbols: ",
 StyleBox["hello",
  FontSlant->"Italic"],
 "\[Cross]",
 StyleBox["world",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.655549363520246*^9, 3.65554936724378*^9}, {
  3.655549428874465*^9, 3.6555494729534063`*^9}}],

Cell["The style of a cell can be modified in a number of ways:", "Text",
 CellChangeTimes->{{3.655549508761909*^9, 3.655549523937924*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Right-click the cell bracket and select ",
 StyleBox["Style",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.655549576860983*^9, 3.65554959295059*^9}}],

Cell["\<\
Select the cell bracket and select Format\[Rule]Style from the menubar\
\>", "Item",
 CellChangeTimes->{{3.655549576860983*^9, 3.65554962923405*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXd0G9ee5/mmZ//Ymb/2rz07e6bnbJ+ze8726eee2Z0+s9PTrWjxPUm2
gm1Zaj+bbj9bkrOCJStZwbZkWzlTgYpUpgJFBYsUcwJzAhNIggQIkEQgQNGW
s/Ts39bvFqpYAAGCoaSChO/nnK9NVLgViFJ9eG/dW3/z5tIXF//V7373uxX/
s/SfF/+8espHH/157Uv/i/Th5SUr3n17yaKFM5asXPT2oo/++5v/VpqY9m9+
97vV0vL/k/TzgwcPiPPLL78E5eeff6Yff/yRvv32W+rr66Oenh6y2+3U0dFB
VquV2tvb1bS1tQWltbU1bCwWS9i0tLSMKc3NzcgTmrH+ziN9hyJ950K/m9rv
LX+P+fvM32v+fvP3nL/v/L3n73/oNaFcK0oePnwYlL/85S9D8uuvv4bNb7/9
NuIAAAAAoyHU6/iepnjdwMAAdXd3k8PhIL/fTz/88IOYjiBPU/h7zd9v/p7z
952/9zxduRbgdwAAAJ4kQp1OW1/ndDqpt7eX7t+/L+53fP/z+XwI8lSFv9f8
/ebvOX/f+Xuvrb+L5niPw+8AAACAkaL1up9++knk+++/J6/XK+oxvvnmG8Pv
vQjyuMLfd/7e8/efrwPlmgjnd6N1PPgdAACAx0Go13FdBddfcN0F39/4GaR4
Tltupmins9msY4rR+4+MPvy95+8/Xwd8PYT63Xjq8OB3AAAAHjXKfUvxOn72
iOsuOjs7qb+/X9zn4jn1p5LIt+YtGmiqpm+//Ya+vf8tfffdt/T999J9/5tv
yX/wAH0nnacfpHv8T9I9+kfp/v7D999L5/F74XZG7z8y+vD3nr//fB0oz5hq
rxMj/Q4AAACIhuJ0Srgd6t69e6JPocfjIbfbHT0NZupNPkTOt98kxx8mivDP
PI3njagMTVy2Ouo17SLn9bnUlfI3IvwzT+N5oy2vpqueNlfvp4S7r9B/Svt7
Ef6Zp/G8aOvf37qW/LcuCrcbuHad3Lt307f992jgVAq5p88g/9e36Xvpnt6f
lUV9Bfn0/c8/Sf73nXC70e7r2OOkLmfvY9ze0xv+3vP3n68Dvh6018dwdXjj
9TvU3QEAANADbV9BDt/LuN6Cx49wuVzRk5dDjg8W03fPP0u/LZhNv70xX470
M0/jebzMiMqS0ttyl5w3FtD9a/8b/Zr5fxIVPCPCP/M0nsfLjLS8261ZNDPr
X+l/zfo7+uuS/0b/V/UEEf6Zp/E8XibS+s13b1NXVxc1NNTTN99IPnfuPHX/
h/9I3YmvU9+KlfStzUbud9+lvg8/pK7/+NfUc+0K3X/wC93/9lvhdkPLdFBF
5g0yWRwh03uoOiedMitGeN5DUnt1A819YTVV2MPPr760gVZdqBxT2Y7aKzTn
ha1U7Yi+bJMpg47v30k7d+6n8zeKqWMM24uF8Pefr4PvRR3sD0F9xOF3AAAA
YplQr+P6Ju43yGOGcZ/BYVNfJ9zt4bzn6Lc3/0S//fmV4EjTeB4vw8tGK6+n
o0a424Ov/4ao+L8QFf7n4EjTeB4vw8tGK6/KVivc7T8U/lf627qp9Le1Umqe
lcM/S9N4Hi/Dy4Yro+b4frKte5d89SV0b6Cf+i9coL7Zc8k/90Xqmj2bXMeS
yT3hn8k78znqnjmTvBXl9M1vv9I3P35PnZ3tYcq00em5c+m4qWPI9PPS9Lkp
pdHPOx/buRX0fkqF+rml6BJ9sesCNXZLn7sq6QuprPPlg9soD1l+NLFVXhTe
aLINv1xjxl6ay8ew8YDkdxvkn7+8QbYxbNPo8PefrwO+Hobzu2httMP5Hdpm
AQAAPAoUp1O8jp8f5/6CPE4s9yEYLs7DB+T6uiCv+5dABv2Ol+Flo5ZXtF3U
zaleVyD9P//v5RT8F9XvRP2dtGy08j6t2CPq5lSvq55Cf1s1VQ7/HPA7XoaX
jVTOwIYl5Nm/j3pWr6a+pUvJ9dI8cr3/AXmWLaPe//e/kuejj6hX8ryuBfPJ
seIjcu7eSY4b16mjoy1MeR109r3ZdKq0fcj0ix/Poo/PlUU9Lk7FmRX03ukI
y9pM9PGcOXS2olOdVjrc8hGijPfmqDpPc+auotKO4ZaX9l86rjk7b5MtMK32
691iveJh14vN8PefrwO+HhS/G0kdXjS/Q90dAACAR02o1/G4XnxP43cHcF/B
4eJY/Ge5HTbgceUJk+ilf/fvRPhn1e+kZXjZqOWlzZHbYRWvy5P+n/uMnLz/
rPodL8PLRitvWua/iLZXxev+78rJQVH8jpfhZcOV0XDnBtlsNrKfOE49Sz6g
PlcP9Sx8i9oWL6S+VgvZP9tIfW0Wck74Z+rcuY28TQ3U9dxMsh8/StZ2S5gy
rXTm3dl00tQ2ZPrFlbNo5dlS6edOurl3BW1JPkNJ0rQ5kqfNnruJ0kwWMS9t
+9timpLLVR1kLU+ldzdeJWtnGW3RzJuz8RJZpfJNKcvp3VOl6vbqcy7QysAy
s+d+STfLB/e1sz6btkv7KNZ/bwddvnhQbN9kHe58d5Lp6zTKr+1Qp3VVshO+
R0XDrheb4e8/Xwd8PYzV7yK1z+rldwAAAEA4+J6leB2H+wbyOBBNTU3iObNh
kzBBfrYuUF/HTjf5d78T4Z/V+jtpGV42Wnn20/+H/Hwdux3X1Slep4SnCe97
Riwbrby/vvaMeLZOtMFWTZWdrmKSHHa7KrmNVjx/Jy0brozKo3vo5yWvkbvH
Rs6tX1Lngpep69kpZF+7ipxLPyTL//hvZNu0nrpfe5Wa5z5PnR+8T92XLpDv
h++otbUlTJltlPLOLDpRbBky/fyK52nFmRL550+eo9mzZ9OB9EKqriigE9Ln
WXOTySwt21JbQdd2LabZe9KouLSCmqxd1FZ0ima9cJbauqxUnXtOXvdaFlVU
mMkmrVN8ehm9c7JEbKvNdFbM33Y+kyqqS+nagU/E59tmO3XZymmb9PPslQcp
q7iCCm4fF/NmzdlIxW1Rvg8i0vYrqqmi+A4dkI5n9pbL1BJ1ndgLf//5OuDr
Qbk2lGslVvwOAAAACIe2vo7D4/PzOBCNjY3iPZvDZTi3ezGM20Urb7RuF628
0bpdpHLur11Erszr1PHaK2R/68/U8uJscnS0k2P7V9QxaybZ0q9Sr7mWrP/9
H6j5j1OpKWkvuft9wu2GltdKpyW3O17UNmT6OXa7lGL159kHs9T5nWVnaPac
lZTfKn82nVpO75woVue3lpyU3O8MtfLnzhL6RPKx06bBbRSdWqYun3N4Ec16
9wzVd3ZSe3sndTYXiuWP5DSJcmbPeZdymgf3rSrtS8ntNlCRtO32xioqKioi
k8kkpYiKyuupU3scrYW0gt0wkE9ScoPnPyHh7z9fB3w9KNdGqN8pjqeH36Hu
DgAAgF4oXsf1Exwe94HHgGhoaBBtkcOla9EbwW2y0yYKp5v37/+9+FnbJsvL
Ri3v2uwRt8nystHKezZjwYjbZHnZcGXU3UoT75O3Ln6L2v7h/6GOF2ZRy8R/
pEbJ45ref5u621qoac4Mavnn/49an51MbVKq/uZ/p6ZD+4TbDS3TQufefp52
fV07ZPrF5c/RR5LbiWXUn+X5luIzNGv2CiqyyJ/Z1d4+rp1/kp6X3M7Cn9sK
ad2sWXS6qFmdP7h8kyh7ljQ/NOuk7fF2np/9ibodTlvpeXXbJRc2Ba3z/Dtn
qCns+e+gmvwLYpn9mfVRf1exFv7+83XA14Nybejtd2ibBQAA8CjQeh3XUfC4
DzzGl9lsFk4zXGwH9oy4LwUvG7W8vC9H3JeCl41W3gbTjhH3peBlw5VRfngX
9b2/gLrLi8hRWUbW5R+S7cvPqXPvLqqd9I/U8uE71PRP/0Ad506T5dUF1LFn
B9muXqSOrDvC7YaWaaYzktvN2p8ZMr2SdkoetPxUofRzM52R/Ev+WZ7fXHRa
8quPqKBZ/lx8YinNOpytmX9ccrvT1Myfm/NpuVTWmeJWdX6BtPzbx+Tyco8u
pFnrLpFFs31LczNZ2qVy8o+L7eQ2D86rub5d8r116rbDxlJGZ/Ydoowqa9Cx
Jkv78faxvKi/q1gLf//5OuDrga8LPf0OdXcAAAAeJYrTcbiOgsd94PG96urq
yGq1DpuOslKyvftW1DFQeBleNlp51sYSsqfNizoGCi/Dy0Yrr6jZRNMzXo06
Bgovw8tGKueXTe+T6/Ip8nh6ybJzKzUe3Ett61dT85yZ1DhnBpn/5SVqTtpD
dSuWUHuFibq+6SeHu1u4Xdj9OreRnn/+edp7PoOqGxqorjKfUr5cKKZdreR1
mihl2UxafrJAXaep8BQ9P+sjym+SP+cfX0rPzd5Kd8uqqaWN5x+j5+acoiax
fBUlSWUtT7pBlXVN6vKLk+Xyqm/ulrefmksNTU1UlH5QfE4paiZrUzYtl35+
/tOTVFRdR5X5l8Tn52atU7cdPhW0g9dbl0z51Q3U1FRHd89vF+UezamP/ruP
sfD3n68Dvh74ulCuEa3fhetjofW7sfSdxXN3AAAAxovW67iOgvsG8vhetbW1
1N7eHjUdt28Kd4s0drHwOmmZkZTFsVZfF+4Waexi4XXSMiMt73JtunC3SGMX
8zxeJtL61elXxP957GK3q4daNq6lpiXvUNvlc9T051ep8p//geq/2EStJ49S
3UuzqDX7Dtl7u8hmbxduF77cZvr6xBbhPUqem7WWzmVXB+Y30rnVM2jZyXx1
nebiM2KZvEb5c2PJZVoWWPdoXgM1Fkhu9/YpahTLt1J2iuxV7HtmaVrh8SWS
2ynltVLepT1B299xLodaA9syFw6W/fys5XTw6BZp259RXvPw57q54jZ9sfi5
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
4urGIeeF12W3M7fZw343O5prRb0qfyfs7cO7WbTvxXjXh9sBENvA7YCRxKLb
hfMOrnfp9QTXxRSXloprhpMn1skmh3Tf5XtgTnFNyD1b9rRwfhHununu6RTt
hOZ2u+oQrbZe8vvdlC/qT6wj2pfQ4wvdluoT7YM+IdfpSPvr8gadFxO7Wtng
Po/mGMP7czl1dXUJh5bTRX3+/iC/DHfMXF/W2WahaunfrLIyE+XnZsvOMwa3
G66scOdLW/5Iz1N2YdWQ7Ydz3nC/C220vhvNzaJ9L8a7PtwOgNgGbgeMJBbd
TtteyF7B9SzZ+RXqM1Lyfe8uVdfVUW1trYjZbJbSRG6ff4hPKN6j1AWNxO24
P6ZSh6P4QnFNM/V2WdS6m5Hsy4jdri3U7bLCO0tgn0d7jOHOcWi7d+gy4Y6Z
6wMr8rMD3lFOddKxlot2zmHcrtw8pFzer2hljcztRneehjsvSp1fhblVndbX
55Ui/x5F3WW2tt6tMKhPDH8Xgt0s8vdivOvD7QCIbeB2wEhi1e209157q9w/
QPEfbqfj9iptPwH2BGUcstF6j1Ketv1LqRNS1uH+rXxf574L2fmVqmdG25ex
uF2PzSKOt9HqUKf5fL3i+StTbctjcbtIx6w+k6bpB+tsH6w/C+d22flVQceR
G3iWL1pZyvq8D+HaZMdynoY7L4Ouma+2z9eJ5wGzqb2zXXifSXJd7fejS1OH
xu6n/G6jfS/Guz7cDoDYBm4HjORJcDueVpIjP2PP9RxKe2l+SSX1ejzU3WUV
fSGy8sqFf4zWe5TycovKqcflJltgfDMuT30uTtPnQeth0fZlLG432C6dQ+02
pxjjTe7DmxXkPON1O/FMY5f8TKPNJv+/1zP47Fu4Y+b+ojmin0kl9bilc2VV
xoILX2/XXGMSDtPcbiOPu4cqS+S+Ezy2X7SyeP3OllrRV6K5vZO8ff6g8sdy
nqL1Ee6xtYrfJ/ff4PGRe5wdmrHustVyeTmeZqqsJ7fXQy0Ncv+buzkl4ncb
7Xsx3vXhdgDENnA7YCSx6HamMPfe7s6WQD9B+ZkvHl/2boTn8RpG4D2h2+Dy
sjTl5Umep+1bwc+FVZfkBdXpaNeNtC+haawuVtv15H2T++iGPr/v8/aSKT9H
88xhNlm7Bvt2juUYh7rj8GMXRzpmW2ujOmYJe1tLG5+7rLB9KdjfSjTjJBeV
V1GxtG2l78hwZSl+KY8NkyGOd0j5ozxPw50XJb2SR+WK/rbB5yZ0rOnm2sGx
VzLvFpCluT7I26N9L8a7PtwOgNgFbgeMJNbcbjRh9/D5fOTz6zMOMJfH4+L6
fKMvT+99UdLv94ly9a6r0etc9d8b2X7xspHaE0db1uM4T7xPfdL3XbxzzOen
toYquR9yp2PIdvv6+iJuN9r3Yrzr6xG4HQD6A7cDRvIkux2CPM6M1z9jNXA7
APQHbgeMBG6HIPEduB0A+gO3A0YCt0OQ+A7cDgD9gdsBI4HbIUh8B24HgP7A
7YCRwO0QJL4DtwNAf+B2wEjgdggS34HbAaA/cDtgJHA7BInvwO0A0B+4HTAS
uB2CxHfgdgDoD9wOGAncDkHiO3A7APQHbgeMZDxuZ7fbEQR5wgO3A0B/4HbA
SOB2CBLfgdsBoD9wO2AkaJNFkPgO3A4A/YHbASOB2yFIfAduB4D+wO2AkcDt
ECS+A7cDQH/gdsBI4HYIEt+B2wGgP3A7YCRwOwSJ78DtANAfuB0wErgdgsR3
4HYA6A/cDhgJ3A5B4jtwOwD0B24HjARuhyDxHbgdAPoDtwNGEstu52iuplvp
6ZSefovyTXXkkvbB6PvgeNLXayeLxRIxTne/4fuIxF/gdgDoD9wOGEksut3A
gJfS9i2hiRMnBmfS65TT0mX4vTBSfL2NtHvtRiqIsI8ZW+cNPSZN9uW0GH4M
SGxnwYIFul97cDsA9AduB4wkFt3OdG6tcJ3EDclk6fYI16svvkbzpWkTJq0g
i8dn+D02XLyuKpoj7WNSflvY+f1uJ1mtVrI7nVR2fZd0jHMps66VnDabmO7y
PNn1ksijz4QJE0RWrVolrkM9yoTbAaA/cDtgJLHmdj5PI70v+dHUeV+Rsz+4
jbI544BwvhSTVXzuasmnjYsWBOq9EujjnRfVdWxVqTTv5eV0Oe0EJQTqxf60
dAdV21zU32+jXYtm0/LD2WrZAwN+urFjCc1dekS0/XLZqxOfV8veeSaL/AMD
QWWfPLldlD113k6qKbmgbofzwtKDw7Yhd5ScEm5X0e0Nmj7cMSGI4nacadOm
0dGjR8nv94+rTLgdAPoDtwNGEmtu53WUi7qvvZkNYecr9zGvzSTq8SZOWkAn
Um/QiR0rhQ/NXJVCXsnB2oU7yZ6198xlOrt/g/h5+pIU4WjXP3+RJkz6gCw+
uQ7Q11tPidL8N/dmasp+XSo7lXZtWCjWXZlSLJbVlr1h5z5KSS0gR0spnT6y
Tfhd4vpddDW9WOxHpONsV9zOMeh20Y7JaK9AjI/W7ZTMnz9f3DPGWibcDgD9
gdsBI4k1t1O8KaXQOuxyhceWCTcq7HCr00rPfyrWvd3kDFvOra3zaPLML0U9
GNe98fzzgTpAS26yvK65Wy5b8rpq16B3yS64QrjgYNmtQfvEbbLzRb1i5wiP
M9jtoh2T0V6BGJ9wbqdk5cqV1NHRMeoy4XYA6A/cDhhJrLmdrSYtqN01Ui5L
rsVtodp2T0dg3eOSc4Vzp5yD70hut0Os4/e302pp2QXbb4t559fNVNuBL29O
FOW8uXQpLVu2jJavWR6op5O8y+6Wy560YEh7qrdbrnM8HuJ84RJu/6Idk9Fe
gRifSF43ZcoU2r9/P3k8nlGXCbcDQH/gdsBIYs3t2I/ma9o/teFn4rjfgct3
j06vnDHEg5zmW8O6XfaBN1S3489cTzZh8lpq722khdJ6669UiOkpq14Q6247
cICSkpJEkpOTpVwiq9cftmxl38fjdtGOyWivQIxPOK9bKv0NwmPojLVMuB0A
+gO3A0YSa27X3++gHa9NE22ioe6k9J89X9Ep6uBEu6mm7sx8a5eYf73GPiK3
c7dmiOU/37leLFtqk5flsidMWkRNvsH+uH6HlRotdvFzNLcba5tstGMy2isQ
46N1uhdffJEyMzPHXSbcDgD9gdsBI4k1t+O0l5xVx7NLzSklc1252heC67W4
3VSpz3p23seUYaqgjKv7xOdpifuFu43E7e7dc9G+hQlBfSx4ulJ2QuIGyq9p
oJI7J+X+sC/v0/TTCON2DpNwu8VbjpCpzqKWF/4Yh5YR7ZiM9grE+LDTTZ06
lQ4ePEh9fX26lAm3A0B/4HbASGLR7Tgtxalyn1FN3lqzn5q6B+vSmgtShUsN
jjuyQ52vPhOncaeC5HeC3I5TG6gXS8oJ7pfbmHc2qOw5i7dQdaBeL1zZHK5z
PBnoUzth8pZhxy6JVMZwx4Qgy5cvp9ZWfdvn4XYA6A/cDhhJrLodh8csttls
Is7e8HUU/Awe75fLNfpnyKNv3y+V6yLXYx4r+VEeE4KEBm4HgP7A7YCRxLLb
IQjy6AO3A0B/4HbASOB2CBLfgdsBoD9wO2AkcDsEie/A7QDQH7gdMBK4HYLE
d+B2AOgP3A4YCdwOQeI7cDsA9AduB4wEbocg8R24HQD6A7cDRgK3Q5D4DtwO
AP2B2wEjiUW362q3kNXhirocjwN3YXMi/XHRLrJHGCe4MTdZjBF8t7Er+nYb
s2nV8l1k7vWR11El3jG79VK57sf3KMvWxu+Sfk+ZN+hqejrdySqUzql3xOvy
2IKXd66n01m14nPNzaO0Ydd18V4OIz0E0T9wOwD0B24HjCTW3I7fA/a55D1z
t90a0bJ7X5tGEyatIIvHJ3wk/cBmOnanVl2m6NQa8X6HK1XR38faXpAsv1dW
ciB3S6Z4z9h7h3LHfUy+3kbavXYjFbTIfqln2ZHSVHhObGNiSHZfNY3497Bt
+hRasP22+Jyx+42o79pAnszA7QDQH7gdMJJYdLvtL02lN/eO/h3o7HbsI6+M
YV1OpPfEjjdeV5V4j1hSfttjuVe7WzOE102YtIhy6jrENEd7FW1bNFv43XmT
ddS/h9B38SJPT+B2AOgP3A4YSay7XdGJTbT2eDpd3rckUPeUQF+evKM6RnHK
Jnpt9UlyOCvpQ8nrlGUSJEe7UtVJtqo0enHmUqruln3NXpdNGxctUJf78IsT
ZPX6xTyt2/k8jbRyxkvCg3ifDi95hWZIn+fNmyfy+uuv07yXV4lyuW24OO0E
/Wtg+1Omv0L7A/VjHWWpQfVnLyw9SF299WrZynFX3jlJ/6JZ/9SdKnWerSpV
2tZyuixtQynrT0t3ULUtfLv19c2J4tjutgS/s8zbXUWJ0rpvBOrilO0q7+19
9qV36VZZe9jfA9zu6Q3cDgD9gdsBI4l1t8s5+I7sHfOW0dXb6bRFciz+nJTT
IubLzvEl2dxWunXuuHCXhMQNdOHCZeE+7SXH1HZWn6dezOfn7y5lZtLZ/RtE
Wcq2tG7ndZSLurbjha2iPrAo/SKdPndOlHvhzB6x3oRJH1CTxxdoy51IM5Zs
p6y8DMkd5fqxFMndXK3ldPrINuFkiet30dX0YnJ0lapl83arrm8Vy/9x0UZK
v32V1r82TXzec7tOs1+yf+09c1nd7+lLUsgf8vxbf79DnL8/LDoc9tm4Ab+f
/H55em1guy8s+ULar4u0VFpPdsJeuF0cBW4HgP7A7YCRPAluJxzK5xOffb5G
el/jY1rn4PqzPdK6byXlqOVpfa2/z0mmvCKydPvU+ZfWzaSp83aK9YPcrrs8
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
3XJdbr+Nti+h55WPn+s+X1p9Muh5Ql5nx2vThDcrfYW57bZJ03/D77BSo8U+
5HjG6nbKNtmj1fPSO3heuE12Y+A7oDw7yL+vtdI0xem725vIHNgnjq0qLajO
0iN9d7Tj5kT7HM+B2wGgP3A7YCSx5nb8XNzEEOdS7u3sYrPWX1Cfk3t23seU
XVFNd87sCOpLobgB17kl38ylsoIbwou0fSmc5lukjGsXycM4Sjstl6t4J3vK
qTsF1GQuUceL43bV0bqd8gwZ7+fRtFyqKMqgpYHPOZr6J6XOTeljwdOi7Uu4
c3td1ENy390dZKozU7XpjtqHQemHrJyXhMQNlF/TQCV3Tsp9NF7eJ5xQD7dT
+oRwPdvZO/JxfxjoL6ucO8XVE15bTqfPHVd/f9yXgretjEW4+2q+GKvmQmCs
Gu6LoTyzOHPVBVFWtM/xHrgdAPoDtwNGEmtuJ1xK4zDa3N79r6JOievrau4k
q31f2YXO3rws6tiUPqWudlPAkyaq/VDZfd47lKv6kvZZO7Ht5HeGtPVy/4X3
hVPsF9O9jipaH+hfobQDXi5oCnhblXAQrdtxPZi2TOWZPKU/KJf3WVB5r1Na
WfBYHkr94bwNF4Pqmobbl3DhdubbhzeGtHXLY5xo6/Ia886qY4sofVWrA+ML
ao+nveSs2OaI3C5kOe6Pq/39rD50Uvx+tOeuJussvTnvOTF/05F0uqZ5dpHH
m9kc8FLlOHZdkttweyR34/1/IzBmX7TP8R64HQD6A7cDRhJrbjeaDPi95PG4
xDi8kZbh+dymG+w4Q5+1G224TS+03PGEz61rjO2Eo92XPrdTjM3MiXTu+Bzx
/rg8w/erHW/k38/QbVRnXqTj5+6qTsz7c0z6nXE7rnaMF3/gvHnRvjrmwO0A
0B+4HTCSJ9ntxhqfp1F+di3k3bJI7ERph+a24XPnjqvjVIcbexkZX+B2AOgP
3A4YSTy6HdcBOfi9V2H6HCCxEW4/LkhLofXL3qU3Fr8hZR1dy6kxfL+exsDt
ANAfuB0wknh0OwRBBqN1O4/HQ/2BNu/vvvuOfvzxR/r555/pwYMHQX6nRPvv
B4LES0YC3A4Yifb7CrdDkPhLXl4etbW1UXd3N9wOQUaZSMDtgJFov6NwOwSJ
jwwMDKgJ53Y8/f79+/TDDz+o7bJav1Oi9TwEedozGs+D2wEjgdshSPxE63Ra
t2ttbSWn00lut5v8fr/qdnz9K3V3Wr9TovU8BHlaM1rXY+B2wEjgdggSHwnn
dXxd5+bmqm7H48n4fD61PwW3yyp1d1q/U6L1PAR5WhPN9cL5HdwOGAncDkGe
/oRzOiXsdhaLhRwOB/X29lJfX1/YujuO4nhK+N8JBHkao/0bJvRvmUieB7cD
sQLcDkGe7kTyOn6ujsP3G3a7rq4uta8s190pfSoUv+NwHZ7ieYrrIcjTGO3f
MNq/YyJ5Xqjfwe2AkYzH7ex2O4IgMRzl/SNKOjs7RTo6OtRkZ2dTc3OzmM/9
KfiZO63fsQ/yvwEc9jxup1WiOB+CPG3hv2OUhKu3VjxP63hav4PbASOB2yHI
05lwXqd1OqvVKq7lrKwsamxsFD/zMlx/x+2z7HnivXNS2PX4+udwm60S9j8E
edrCzyQoUeq37wXef6jUYyuep3U8bR0e3A4YCdpkEeTpS7h2WOUexfcrvn+x
m/E1nZmZKe5BdXV16r2IU11drU7n+5TZbFb/r6ShoQFBnrrw3zqcpqYmEa7X
5ucW+N7Hf/vw3zp8nXGdXiS/g9sBI4HbIcjTl0jP12m9ju9PXCd38+ZNcT1X
VlaKujqlfgJBkODw9cT3QR4Pkh2PrymlDi/U7+B2wEjgdgjydGWkXsfP1fH9
6eLFi6KOwuj9RpAnKfzcAj/7wNdXuDG+4XbASOB2CPJ0JVxbbGg7LLsdX8s8
rt2tW7cM32cEeRLD1w/XffMzeKFjfMPtgJHA7RDk6cpwdXaK1/H9iOvs+P7D
9yej9xlBnsTwtcT9kvg643ul9v3LcDtgJONxu6mHfgubZx9DpoXL4ZEnYQT5
w5HI+WOkHB2a6WPMTG2SR5/nkPjL0V+l74uc6Uf/QjOOPJTygGYc/oWmJ/1M
0w/+SH888D39Yd+3NG1nH038tIXmHfsx+LsWKcn4/iGINq+e+VX0s+C/m0Lf
vwy3A0YCt4PbIU9RNF6ndbvphySvS/qJ/njwB8ntvqM/7BmgZ7e76Z83mGlW
8l908zl895B4ypwTv4n+4kq/WW3dHdwOGAncDm6HPEUZUmf3UK6zOxRcZ5ew
5x49u62X/umTWl29zvDjR5DHnNraWvGMg/KOPqXuDm4HjCSW3e7Vi0Tr04lW
Xnw4LrdjTztQQbT36ndwO+TpjeR0Q90u0B57SFNnt/cbStjtp6lbu+mf1laN
yuv03N9XrhFZPQ9oa8qPYefPukB0u+EvtO7EL8afWwSJEHY3vi/yc618r1Tq
7uB2wEhi0e2mS/+md3z3W/COfvcdHbrwnex1knd9UUx0+NYPI3K7P0jzOqQi
Oot74XbIE52eAenvna8p/PwIbie3xwbq7PbfF+2x03b5aMpXDvofaypG7Haj
2c8lRcP/u2MtctH+FvnnqiyvWOf9m0SXTD/T/GO/BpVx8dyA4ecdQSKloqKC
nE6n6K/E7bL8Lj6uu4PbASOJNbdLkFL7o7Rjv/xAJ279SH86RbQkjajrF97b
+7Qi6WdpGSILf+zpHbHbWf5C1FrggtshT3QUTDaiN86HzA+4Xfhn7X6U6+y4
PXZ3P03b6aUpX3bRP64uG5HbjXY/Z50h2p39G23N/I1ONfIe/4VyCr6XPsvT
152R6+Lev/irus5pBy/3Lb139IH4/GG+vN6Zc98Yft4RJFLKysrEWHc8vhDf
J5V3ksHtgJHEmttNP0n0jbRfAxZX8PSLRNdr/kJrzvxK7qAj+JlOnblPFdJK
A1ZfkNOdtxM9/GaAFh96OMTtPjcRffeXQBG//ET/f3tn/hbFlcX9P+t93x9c
I+OSSUIM6mQUJ2PEZJIIMkFcImoUjYIIiCi2LLILEkA0gKzNKgiILQiEpRGQ
pW3QmcxMZklmzlvnVt3qqu7qBQX6tp7zPN9Hu27VrdtF3apP33vuOWU/vCS2
Iwkv3Z3/C0B25//gg3Sl3IXt/qP62jnPx74TPwdrz4zD/4tuW3Kuc9beRmyt
xGhZekbbWw/wz1//Bddv/ARZY/rnkn30uQvbvSe17Yenjn1+sv8EpzL+6fe/
CentVnt7O4thjO9H7bwssR2ZP000tttwBeAhG6P7Ffof/wRRuXpfOxzXM3UC
zCKX/eUnKOv8BaJMEt/hpCv8HWJSf2bstjEV4Jm05WX/jMu43det8nd/OfFX
uNYIMPgX+XxFBS+I7UhCy8impfv3eCXo2M7I147PxzK2i5uV2M4K//dgi0e2
W4o2uxt/C2+Qt+Oc69dS+wf/hh//CfW90r7Vf9cd99vr/4Pa5/j5v/Do8T8g
74H8GxD+9gI+Mf3q978L6e1Va2srWK1WtlYW2Y7PyxLbkfnTRGM71EfFEpf9
W9PIf/8Hfvzxb/Dplf8ofCfz389jjjnZd4vkXRt+mGf8tqcSP/0Xbua/0LHd
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
qL1ntNs89XXOdq6/e3JVrjRiu+zoD1n951NSIDU1lckk1Wsy3WR+fHQfkxYj
YjsyEU1UttPOoaBmR80q26lxEzS/q9FvDJ/xE7ZBNq+Kvm7cRwbrLEk5DaaK
B5r6m8D66Hv2DvhNmDzPiHOyx5X5XO47bbcPwBHNOIE7TuN8w7dZ7iSwust6
xg3XAmp5zRvbGdX/oOQ7t2zH50q535y2jK9dzO8cg1Flra3WJ8o20cb8pL64
UqN7L+J1iFT8mPi++I6+vn+jx+9BWlppmW7r1q1QXV2t/C3EWkvh6z3oje08
9XXeN5zXz8v1y/6tRs8Tfky/3XHM/MQI9A2Ou5zf339vkvgitiMT0URlu41h
p6GyshLKy8vhZt5V+IOy3i2/c0SN7RadXAhdvR1wXVlbwNc7NGcdZp/3xaaz
8nTFvzq2rEutn8dE4H5xkVdr2WfOTEG7IuGG4ofN63bHL3yM7p2Qg1DV1glV
JcnKMZfkdbCKX9uuQ8nQ0dsFBUnhXuvUst2kwqBYf21nN1TmxHtcS4EaVsYu
8N1aVNcOFuk6cD90vu6P+xLimMi10nrobK6CCOVz3dAzl2sl+/2thoj4HOjo
alWv+zcF7co56Z243EKmW79+PVy+fJlxG98uGtv5eg/6xnbu+3p9aoSj7zW3
wW2lb+DvNRu7FvI9jOvgK+paYHx2Qe2vuL6isecxtFZmyus3tiXr1j7RfUzy
RcR2ZCKaiGxntJbi3ZAvoNjcz/bBMYE8zVpRfEYnH9upshTGtLpz5aDu+BNp
5ayMP+u53xiOPRUo/je3uuTf7T01ubAn5F31uO+d508VP29tu5+Yi+Q1poo+
jIiHfsX/G89RkexoD8YwORu9Uz/e5VSn2fS5zo+op9KkxkdB9sqtKGZzXvke
/JkGWork9YAafXr4ktoulG2iS11HzN/DpfcH1b+F/lphLFr9dT2ZeU9dd+Lu
2pCWTpGRkTA05MrzIrKdL/cg4z+ne0Z7H3nr63wtxdHwj9V9cI17vybeUFf5
JbXvpDYOsG19Dbm6/orHdCvrMeg+Ji1GxHZkIppobLcYzUvtwXeWu/gEL+fl
ctu87/ELuqsLIT3vnspUfN6Rr1n1dCzua2NtmjMst8/NwOTkpMpCixV+n7m5
xX0f5DGM/4yanH7udj+bl2vp3A7cfzHtIC2vRGU7uW2+3YOe5K6vc3877FPY
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
YNWar9V5qOXSnXMhsl+7xvecJI6I7Ugk/4jYjkxEE43tliIP5VKJr4WLuFAM
47PPGev11Mj+3e8dK/apDue1cq8j20wX8+VObfxxRZ9dGEfsS4VrfxN2lcbu
BBSxHYnkHxHbkYloorGdL3kokbFaSjPUWKjrNn0Ml0ra2H4t2ScgKPQUW4fH
j2XjgBIXmoeeueSQ/PTwJeifNubFYTOPnTqjbsNzm0uzIbeiTfWv8ZSz0pnt
ng40avJfYj6mGp2fzuRQGxxXY3UFwcELhWzMD2Pma8cyP4y4zOrE77vrUKbK
W1i/0fFYhnEfQrZFQnFphlrX7yPiods64/Fv8qQ2hfmwX06LdYnXiv7q9YVJ
cr4l5fuXtgx6rI+09CK2I5H8I2I7MhFNNLbzKQ+lWY6RtTk8DmoaqiSWed8p
ZtZqNZ83slhe1GZYtfYIDNmeqTkkj1/KgvzMOMY460O+M5wz5TEWWL5K8wOY
nH7uso+nnJVYrmU7m7VNZkCJMzOKiiAhZi87lucoUstxbWDpD1CYelAZIyyA
iYF2uJF2nrU39FiCdK4WxnM8zgK231H/Dqn+25ChMCzG4cd9tTElknKKIfdS
jJwLPTzbrR84Xr8s6Zqt35YM03N9bJ1glCYHFP9b7D+TAc1tNUocidW6mK6k
5RexHYnkHxHbkYloorEdylseymejj6C19aEmZukjtj/GJuBzuhizgJXNPWI8
8mV6g8pqSfccubpHFTbJ7xxxaQdyTXXGCZ2vHeY2yq3oYCzkLWclftayHYu3
JXFd94wjVmvZqa2yv5zdrsTjCtaNi6G/33u7z8GI9J7GOdntjGHH1HKX+p1i
5bfnn2Ttvts/qbJddpPju6IfHWdDo78FH0eNLX/IPhcd2wprN59U12605R1h
LMvPOW8bhoaaJhiZ8d/al7dRxHYkkn9EbEcmoonIdihPeSix/ElbJVxNOAfR
Bw7A3tDtcgx8Je4Uz9HNclYq7IbjaJxttkt8hvklUV8p85epdQNu2/J8ehw6
Gqrg8tmj6lzmn5IrveasxGO17FV8OpSV7YmIYPviMTxmV9P4LBRLnMdjexm1
Qxs7lW/T1W9w/ERPqXptvOV4Mjonj9+aXtPJeOBO+iH2+VbPOCvn8f3l7/UN
5JTWw/jz5V2zSzLqL8R2JJI/RGxHJqKJyHbe8lA2Zx1WfLv2wLmES5CqzD1y
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
yXS0
     "], {{0, 430}, {631, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{266.7421875, Automatic},
   ImageSizeRaw->{631, 430},
   PlotRange->{{0, 631}, {0, 430}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQd8FEee932f2+D17t0999xz73uf5117veHOYW9vvckmimyybRAO2ODF
gAXYiBxEzkkiKAsEAiEJCYRAAgUklHPOOcdRDkgE25jwf6uqw3TP9Mz0JM1I
VH0+P9B0qNQVvlX9r+rfrNhgu+of/+Ef/mHLz9A/tssdpm7evHznon9FPz5e
v+Xr1evtvpqzfqvdarvNY1f8CB0sRkpE1/8Y/V9U3QfS6oViA1SkQYUS0nQt
rxqsPgn1SkvtXilJ+SdX0n4Wv/DqG6WydL5qF1f+/ml9E9HPJdXIaJ2KuOMa
79Nxv7GSHb5uaa7rtH5SUVFRaVUtVo9YGq7V2p7WalYJUQ+U1GD1Emn2o09P
sfep+afan/cjRmVEuZdyr/GyNJ9S7qXcS7mXioqKSm9R7qXcS7nXAFmaTyn3
Uu6l3EtFRUWltyj3Uu6l3GuALM2nlHsp91LupaKiotJblHt55rUe7tVDsu4z
LfdavMxahSzNp5R79eZWyr1UVFRUVFgymJeRln5RE/fW9LKsK4N7a/Rl3j4N
zMvFVYV7WWnjXkP4VxvHYtZNjI8Fhz3OsNMlCnIru62aewuqOsHryH6Y/sE6
OH6jxOr61PikAgiPU1dSYSdkZ6fA9DfGwbKTSeTaqx4n4aMNgZBZ2WWGuGhm
x/ikQhQndcXnt0teX1DZAkfXb4KNnunkd5jfKXjlDVtwja7RGo4plJ1XBmHx
1YJjVtAe6RAug3qzq97MaWL2NSHz6uJeqTxLjE2BM+6B4OQeDN7XMyFdjzqR
cOcmLPzoMITktg1DveqF1NQccCNxDQQP/wSIL+g0e5nSlaYwv5OoTi5EdbLa
4uWfU05+pWRbGJ5UZZS/BZXNqD3aCA6X0swSb9V22poklafx+QqTlaORKpwv
YTElonThcnInJhdisppE16ZnlUJYXAlkVLbD4VW28Jv5RyG+wrA6nBoXCYs/
2gzn42vMkK4egbRdp6VvRPwZn5wPMdlNaucKyhohIiYfMso6tTMv4S7EABs2
gYNvuhHMK4yrujhWPLtrObz6+jiiXddKRPyZX9EMOxbMIOd++cZi8M9s1T1X
i3Q3Kh6cz4XApfBS/likvxPx55U/7YPE8k7Tcq9sqTNuIWLcoMAwcPEOg+sZ
LeRYdmkuTHtjPLyK9NvVwVbFvQWVjbDi7fHwK9Rmqmr15QJIj70O/4X+nrwj
klzvvtkWfvnfeyHJwDonry6oMmwTG0d1/W71dY33rEb3/GFdKPntc2ANuf5Q
KMOjNy66wscb/FGb0621XBsit42z4ZW3dqA86tJct82onLwc+PqLrXq1a3K5
9983tkLhA5B08THWwb3/a2MzrA7qgy/PNpuFe3HfdGLzcrX68gpq0zzj5DFc
VABqv96YA5ezWs1arwqrOsBt70bJ+r3pnHkYjJOuNPkcWE3icSi0ctjriLY4
S+XVK285GPVscDuL26P/WRdiknjeuOiC2i8/nplU22lrkqY8/WRfKORVdRtd
jsT53Awnt+8QlW2pY9agm167SD443qnjj6UnXCfHfjPfXZQ3R5ZNIu3Ljfwq
sJ82AX751joIL5I/dhAKtz04jM1XCs2UNl3cq/3dKK4ry1H8/nPtdcm4v4bO
rfMr1M29mAH+hOrc+hu6uVfFjxKR+jSK597tK3ju/fXCs6K52KS7gfCf7Llf
vr5QNvd6brIl9/z35tv8sahrLuTYryYcgQzEF5bhXjEDc/OMayZMIIy1ObiC
HMPnrl32gy173cE3tsZqmJcrY2smID5cfQnis6sgPoNRTEoZpBepj6/POqBn
8ZfDes1tyZdm7sV5+ofVviiO1Sh+jGJSyiGpUPN8L75n7Jbbkuc9N85C6Thi
Fu4967CI+J1eqbtNN4eyC5PhbdQ22F8p0es+udxb+hjgcXcfzD7TAQvcuniN
3SuTe00ucTj/e2MLVGEQV7SbhHtV8+ny8a9JvzFmhSuE57SQfjXkqj+8i47J
7Y/uBLsQ7g1guddc9SrIfSeJ61u2xyAso4FwcOzdWFg8bQI5flLQ55paXJpG
0jzdWYfP4NU/74CQlEq+LYxDbWF8RqNR/nLt7Ngtt0wST8+NM0dM3nJ5Gsb1
LbEpsHH5Z7LZS5+6gesiGV9sDtN6zBqUkRJB2unFp5P5Y9fZ+vrKW8sgpJB5
F5RfUQlLUfx/s8THJOEm3HC3Yu5V9vdSdQW3m5h7t2iMu4Q/W29L2/Fy9sI1
uqQf977y+hzwSGjiz538ZiF/Tsi9SfEJsGa5Hfzp7WnwOtJfZ6yAAwE5ZH7Y
edcOePuPYxmOnvAZzFm0GVzuVPPc++r0/XD6jBPhaXzvvDXnIK5EOf+blBAL
X9p+Av/5xmR4/U/TYMKSQxCUoSD9WZDHERg/4xOYv8YN9m7diPohPGczBw6G
FENUiB+8g8elb0+F8YsOwvWcNnJPAeo3rvpegAXzPyD+vf7neTBj6WHwT2km
82xrli4jZZn0NTOWojG5D6SUNcIx5P/cRXaw0TON70/9PV1gysRp8BoK462J
H8AnW334MW1+aSWc2L8PxqHzb6Bw/mbzMXyx+5rJ+0Vd7XFOUQ4s+tM82B3M
MJRqG5QYFwkfTZ/OjuEnw1dHb8saw+tTJ5T1QJphsXLyClBb+jk7DzwF1jpf
h5XTJvL3xIf6w9t/+QYCs+th33Jbfr749bfHwft7o3TWRUO5Nzs3Az6e9DFs
97wKiycwrPHq25/Bwas5fJqjw67zeYhZaNmBm3x/htu8/etW83MkE5cch7A8
hqs4vzeevAjz3x5L3hmf8vEi8z7c9W/ZOskuM3LYkOPewcZ2jTYGf3LqhrKB
Z+ws8DMoreyFNzYy1/72UBe0PXkKN5IHQPEYn38CGxzrwbnyMdRWdMOtxqfM
bU+/h+2uDbAxRjm5XNvUD29vZlj3/zooILTqe3Q34waHHsEGr0b43aFu6BTN
Qn8Pa07Is4WQw7y4PszDeWuzX23+6faFoyTPd7B1RduzGw7uzSnNh4VsXFXf
iXJ9Ljc/ePHQJvhg52XYvupTvk/MycuHfes38uXprzM2ggdrk4DLHm4Xdl2M
gPULmbL72p/mwiZP5Xt2zDu/stkBR4448Hkw8+sLfL7Fh/qhOvk1XM1tk8yv
v83fDpcTm9h2qhm8Tx7h29ZfT/gSTlwzfb+t7TnEh1+BP6Jndii0jD+G88EW
McmXJ+PImOKSiwtMQnWRpOHthbDWJR6k2tm4mxfgv/6ynrdzIc/g+CZ4a5Ez
CVuTXzgf9i1fyOfR6+j8+3sj1dpprMBzLjBGcP92byVfXdy7ET7cewWO8u8t
JpN2xxzzGVJ5isfmeJyI80NbvunT52TnppB2kDv+n+hZ7fW/oXaMe344f94V
lKeTN5R5l5OTAw5rlO90bBA3hOS0mTRf8itqYOUEzLNnSfxxPuz57D0+TO5Z
pieEkjq4/GwmX1ffWepF+ghcjv5i8w0cQfnH1dN3EK9cTW/mw4mNuA7vsX3P
axO+hu27d4i4F7OGpnqH38m89b4TX2fvXPOA36F+xjOunm8PFyE+sb+YqUfa
5XLvbbV7VblX3GaMR22sI2pj29X9Qbzrs/dr+HDfTdSO7ITX3hxHNOvrc5Bc
0akX6+riXiybzbfI8czseJgoOM5xb1ZBhui4UAfCcmH5H8erHV97uRCigl0k
78Ea4xBJwky7G4bK+TjCs0L98q1VcB21N254HCpxXkq/XX6R9IOR5P2k+vlX
0Hg2Ij1KxBzc+7HEsjpYw86vcO3eud3q70nJ+w1bD1Ke8XsNqfPK91g9JlFB
ZQMqG+PYMqZ+PisrDvU1Y1AdySe/zzqgsctfDqE2qBOy0u6idmMM4q1PYdup
i2jsgvvMMTDnULSMsPXn3j+su4Hahx7IK+8kyizr4M/bI8bF5f799afh0IEj
6DkwXDuJ5d6oq6fQc5oLvplNEHzZHxah619543PYdswbXIKLddZFQ7k3KyuB
b1snLT8JJ1H7ZEPGVwtQf9+K2v80mI7y7LUJq8HpchTsWbuYycMTcSRdmz+c
SH5/ss0VDu7fi9I1BrHEPtIOCf3+b9vtsHWfDwRFRsPu3XtJORy74jAcd4+R
PSekF/fWKSTPY+4cxLj5+Fs4dqMbfHO/I/T5uKObnH/TqQce8Bx7D45F9MNY
h0Y4X8/w7mDXIOy/MQDN3wLPv6dv90Bo+ffkZ9pdhnuvK56T3zcSumDnzXsM
Qz99BDO2tcDByEHoxN4N3of9YT3Ef0O4VyqPcJ5j9lrlkyt5Pq+8AxjOaUbP
zoZ5n7vNDT27fUzbwPLycHAvF1e7szkS58X18ZzDclLOcF1e43AazsdUw5HF
48mxT1G5cnZxJnX9l2/ZQ3hRG2kX8G98/rdzt4DTucvw/gTm+s1+BWp+7nIJ
hHXLmbI9a28MOR91Fbels+FyVouorL+/3hWcPd1Ju/PKW18gNmyFqABHcm7m
GlfwuXYTFrFhnU9tNllbyLdvf96Lxgkd6Fm2K1XVhfr4bDTmGQP/Yx/EXx9+
2YnE41B4BR/H3y3YDx5+wfD5vBnk9w7Uvijb2TByH/f8OTsXvgz8eR8pA9y7
6N8tOID8uo78YnjIAbF+8GU/1H5NIO+9tx07h9qvIv5ZcyzDzfP/du5W9Gz8
+Pn9VSw7kTEJy0HHz12B5bYLyG97v+EZS2DutSH94Q2Nad0hMdeSlRZL2jyS
9lOXUJ+zmFw751AM4bczx5yJv69N3wr7T1yGgMQ8tWOYCbl51d8v3A3H3LxR
2Z1AuNiV5Tmm/50M35wKhrOeDFO+ZnPC5PPr7psWM++IShUoTzKIjfaXzjcJ
D4/dwcxPh5Hx9GTwZFmUKydcO8KxwTfHLsO+rRtZjmBYOiORGd/iOZENR8/C
ulWL+etxWcHjsc1zmbLxwVZXcDrpxF6/mLRNoRf2M+U0nWF+l7XMmOvDE8y4
JCn8AmOrFK6PrZI87mX6+27SphKhv/GaAGXcVdvY/Uy/b3OA2BiqzpedQ2Ue
s+6v3pwDDq7+sAWNazBD/ydiu3zkt3belZ4LVuXed2zt4Y+Yb99cBqElCgg4
tok//o6Qe9NSYPN2R9h60A9uFyogt6wUlo6fQK7dFFAI2SU1cGzVp+T3u/YB
kJjfCBm4XSDtBsOcG88lQUp2PqxbMJ1c95t5jpCO0u1kZ0vO/8b2DCSiMpKN
xiafvD2eHPvEMQGVnxUMB6My4RRWAlGhgWg8z/hpsy4AUktrYC8aW5NwUH+F
/bjpewFWOzjCTpdY0jcmhfsTtsZ++GY2QioaJ66cMJ5tYxIhvaCFlC17tt2Z
hLgXj0ttOI7dEkDqcwj7PHEZu5RZB6cPOMKGPWfAI7KClBWPLSwnzzgBaYg5
i1DbaQrlo/Z47bTxqJzPhvEzPmY1H1632YDGBq2QmROH8mQMbELci6/3Qv3C
LxH34jhc2P0lSvenEFTYyvvnuOo9+P9Q33i7tE1H2LptpoX1gONaTq+xWnel
FOJQ3cN/f346kS+nKeEB8Do6NhmVefw7OtgV3TcX1eU28vvC7iXwK8SmWZXd
ssd2ciXi3px40k7/YbU/X+9jruD+fgyciKiEzCwmf+18cvi8uR4UDn7R5RAb
7k2us/PJ489FX3Ekx3bfKOb9/u8VfqJ2hZtL2XG9Qq82WDb3EiZ9Ct2DT6B7
6Cnce4j+7rlH5nTdyp+QOdYFu5SsuTrhO3L9msMN8MYRhnu7a8U2CAz3PmTn
c5tgetB9wrUXr9TxtgvEvqKJuW+hVzfMPqm8f1zQAxIGnjvG1xZqYXNNkpNH
XD/jEFiq9bq48PNMG+CTL3ruZB7nRsmwcK9UXGNuRYKj+zVw9r4Op92vgPvN
QrZef4r6XzsILWLqbUFVO4SFxZByyJc9xKm4nfBFnIrbhXdQOfyN7Wm+Pcot
L0Ht61h4bf5p1EZ3Mn6i9sE/p4Vva5a/jecQfCC3CrfhzsQ/f+QfV9Y/cYxX
hnf9PKobs+F4WBn4Hl+Nzk8Cb8S5JKySEjh7MQqiC9pN1hYWEe5dTuKhqj/Y
XyfnnTcvJPmE2zecRweW2cArf3aAOMTJySnpcCk4jaQdX5tVkkbyCLedOO2r
EfeOQdyLz+G0C5+/ahlISckA3+B0nrOyS9JJnea49sLuz0V2Drgt4LiXey/+
W9TvpfPvjWrI3AtmN3wMcy+e/wkrZd4/5JQy7zFMZYehxr2I0/A7B8wvGfmV
cHTLap7DdaVVmC8+u5cTJrtaqJx7dVo1k2dHPGdqT5hRaeesegznz4q3mXlW
7hqcfsyc+BqSV4J5WHw++W48eARlGPkuU3MdPZWA2IFlSM/kevDarBwDnbGb
SexEuHc2wvyQquPOa2fxXIzzC5czjpmxzu1Zw7Mj104tc07lz3O24ngsgccZ
b7PjIa5ckfnx+WdIXgQc/1pUjuRJN/eK+3v1+T9h3Jk2lrk35spJcs/uG6Ui
7sWMeo7Mcy4Ev/Q2nls92GNXclq1cK9mGwhV7p215yYcsmPscr86fQ1WTMUs
Oxmcgm7BtNfHIu5dgLgXtYfVPZCenAIHdjvBp0u+gmnzPuZtgDH3Cv20QXWS
4yOee1kexceC8RjudTyGPQLxxZWonRnPs/FfbT4k4tqxd9eFsG0cOo9YErN0
PuLTtahtwMccgkvE4cw4gtr3LnIsJPA6bNy4F+a8vwymznifZ2fchgkZdzNr
X6nKvdw8HS6ProLymETsn2pJecJ1z/2UGyxbuRFmoHCwvQN55hOPoPR2mJR7
VyPufW3CMli+dg+r7bB0rTPcRn2gNu49tmohycuJtithzqKvYO7SleQ37su8
M5pMyr24/P524THw8IsEd58w8MA6HwkRqLxipn3tjSngldjMl9Xc0gKwReV/
nAr3XmG59xxiU8y9GWbgXs5vMj/BsqlwfjATtSVcnmYXZcOCN8aSfHtzxpew
Zu8FCEqqE/SNY+Cv7y0n+Ys1e/4H5NhavwL0bBi/VedohH2gPm2wXtz77Xdw
I+8RRBY/RML/98GvNzaBT8MzhJ/3ebsGrP8+00fsEUJCGwn3YgqOuCWeg/Vp
Qvd1dvG/mesYVla3r2iCf9nQDLsiB1Ff8C2Utj6G3kfPiM0EtmlQvdaU3BuP
xrnCuShd/dnf3ltB7Juw5sz/kJ9TGw7ulYqrG+5PJXhOWK+5OppXUQ1eLu7w
95XrSdkbO3EqaucWEE7luPeDE3Gieo258JU/7yVtlJSfR9G4mDsv5F6mrE8C
j8RGyfYi9uZ5Ps4TF22Ena63Ia7UdO0gJ4b/vwDHy7fBzecmq+vgG11BzidF
+ZE47LpRRrh2Ivp79qFo/v6wa8Gob9gNC1F+TZ0xn1yriXtf0cK9+Peta9dh
E+pnbFHZmYb6GeG7adVrhXWe61+m7IlQ4c/PGLvR3Da1+0kfZUL7Y6HOOayQ
ZJd3V5zXO63HVzFr5GxsvyJ1at7Sr/j5ovMZzZJ2e6rHlO/JJpP7Sd20/YSZ
J2VZ+NTaz3h/P/7GCTyCs0yeL1jcHNhynwy4fHAleT+M+ZZb9xqQVaK2HlKV
e9XHT5/x54+hMcFrE4+I2pW7pC9k8pdppyaLuJgbF+D84sYA/4P60fTkUDJv
fPycM/k/pKQJDnxoo6fdsXAtmfb53t8tOIj6+1vg4h2KFALuFyNg77plKnHn
2thVRHPmLyDca+9XJMG9qOygfMGsx3Fr7DUPMue7B7WR+HcpCl9dveqqZaTK
vZMc7kBsxAWR/cGvpp2GZNaugZvvjb19Xnn+7bmEe1/VwL2T0FhMjXsFPBqD
0kDe3aDnnFJWh3iOYdhfT/wMFn2xgWgp4rov7bbDRs8kfmyPWTJNhXs3XSkU
hcNd47zZlmfpN20+gmnzP9TIvdwYTI17WV4hdTW1Ra1s5BSxdnms/vbeFzCW
tc/h4mGq9Xg4zXh8MEaQt0JhtvqjID+8UNn5JSo7OA67P3uPtN0rtp+AdQ6O
RFv2OsOWfT4QXdJhYJw0c+/YHUo7XCFnckx7IbWVP1ZQUQVfvG057n1VwL1v
C8ZAxWyeviPI07zSSnA75Uxsxrmy9aVHKl/25n99hM/fdQ5nYDOSd0wN8UeK
b0mYqL5sRvVHn70DTWHnIMW9bzn1Mqwb0azk3gjxXgv+iHsftyk5leNePH+r
yr14Pjd9kLWVaH8EN/OGIF9hAu6VkUdZ2ajuorydczBG7VxhZQckpVdBeinq
j665kDH4+2uOwPrtjozQc9uCdD66hpx/9XXUX6E2sJi0cXh+5zB5T2XIfudq
YssBbmdm7VXOfeHyllvejZi2Bpaj+jGGnUsQ1mtSJnHfx84bTFy0CVajeH/5
+QLSzvlntfJl+NPTyaL66ybwR9VPJpzP+GO4fOP2A/vHlPXJ4J3UrLFtSEpI
gJ3b98CkCRP4Ntc7qdFkbaEwHzI0tLE4X5bgfWJQuxIV4kri7JHI2MhcOLCa
72+Wb0Rt4rrVfF/Ct7NsfnNp18QrPvtXk/LzmwmfwQrk13p75jdXp1XLCy6X
XJ3PykwgZXTWnruiMnF21+fMXGlOm9r9BRWIDccj1tl8yzTlTxjudsTbby4D
J99wcL8QSuQfXsqf1yetexa/R+rNym0n+Hq1dY8zbN3rAzHFHZLpUD3G5c+v
x38JG3Y7ifzZdjKKvy84IBC+Xm4H/4XZBMdvoQdkmqp+8nFrhs1zJsAfljnB
yqnof/sQcjw7B/EwnjM87EbiKmzLhfmh2o7w59lytHvxBDXu5XiRY0dVDuFY
lxsnEJuYGSfgnPtO4m9yaT6ZG3fwiyCcwtkdy1atdvZV7++V9wrX5HHpeB/1
j+sdnBjtQPyBdD6mVpJ7fz3xiCT37kTcK8286uxbUquUKvfabAlH+dcIK8Yr
7XPtLuRDVkGyyM7BC9UJZj+yHWQ/suwSxHysTa8q9742zxHSKrokeVT1WHJZ
IzigsQj+/fsVfny7FRwYDI7uV8Avtkpv7k0uq+bnkLn2PgY9B03cy9lSabNz
+OAQ0yclR13h7WouREepcbGL/Wc805uFewVz6XK5l/Rhby2D0FIFf31uVimE
xlcZGS/d3CvU3RseZIy3yiePP5aeEIbyU2nfeyfYldj3YjsH/Nt980cqe42Z
w763S3LuNUuQp1l5pRB8K4fvZ7NRm4JtcX5t6wG3QjzYslguel63YwogrUza
b+Hcj9nsHLQwpXsNtlf4FqZsVXLv0shHvA2CKbgX2whjP+IjlWHMucWEIeJe
M9g5cO+LOfs34Tlun4fdN8pRmeTa53L+PG4HwtGzSy9Tn6cxx3wv1+7guHL2
eRz7Rl1jytbMvXcluTczK4GU0U/d0vmyF+a1S417f7/8koAJawgrc+2pNPfa
SnJv7M0LJD5fnc1Rtj1pCWBntwfco6shKSkHrsdV8ufiQv3I9Wv9CoeVe7F8
Ed/idm8ZXoM0/TT/rhDPs7zy533KPCxQ1nMp7iXPP0dZhjhGSWHXg3DvuUmd
LhDXdby3l3BvNWFbwK1n/N3yi7zf+F3/DtQfcgwkNd9ryv0mhNK2rwcJV0da
hXHl5qyF79Xz8N628VXidAjsHFSP8fmzOlAUl/i4XAhPayB2o7cjMiAmv4M/
h+eZVe2xTSW/45v4OS7u3QyOww7WdpW0NTnS7wWk53tV8guPdQTrJ4PO7OTZ
kWunhO8js7LusmteGfti7hrhOli8/g6vx9c0d6dRUt9R08S9/Dp25f1CZhe3
scp7w2MKURvbLW3ngMrOjUKlnYMfabPngB/KP23cK7Jv0Ma97Hq2YLedzDq2
N1fB7RIFWd8m5N5gz108F/914oe8jYOQezk2ZjQZdoWUKPcx08C9pF1l23as
1yZ8KZhPGwMOwcW8nQNjO9Apg3uV5/E4fzxr48Bxrz/LvWsmKG1SfjPfkW/H
OO7Fz+/kKuWehngvB/79DxpXxWbG8OuV8Bppfq6X5V5T7vGpq71TZSthncKs
TuI0fSucR+x26Zx+9v9aubdWvR78du5uOO4eAMec/YiOnjgPHrdKIa+8lLU7
mgybPG+D35VAflzB5bdq+3DlFNPWfHX0CoQk1ZqlndfGvdwxzkbpd587QVhq
CZxn11Aw75iY90043tu9o+DWnVh+Twj8Xkoj93Lt1ppT4BtRKNsmzRTc+/sz
/cSm4XHfIGImBawPucesc3vQT+wgTMG9v97VCX04jO4BWHCqHdaHDjJhsPO9
eD44B5v7PhiCL88qSLim4l5Sltj3Srg/OegbBzfD4/n1JFz91PXshmsfM7ze
m4nrQtjlFQWh0Zlknxh8DNvlcfsJCNdU4d94bI7boN/O3QnewYng7uzE+4Pj
jMsev0bB/hz4h90F+yXM2qjlHqka0yQMR5gH3Np2fP9al9vgf+06LCLzusya
Gm4PWDvnCLiLGHg/+75Tl72J/nWX4YSdp/yU7cyZC3DcO56vR9xeGMK5DcyV
BxZPYPL5XDj4B17n9xHg1g+R98XsXlpcvX93yXHwD0+BA9y+Cvj9ZblCq19S
7ZdqW+DDrpueuc6bPBtunw5uPZLq8x4O7pUq27ryTfV+XX0Ol45X/7wGnC7f
hfjCTsljyvy5ACGxyvI0B+UP7k8WsvXb5VYe3AwLJesCcX0xdM9cbeLShHle
yKfcM8a2tJmqdUgm9yZH+bPt0gbwuJECrkf2iWxkcTvF1LvJsBHXO5T/3Bo/
z8QGpi1g19txY3p87LrnfsYfiX1tNErtG2zS7KtrPwdh3JVt7B3UxsahNpax
C/ZMbOb9+Z/NTJn2dlhB5nZ/jfLCNTAWTqO8eI0w2hl+nY808wrsfGu1c+/M
HQz35pVUwvkLym9OZOWkwMQ3lN+tyCuvhC2fL+C59h3bTTCDXde2/UoRc09W
BtjN+4DhXCSHK6WCfczUufdVsvaLOXYV1QturRq3T9lGz3jReynueiX3jtFo
35sSFwnT3x7L+7d04yEy70HSk9VK7rkddEG5f8wMZvy+jl0zyb1zxO08V9d4
/p23GwJSmP1HLjsf5o/j+rBl/06eo00+J6SlvePmppVt0Gei9ya3/Dz4PoBL
w9UM/doGNe6tVQrXj4IqFMfpKP/eVLcR4+KdnhzL1ld2Hn2rK+EMbnx6h8wt
LeTbhyx0Pde+mmoveb7d2f05n0eq+UfCZt8/4z4bt/unt6wWpWni0lN8+4q/
w8Stxea44+CVHMlnwwmXrd3s/pj6fAtBLvcW6rAhWHJzEISfthjsHYTZO5m5
WW6/B1Xu9ZHBvcJwV0Xd5/cww/O8nneGUJhP+Os3xTxkzz9DxxpMyr1Y4aiO
v6tSFsk+ZTnKsq/t2WF2FpZH1XplSt0JVY4DRfVUsNcR9y5TGP7Vs078/jS4
b/lq3WoR9+L0L9vvyveJWJ/sus7zoVSahOGo1sns7AxYNu89DWVdfA73y3Yn
o02eV9yaHzWh/l3JiMxcnCqn4DVAojZohztpg4Tcy9ncqtZ7vK/CctQPcvml
zS+p9ku1LSDfVlFpV/B3Ijh+Un3e5rTvFbaHUud1pVXfPueqxxG+3Nqzfqge
k8qfj7cF8mFEqdTvV99eBq6R+r0/kys8//zJG+NE6+iw8P5lOJ3vH4oXXU/y
w0a6DmFxax65tAjrMa43uzwvkbRx+6ThduoLUTu1GE7cUPYp3P5qZP0a2y8p
90HUY09kTd8fVvlWmrayyM3x7hDEnWljmTVw+JusB6/guWslP0/ZE8nn2ytv
LoTFixYw+5ghf36Pys6tvHaebbVyb22fRu7VqRoVscdzSlsgI79F8h5Z3zJW
9VcgvOduan4tJGY3Qi4qV9LX6bP2Cj33IhTfonad7810lYXcoiZIyq6FpPxm
tXOF5R2Qic5b+97kuF6kFzRBelG7wX5o4159lFmM4lHYovd9ZpEe6S8oa9aa
h5n4XIEe75O0SnoPJ31sAnQJfzPtzT2t8OZu0/mpKry27c3drfDrrabxT998
xH0n922DJC3fXTXtszNMuI4msd+jic9Wb2s03se1QWXiNoifXwxm5n+Mrf9C
4TYR+yf1niIXtbv4nDW3iTi/0gvl5QXX/mtKjz5+SQm3K5koz1SfnzVKn7Sa
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
zwZxb/GDJxB8tRcWhYvLpqH1Bu/jiffzxPt6qto6CPd1oNxLRWV90pd7sU2T
qblXta35IASg8zGIHYrrxRDle9P9mbitU39ntZHdq6FYsGcZmeMVcC++/2qj
2Pumuns8J1uCey3dt5m+r3xx0ipHGai8fXRJxr69Ura92MbBcYBw7ztHOhD3
NsAfN6SZvUxpmrf9Ok757uVrxCJVD5hx6p3cJ3A2/IH4Pn6u7RnkFT4En0zG
zggeDMAC1ycWfy5UmsVzrquELMS/7oWMrYNm9xRxsWb7GqkyLafeqHI/3scT
7+eJ93TguBfbOuiy8bV0f09FRWUe7jWVne9S/+ewLeQ52Pur94+a/GFsD7+D
Qx4PdIY5wfM5fI5YZIGnfPsGOXGg3PvipdeofNHGvdi2l8z3DsC7x3oQ97bD
X/fVwx82aP9OuCniqol7VY+fxXsIPh3kOVZ4/r2rDI2k3+ng75/NztvFhvWa
JJ6WnoccjVJl3vGsrIF9sRjbBlTGPO7BVBfl37ru08W9GvNDJe14H0+8nyfe
11PVxpdyLxWVdUsf7sXvdDjujYmJMSn36tNvS10/+fxzyFAw/elAZadGf0wZ
F8q8+j+n0Z5mvfNG45o2IfcOwpgT/Yh7u+Gdwwr4y746+MN67d8JN0Uc5XKv
byPDvVL2vdw6uYH+J9CM905Bau1njlWkdhgUL6n37pR7TV0+ZXCvBdgX27jt
iXkKzkmsbUPqEDjyfz+AEzFPtL5H0FSmtdUbLh/GC4T38cT7GuH9jfA+R8L9
zCj3UlFZt8zBvcPBgKr3TUHcW4j61NySIWLvK/c+U/M35V55+WPpuFmDtHMv
t5fDA2nuXZc8Irh3Dcu9zS2Pyf4VeUTM/ikXQwb1yCvNrEvZ1xxlUyb3mpB9
dfkx2ROgXtX+TdLU4QHs9pTeY89Q7h2vwr14PyNN3KttTwdL9/dUVFSm5V5L
cp9cv4aDwSnzas8bS8fJqiRnDzPCvX3w7tEuhnv31loV95K9sh8PSdo52PI2
DV0iP5YEPOP3PdNdhjTwlhW9dx9tUs1zOdyr79hD37EMY1f+HRzyfMDv4YBt
zKcJ9naY7Ml8p7MyqVOvMq2tzqjO9XLci/c1wuu8hXs66OJe/L02Kioqy6q4
uJhXUVERUWFhIeTn55NvMWZnZ0NmZiakpaWRNaz4/U5ERARcvHhxRPKeOeM3
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
3LKCvlXj9fqwnK5nKiMvzMu98p+J7rlAbg8nHdeaiVGMevY64mJp9jMXN2p8
VlYQbznx11mP9Cg/pmZfyr3UUTdynTHcW9uoUFcDVpsOKZSS8qNRIb5Gq1g/
G1Uk+36Z/qvGXSW+dZrSoRovkbSk3xiZLO1mEptfwyWpPNJ6T4NmidOh47nK
yAv8LUJO1XWtiG1bCN9WVDdBWVUDlJTXQmFpFeQVVUB2XjGkZ+ZDXGIaXAkK
Mel4Tx7zPtQ6PjDnvJw5uNfSzDcs3GjFzCsrDTLLlF4crZco91JH3WhzFuVe
U/CbJFuamQe1MJR+7CsjD0YL66poOLlX9bnIukcW+1qYe/VhBEO4l+cJde7V
d37fqrjXSD+tRbLzT/icrSDeeqVFW5k1Rd7IEuVe6qgbTc44OweJsbBcm0M9
22vd/amBNgOGcILgfnntrpntG4zgHUvJWueeRNLEg3w6OBttLc9WRz4Ys5+D
qcqC7nfhDPPqmzZTMe9I5l5zpdfg9mEY026SvDKw/TBp+8qLci911I0GN/zc
a0SbbYb+VG9e0KNvEre/ZrTptQKOHZXce++RDltWlbIt5/nqw72dwv17h5F7
JfPCAO41cTk3iqWGgf3Mw1rmk8Xrlpw81FZeLfgsKPdSR93IdcPOvfq2McPF
vdrCMpB5h609tgKONZi1zNR/GvM8RNfo4F5Oeo3t9OTepuHkXjbd3R0KSL4b
BzfCoiD8bi5Utd2XzSV1JcmwaaMb5Cu076+rSXWlmu83FfcOV1myZlm67snK
P5WylZ8YCpvs7GG1gztk1HTx97bWlICjw3ZYarcLAuMq1PypL88Fl2PHYO2G
bbBtvyfcyW80Ku8o91JH3ch1w/WdYrmMI6svH8H9hVniZAUcayxnWUt/K3mN
Xtyr3zPTZefQOlzcK0hvWXIwTLXB37MSyy+5Vmv+cP5VJPmS78mmcN8L1lPa
7jf4+aq0HQV3r8DOU7egfeChQX4OW902syxd93TWQ0F9ayyKIN9Ze99+JyyZ
ORPGTdoHVb1DqM40wRb8verZdrBx3d9JWQ3KV/B+1eSG8d/3+2rDevJta/y3
060Sg/ONci911I1cZ1rulehXDWhftfbnI7yPMFu8NLKZ5WWtvKuXtKXREBsW
GdzbPlzcK0hnZ08drENMMGnRAcio6iTHGqoKYcMszBkroaBzUGdeke8FI25N
bx0wqG7put+geidoP/Dv6NNLYOIcF5Nxr8XbJyPCt3jd0hYfQT2rTLpMWLcV
1ZO2ygTyneEMVEba2wtgHiqzt8p6UT3qhR3ob5f4OuJXD+q3XFbOI2WX+351
h6ICVqFrJsw5Kfhuin6i3EsddSPXGce9MvpVE7SDlpa52neTx80KGFeWTJyn
1iCDbLe1cW/3MHCvRBlqb84lDGHnmSU6XleYDF7eN6FMMQi1uWEwY85uKFAo
GTgp8CjMX38JWvsfQCXm1klLITwlHpZjXkb+zfxoO0QXtvNhdvUpwM9pJzmH
5+c+sjsCqVV9xC/u/ptx4bCYnZub/cVeSKnq4uOL47Prqy/Yuei58PVRf6jq
GiLnEi7shW0+CXA36BQ/V73maBA0oLzFHHRp93L++AwUv20+6eS++op02LLU
lvfzhH8SdLFcjNO8AKXh/EVnMhc+6SNXaOy7r3z+1sK9I5R95bRp1WmBZL73
hF88pCWGwtSJc8E3MhOS715Dz2QuBMblQ3iQKykv59KbiV89A0MQe80fvMML
RGEE7FygN/cK40W5lzrqRq4zK/ca2aZarA8xY19gzXEzi14I5sUybM2iJPf2
yuVeiX0k9GRe1fLUjXh0B8d9iC/K6rrU0ou5FM+1pTbf449Fu62CiYgjOO4d
z/LqmiOXICDgIszFvxHLYtsFzJ6u9vPJ+U1OAXD79jXC2uMmfUNYmnAve/+B
syEQiFgTv5u2QazZgvzv7KyAz3AckX9XohPA1/UQCe8L50QSlxj3dSy7fgzn
b0aAx5FN5Pes3Tegs28QshFPb14yh8wBngsIhoj0RmhvyAVbEoeV4H0tFBz3
fE3u2Xg5W5BmhpV3nvSCi8EZPBP36cjbYWVeI8K3fB2SiIeg7ejp64XrzrsI
+0qKfT7fnAwj5UStrqF61dk1ADkJ10h5WnD4tqy6QbmXOupGl7Nm7lVtD+W2
29bKlS8c874gMuZZ9gyocG+fMdwr89sVOspURW40YUCOI2xmLYYD7qH8fCrH
vRlq3Osi4t7tiBk5/1srEghrbEDHavIZe8t9Qfn8/dWZoYh9P4aQ3Faee50i
q/j7Ey45EG7G76q7uzshJSELylqH+Puv7FxA5mBx+IR70bWpDcr4RbHH8Htx
/Dvee73IziHhwjbCvNntA/w9IQcXw7jJO6CsZ5BP08XkBvUyMEq411Jti9Y4
aHhn1N5SQMpLass9/u+Upnsa09/d3wv72XcP49jxTVbLPYPrCOVe6qgbuc7c
3GtoW8itJw8Ji4Lbd3Ohsk3z+yhdfuH5pcCTh+DC3TKj2/+c25dg56lIg+wC
Ke+OThnNvay6+03JvfrvIShKE6ozxYW54HfRE5YgXsDMN3H2AQED6ubekOIu
Pn+wXcNO5M9S50Riv4vnk2Oq+iXzk+HeuRBf18/HrSo9kLH5ZW00FXWV4HfW
A3Y6bIeVq+zhA+Q3x73CuHB+VqcHM2vz0pvV4ot/Bx1aSc7/ff1WsN+wDdYh
f7k544TGfiZNAm7mxXIY5V7T1R2p/OXU3aWArNR8uBt5ldg5XIjMhHj27/OR
aZCUWgK17ep9BbZ3KM0tgISUdOb9wcTpMGH2UajsGZLFvqrxptxLHXUj11kj
96quJ+fG6JeTa9k2bABC3BzB606ZLP/wWoejqF9c6BhrdNsfcdoOxk12FNn2
mYqN8HWdimpw2nEY4is6LM5zVKZ7trafLIXYxHTTcq8Z9lMh6ekVj+l6ETOE
e+5mWDZfIcm9eI5VlXujKnr4/Onq64QjKtwbr4V7xwsYF4tf64aONRTHsO3D
XNi+zwncvH2J3YKQe7m/OT857r2ogXsvbvuUhHnU7Ry4epwn8kL+YptmPM8t
lWYiAZNR7jW+/khew83xNhXDlxpsHMYJNNbmG0hv0r6XSH64O7n2bHKzxv5L
W5wp91JH3ch11sa9UuvJ66sKYT27njy/c5BwL+5DP2bt+XQJc+8x29nE/k9r
3yGj7ef6S33ne+X2Me3txcTW0TWp0SJ9EJX+ksMTYydOI9q0bTdU1DQNE/fq
zzMcs55LFL/Pr0y4zHMjz4CCuU+frR/wrMn5cexWOZ8/iuZcYuNr55lE1ojh
8ycjq5TlvqEAju8/BTGlHSLGlOLeyiRfxr5YEL7rynkiOwdiKyzYeyIlYJ/I
JpkZvx7mx6/cPcU9ynu6mpuhqLJdkC8S3MtJxX7dYuxrwL2Wrj+yyybezwEx
bXaT0rYhFf/dhMsWY+egQGy8DPGsSxyzn0NHZwUsQ2VticqcR2n8ZYZ7ExoM
6rso91JH3ch1w8u93+ps2zStJ68tTAZP75uQW50La9j3rni+Zypq7wKyi8Hx
q0WwzitedE+oy1ayxrypt5vnXq5PyogKgIXsPPKkReshNLOJj29naw2cY9fC
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
3le2fk9P/ObWj+cU9w4R7pUR7m0l3JvjDPf+26lz6G3KN81fHfQ9zt9Nh0z7
npWz+cBprkDVXK7AN399z3xpbaoRnA9agxW7Yvmc1BpNP/7cGorwxzVsncY5
hJrNSSicD8Ywt8vcfItUVclXWF8yu7U898YThuHKM67+yHOz/+9LSd4Wndcy
hNwjlTTOgVsenxV9JtG5kH4wvjdpBe9NhjgHW3kdrP89SdwrmWTz1wKVeyfV
KlQUliA1Iw9Zhc2QKT7Cd7zpHoPTb2p9fcPMN2eqMbdzTajGDfPZXXrR6vdn
j3/lSeb19ntXIHGvY+dB7+GOtiYkxN/HFmO8wqLg82y+RMO83SuxPew4DhwK
x8GTJ4yMvAl5HdWMacOMjCt6Dxvn4qb+Nm6bkHtTCEObzw0z0pLN++gM3LIJ
teNz897RuWPM51GU9OlpclKJ+uoWFOa+YLEND3PrUMwvV6G8ugOD6g/834Fu
5j27n4Q53am/l/qFHzdM2OBe27l/Je6VTLL5a77hXk6O8UV3xWssX7yKPNtM
lVAxBPcZxBG5x0FcjKT5eHiq0lHX5sHgpOgtZd+I99yv9vszyFMyH9/vmd8m
kNj3P9iweRuKy2ot2vEo99r8O3T8HPRmc6nQPGNZ98+y+/dNixLx4d8x7rwc
HYuoew+ZYuKesvjftv56t7n38fFvLLiXm//bGveKzR/+uehzma+Ne+e3F+fw
xZLfUGP0/VJfcKhxzs3Hz5Px4GkyroT/xPZbd/AKXpX3ibCvbeaVuFcyyea3
eZp7Hf9/V5wrNLphHCSMu2TDX6iVadm2EVk7DgUFkXf2XWjVvId7DOJ63xxl
IZXx/9orGc0YlZPrNaLAwPA4ZIMTUm5hseeZ1fH9/mZcz3HvgkUrmY6G/46+
gTG+zC3utfL3Zz/G1/p5cN+AY8tM51TuK31miC2oGWe+1QWELTp0c7kdtOPj
aO9Tkb6P4ZjgmzIto3GZL6OvIyarHdzfx1c24hwM7ZvOucjFZ1LulrjXeO84
/Nt/GmL5HMh910B+d8M9ZIhtUI43GeIcxsjyWAd2CPI5KCc68EvwN/h2w7fM
X7CKLAsZ+UBMhcS9kkn2mZn/uJfKkitU483k/7NV2H2/wWT7UFslYuLS0a00
cO+orBlndm03+oJNx3vTseHHYt7iwcXfeB8R3U7HmHNxi0s3hCGjbo4/6Hie
ROP4GdrmjpOx6DAeS6Psw5ENO/HwbQFOhK5l5YuD9yClahBiLME91+NqxkXP
W6PsJe39TNrLJ+0FG2Iog3eT9gZYP67v2oCD5P9j/vk28x5pN45hXdgTDJO6
h4N/QIKxbVvnyo2nXxy8nR9PT2VvPDxX/jzlPu9bufSiHkO9Nby/JYiUl3TN
+Wdtje8ve3wJ4Y9zkRJ5nC+/8KSYMYrl+P5HZPvfovdGYMiVZ/Yc91ItW7kW
92OfML51j3udiUl09J2N86ltwv2XZWjt6kdB2nN2Py9YcpTFOXC+1+VbL6C4
RYYKcq/R33DJxhj2XsflSN15KQH1ba2IvXSErZ/PMNyD3PeQnZfiUdk2wu4T
Ibdy7S/dcAbZNW3IfhPD1pdte8DKJe61z2WfIvtS7qW/e07bKIrJ/3t03GMt
eTei9+x68ncV/rQS3a0lCCHLkWVDVq+LrCaZMe+DynGzMseYV+JeySSb3+Zf
7rV8Hk9OqXCKsew6wk6l6B7SWeyjGmkm/Er32YyHaSV4fv93xqLBZ9PYM7Tw
voGvqM/oRnQ84zNujPnXYTfwMiMV+xlvhiC3V8diGaMPrGPlZ6KSkRAfyeIs
lmy8RVj6I3lOtxmPtwo//xGPtLQk/EDXl2xDw8SsZf8m2hhfRxX0MmalHMPJ
8Nxv5fn75z8ek/YS2bgL+v849XGxMUJGxqD7U06m5dvulLG6wm/EYudaLxhP
n5r9Fqe2GFj9Zk4v619fTQofOxKR8BZPoy6y5VUHqY/u34LyzYh7mYHzB3fw
+++79AQpCZFGzjF8i7Y3vp/67wwcE46X2bmkve1sPapkyHJ8f2YjYSdbnBYI
cv4eF3LvgkUrmEI3bUF+UYXXuFdv4+/M1jnRuQ93Gt+ZONHfrkDwntNe+tIk
luer3dfJe5OBQ+nfU4YxLoLT2Qe5PJPSObMeGu+RBUuvs/dVeo9Qbub26SxP
N2n/a/Je1jFh+Pth3EuZR8C9JXFhnw33Ospmrrbp7/OzJo1mCGeNfgKqgzEl
hjLy/0XWPXK/kb8tqiWhV9CheGc1BkhmjO99VmPOvY5L4l7JJJu/FmjcS9Xb
VMBzJvOtBv2A83czINN+YOWlj04wJiuQzfB10iPDEbztDmR6+gwNY9zYYcyx
T32odIw5/fbK/x+q62d+rR33qjDYkmHIiVQwFz/cX5FgiClukBs5dhW+vZhl
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
TnGvkH0DhXnd416JeQNN7nCk55jXefaVuFcyyT43c4t7PcQT7nCe28dw0Gft
l745cSxJjl8nj96jbnwr+Ky414PM6zz3Sswb+PIc8zrOvh8t2pG4VzLJPn0L
KO51MDbYYwzjYHyyOywqMa/vmNfRa+bRdxGx3MTOtGONeyfd4F6bsQ6BwLy+
8vVKvOszTTkoj7Cvfeadk2ttOMK9/f39mJiYgEajwdTUFGZnZ/Hhwwf8+9//
5nOZCdmXSjLJJPO/BTL3uso8nwr3+psl55OcvXaBwr2i81a46+8NeO71JvN+
Ljz7wY58z7uTrsgqb3qCecXZ15m6EvdKJtmnZwHFvU5wi8eYM0C5198cOR/l
7HUzv+aTGhVk8o/O/15uxDqwedY+Ze51kHmF7Ooa9/reh+tbjnVV3mdel3jX
QZn7i11n678NcpHLJe6VTLJPx7zNvc7wh/l2+fAgcjLzkJ1XguyievSMz7rN
Re1lCVi4dBtyuzVucYu1Y4wMjqBfPuUW+/qbHz8ncddcox1BeHAQFiw9hgb5
rM3fp6UiA0f2HsTe0/dQOzjJ3zcTA124fuoktu45i+TSPhHG/YCGigJcPX8F
Z8+dx4lzUXiZ3wLl9N+MfXX8c9kx7qV1zBXY3OvKeLTAYl7fMqvjmrQr5+JX
A4F5A04CP7DEvZJJNn/NG9zrNosQPsiNv4wvl6yyUGx+j1NttRUl48ytt1CT
ZzBdL3v2JxaSdl40q8S51wbv2DtH/cwUzpG2v75e5DL3+pL5zK/N5yotYd4T
hHkXrz2Ig1tDyHvRMbSp3lvel0SjnTns/vk67Ay2UE5edg4ywqla/TiOLV5F
2tiDw2E7DPdY69w9Njmtxd2wzWw71bcbf8Ry4/KyrbfQp3kP7huslrSnJtyr
Esxb4Sj38vzrIveqyd93d9+wVY2qPzjNvYY+uca8Xo/hdZl3/c+6DjPvFCeh
D/XDnJz1D/uReRtLUhH2y2/YFR6Fqj41v32srx1Xjh/HDztPIbGg26ROZ20Z
niamIelFuomeJuahRzXrUj9KS0shk8kgl8uhVquh1+tN5irmxrYJ2ZdKMskk
8795kns9xSF1b64yxv3mUAzaxvWMgwd7m3Fkw1q2PbFW7nBbBbe3YnFIlAnb
2fxWba3cgXOl3HuV9HFHZLkFLwUa81q7Np+bOOZduOw0OrXvyTNtHBfIb2iN
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
I3qLvstHKJtOmNxH5uckn1BBRu7pwdEp3h9rj3vF52sTY0b32FfYHwP3bjXh
Xt30DF7dOcPYl9PpqFxMEBbg4huo75r2Ra2WIWzNaizeEIkRwsFavRpxZ39l
LPzFkmtsW8Azr0Ns+15UvuVbEemtyFkm1tuQzX0dZF4HpVAM4uQ3a/APwrVU
+6KLeGZNjzrNb1/4r0toGZ/ly9TkuXVrx1p8sfpPdGtmrXKvqKxwb0FBAbq6
ujA8PMzPXSGMdeB8vubsK5lkkvnfvMq9HuJfa8q5vdUkPtVd3vIWe7nSdm9Z
HPM7in1r9x7z2ZN3rsd8415nZasdR7h33Br3zv5tKQfjHhyWlXZ0uhnIlXoo
ddaO6cFcDW4xr4vc6wbv+oV7RfhWa0WmDOwC64pIjFOtsa8rzMtJQ+67nt4B
dPdrLMpG+kfQ3jVG7knT+Ai3NWUpyr2dnZ0YGhric/ja414qySSTzP/mE+51
gH1d4Z3+1lrkVw14nLss++Ie/7nCdapxGbLzGjCm8/R8aI4yrue41xOc6H3Z
P09XmNfW+Vhy70cL7lV4mXut+Xrtca+oL9lt7hVhX4l5HWZea5xrm3+dZ1x7
vCsWozAn15nXOTnDtg7UM+Pe/Px8Ue7lYny5WAch+1JJJplk/jd/c6+/mMc5
TnGfAb17fu6wbGBxr3+Y1/waeuZc7J2PKff+7QHudX+cmyvMa8m9rjJvAHCv
w3G7AcK9LvCuKft6m3nNedJX3GuLZd3n5by8PHR0dGBgYIAf20ZjHegzkvp8
Ofalfl+Of6kkk0wy/5vXuddJJvIl6/iSez3HZv5kw09Zjv+unuR4W3EOarvc
66R/1oqfV5R7nWBer3GvL5nXqbFqnwbzmsYjeJN5/c29nvcVv337Fk1NTWxs
W39/P4vzpTnN6Bg36vvl4n3pM5P6gCkLU0kmmWT+N69xrxPMEWjsa52J/Mm9
/mZuSbbuGVe5V8ibHPfS+EqNKPdOEO4dIdzbTbi30OG8DLZiGz5d7rWSt8yF
fAzOcO/8Yd73FrznHd6dj7LPvc+ePWM+37KyMlRXV6O+vh6NjY1oaWlBW1sb
8wXTcW+Ui6lozjMqySSTzP/muzxmjnOEPznGsty7Y7wck7+ZW5Kte8admA0T
5iTcp7PKvRpL7hXwpr1cDQ5zr5O86zXu9QDv6j3Ou4HBvNopTzCvJfcGvHSB
w76u5HOQxrVJJllgmDvc6yle9Uycp2diUK23K3GvJFMFHPfaYF9R7hWr7zb3
usO8f7vBvB9E5SvunX/MG3jcqxHIgndtyGo9t5jZNvdmZmYy/y5lX5lMxsa3
0ThfysD0GUljHWhOX2GsA5Vkkknmf/Mk97rKvu6PcfLc2Cvr7Urc618F3nnP
W+61wrvzl3t9xbxe5F6beXa9wbyBw70aW9K5JnusLCqJeyWT7LOwQOZex9rz
FhP6Jpeta33xP/P5XoF57u6+sznGvZOOc68V/nWFe4e7O5Genos36QUoqu6F
fOqjHe61zbRjPdU4GfYXintU1veTmNdGLt5385N7bTCms7xbX/QGB37eh53H
IlFB7iNu+0hPGy4dPYbvfjqJZ/ldFvw72NWMu1cv49ffjuLo6WtIKWp3i30z
MjLQ0NDAcpn19fWxZyKdu43mNKO5HehzksY+CNmXSjLJJPO/ucO9Q2MqUQ07
KWvtONauWkTO98F6W9bk6jE80S9fHjsQFLjn7u7fwNCoktfgiAIDwxNEcsgG
x9HbP4ru3iF0dA+gtUOGxpYu1Na3oaS8FskvUu3yK8+xVsarWWNew5xsx03m
ZGNa/Avye9Quc29v+VM2V9uD8mEPMa//4xvc5l4HmNczY9j8wL+2YhPM5YBv
d6A5E//9xTIE/3oSm1esxH8tPIsuNX03HEEY2f7Fyp3Y/+sWtk9ivZyv11tv
qEf1w74jWGNc3vegUvxYPH9/tCrKvXQsGx2/1tvby/KZCXM6cD5fIftSSSaZ
ZP43T3OvfXZxjh98x73OMK+vGexz5l5/v3PYVqBzr0UOMyvxCcL9KxL/ZJz7
/dmn6JJPMw5urszCerLtiyWnCGu8E2nnb7vcO1j/0gr3ejam13Pcaztf2afB
vF5gX3vxuC6qsziese6I9h1Gu4rw3wtCUTEyhfHxJsayb9q0UBG2PEaWI/L7
+Xrp13eyfTPbNGxdqZHj4vZg0tYhNE9MWz+mDe5NS0tDbW0t2tvb+VxmQp8v
ZV/O78vxL5Vkkknmf/PNuDZfxyJ4uj1/xzr4O87Cn/L3tbevgIxzMPfJ2slP
xu2vVvdjD+HbxaERGCEMI9ynIy+O8fDjmnG2PtRTg9O/bGMsu3BRCI7ceEPq
vJ/j3NZi/LI+iJUvDj2O2JhrFtxbm52A9V8uxwKiJesPIL1mxG3mdZ977fOu
W9zrIO/6lnvdYGIHY21d5V1O3eWJzE97Mb4QZUVvsOiLYDzMrEZxTjJbfpbX
iLSE22yfexUjJtz7z1W3MD75nt+Wf28/YeEfUDE0ZeOY1rk3NTWVcS/NWcbF
+Ap9vjTO15x9qSSTTDL/m1t5zPzOLRL3fvry97W3L+9zrxPj2twYm0alHGtF
CGHbm/ky0XKN7r1hv+Em5v9dsHgLYl/kIe76KcK+K7D6eAqU5Bwm+qpJOytY
+d3El7h1YR9jXp57p/9GY9pNxrvrDlzDi7TX+O3bNWQ9GDndWs9wrxd5V5x5
33mMdQOHea3wr4dY1hlRX27yzZN8zII17bmSynzCXL3a9Ei2/WRsPrqGxlFT
moGvyfryw0lQCFjYKvuK8C/l3pqaGrS2tvIxvtTny41voz5fc/alkkwyyfxv
3uVebzOjN9oONPYNfO7zz/kHzjXwH/f+bSbXeZdTb3WywadbMW5zv5KH4YRp
N6JkcIr1mx6/KukS49qMLg0pP87K8/umeN9u4cPfjdw7RJhpAudWr8LqY8k8
y6q1fdhBOHh7dIXLvOucr9c5zrXNve9E5DrvBib3GtjXl6xrTeMjTVizIBSl
NM6BW7biu6W8fG17sCkfk/3zu3QOHOujqF6/fo2qqio0NzezWAc6J4XQ50vZ
l/p9hfxLJZlkkvnfvMe9vmBGf7XtSwYLbObzvgKfe6m8z72W87WJx9G6x70D
zdkmsQzWlHz+OyzeEAn51Aeee0eas3h/rnk5lawqifl3KfcqR5uN8Q3BOBB+
HPsPHsNvB3azciELO8u89n297rGu48xLpBcqcJlX44z8zLtKpRxVZY3IyUxi
sQ0xmdXI55crUFzWhj75LL+/enIGCX/8xFj3YEQyymtbkZP6lPl7aXxvw9iM
S9z76tUrVFZWsrmKuRhfoc+Xxvmasy+VZJJJ5n/zDvf6ghV9waGBwL7zg/u8
p0A5f9vH9Q33ygn3DhPu7SLcW+AV7lXKW1n8wqGnjRZluun3GBlWQD75AY+O
fW3BvaPt+Tz3mpdTbu2tem7BvTSmN+pBHO5ExzLdfxCP2BfVLvGufe71F/O6
xr/O8es7iOY501mXxp5Eudd/7Ds+1IotdmIcqP5rwV4Wt6smdcZGmrCObAv5
M5utq41tdVensH0jivodOLYl9758+RIVFRUslxkX60B9vpR9qc+Xsi/1+wr5
l0oyySTzv3mee33FiYHIvd5gMVf64C3NV+5191ycP76jeX0DjXu1eg2u/LiW
5SyrGZs1KTPkeViBZ/Vy5EcfIPvsRL18mj92a1YUK3/drDAtnzZwb+2rmzz3
qrUDOECWg89nszKdUQM9fegaMI/vdZJ7A5Z57clVP6+ReXXvbHKuU8wrxsA6
/3Ivy+dAmLZ6yDS2YXyoXrDcih8Jz97M7zdwLymj3LvpUj7PvVT99amMe++W
DDp4fFPuffHiBXsG0lxmLS0tLJ8Z9fnSnGZcbgfKvUL2pZJMMsn8b+5xr784
ypec5i829Dfjeus38/R18Bc3227L0bncfMq9NvI5mMb4vuLz9SYVtaCltRVP
Ii8Y8jJsiGQ5G0aMvt3FoaeRVd2KrNf32frSrTHMxzvSnsWX59V14O3TO4x5
Oe6lPFsSd4yt/3b9NZoJ7z67doStH37e6HKMgze513IONU8yr0HOz03xzmnu
dZp5ReUf7qVxuRmNQ8h7dMGQj4HF97ayuIUjj8rQ1liI1ZR7iwzcq9Ao8dfm
Nfgvsu332EzUt3ajMO8NNlC/8BfByOzQuMS9KSkpKCsrQ11dHR/jS/M6CON8
qc9X6Pelkkwyyfxv8497A51BP0XW/VS519H+uHZt/MO9VtjXytwV1tRZmW7I
18BrBbafiEG7fJY/TkdZmiFng1HrDt4xKW/IeYJltOxLqhA8yUhjsQ3PqkcN
Pt6pKby6fYrnYarTkdmQE57zfHyvG8wrGofgPuNa8q6YHGRennvF2dczrOtb
7lWbST4xgPCvVzOGpdobVciXpUae4rd/8c1FNI3NzNUb6cK5Hd/y5UyEmZPK
BiyO4Sj3Jicno6SkhOUyo/MV01gHoc+XY18q+rzkGFgyySTzv/k3zsE6d+g0
KlQWlSAtMw/ZRc3oV37k64x0V+HYkXtoU33wAp/Z5p+RwVHCHpYa0/zt5rH9
zbMS9zraTmtFJo7uDcOvp++jblDHb1cMduPGqVPYtud3pJT28XX72+uQmJKJ
F2/e4qWZUpLfIKdh1LvcO+s89xrieWcwMGyYS2NEMSN6LN30Oyg105Arp8TL
ddNQqHRQTn7k4x3MpZucglxB/m+Z/OB2/jJx7p2vzCvGv9b3ofeMQd7gXO+y
r3rSManI30RX9wA6+zQWZUN9I2jtHMPE5HsLnqUaGVOip3+cSGm5D9eOVQ42
5d6kpCQUFxezXGY0xpfGOgh9vtwYNyqOfakkk0wy/5t/x7WJc0dP5WusWLIK
X5poNRIrh1kdWUUCWf8O1fL3HmYz29LPTOGv4GDWF3PdLh1x8/iGum1FKThz
Kwvq2UBlYe9cW9fvI19xr0FjnTnsfvwm7Ay2knth4bLz6J+irCrHcXIfLFm7
F0fCfmL3xMtWNTtG4b1DgnvF/L5ehR13ylzKY+YQ95ozr5Psa2v+NYc0bS5X
52ZzZ54213jXknk9y7uOM69taTjp5hn7Osi6LkuEfS0414H6Yuz7/PlzFBUV
obq6msX40lgHOocFHd8m9PlScexLJZlkkvnf/M+9puyh1Q8jjLDA0o1/oa5f
y7aN9rfjMGWMpbvRpv0AWe0Lxr11inc+ZTPKvVc3rEXopQwMT6gxNKpi6ic8
otD+x43jz/W94PY2LA6JDlDu9SXzeop77bXjXJ9kFc8I656DgjCdsr+Mvw/V
6nasI1z7toeO85rGabIcLXgXmpoyfK/oYe9sqxBXPgjD/f63nTiHKavztdlm
ThvM6xT7epp7PcG+XuRevan86+N1kHctmDeAudfbrGuPf12oT/tszr2JiYko
LCxkucxorAPNZ8b5fIXsS0V9vxwDSyaZZP43/+bvtWQPtbyZ8MMq7I1pMGlr
uL0KDx5moEdl5N6l25FRkoMfjX60kO3nUN2v4+uM9NXi7O7tRp/aOhyNSMMY
GzOuwo3dG/FnYhPbb2r2AzKiwvHVnoesnG4baM7E8qX7USefNekbx707Iq3H
Nut0ajy/eYb35W3ac5n0a9rAOKo+HN24E4+yCnCStEPLqX/wRfUQ6cc7PP39
F94vuJpw/on4OtZmf2sZjm/baCz7Dheflopwsa+ZdD5xr+fYd6A2hf1u1xNL
UVORgRVLvsazvAZUFr1myyklbch+cZf9Vg/rJiyOZXhnW424ylHj/WcrvnfW
lHuHjdzbRrg3V2zeCgFv2mNeh9h3rj2L9t3iXu+xryX3BhbzeoJ3tRaMa00+
ZN9J6/I553pBhnP5yCshIQEFBQUslxmNdaAxvpzPl8b5cvEOVBz7UkkmmWT+
N3e413aeJtd8iZRLTxtZlbJFz7DeKjtQXYhNw4snUYQ5VmPppmjmh1OPNmMD
bWPpNjx8VYCHRg4NOvESqplpxB78Gsu3Pybs+G/mX/7VeLzC/hnWh5zbe7Bw
2Wn0T30wYR6Oe7dHVoueA/XzRe/6mvXrWFQy0l89ZQy/cOkuxtBqeZuhX0Q7
/4xHenqSgdsJwzdMTKGRcPyxrV8xv3Zc0hvk1I5Dq5XhZ7LPso0nCefXI/5G
GGv/aEqrxL0un7fr7dF74E3UWYsYHHMdiHhL7sV/W+feqjET7qUMqiP37iTP
ve9NuVfuBPfOeoJ7TXnXKl9/Ktyr9y73eoJ1HeddH3LvpEH+5lJfc++zZ8+Q
n5/PnoNcjC/1+dLxbUKfLxXHvlSSSSaZ/83T3DvlFLOI80ZfcwHhwzmGWBL8
I/66l4n+yY8m7BCRO8DXL396mnEu5cuyxydI+WaUDc/wbVanXGGM8rZnEk3p
1xiLtmnfY8IYr0l19W0vz7brL+WLMs+trSGs7S3bdzP9uG0bgjb9wcbYDbW+
Zf26ktbF11H2lbFY5SMJjVArDNwbeimLv0YDlQmsTqoxFrT04WGTOAe13PD9
/Fbh3Lk2V9WhtlPlJvvNB3k79sK99ujvuW7pZlTTOAcF+Z2W2oo5F+Pe/5G4
N+C5NwD8vDpXudeL7DspZN7PgXs/WnBvXl4ey2XGxfhSny+NdRD6fIXsSyWZ
ZJL533zJvTMO88v/sO/+ne0tSHzygI0foqywOOQCevRcfO/XhGtn+fqG78+b
Gfe+uPAD7/vl2hxtNfAt/b6s7K9kyy87J1GbdBord8ch+fYerA57A7W6k7Fp
dOmwBedQ7r1GuHfZxkO4dPUW0W2ia/jzWiJ6tHP9Kuyf5c+J+q//Cg5isREc
994q7Of7rR5tYVzLcVDB3V8Z93K+Qq12EGFcLMe2o4iITUNjv87GtftU5Pz7
kueOYbueTqdCQ00rivJekneadXic14DSvFcszuFxXi0qa7oxbJLfwxb3/odn
UI57tVMfTblXKc69NnnTCzEOLsU6+IN7XYnt9XKMg+99vSLcO+kN3v08uffp
06fIzc1l3FtVVcXy+FKfL411EPp8KfsK+VcyySTzv/mKe2fscu//8PWmpkzr
T81+RHbMH7xflB/XJvCtGbYZuDc+/F8W3DvWWchzLxdLcSq5HNG71mF/cjsG
GpJZbENZ5Wu+HTHupb7gn+6Lxzlw/RLyuG5ay8cEM/8g7UOVnC+nfsINNriX
taFTI/dVEg7v3sH7wK++7fYQ+wWqApN71fJO/CySa8RcC5ceMLk/fc699sa1
OTmWbd7E97qTt/eT5N53FrzqKv+qLVj382BeNeFctRn3XrlyBXFxcczvS3Oa
0fnbXr16hTdv3iAtLQ0ZGRnIzMzE27dvkZWVxUsyySTzvwUO9xrqyZjflnBB
+ZgpL5Qlsu1P6iZscK9hW+G9MBbH0KiYY9e27LuMUVJbVWw98/ouFtPLtnVO
MT/vj2R5dXAQlm+LNWFmc+7dEVkheg4DjW9YH4UxCXPj9CrmuJeNaZrjXqG/
N+f2XsLflzE2bfAXqpUTaG4e4OMetPoRnAgOxuqwJLZNr52GQj/XV712yub6
/JGj3Osq/7rWFsvnsHQ/Gmm8NhfnQO45tbyFj3NQy7tYTHa0SW4763EOnude
23nMBkeU+HbDj/jt4HFR7h3qH0LfmM55xnWYe72Uy8zdedoCdTybW8xrlDn3
OsC/apus6x/urSt8g/0/7cPPRyNR3q3itw93t+HikWPY/NNJPM3rsqgna6rH
rSuXsWffURw59wB5DaNOc69Q9PlHn4P0eUifi/T5SJ+T9HlJn5v0+Umfo/R5
Sp+r3DNWMskk878FGveqFZw/7TvEvKpAW/cgCtOTGRsuXHpcEOdgnXvHOosY
zy7beBY5te3ISX3A1oU8K6s0jMunPt4e8oybmp1l492+NMbiijEPHbd2dUOI
Ve7VTatxYUMIi3WISa9BXVUZDrB1OmZO7xD31r25xrjoemIe2gb1fMxw8IlH
6ByWozQriY3ho32gsSBRbBzcAcb49ByitoYYuExk3f8s603udZRj3WNoyr30
e0Bu+xhKEq4YYsoVlIG7mN/+ZEI1etvL2G8aXeEq937wHPeKzNV27MQf+OLL
Fdj43XaLfSen9Phj0QqEXLU1L4ZnubclPxGnbqRDOWV93gqdmcSY123unfJO
vl7/+nop8wplm33VTvGub5m3vykT//XPZQjaexKblq/E/1twFp2qGUyoRnCQ
bP/nip34be8Wtk9CnZyv15gdz7ZRbfzuJ345umDQsI9WIAeYV+JeySSb3+ar
fA6Oci/VSHclfgkOMvluTPMZFHZrjezwhuVAsOBewbauigzGmNy36G8ORaFT
MZefgfI19e9uu5HPb6tPvW3iEzY/F8q9ETa41+Df7cKfhEXnvnfvxpv6EZNj
cjmsOO7dYPRjs/XBFvxmjGfecKOExXhkRP1uci1+OhXP4om5/BELl51Bp/Y9
80fTuA3K8mLr/mdZf3Gv53zHWu0IfjfmoKMKe1DKl2XHzP1OSzdeI89ky/kE
h5rf8t8taB0x7nV0XJvD3Dszx7zZeaWMeanKKhtEuffy+iBsvV3qM+7Nu/kD
vgy6bZV7zZnXIEMsr23mdY57JzkFiq/XrfFs1rj3nY0YXWfl23iDjqJ4xrrD
mncY6Swi7BqK8qEpjI02YfU/luF1qxZKtRZHyfLNvH5WZ1zei58I4/5/X+xF
mWwKKrpttA/7KDd/EY5WxbQp95qwrzjzStwrmWTz23zNvdbZ15IxJibonBBy
DI1Ou8QvNDevepKyw4xo+95kLzV5vijU05jk8+y6d6ypKUN7Cq2v52aWmNdc
9L4aGBxB/4h+bht3z47QuYQnyO9umcNM7BjWufedi9xrPW53XKHD2nUbGPP+
demm6D7m3Fv66CKOP8pB8p1jWLBoBVEI/oovgpyyJikvefg7KS9BQfJNY/kK
/HopGSP696x8oCEdK4POoGVilufesueX8NWBxxgl/5/En96BBV8uZ1q5ehWO
P6xygHk/muRt8ISvd9JEnmNep7hXJy7PMu+c3GNez3Cvyo74fcn/e12lifgv
wrQXHhWitOANFv4jGLHp1SjMSmbLT3Ia8ebpbfw/sk902QhUpM7oQBO+Iut7
79eydU51mTFsv5iiEUvu1UrcK5lkn7IFMvd6hoN8w17O+LMDm/v8zZmB0A/H
97V+/zsm29w74zHu1RGdu3CdMe9X32yCXKl3iHvzow8wll0cehwvsnJw7sA2
th5ZPGhSvmDxRsSlZuHuxcNsPejMG2jIufRWJRGm3YjK0Rne15sXuQtfBl3H
uG4a9YWZOPJDEKnzMx4kvEBW9bDDvl4h47rDvRbM6wHudce36zHutcm8nHzF
vHN17bGuiQSsqlBr8fz6ScartrTrUiqG1O9scm9TjpF7jXxsyb3WmVfiXskk
m9/mi/naZt7Z415vsqDvmNexfBUS/wamnLvu1mLbnWVf+9yrd5p7c/LL8OhJ
MouV4Hi2pKKej2/IL6q0ysdi3PvF4iNon5xl6+pJGfYQrjXh4sVbUDk8w/ch
x7itZnyG594aC+69DTn1CZP14gcHDHEOess4B49yr95B5nWBez2Vn9cX3Ku2
kG+4V8XLeeY11+hQE1b9MxTFQ1NzywNTFvuNKwawh/LwP39AWv0o29bX0YAf
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
HJtV6jvQHfXuncfRZl+97v0/oMdp6A==
     "], {{0, 208}, {702, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{403.375, Automatic},
   ImageSizeRaw->{702, 208},
   PlotRange->{{0, 702}, {0, 208}}]}]], "Input",
 CellChangeTimes->{3.655549678942071*^9}],

Cell[TextData[{
 "Selecting the style ",
 StyleBox["Title",
  FontSlant->"Italic"],
 " will format your input according to the stylesheet\[CloseCurlyQuote]s \
definition of ",
 StyleBox["Title.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.655549750295136*^9, 3.655549790472487*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXWtsHFcVjlp+IEUtEa///AMkSB/84AcgkpQfPITSREiVCJEamjr5Qeo4
lDYJArUNVMURikORbSjYLcGFxKGQQh6itkgaNSnYi9fLZhc/dtd2Fju77Ga9
K+/aHcuHO+tde/feMzN37jy8xueTTh727Jk7557vPs49Z/Zj+57a9eQ9mzZt
OvJ+9seux5/Z1tLy+NHdW9h/vnHoyMGmQ/uf+PKh7+5v2t/y2X33sh9+hkmJ
yfuYAIFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB0PAoQfZcFyQ6OmCy
qwsm2d8TFwKw5EinBrlLZ1Z1dnVAvPsyzLvUYisspQZgos383jLXNAxKozDF
bJkot1XvqzaY7B93pFKLvAXxlefvKv87nXBigRJkzrWztnWt+FG8ux8WHLXS
f3jpF0vZYNkuiaruzgtQ1FxSjmIW4ts2wcDme1bl4Zcd9sksjPM6798BmbxL
TbaANvBTy3vLXNMwmP0HBDffW9/eDx6AvLJflGByJ9c/urRcUW/jnb9CgNf3
0ZONO14awEu/8N/nZmGC7+cv/RKcDSeIzg88Clm/uB38ueW9Za5pJKSf+7zA
xZH+aTVlt/8i8rBiA1Vfy/36MUFf5MKkmrI1hJd+4b/PEbfXA7eXRn8ncnH3
a0r9lD31VVFXRcK9MQWNMYjy64oteyFXUlC1xiBuK+gkbjtEBuK8Te97AKYn
Fu2peW8EIjwP6/Zj9tfRwlqTSeDEdZtaGgPEbQWdxG3HKF58WuDQ0Mm/29Ix
f/XHxryuSCJUsKFRg+kmce8+Nb7edtrLIG4r6CRuO0dxCEKOYmqsX/YgMTRe
Wt6UPyfJ/A2G+DYx/1lv8fEqiNsKOonbriD90ucELkrH1G7/AY+h8cJskc7K
qcyf2Sd8PnpZMcbXACBuK+gkbruCpbh6TA2LoUX7JyDX/hXh56Gef0tovA0j
W7l+XqcxtCqI2wo6idsuYVYtpobF0Ko8xObzh05A0aIlgg2ZDK3TGFoVXvrF
InEbtOQtmP5tB0Sbm1ck0nwMYj2XoZCyjtH4w20NFpIJyA3ehPTNYShEBiF9
7SbkIgnQPJ63im/9UOSURUxt/uoPhM+sxrKR/mISD5jF1DSYbv6E8Jmk7Ria
i3bUMpAfHobcikRgodaR83GY6Tq17E9HX4BEbz/MuekX7P7ZvrMw/vxTEG56
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
AAvPNA==
    "], {{0, 52}, {247, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{219.67578125, Automatic},
  ImageSizeRaw->{247, 52},
  PlotRange->{{0, 247}, {0, 52}}]], "Input"],

Cell[TextData[{
 "Notice that as the cursor moves around a notebook it changes state - a \
vertical cursor indicates the cursor is within a cell and clicking will \
select the contents of that cell. A horizontal cursor indicates that you are \
between cells, clicking will provide the ",
 StyleBox["cell insertion bar",
  FontSlant->"Italic"],
 " (or I-beam) which will allow the creation of a new cell."
}], "Text",
 CellChangeTimes->{{3.655550042173123*^9, 3.655550144010147*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Shift+Enter to Evaluate", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.655538789194545*^9}, {
  3.655549265541201*^9, 3.655549269072694*^9}}],

Cell["\<\
Shift+Enter is used to evaluate an input cell, to demonstrate this type Hello \
World into a new cell and hit Shift+Enter. There are three things to note:\
\>", "Text",
 CellChangeTimes->{{3.6555498217920303`*^9, 3.655549865172728*^9}, {
  3.65555015281138*^9, 3.655550168682427*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nL2Jss6rG08KZI9L+/U1nKGVaw9Ry4ifdMM3aPbz6XTNX5oI2JWdS1g5C3yW
M1Zt4mlq+vg1VpZUVmd7z+rJoKKOXdvBvV+rM/Sb+Ow39UWf04xl60XdTl2V
T+fOHRafU2dvoHP3pLEt/gw2VdzP3qGM43rpWPNNWjkvnd3f3hB9oY+11cns
T6T7mcuxkbBwNHNDQ4PQw1wXj46O0oMHD4Re5vv4Z248bqOkpIQKCwupp6dH
0tMx8plb+ldHaM77W+n/vL5C6ON56/Jo4V/206K/fiP+l41/5+m4buZp+Wd+
7ET7jHHm0K2nt09o4qNHj5LBYKD6+nqHTq6urhbPdPL4s8FwN2B+sZ6DGKoN
dVZTxoZDpB+Rvhcu+yNN+qichtjnXm2B0NI1Fmlfb/Np6Rq14bJbHgM3i2nG
7DWUufmv4jo0Y3keaXpGadR8XaTPYvcOnk53crf4ztOs2HeJBti1Kz/9LYce
X/xto6KPfE6JhV2n+efzFyopLS3Ny/h24Qu7TvP0gcqtZt6tVP500ow4t+kO
rKRJc4qol3/vuUmZy6TnjCnv7KAaXmZWphz2DDB91w0V5fc85xBV5GWKa/4U
Voc565fSdHYP5vu6dWdo/h/eEMfO+fIUdfH07F6wYvZyWrxGqvecai2tZveG
wgYjlWxeSlPWlkvn4OnYPSTniomGuM/py+z3izVUqDOJ9psqPxNN30A1/UNU
vP4DWn28hZpPf02pc7JJL/qA1F7z911jn3uZrrbfd55fy/Ix+qzHx6X9BppK
aPa8bNJZBqhwzVKas+Yr0Wb8N8THH6V2sNcza4899YM+67G3rYpWvPG2dO8v
OEh/mreZtYv8W0unFawNedlq+u+z4//iyJPrBH68Zu+7znLGUZsE28d1BRmO
68PstT+QwVHHbB/TUFPf+YJW2Ntw8a7zorxyO1y97tmvfbU5+k0i9Bt+b0pl
17Rey21azepj0pw8ah/po8L0P9L0fY3UW7dPlK2ic4C6b5aIclX0PGBlLxKf
C3Wd1HWvj85/lUaT3jshyqgr/Jgm/emEwrU4NAt1PQc+nlxeXi7iL/j4MtfH
/P+WlhY3zcw1smu6WPrMbVtRhZjnJ48n7zh6wWfaT3OPO2I1pi/8WBw70T5H
SjNHot4Tza5rtQ7NzPUx59q1a3Tx4kXxmT/DyZr5korffaKb5uR3lJW9SdJe
9mu9QzP3O9PV7FjCrlUHqNvlWJ5OXHuXH6DT7Nl/DvssdLfLvaPbPma9eN95
qji2W/p8/Dbpa06Kce75276nqgZl3VV58RKZh4Yd3z2v1fI1mlv/oFmkD1Re
tZqL+7k6+xDl5B0UtsI+VtHL7ln8Hpm6vJA0zTrKEtuPiucApXuncvnb3c8n
p9l1ikoKtko6gedjuirymc/utzpdBc3n29k9guc/x37PzCkqI027xnG+9oot
jvv+gHaf4/6hyftY/K2gpq2J9rB7jWjLnttUuPMToSvyz2ioa2RAlGEKP/fd
cqlP6Icd5cm4aBT9gJ+3RNdEJTvfl85lUa7Hx6b97L+Xqn5Wf29LmmfPuXOU
yfOekcfqtY+q2LFTWVtkFp0n3b0xH/XYR1lcM7H2KK46R6u5n2x7Vb/Lb41p
tfyTl+iWRtJ3hZo2qmL6Ujp/YO0TszYJso93N1dTFtOnqUxfl9Q0U7ejjnkZ
35fal9VlYfYHoo+fvvfA0Q7n77R69Os+H22OfhPv/WZ0/I547i9h7cv1c84f
+Dj+oHRPyl5Ci0tvUz6rr9UX++3ph2gPS5NxxUR6pounfHlN2j4i/V116tq9
ol0z17wl6rg74PnVWahajscxHzt2TIwh8zFmvo2PNxcUFIj5gFxTc+Of+Tae
jo85x9Jn2bj2nb7oE8f8Pz6G7LQsx/8v/umvIg1PG45eDsfnYGIzoJndjfdH
1xiM1tZWUSePHj0Sz2+8/8r7SkpOxtzf6NoolWT/hea8LY0/rjgsjfcqaWZ+
n/K8pnqOR0vXXabFXO4dstaWjmPXM1mTyde/+mGf/vHr7qBlyG2bfK12vUZz
Mw0MRlxzTX1jOc2wGx+3EvfOfq3Qq1NX5VJOwUHK4GMg7F6lt+tNz3un7/K7
1u27LtdvKQ3Px6EzNuez6/w3Qk9Meu8H8UwyR+Qv3Tvcxrfsfx/OaTCRhv+9
1TGW0k8adj8tLPpO+CzpABsN3cwTf5OV0zjKIH/e18LqY5+4T/N7s9ANszdQ
FrvvZG2WxrsKm5Xb8HFpP+fvRc5D+h1JzyySJhkdvkEzeBoxhtmrXI/aWulv
+1ekdh246fwdev7W+G+3WVdDxceOi+OlMUR12icWbRJ0H2fpdKz/TtnlfU2S
yzjg0vd5PIRrGrd+7bPN0W/ivd+MGitpyvRsauefR27TfLle2PWJPyfsaeih
rOfnuWjmLjEWXdw5RiVMF6++aB+PsT+b5Zy5SKeZVdTUURV7bhgKdH6VFqqW
6+/vd2jmkRFpHP/OnTtiPJlr5LNnzzo0NLdIrqkcKc0srYuxycW+cKyZwW3W
O59JmjnMMeZwfMY4c+h26tQpN83M4zFkbty44bbv+xMnAuc5lqBmMpCu4a7j
e02uNH6hMbPr7HX7ddYsp5fGQSbNY/cOlzw80+nyma6ezTTzoP3eoTGJfCfN
LrIfx+4df2T3jp03RJ5Zv2dpdIM+faysYtdp85DX9vPnK722mfoHRfpA5Ra/
uQBpvMvPysbvKbwcJuneOf/LI0x/HqfC4jJml6h9mNURK9t0XjZV5Xfm7StN
b62kJzIOHKd8fq6SUiqu0NOAS/4iD7fvo+JvmTOYfxm/f4NWnLkn8uR/x+Rl
ysw7Qqtd2rL3+j5x7gG5neUysO/6oxmU+sYO2vNFGk1ae8GxP3V5Lisz86mY
+cPKr7nr3UaPU/s5zmdyrz/ndnsbOXzyUY8t0n09UyP9JoZuOo93y8veNkJr
Zh+irPUfSNrHZNc+Dn/jp02C7uP2Y3icsGddupVx0P78yNrKNY1bv/bZ5ug3
8d5vemt3sef+0zTEv985TZOm76Au/tl8U8R515il2I05PG6MtxcrnxijH+um
z55/h4o7xux53RbjzHsaBkV7nN6RQ/n26+eA0UBdcpuz9my/O2A/ZpS6Ogz2
a2P4ZVEyPp+Pr5fB18q4f/++Y3t3d7eYD3jo0CGhlflnrqX5mHMo54mkz9yE
XmYaWJ7jJ2IzfKSVYzPcdPME+xwxzRyhuk8ku3L1qpde5uPL8ngz1808boPv
rzh3TkWe4wlpvbXSfJfMM03UfbeRcvjY44y97Fozbr/OvkN7KjRUU11FWfbY
44xzBvc8rkvjMnO2nSV9QyWtYBpNjGsOXrPfO/qou1I6TxY7T3NdifR32MNt
7Ph+cf2f8WUZtZusij5WVlaJ+SRqysPXDeTpA6WTfnMB6kaUfxm7lzi3afb+
2X5PuUeZz8+jKRvKqHvYQjVFW+lN9nnAXp7pO+vZfU5N+Z15d1d+LbXF6QbS
Vx8WY1uzeT73L4nPq0820ZC5k/LXf0qrjzW75S/y8PjeZT+n+PusKEOPeD5J
ZX72DndKbS00M+8HeaKsxVoDuy+5lIHna7jgiMfMqpHyrtjM9PP0bNKxNmuv
PkZvvrODdGblenxc2s95Pvf6c/PDZI9vOdnA2sBXPTLfeDv9YTOVsN9dxh/f
sGsa7zLV5L4rjtfz2FEed2NP5yxnfLVJ0H3cXsYp27zr0q2MLm3lmsa9X/tq
c/SbeO83Gubv7H16qV7YPWuKeHYfp6HbJ2jK7Hzh79CdSvH3CSl+fTNV3R2l
0b6rNH36etIPO/Nqr3DObedjATpRJ/2iXTPs105N7iKa9F4Z6zP8+veDuA/W
+Li+BVsWX8ZjQ/kcQK5HXLdzPW2xWITxz6HmHw2fXecAci385ro8SvvrN4r2
Svo2oZld5wBOtM9c7/77nz6mHXvzg9bL/Bh+rKSZI9sGiWB3OjodmtlkMpHR
aHTEL/PnOB5v//3334vvt241xdzf6Fk/FW/+wHkNYdfVPTWSJuZzJ+Tt8j5+
7ffMQ9bMM/74hmNOSknTgLh3zHFouB6380xfe0Lo8tExC522z2WR74uedl2r
Y+3VobJdO0T6QOnU/OakuSPpHvfO9x06s1tbIsonz6PJuWgQ9bnH5d4ZuPwu
xnRs/poljjrMYM8oQk+MWUlTst3ZDn9YTxUdQy75D0jHe3433xD3kNRVpxy6
QFe8xZHPCqZL5LIMtUoxpLyNq0wuZbD3kT3ib9CbSSffe4w3xD1Zzmvxvhrp
/vIYt5+kS9Id2mfGvnqP7byN2ynTvj5NJs/XRz0OddRSxrKloj1WrPnQQ/s4
y9R784TjeWbOmk00xf585FrOeGqToPv4mKSX3DWzrO9cymhvqxzdgFsa937t
q83Rb+K+3wRhQ6o0vZUGzFbfx7HnIdfrmWfaaJSFv/ePaw6um7l+5mswR7Je
ol3/8lpznmszu643x9PE0mfXd/nJlpf/bVDv0+Z5TES7xJvxdZf5+0tE7AXr
p/KYsmxy7AaPIxoeCfx7sSa4Wdj1+p6xl/pDOLbnujSWU82ew63sumPxdx52
Lepn15+g8u8z0dmycmpn12D+mduwddRh8ja+n6fjnwPlyX9zkak7K/Wb/Jc5
2PJbfNWhONYSvs/DzOfhyPQb7k+gvB639gu/Hvvp6OZPaMXO89TJttcd/dz5
+/JVhgT7TUW9j0ewzdFv4qffxLuFW5auri4R18x1M9cl/O/dfO2M5uZm8Q5A
2eRtrsbHoWPhs2ye7zRx1cryZx7XHOt6/mLbLvEubHnMWNbLiz9aH/D92fzY
WPexWJrZMkTnzp33uTbzmTNnqK9/IOZ+xrv13zpBs9/ZQVqf1+bwzdjbR5rr
WqpkzzncTp0+7TB5G9/P06nJL5mu04lgaL/grK36ME13+fvO1jNNaBMY+k2c
WyTK0tvbK+IzeGyz67uzAxn/+3isfOYma2bvd2dvov+3LNPx7ux4qWeugV3H
jmPddxLF+LOxntV/eUUFnThRIub7nS0ro3r2fMfX1FGd1ygskUz85uLADxja
L1kMbQILxZKp30SyLHwuIJ9fpdb4ehux9PnLgjNu3/m6zdz8pYllPfMxY4de
joO+87jZiHUMlkDGf3Ox9gGG9ksmQ5vAQrFk6jeJWJZo+Zyxu0RYvPqcu+cb
EY8R6/p/XI3HR8MSx6Tn1Nj7AUP7JYuhTWChWDL1m0QsC3yGwWCBDL+5xDa0
X/wZ2gQWiiVTv0nEssBnWCxsBJZQJv62Ewd+wNB+yWJoE1golkz9JhHLAp9h
MbE4iA+BqbdEjDuDof3i2dAmsFAsmfpNIpYFPsNiYXfv3YclkIn3PsaBHzC0
X7IY2gQWiiVTv0nEssBnWKzaEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADxx/8HEA+m3w==
    "], {{0, 151}, {717, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{717, 151},
  PlotRange->{{0, 717}, {0, 151}}]], "Text",
 CellChangeTimes->{3.6555505771557837`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Output is ",
 StyleBox["printed",
  FontSlant->"Italic"],
 " in a new cell - which is grouped together with the Input Cell. Both these \
input and output cells are grouped together with the Title Cell above."
}], "ItemNumbered",
 CellChangeTimes->{{3.655550264267335*^9, 3.655550353042264*^9}}],

Cell["\<\
The input and output cells are labelled In[1] and Out[1] - it is important to \
understand that the labelling is temporal and not spatial.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.655550264267335*^9, 3.655550426130355*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Suggestions Bar",
  FontSlant->"Italic"],
 " is displayed underneath output cells and suggests a number of operations \
that may be performed on the ouput"
}], "ItemNumbered",
 CellChangeTimes->{{3.655550264267335*^9, 3.655550508739127*^9}}]
}, Open  ]],

Cell[TextData[{
 "Shift+Enter is how all code evaluated, it is the most important keyboard \
shortcut to remember in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6555505923361807`*^9, 3.655550628584095*^9}}],

Cell["\<\
It is recommended that different styled cells are used to write prose, to \
include comments in code chunks the syntax is (*these are comments*)\
\>", "Text",
 CellChangeTimes->{{3.655550631305449*^9, 3.655550683261052*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnWl0FFeW51Wu6T59pqe663T3zPf5MjPdgGv7MmemC4ztmjPdZrFdUwVt
u1zGGLBdbhtjvMgrYKowBmODoSwBAgmDDBIWEkaAQEICCbRACjK1pNCaaANt
KSm1hFDK3HnvxZJbZGZkKlOZKf6/cy6kIl68uG/JiH+8vO/Ff33+tSdXP5CU
lPTGX7F/nlzx9sJ161Yk//rH7I/fvPrGS2teXfXCv7y6ftWaVev+5/M/ZBtT
mF1l6f8D+58AAAAAAAAAPty5cyfWLgAAAAAAABCXQCsDAAAAAACgD7QyAAAA
AAAA+kArAwAAAACA2UrZlU7a+lmlhxnZpwKtDAAAAAAA7hf09HCgfdDKAAAA
AABgNhNs7Ng9nTfQygAAAAAA4H4BWhkAAAAAAAB9oJUBAAAAAADQB1oZAAAA
AAAAfaCVAQAAAAAA0AdaGQAAAAAAAH2glQEAAAAAANAnOlpZInv2QbKlpFD7
wYPUzv6/dbKa7k3DTyInDZ057MrzYAq1pZ+liWnlaZx7vdfo1s7A5zaSJm6Q
mqiD1aVN+Mrbaie1X2iZVpZOayG1aeU/KD732aZTAxINZH/FfDuo9aO29At0
d1pezjzR7Bf37GZRLzY179STNO6MUOYAAAAAiJJWHqa2hUl07a8fcNkvdk9T
4wxTi3eef/MIDTimlalhnNd2BD23kTRxw/BVMv/1Dz39/bsXyRG2zpKo/XGv
9uG2riB8H3vOU7V3fv9le/w+f/ghmv0iofocAAAAkIBESyvf8tZNv9pH0xvu
0snzb58g+0xpZfOeoOc2kiae6Nv4Sx9t23jhdniZdeb76lqlDsLVbkMHlvvk
Zz3ZHl5mMSSa/SLR+hwAAACQaEArG2M2auV7TUd9te2vD4XVTvYvHvPNS7G6
461h5NhKDd7j3j9+loakMLKKMdDKAAAAQOICrWyM2aiViQaozbtOf/RTun1r
KrRsJhvJ6q1rPeJvQo+b8IktYFa9uSzEXOIDaGUAAAAgcYFWNsbs1MpE46ff
9NGkN7ZXhZTHxMU/+dfJitlqRkLI0Um31/jGPne0JFqksgy0MgAAAJC4QCsb
Y7ZqZRq/QTXTmuPH2uUZnTl93rbuO+ProAyU0A1vn1j/SbT1L1SglQEAAIDE
BVrZGLNWKzP6tv6zj7Y1PMevM0d/Tp+3sbrosxvL0nH4eZ/jG86GOecwDoBW
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
s4Aa099+R/N5WrvQlfe8NbvIqjNYK/HjmTbl6rYi5W3aeaGf6F4dLWX6+ZJD
9tOSu8XHT4dSxmw+XszSPvPxcapg5VHTrM68achPqauctq5eII5ZuvZj2edH
90IrAwAAAGDWoerlmdbK9YfT6cm9bZ7bDvBt7dR47BQdqpG1bz3/fL2DdqxM
pV8tTaMci5VWP32JBvlO6Q4d2vat0Nj7a9QxaYn2vZAZplYepoNLme57fDPl
nTnDLI+2Ps20867rYm9v4ZtCH+4820AOp0Rd5mNiHPqhXVUeuYSllXvOC227
8N10svbaqbe5nDYtYb78x3XU7DXk62w7QUl/8QSZeutd8Q/jN2jJXz4hYjKa
s54Xfm49Xkm9djtZL6aJvOd9WiaXw9ZMFVlvyRr5L5+lvAoTnTn4CR0svRXc
z4ESWYMzHX+JPafkfbVSzucJaGUAAAAAzE6GhidmXCtf2Lyf9tR4jiFL9Rfo
iQ9ryJxyRBsnVj8Pms7R775sEuPKmlYWTFHGU6ksL1Urj8haub+dtrxwiNa8
kikb+7whtyuIV4pWZjo0eVOymNv2zIOqVubjsUliPHZTSgpt3bqVdqZ8Qkt/
wLb97XaPWN1wtLL18DJK+k/vkYeHw8VCl+6sHvTMYPwqPcR8zM7dQguXrqGl
Dz5MKYc/EZrZwcqQwsd53yvzOKQr9xVK+qsXNd0tmffo6vBgftq4Dvfys+KT
f0YMBgAAAABmHbFcB+Pazv2UfN4zwKDj1HF68kub0Md7vLTyiIVrZZuOVpZo
n55WHpmiwb5h6nOzQRG3EYhhOQYj1RWLYOUxGNuui31Cgz7yHp0pOkN5eXnM
zlBRURFdMt3yiAmWgmhlvf0Wdh5vzc018UKhlb0HyQdkX/jYcWU3O/Zf5bHd
F79ltcH28Xl/H3tqZTEmzrSyVdPKchxHoLBuPT9NX/xvSvrRHz38FL5DKwMA
AABgFjPTWrmv4jQ9+vgZalRl4EgXbVgqa17zgXT6Xaacx8k304RuHuHjynvb
jWvl/nZ6Z0kqPflUmmzs82tHgowrO9to0wM/oKR3vxO6zynZ6czG/0ZJ6wqE
phRjv3/xBOVZ+0RyR28T5aW8TU+z9JKSvrfXTs2n3xR6UsRSdPWSQ9GngfaL
uAoeM5x6gXolJ0n2Jjry2j+KGAmrj6BVxrh/+LCIT3Y2HRLHqrEipi8eE/uO
VNwiySlRb32+HKvBysFjme125kPhR2J82NvHYH46zPs1P7tEfMef5ZiMn71H
zfG6CB4AAAAAwDSZ+XUwpuja4eMi1vjJFw6J/9UYCT7vj2vbJ1emKbHIEyS1
Vchz/0xWH62csVJOo/4dbrxyc9a/a/PcnmFa8Mgq19y4lBqe4TCd+eIFbZuw
x1+nbFO3OF4b3/UydVw42P6u8q/ldThU++k6KmrWL4j1wL9Q0qOHlLHcTqHx
N13oVvYOU5GXnwvf/YZsXMuOX5XjRvz4YMRPa9YG13ZljT13rQ4AAAAAMNuI
1frKzpFR6rs9TIPeY5KS5Bsz4Zxk6fk6GOeoQ/ITTyH1046w18EwiOQgu52v
GReNt284yWG3i/ynn5VDjCHrrQc3bdQ6iHzOAAAAAABxR8K8i0S6Q7s/yKQ1
busru+2kk9NYXxkAAAAAAAA9EkYrAwAAAAAAEGXKrnT6XQcj3H0q0MoAAAAA
AADoA60MAAAAAACAPtDKAAAAAAAA6AOtDAAAAAAAgD7QygAAAAAAAOgDrQwA
AAAAAIA+0MoAAAAAAADow7Wyxdro18yK+dvubYHykq1JMSNpvY9pCvOc4Vmw
c/irg9B8aiIjdXLz5s0Q89Kvq5mot2jVt9G6j05Zm8hoW4XXfsbbLp7aKZg/
M9M+4bWLse+Uv/YP/v2Kl/aKVDuHUpZQv5/RrS/ftptOfvr9xrc/RKr+jdSr
sfIbKYtv346m/8H9hs+x8tk7zXR9NdKXQ+2/3r6F6kfgc3uek2vlnv4hWJwb
/67F2gcY2m82GdoEFo7Npn6TiGWBz7BYGNfK9uERWJwb/67F2gcY2m82GdoE
Fo7Npn6TiGWBz7BYGNfKI2MSLM6Nf9di7QMM7TebDG0CC8dmU79JxLLAZ1gs
jGtlaWISFufGv2ux9gGG9ptNhjaBhWOzqd8kYlngMywWxrXyxKQTFufGv2ux
9gGG9ptNhjaBhWOzqd8kYlmi5fPmtHxh8eTzN99+R79enUyLVrwZlvFjeR6x
brPZYFwr33VOwSJs/fZBumGxUNmVcmHnzhdqpm7j+3k6I/nx71qsy3Q/Gdov
/gxtAgvH0G+iXJa7d8X/w8PD1N/fr5nD4fDYH1c+M/s887z2OePUFVq85iNh
/tLEwmdV867bsJ02fLo7JOPHqMfHup/NBhNaeXIKFkEbsA9R0YUSam/vFJ+5
uY/lq9v4fp6Ofw6Wp/iuxUHZ7gdD+8WfoU1g6DeRt+mWZXJyUmjihoYGOn36
NH399deanTt3jhobG2l0dFSkixefVfvN65/RI0+9xv7fLox/fvTptWI7/1v9
HEufuc5d/dbmsNcE5scKrRwHfS2WNsCeg2tr6+jy5StUVnaZzJYa6untDykP
WSs7YRE03g7t7R2G0vJ0PH2wdPJ3LfZlux8M7Rd/hjaBhWPoN9Eri9PppKGh
IaGJuTbOzs6m4uJiKi0tFf8fPXpUbOd/c73M08faZ3fjOpjrYVUjq/+rn2Ud
/VlMfY6cVo59X4uVcY2cm5tLOTk5PmaqrmbPzHcN5ZOQWnmkhy6XFFJ2XiFV
Ndndtg9QjaWeauobhTW09dBYKPmO36LUDV/S6abhafl3+Uo5DTtGDKXl6Xj6
YOkMfddYvdRY2mhg3C3/2610vb47QD2M0vl9u2hXYdu0y99w/hBtO9Nm/JhB
M72ybB0dqZ9efd+d7KcjyS/SmyebI9K/7pf2GzBn0/zlu6lmZPp1Nl1rLvmG
3txziYbjrU28zEgfH+troex9KfTB/ovUZaCOp90O6Ddx32/i1cItC9e9Y2Nj
VFRUJPTwxYsXqbu7W4wff//99yLuor29XdtfXl4utkVCL0eq/n+9dqumiVVz
18nceJpY1rO3Vn6E+2fAoJVl4zpZTyO727Vr1wzllXBaeeQmvfKvK2juY+to
5Usv0Tz2+U3l3jVgyhB/u9vcFXuNX9OZdlvMjtl23R4g3SgdfO452lUz5jcN
v96Ojo0bOmckr88Dpn2izJcHXduqvvwdzVmcTj1+jxuk1N+uoPl7ag2W379d
37ua5n5+3fgxgzdp27tf0vk2/3Xpz8bqMmnO81nKPXKQcndvp10XjY0fBbP7
pf0G6s/TmxuPUfN4gHRjtbTssWS6HihNBKxq32usnJl+yxmrNvE2I338OivL
XFZnBwut1GWgjt3bwbNfGzP0m/jsNzXZn9Li17eIul3w7mEqKTkuPs9d9gmV
3JbHsviz1wJxP3uZNp+0ysc66ujNFcns/vac6AsDrK1O7/5Qvp+5HRsJm45W
rq+vFzqY6+GJiQmampoSOpnv45+58fiM/Px8ysrKor6+PllHx8hnbslf5tDy
t3bS/3l2vdDFKzal06o/HqLVf/pa/K8a/5un43qZp+Wf+bEz7TPGlcO3vv4B
oYVPnDhBXV1dVFNTo+njiooK8Synjjd3dXUHzS/R1sEY7aigzZ8cI+u4/HfW
67+nOe9doFH2ud+cKTR05Yi8r7/pnHxt+qTcI4+hulxavGwDbdvxJ3H9Wbwu
nar7JmjCcUOk38XuGTyd5XSa+JunWZ9xhYbYNetw8ouaDn/lmwZdH/lckRF2
feafL14qpTVr1vgY3y58Yddnnj5YuY3Mo5XLn0zV465tliNv0pzl2dTP/+6r
o22vy88X81/eS5W8zKxMKUz7L9pfa6D83uccpeL0beJaP5/VYcqWtbSI3XvF
nFHLeVr52+fEscs/P0udPD27B6xfto5e2SDXe0qFmd5n94Ss+l7K37GW5m+8
IJ+Dp2P3jpQqO41yn5NfV+4TGyjLYhftt0B9Flr0CVUOjlLulrfp/ZPN1HTu
zzR3+W6yij4gt9fKjOvscz/T08r95rGNLJ9ev/V4v7TfUGM+LVuxmywjQ5S1
YS0t3/ClaDP+HeLjjXI7KPXM2uNAzbDfeuxvK6P1z70k3/Mzj9IfVuxg7aJ+
15JpPWtDXrbKwR52/B+1PLk+4MdXH3zVVc44apNQ+7glc7N2fVi2sYC6tDpm
+5h2WvDyZ7ReacNX9l8U5VXb4eoN737tr83RbxKh3/B701x2TesfaaH3WX3M
WZ5OtvEBykr+PS3KaKB+U4YoW3HHEN2pyxflKu6bYmXPFp+zLB3UeXuALn65
hua8cUqU0ZL1Ac35wymda3F4Fu76DHz8+MKFCyLOgo8nc13M/29ubvbQylwb
u6eLpc/c9mQXi/l76vjx3hOX/Kb9KPWkFpOxaNUH4tiZ9jlSWjkS9Z5odsNs
1rQy18Wc69ev0+XLl8Vn/uymauUrBr73iaaVVas+/S3t2r1d1lzKNV7TyoOu
dJV7X2PXqCN0x+1Ynk5cc9cdoXPsWX85+yz0tts9444yRv1KxkUqzkuTP59s
IWvlaTGuvXLPd1RWr6+3Si9fIcfomPa39zVavTZzGxx2iPTBymtUa3E/3999
jFLSjwpbr4xN9LN7Fb83zl2XRdVNFtoltp8Q+l/vnqlffpvn+dQ0+89SfuZO
WR/wfOxXRT4r2X3WYimmlXw7uzfw/Jcr98qU7CKqtlVr57MVf6Hd74fMGdp9
ozr9A/HbQGVbIx1g9xjRln0tlLXvQ6EnDp+vps7xIVGG+fzc3RfkPmEd08qz
+XKv6Af8vPmWRsrf95Z8rhH9erxv2k/5vpQNsvp7SdY6B0pKaBvPe3E6q9cB
KmPHLmBtsS37Illu3/VTjwO0i2sl1h65ZSX0PveTbS8bdPuuMY12+PQVulkt
67qs6jYqY7pSPn9wzROzNgmxj99pqqBdTJfOZbo6v7KJ7mh1zMv4lty+rC6z
dr8t+vi521NaO1y81erVrwf8tDn6Tbz3m4nJW+J5P5+1L9fNKb/l4/bD8j1p
92v0ypkWOszq6/3Lg0r6UTrA0myuspOV6eH5n1+Xt4/Lv6Mu2HhQtOu2DS+K
Or4T9PzGLFwNx+OU8/LyxJgxH1Pm2/j4cmZmppjnx7U0N/6Zb+Pp+BhzLH1W
jWveRas/1Ob18TFjl+3S/n/iD38SaXja6ejk6fgcSgwGtLKn8f7oHmvR2toq
6uTevXviuY33X3Vffv7poPklplaeoPzdf6TlL8njjeuPy+O7elqZ35+8r6Xe
48/y9ZZpMLd7hqqx5ePYdUzVYup1r2bMr3/8ejs8MuqxTb1Gu1+budmHhiOu
tRY8t44WK8bHqcQ9c9AsdOqCd1MpJfMobeZjHuweZVV0pvc903/53ev2Vbfr
tpyG56Ppix2H2fX9a6Ej5rxRIJ5Flov85XuGx3iW8jtwSr2dqvnvqtrYySBV
s/toVva3wmf5/u+k0bp08durmkYrg/o5o5nVR4a4P/N7stALyz6hXex+s2uH
PL6V1aTfhvdL+7m+L2oe8vdIflaRtcjEWC0t5mnEmGW/fj2ar8m/4VfJ7TpU
5/oeen/X+He3yVJJuXknxfHymKExzROLNgm5j7N0FtZ/5+/3vSapZRxy6/s8
7sE9jUe/9tvm6Dfx3m8mektp/qLdZOOfx1topVov7PrEnw8O1PfRrsdWuGnl
TjH2nNtxl/KZHn7/sjIOozyTpZy/TOeYFVeaqIw9L4wGO79BC1fDDQ4Oalp5
fFwet79165YYP+bauLCwUNPO3CK5JnKktLK8zsV2N/tMWwOD29KXP5a18jTH
lKfjM8aVw7ezZ896aGUed6FSW1vrse+7U6eC5ie08l1n4pi9iyz13drflany
eEW1g11fbyjXV4eaXh73mLOC3TPc8vBOZznM9PQyppWHlXtGtV3kO2dZtnIc
u2f8nt0z9tWKPHf9hqWxDPv1sbSMXZ8doz7bL14s9dlmHxwW6YOVW3zXgqTx
LT8rG7+X8HLY5Xvmys9zmO48SVm5RcyukG2M1REr2yJeNkPld+XtL03/NVlH
bD5ykg7zc+WfodxiKw255S/y8Ph7QvxmuZj5t/k3z9H687dFnvz3Sl6mbek5
9L5bW/bfyBDnHlLbWS0D+9t6YjPNfW4vHfhsDc3ZeEnbP3ddKisz8ymX+cPK
X93t20b3U/tp57N71p9ru9JGmk9+6rFZvp9vq5a/E6N1ruM98lLaRmjM3cdo
15a3Zc1jVzSP5m/8tEnIfVw5hscBe9elRxmHledG1lbuaTz6td82R7+J937T
f20/e94/R6P871vnaM6ivdTJPzvqRBx3pUOO0VjO48N4e7HyiTH5u3fo48de
ptz2u0peLWJc+UD9sGiPc3tT6LBy/Rzq7aJOtc1Ze9q6h5RjJqizvUu5Nk6/
LHrG5+nx9S/42hc9PT3adq4n+Dy/Y8eOCY3MP3MNzceYwzlPJH3mJnQy077q
3D0Rg+EnrRqD4aGXZ9jniGnlCNV9IlnV1as+OpmPJ6vjy1wv8/gMvr+4pCRo
frJWnkwY678mz2PZdr6R7nQ3UAofa1x8kF1jJpXr68t0oLiaKivKaJcSW7y5
pMszjxvyOMzyPYVkrS+l9UybiXHM4evKPWOA7pTK59nFztNkypd/bz3exo4f
FNf9xZ8Xkc0u6fpYWlom5okYKQ9f94+nD5ZO/q4FqRtR/tfZPcS1rfrgvyv3
ktu07bEVNP+TIrozNkKV2TvpefZ5SCnPon017P5mpPyuvO+U/llui3P1ZK04
LsaylvF8eq6Iz++fbqRRRwcd3vIRvZ/X5JG/yMPr707lnOJ3WFGGPvFcMpf5
2T/WIbe10Mq8H6SLsuaau9j9yK0MPN+uS1q85a5KOe/iHUw3L9pNFtZmtoo8
ev7lvWRx6Nfj/dJ+rvN51p+HH3YljuV0PWsDf/XIfOPt9NsdlM++d5t//5yi
ZXzLVJn6qjjeymNDeXyNks5Vzvhqk5D7uFLG+Xt869KjjG5t5Z7Gs1/7a3P0
m3jvN9XM32UZVrle2D1rvnhmn6TRllM0f9lh4e/orVLxe4Qcn76DyronaGLg
Ki1atIWsY668bMWuOet8DMAi6mRQtOtm5dpZnbqa5rxRxPoMv/4ViPtgpZ/r
W6hl8Wc89pPP7eM6xH0719EjIyPC+Odw84+Gz+5z+7gGfn5TOq3509e69lTy
HqGV3ef2zbTPXOf+2x8+oL0HD4esk/kx/FhZK0e2DRLBbrV3aFrZbrdTb2+v
Fp/Mn994PP13330n/r55szFofommlfk1InfH265rB7ueHqiUtTCfE6FuV/fx
a753HqpWXvz757S5JvmNQ+KesVzTbn0e51m08ZTQ4xN3R+icMkdFvR962w2z
hbVTu8H2bBfpg6Uz8l2T54Qke90z39L05R1zviifOj8m5XKXqM8DbvfM4OV3
M6ZfD294TavDzezZROiIuxJV53/laoffbqHi9lG3/Ifk473/dtSKe8fcd89q
esCS+4WWz3qmR9SyjLbKMaK8jcvsbmVQ+sgB8VvzDrKo95zeWnEvVvN6JaNS
vq/cx+0n65FkTfMszqjx2s7b2EbblPVmtvF8/dTjaPs12vz6WtEe6ze846V5
XGXqrzulPccs37Cd5ivPRe7ljKc2CbmP35V1kqdWVnWdWxmVtkqxDHmk8ezX
/toc/Sbu+00INmpIy0s05JD8H8eeg9yvZ95po1EW/p4+rjW4Xua6ma+hHMl6
iXb9q2vGea+t7L5uHE8TS5/d372nWvrhb0J67zXPYybaJd6Mr5vM3zsiYixY
P1XHkFVTYzR4vNDYePDvC9fKEs83wWyEXadv9/bTYBjH9t2Qx24q2HO3xK43
I4HOw65Bg+y6E1L+A3YqLLpANnbt5Z+5jUkTmqnb+H6ejn8Olif/rkWm7iQa
tAcuc6jlH/FXh+LYken7PMZ8HotMv+H+BMvrfmu/6dfjIJ3Y8SGt33eROth2
04lPXd8vf2VIsO9U1Pt4BNsc/SZ++k2823TL0tnZKeKWuV7meoT/rs3Xwmhq
ahLv7FNN3eZufNw5Fj6r5v0uEneNrH7mccuxrufP9uwX76xWx4hVnfzKe1uC
vueaHxvrPhZLc4yMUknJRb9rK58/f54GBocM5ZWoWnk6NnjzFC17eS+Z/V6T
p2+9/QNUfcNMpey5htvZc+c0U7fx/Tydkfxm0/U5EQztF5q1VRynRW6/5+w8
34g2gaHfxLlFoiz9/f0iDoPHLru/4zqY8d/BY+UzN1Ur+77jejv9v9e3ae+4
jpd65trXfaw41n0nUYw/E1tZ/V8oLqZTp/LFPL7CoiKqYc91fI0co/kIrTwx
CYtzE9+1OPADhvabLYY2gYVjs6nfRLIsfI4fnzdl1Pj6GbH0+fPM8x5/83WX
uQVKE8t65mPEmk6Og75zvxnXyuPSXVicG/+uxdoHGNpvNhnaBBaOzaZ+k4hl
iZbPm9PyhcWrz6kHvhZxF7Gu//vV5HHlu7A4N/m5NPZ+wNB+s8XQJrBwbDb1
m0QsC3yGxcKglRPD8F1LbEP7xZ+hTWDh2GzqN4lYFvgMi4WJGAz2Pyy+TfyG
Ewd+wNB+s8XQJrBwbDb1m0QsC3yGxcIQr5wYlohxZTC0Xzwb2gQWjs2mfpOI
ZYHPsFgY18rdt3tgcW7i/Yxx4AcM7TdbDG0CC8dmU79JxLLAZ1gsjGtlAAAA
AAAAgC/QygAAAAAAAOgDrQwAAAAAAIA+0MoAAAAAAADoA60MAAAAAACAPtDK
AAAAAAAA6AOtDAAAAAAAgD5cK/9/VPG8eA==
    "], {{0, 152}, {715, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{715, 152},
  PlotRange->{{0, 715}, {0, 152}}]], "Input"]], "Text",
 CellChangeTimes->{3.655550571328644*^9}],

Cell["\<\
Cell groups can be collapsed and opened by double-clicking on cell brackets.\
\>", "Text",
 CellChangeTimes->{{3.655551717500675*^9, 3.655551736738843*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["CamelCase", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.6555387924792967`*^9}, 
   3.655550521449564*^9}],

Cell["\<\
There are over 5000 symbols defined in the Wolfram Language, all of these are \
written in CamelCase. All built-in symbols start with a capital letter and \
each sub-word does as well, this allows for easy function discovery and \
auto-completion.\
\>", "Text",
 CellChangeTimes->{{3.655550694488031*^9, 3.6555507642855177`*^9}, {
  3.655550797124761*^9, 3.655550810309524*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnG1QU1cax2l3P/RjZzpdsLvd2X7X7gp1p99U8GV3doWI3Vkrbju1gF2n
RWtbUbtFbbtY2gIqhiKCjlApre9QiAiIvGlAQF4FBWJ4JwESSIBQo/Pfc84N
ISGxbXJvk+CeZ+bPvfec+zzPzb0/nnNOZnJf2LI9PPpJPz+/954if8LfiF25
c+cbezY8TQ7+EfPev7fGREX+Neb9qK1RO1/e8ivS+Heir4l+TQRu3Lhx48aN
Gzdu3Lhx4+YdM5thMJphZvsPhS03bvOs83wjnlxeheWhN6wKi2lFZc8DiTLM
oDCpHk8srmSiueh2c7Ye/GsDbvOtTn7dyoqt/MK6YLA5z2ycgVY7DZ3p4Y8H
NN8n5/1grX83Ep3HD0sd4zxyczSTAQmhFYS/DqhNZgy0dGH5EsLjklrUG4X+
E7tq7FjanDoEE3N+iJKDtVhM62vsPTQ33EPoEuGcxfsHYNYNWmJV43DZJPMY
qGpn/SuSRjiP3JzYfZzYVMH4S8i4iwMW9vwiVIw5U5eKMFWN6IPdqGwYQkKk
MN7mdNPx3IwSea0dqysib2KxxX+w4bZdLMGIz/EW5NwycR65OTGBR1bTSJ1b
PDtev1gHpY50mydxSd6EiE01WL5prk4evnXf4m+2+h8qm7Y0CesWQ0uHMGeM
7XO6fuE8cnM0gSe/MJWVmYokpTAuf6vHpV0Ca5uTetDcMYbTu26w47TW2fXO
Q8Gf8Ns+L7LJwqPfyjaobdoNg+NQax9wHrk52EDVHWF8JeP1gaTbOLCvwVoj
P6814XSkwGN0qhqVV7oRtVw4fiKqEwPmGVI7b1lrZkRsM/bss12bz1hr5xOh
jTh9Xo2E2fkA4f8pziO3edaUVeuw9qXrjz0ZGjbn0zZ0WvlkzO1qENYoL95C
s1GH7Usc185prTajs5muh27Y9S/e1IzKQV4fublpZD6o092HScSX2KbZ74uM
c0E4j9y4cePG7XG3qo4BLi6P6OfyaJye4eL6RcV55PIlcR4fTzWptV6/Bnfk
Co8Gcj7XwlBpa5/Xr8EducTjlIlrgYjx6APX4apc4XGCnM+1MER59PY1uCPO
4+MpqXnsHtLh8i0Vsq+1IaO4mWxboWjoRufgmKR5OI+Pp6TiUT85jbLWHqRf
aXqkSpvV0BunJcnnCo/6SZNoDfWr0NDSNqd2FfrGxcelGulvRd7FczhXWIrq
mhvII//HI6S9+sireO655+D/r0z0SZBnTnqUn/kGeQ3DEsaURpRHKeJca+l1
yuCFmjt2x8VN9yTJ5wqP4+R/RazKP13M2LDVot+F47LaKCpu15UjDnF/84cE
qGlf1UmEUR7DMzAswWewSl+DYBJ3aaJSupgSifIoNoaKjNHOWFTeHYDpvtmB
ya7BUdE5Pc3j6N0CBJJnuDL+KmFDi9wPVjB2PikfIv1a5B95B8FBAQKnv12F
/+TUWXx1yN0ViuCQELyffhn5xz5gcRYtewuXm0oZbwHPv4ZzDSTOuBqZkU8z
/9JhE/PNjHiGxQwMCSTtL+Ht9AqMsrhu5rxzF+eOxQkxow8i9+JZZJ0phXrc
+yxKxeOVW/ceOUbPZ5FKUa/yKI8647R4aavwKn2m63cj+Ugi3gzxZ89U3qyH
Tt+CDwkvoTFJuFSmwMeyZ1ntvDZCfXU4++mmuZpKmAqVLWX7SV//l23XkTo1
m0fbVoCPE/MxyI61kJNY9JzQd2JZTspd8ZBJdE67Ok/6WUwp7pNIUR7Fxjhd
ftuBudyqdqi1E2Qd41g7s8gaR2xOb/E4/1m+mU5ZMuDa11/izQgZee4yoRYR
NuaesY5xRetg4T2hbXDEgF7lYYHHFOUj8go8+q9OZnzWpP1NYI7FdS8n25Ja
v5Kcv4LU+l69Dr1kfPM2h1LyeKK02WltpGM1HbPnt9N1tyd5HDNOiZdOyXhc
l9IkHPd+L6w1CCs3iz5h+ytjjqKgqhzyt//I2KjSz/pPCFyReaDGJmaP8hDz
Wxqbb5NrDG23uzBg2bf1U6b90xr3jps5mbSVCKU8JtZZ2zR6Ce6RBKI8io3h
rD4W1HcxHmmddFYfxeZ0hcdRw5RoteZ/KLAj242ktBTsjQyz8ChHefYbbH9L
Sh6uXv0O24KFsXzbsQoMG/rx3ZGPsC4wgI21e7+Ix2cnaTuN24m9gYvYuRvj
TuHihZNW34LBaXRUnGB1jHJ2urIaB2ziKt3OSaSpxDpL3M/SvsQW4hvw/FbU
6cTfJ7GiPIqNUdSgcmCuQTXM+kqaHOeWBWT+KDanp3msPLzRYaxeGrIDF9t0
GO0pwxab9o2REWz89F+fAbVGiY3z/PzXy6G2xB1WVWFv2LN2/dtSSli/bc4t
H8Uxhqz+InJSXf3qbbv5405bXhc4j/S7bmc8DuqMTtczHf0jC47Hn9YE1L0a
9LtZY9S9PehQDbjoLy7nqG4MavLsfIFDKXmkutqs/tHvwm2/f5Qinys8jkxM
itKhFDlWr1nrcV38XiH62heaKI9SxNGMG52OzXYsNqrJvNkoST5P8ljf3Ip8
RZHH1d51z+t8LFQeZ0XH4sL6bmSXteF4sbB2KajrQnvfiKR5PMkjl+ckNY+e
kis8asn5XAtDlEdvX4M7conH8UmuBSLGow9ch6tyhUc6t+VaGKI8evsa3BHn
8fFUvWrY69fgjjiPXL4kV3jk4vKEfi6Pph/MXFy/qDiPXL4kziOXL4nzyOVL
coXHaXI+F9cvKc4jly+J88jlS+I8cvmSOI9cviRP86jT9KK1/c6cOnuhnZLm
sxg0HVB8fxF5Rddws74WirI2GEj7TbnwG2r/109CK+n9M+L6+e+gaB5x2leS
sR8hL9Hfgi1DxN4c3JmwXOdYD1qbZ+9BN7r79V7nwFfkaR6vH3T2vpRXUNI/
Iypuz1W54/tSXvgSg7RPmQUZ5XHDSeikvH+T9Qih76c4VOfQZ7h9il2DbMfH
2Lc1hO1HZN9mfTmbn3G41sDXjqFbov/LhSxP82i4V4Qgcv+DEyoIG3qc3R3M
nkd8Na0xeijk21lNEX6vtwb7vm20+Bpxdo8MIatWIzazBIqMWBZn0Z+3oaSt
nPEW8PzryKO1amoAp6KfZv7lYw+Y7ykLA0Grgli92p55ndVOt3N2q5BH6h+L
+dbnOEvqcs75cgzaMGWYMAnbpix2XnDCDaGvT7gH/mu+QKO6BUd3CPcg8ECp
13nwtlziccYsXnolNtNnGr4XR+WHEL1K+L1zevskqTcd2Ed4kb17GIrKYsSz
d5e8guvj1NeIvPgIm9+WLoNMFsj2U3IPsm1Ycp01j6GzCPHJhdCxYz3SLe9L
ke3Yw3IyVkcfiM5p/76UZUJM6+c1Imf7n6z9ir4HdvfAf8MxaC3HrH6vOYJB
Ke7xApa3eJz/LKMzKUsmXM9NRvTmcMjWhwu1iLAx94yNjCtaB0ssz1Y3boK2
7qjAY2rdI/IKPNLnTflsPL5OYI7FdS8n26qK2Hgd/FkFtJNGaEeN8/KacDM/
A/ui17Pri8pscuCR8aevF47XWvj8P5bHeTQK9z4s9bZwPFQkrDUIKy2l8Ww/
5N00lCirkU5qC2Xj5uTc82VckXmgwSbmLI+BexQ2uYzoJmslnQ1Ts36Nx1+1
xu1xM+csV7SuBSc3WdsMk04+s6lZ4G22/lnuwWxMXWOuMH5zHl3icYqcL1Zd
ly3vqCPjdUrGV4iz1A76LGq+iRTqSGohqisvIMYylseQud7EjAaX5PshCwpg
Y21cUgISs2k7jduDuCDhfSkRB06jMD/b6ltM6lzPjSxWxyhnZ5S1iLeJ2+h2
TiILjzRuYkYyoohvwO+3oYUw2fJNjNCeVYgz8t3W+SH168iLs85VY/fvsI4R
cVf6JLnHC1me5rH26CaHsTpw9U4Udk5iaqgSUTbtEdGbhbpB6oiGjGkR899d
QsY7jSXuRF8N4mT270uJSa1g/bY5o/YfYAxZ/UXkpKo+vt1u/hhr4bWn4jiL
M9sXsOw9lPfNMJ/CfSvtYgat2oD4C41eZ8EX5Gkef1omaIb1GJt0z18zPIie
Pq2L/uJyTpG5o4bMHSectA/0Cdfj0MflVK7xeF+U5F+lYe3av3hciqJi0dfO
5Rl5kse2jju4UlLqcan7+r1+n7l8j0curp8S55HLl8R55PIlcR65fEmcRy5f
EueRy5fkCo9cXJ4QN27cuHHjxo0bN27cuD1O9j++nOpt
    "], {{0, 76}, {164, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{164, 76},
  PlotRange->{{0, 164}, {0, 76}}]], "Input"],

Cell["\<\
All charting functions can be discovered using the following syntax:\
\>", "Text",
 CellChangeTimes->{{3.6555508500701027`*^9, 3.655550863164989*^9}}],

Cell[BoxData[
 RowBox[{"?", "*Chart*"}]], "Input",
 CellChangeTimes->{{3.655550877875248*^9, 3.655550883279397*^9}}],

Cell["\<\
It is highly recommended that all user-defined symbols are written in \
bowingCamelCase so as to distinguish between built-in and user-defined \
symbils.\
\>", "Text",
 CellChangeTimes->{{3.655550887419873*^9, 3.6555509336466846`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Command Completion", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.655538797834478*^9}, {
  3.6555485462307653`*^9, 3.655548550785726*^9}}],

Cell[TextData[{
 "Symbols that are blue are unknown to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (they have no ",
 StyleBox["definition",
  FontSlant->"Italic"],
 "), both user-defined and built-in symbols with definitions are coloured \
black:"
}], "Text",
 CellChangeTimes->{{3.655550945009966*^9, 3.65555101392898*^9}, {
  3.655551189445448*^9, 3.6555511908845243`*^9}}],

Cell[BoxData["BarChart"], "Input",
 CellChangeTimes->{{3.655551016164378*^9, 3.655551017194928*^9}}],

Cell["\<\
When a symbol name is complete the following shortcuts can be used to obtain \
a template for the function: \[CommandKey]+\[ShiftKey]+K (Mac) and \
\[ControlKey]+\[ShiftKey]+K (Windows)\
\>", "Text",
 CellChangeTimes->{{3.6555511927571087`*^9, 3.655551304132338*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvflfVNe+90lynnte53Vv336ef6Fft7tvP0eT0+envn3PMSbp54d7YpWe
5+mbgEnuiejJIJqjcUowmjiDA05IAqgBDajgiIqoCCICMo9CMclUTFUFVRSD
mJhXf3qttYfaNVJgFYX6Xa/XW6m917x3fT/ru9aqvf+X5Wv+xyevhoWFrf8N
++d/RH751rp1kdH/739hH9792/qVn/7t47/+6W8bPv7043X/svxX7OATxqlX
wsL+E/sfFChQoECBAoW5E56Oor2+ClVVEoa+0VDXiAIFChQoTCNMWq2wemB0
dBJPQ1qzp+gzPEBOVhZycvJQWmWAeZRpTukN5BQ2i7qNVh4EdxEV5u8rD2mN
HcGO0vMpSEy5inYfskjuLQUKFF7m0HfnWycb7sbf/Xccudow61r0tO8Bot/y
Ua9fvY3SUXcNWny0ZpZr6jlM1iU46pT00Gs80iAKFCi8zKH++3d8a5BM9M2B
WavTZOdlvD5VnZg2VnH/gs/F3TuJt/yw97MZRrUa5EMXSYMoUKDwUofJTqSs
fcNh2/+fr5GVk4P0lFgseV1j8/9yFpOaZKNdlUg/sh2ffPghlixZIvjwk7U4
cqEMrlNPVsMdJB5JRGIi48gR5DSPgc9VFZ4/zNIvxltvsbRfJKHeyr2tYRx5
y9nfScypRp+5D1VXDjm0SdEgHn6uxYevvCKOv7U5FecTv8SHok4fYkfSTVg9
NDt49ZeC+cFutQ1v7isSfuTTp08F2kAaRIEChZc9PG06odrLD1I71OMGrY/0
3+JVWz7ZdNq3j7LumtPcXdXhPzif//NmRC92T/cm8xcmNXXhpDc/caqrIS1c
1aBSRSweV6ga5BGmn1pdCW79p8ib93GSwy8iDaJAgcLLHrTzRmG/+QyJ6SnY
G/2x03yYdj7JaQ3m7U+ReD4HWT986eSjlGqMvuGHCL/m+7gNr9fG/cspJ99L
BHsF1jL/7LU/70e7IhQeNGjJkvmOz6/+Dlldv8xK/V3Xpzzy35JVTSQNokCB
wssenDTIhVfl+bi9Tv7IJNqr7kl71eoNaG/vQp+5DYlLPMyTyeGpKVdds1G0
Lq/dhklrG7JSDuNI4gWxf6z+e4e993ttR6tBv/4L8vokvcn5aoGa15Fq26zU
/6m1CelHjiD6g3mOuKxOe9mxvXv3Yu+OvchqcNSFNIgCBQove3DVoNdff53h
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
0mQbIez1UvW463sbom+UCRuaYpiQyx0Qzy91nYvj7yRQPnfK7yTolXWngo2b
G3gdWZ2c9kZo6qc8n1OZiyuJe1fohte2qWW5vz9A6SsxTzkuvdPies8Tdc1J
lKF51wXPp0Z+14W3tjzgz+1ckaHWf7TlvNQ28Zw4RYOkZ5k2iGd8Op4VZ+tv
h6HHYZMHPLwbIq+nXfQrfzeE45mocvqeJuTJ76DYJr+DQnn2qtt1KR8W6fkz
RbX3ScR3RZ6vL9MX52ejdkrPG2f+VtL5PFQ0dWnmR+W1wLp24b8JneN6xDT3
K/k5twPye514f4f6e0sQLwpzQ4MswuZofQD+bGRuq7w+W1/7/GONBnl8zrTV
y3sbqvIln6LjiaMefr6bwSbXOebGPTfdci7b/TnTNbId9v7eACUfz+8PEOtL
zL8ozI5R9zr4864Lb20pljVUOT7akiaeNW4YrnLXoPRPhV4ptnvUOsh8rQlH
nf1+NwSLO+HrHRQrcMv8i5yvUcTje0Uqjq1ETIFZLY/7VxEnSr2+l8O1723m
XlTkXkDcZumdq+vONqrXnucREbkKaWXNSGN6mFRWg6T1+2CQ5+dsjSmqXxfq
7y1BvCjMDQ2S35Gw4gfpGfrWevF8az5P5O3Z+tPTIG/vbegX8SOZDeM+gEWe
w/Hn3Qz8nPIeG93i/eIdm05t4mXLeyZc7aBih722TY7n/f0B8niez+nd6Zbr
OfW7Lry1hafl4/4ScXwShXxea8N1jNrdNYjbYUdco9Bfx1wcx993QzxV36/g
6R0UXA+U62WsTFWfVS7mJ1kcsR5mluY1U+rMnq+vYcK5X/ruOj3znOuXdq9f
YdyfmCZfhzLHyfv7eofD5xFjh0P3YajKRVrqaVwu13wv+D7I3BJ1fY0gCP+Y
KxrE19/5uoX2+f8rhf31/Gx9p2f8q+N+b+86eOr1vQ221lx1fV1BeY8Bx9s7
CcR5q2QDV2rePedoT5Moj9vLbpd3HTjej+ClbUrZPt4fUJPyhbpGItVz6ndd
eG/LOG4x/0I9x/ytQq4xGn/KUecR57irEp3qzPHv3RA8rsX7OyiYpkRo7odt
Fx462h0e4d4nXq6v8774EVze9p6mnStwuc4x3ig5HotbPZLvVZH8GdP3fk27
JL83pc4kzkUeuokBbbuZnop9kPSOIYKYFnNGgwST0vsIPLyv0uOz9aeN5/c2
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
h+UJvyeev8t2TPI19etP4lJ2Car4XOP675F2/h4KeZtWS/MAN9ctEnmnXcmF
YVi6dnwuUbcjTyqL79VjPpx2rZMgZoM5rUFLf1RtWZTGllXL+2n7a9PVdWB9
+GpE87Vq/WqU95Vp9mb3iHWI8ENs/MyORyvx+Xg2oVD4Ow2XHXsBxFg4q0Gt
h9cy7Eo9U5zS8rUbvu7uLV1hudYH0GBvRby8luyom8vebGFrWdnDFmREv+OI
u/lroUlRp8pd9nKPCTvjtA9bzcPVp2E+361jTm1R1rSrNfuXeXu1fpDr3nF/
rhu3xzHK3gd2fl1khPO8F4vfwHw7RZuUdMram1rHiJ2oHv7Z2d/yco21/RwX
rndq50qmAV6vs1laGxJtHqrU5B2B6O3Sno+U0nLhN6n3QMR+qV7e6mJ35Nn1
8LK4dkqccHkNTKnvtT3vSmtqX3+PlD3LRH9l1JlwM2aZejxD7IeIYMeHhF7z
ONdaRtBfkeLYs3I3R2hgZMIDeS6zX4y91PEJG7eJvXpzbb8+8cIzVzXIb+wW
GPss8vdK+u2l7zRjLP4A+oed399jZ3a9s9sI47CH9/r4U4ZTnJnWjdlwk8Wt
bt7o17TDbrfB6nEM+xhWu//vKrLbpX7oD/q+3jH0s7Z6rrNSF+ff0XI/ZKW8
duPW135cY22fiL5zbaO368V8aEcfSnmb5Xpbh21q/P4+I+s713p5qYs2z3HW
HtbnnX02L/eEXAZPo92TOWxT26Med4mjvS+sds3913tLaFU57d8mQsxzr0HE
S4P5wQF1vox4Ntqufyv2yl/LLpmV39ERhDdIg4jnBftwD9q6aR9xIDAoc51F
nn+PRBCzBWkQQbyMTG+OliCCBWkQQRAEESpIgwiCIIhQQRpEEARBhArSIIIg
CCJUkAYRBEEQoYI0iCAIgggVpEEEQRBEqCANIgiCIEIFaRBBEAQRKkiDCIIg
iFBBGkQQBEGECtIggiAIIlSQBhEEQRChwl8NIgiCIIhgQIECBQoUKFCgQIEC
BQoUKFCgQIECBQoUKFCgQIECBQoUKFCgQIECBQoUKLyo4f8Hw3BnPg==
    "], {{0, 248}, {
    417, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{232.1796875, Automatic},
  ImageSizeRaw->{417, 248},
  PlotRange->{{0, 417}, {0, 248}}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["F1 for Help", "Section",
 CellChangeTimes->{{3.655548901110567*^9, 3.655548904585969*^9}}],

Cell["\<\
The Wolfram Documentation uses the literate programming paradigm provided by \
the notebook interface to provide an amazing wealth of examples and \
documentation for most built in symbols.\
\>", "Text",
 CellChangeTimes->{{3.655551421044325*^9, 3.655551453670739*^9}, {
  3.655551650101161*^9, 3.655551667271708*^9}}],

Cell["\<\
To obtain the documentation page for a symbol, simply select the symbol and \
press F1.\
\>", "Text",
 CellChangeTimes->{{3.655551669327256*^9, 3.6555516899487677`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 "Entering Data into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Title",
 CellChangeTimes->{{3.655538816966523*^9, 3.655538840895505*^9}, {
   3.655539111459609*^9, 3.655539113941196*^9}, {3.655539338441272*^9, 
   3.655539340139387*^9}, {3.6555517822260933`*^9, 3.655551786712582*^9}, {
   3.659181326495264*^9, 3.65918135091934*^9}, {3.6635745365700703`*^9, 
   3.663574537818947*^9}, 3.673761648232256*^9}],

Cell[TextData[{
 "Data is primarily entered into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " using Lists, these are denoted with curly braces:"
}], "Text",
 CellChangeTimes->{{3.655551792866411*^9, 3.655551820812173*^9}, {
  3.655551852553419*^9, 3.655551861291546*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]], "Input",
 CellChangeTimes->{{3.655551864220578*^9, 3.655551869088372*^9}}],

Cell["\<\
Variables are assigned in the Wolfram Language using the function Set, which \
has the following shorthand:\
\>", "Text",
 CellChangeTimes->{{3.65555193325988*^9, 3.6555519887910223`*^9}}],

Cell[BoxData[
 RowBox[{"myList", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6555519902811728`*^9, 3.655551995823853*^9}}],

Cell["\<\
Lists can store any content, including mixtures of different types and can be \
arbitrarily deep.\
\>", "Text",
 CellChangeTimes->{{3.655552007263999*^9, 3.655552039541033*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Summarising and Tallying Data", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, {
   3.6591813322358103`*^9, 3.659181356161953*^9}, {3.663574545986422*^9, 
   3.663574546196909*^9}, 3.673761650156106*^9}],

Cell["\<\
The numeric data collected could be summarised in a number of ways using \
built-in statistical measures:\
\>", "Text",
 CellChangeTimes->{{3.659182069734902*^9, 3.659182113586982*^9}}],

Cell[BoxData[{
 RowBox[{"Min", "[", "monthsAtOx", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "monthsAtOx", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "monthsAtOx", "]"}]}], "Input",
 CellChangeTimes->{{3.659182115493286*^9, 3.6591821362455587`*^9}}],

Cell["\<\
It is common to create a simply frequency table when summarising data, this \
can be achieved in the Wolfram Language using the Tally function:\
\>", "Text",
 CellChangeTimes->{{3.659182160725321*^9, 3.659182205860024*^9}}],

Cell[BoxData[
 RowBox[{"departmentsTally", "=", 
  RowBox[{"Tally", "[", "departments", "]"}]}]], "Input",
 CellChangeTimes->{{3.655552126028328*^9, 3.6555521454869204`*^9}, {
   3.655552668043029*^9, 3.655552674893113*^9}, 3.6555527881212587`*^9, {
   3.659168939963677*^9, 3.659168959121826*^9}, {3.6591822150653276`*^9, 
   3.659182219407258*^9}}],

Cell["\<\
Frequency tables can be useful in their own right to visualise data, which \
can be achieved in the Wolfram Language using Grid:\
\>", "Text",
 CellChangeTimes->{{3.659177240605611*^9, 3.659177271573247*^9}, {
  3.659177330122653*^9, 3.659177332785098*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", "departmentsTally", "]"}]], "Input",
 CellChangeTimes->{{3.6591773348006067`*^9, 3.6591773481092987`*^9}}],

Cell["\<\
Tables provide the most basic tool to present your data - however they are \
difficult to consume as datasets grow (both in length and number of columns).\
\
\>", "Text",
 CellChangeTimes->{{3.659178380440197*^9, 3.6591784250018587`*^9}, {
  3.659178557046608*^9, 3.65917871142971*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Summarising and Tallying Data: Summary Visualisations", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, 
   3.659178513038447*^9, {3.659181363046502*^9, 3.65918137580404*^9}, {
   3.659182002558535*^9, 3.659182007126169*^9}, {3.663574551476749*^9, 
   3.6635745733357677`*^9}, {3.673761655488831*^9, 3.6737616556685343`*^9}}],

Cell["\<\
In the Wolfram Language visualisations are split into two categories:\
\>", "Text",
 CellChangeTimes->{{3.659178717258232*^9, 3.6591787815512447`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Plots: visualisations used to display data or expressions for analysis\
\>", "Item",
 CellChangeTimes->{{3.659178783486902*^9, 3.6591788207586937`*^9}, {
  3.659178942724872*^9, 3.659178989655821*^9}, {3.659181445442285*^9, 
  3.659181446680204*^9}}],

Cell["\<\
Charts: visualisations used to represent data graphically for comparative or \
informative purposes\
\>", "Item",
 CellChangeTimes->{{3.659178783486902*^9, 3.659178816670637*^9}, {
  3.659178892837541*^9, 3.659178940246091*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"birthRate$LifeExpectancy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Tooltip", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CountryData", "[", 
          RowBox[{"c", ",", "\"\<BirthRateFraction\>\""}], "]"}], ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"c", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       "c"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", 
       RowBox[{"CountryData", "[", "\"\<Countries\>\"", "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Plots\>\"", "->", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"birthRate$LifeExpectancy", ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Child Mortality\>\"", ",", "\"\<Life Expectancy\>\""}], 
                "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Manipulate", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"x", "^", "n"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"\"\<Plot of x^\>\"", "<>", 
                  RowBox[{"ToString", "[", "n", "]"}]}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
                 "}"}]}], "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MatrixPlot", "[", 
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"20", ",", "20"}], "}"}]}], "]"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", "\"\<Temperature\>\""}], 
              ",", 
              RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Manipulate", "[", 
             RowBox[{
              RowBox[{"Plot3D", "[", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"y", "^", "n"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y", ",", 
                  RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"\"\<Plot of Sin[x + y^\>\"", "<>", 
                  RowBox[{"ToString", "[", "n", "]"}], "<>", 
                  "\"\<]\>\""}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
        
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\[IndentingNewLine]",
        "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Charts\>\"", "->", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PieChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
             RowBox[{"ChartLabels", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
                  "\"\<d\>\""}], "}"}], ",", "\"\<RadialCallout\>\""}], 
               "]"}]}]}], "]"}], ",", 
           RowBox[{"BarChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
             RowBox[{"ChartLabels", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
                "\"\<d\>\""}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DistributionChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"1", ",", "10"}], "]"}], ",", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"2", ",", "10"}], "]"}]}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
           RowBox[{"Histogram3D", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RandomVariate", "[", 
                RowBox[{
                 RowBox[{"NormalDistribution", "[", 
                  RowBox[{"0", ",", "1"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"500", ",", "2"}], "}"}]}], "]"}], ",", 
               RowBox[{"RandomVariate", "[", 
                RowBox[{
                 RowBox[{"NormalDistribution", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"1", "/", "2"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"500", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.659180459922975*^9, 3.6591805065160522`*^9}, {
  3.659180541605551*^9, 3.659180582880281*^9}, {3.659180628677067*^9, 
  3.659180657006661*^9}, {3.659180692093977*^9, 3.659180693220007*^9}}],

Cell[BoxData[
 TabViewBox[{{1,"\<\"Plots\"\>"->
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6], 
           PointBox[CompressedData["
1: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
n8nWsHXGQ0+Dfik6wgDsvTX8D2d2efE=
            "]]}, {}}, {
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029025381889095703`, 60.947}}]},
            TemplateBox[{"\"Afghanistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Afghanistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01272988359798132, 77.392}}]},
            TemplateBox[{"\"Albania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Albania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025378178663483634`, 71.}}]},
            TemplateBox[{"\"Algeria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Algeria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021785676051814584`, 73.72}}]},
            TemplateBox[{"\"American Samoa\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "AmericanSamoa"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.007394677284664818, 82.51}}]},
            TemplateBox[{"\"Andorra\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Andorra"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04534902648489603, 51.899}}]},
            TemplateBox[{"\"Angola\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Angola"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011552090715804392`, 80.65}}]},
            TemplateBox[{"\"Anguilla\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Anguilla"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01626595103784435, 75.954}}]},
            TemplateBox[{"\"Antigua and Barbuda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "AntiguaBarbuda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01658001774299256, 76.305}}]},
            TemplateBox[{"\"Argentina\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Argentina"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012848911795098198`, 74.561}}]},
            TemplateBox[{"\"Armenia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Armenia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009668432339302407, 75.455}}]},
            TemplateBox[{"\"Aruba\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Aruba"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013216366047995908`, 82.496}}]},
            TemplateBox[{"\"Australia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Australia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009664365497680395, 81.137}}]},
            TemplateBox[{"\"Austria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Austria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.017177043530490134`, 70.753}}]},
            TemplateBox[{"\"Azerbaijan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Azerbaijan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.016205289272766762`, 75.237}}]},
            TemplateBox[{"\"Bahamas\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bahamas"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014413593312196372`, 76.608}}]},
            TemplateBox[{"\"Bahrain\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bahrain"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019966147630768993`, 70.657}}]},
            TemplateBox[{"\"Bangladesh\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Bangladesh"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013080878779746579`, 75.37}}]},
            TemplateBox[{"\"Barbados\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Barbados"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010764721753046358`, 69.928}}]},
            TemplateBox[{"\"Belarus\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Belarus"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011951285723681182`, 80.548}}]},
            TemplateBox[{"\"Belgium\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Belgium"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.023240779457250546`, 73.882}}]},
            TemplateBox[{"\"Belize\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Belize"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.038685938274495735`, 59.33}}]},
            TemplateBox[{"\"Benin\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Benin"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010654874085506107`, 80.43}}]},
            TemplateBox[{"\"Bermuda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bermuda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018989305186092865`, 68.294}}]},
            TemplateBox[{"\"Bhutan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bhutan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02613981854909262, 67.26}}]},
            TemplateBox[{"\"Bolivia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bolivia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009336738431517033, 76.37}}]},
            TemplateBox[{"\"Bosnia and Herzegovina\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "BosniaHerzegovina"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.022709038416839245`, 47.572}}]},
            TemplateBox[{"\"Botswana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Botswana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014771680536468955`, 73.937}}]},
            TemplateBox[{"\"Brazil\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Brazil"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014434256131268372`, 77.26}}]},
            TemplateBox[{"\"British Virgin Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"BritishVirginIslands\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "BritishVirginIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015076071922544952`, 78.547}}]},
            TemplateBox[{"\"Brunei\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Brunei"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009368102675336722, 73.549}}]},
            TemplateBox[{"\"Bulgaria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Bulgaria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03790404351758525, 56.344}}]},
            TemplateBox[{"\"Burkina Faso\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "BurkinaFaso"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.05131355177201367, 54.104}}]},
            TemplateBox[{"\"Burundi\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Burundi"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02628469595976638, 71.916}}]},
            TemplateBox[{"\"Cambodia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Cambodia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.039371303909643544`, 55.065}}]},
            TemplateBox[{"\"Cameroon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Cameroon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011338460651798075`, 81.482}}]},
            TemplateBox[{"\"Canada\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Canada"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019447367092834098`, 75.093}}]},
            TemplateBox[{"\"Cape Verde\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CapeVerde"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012055492875349965`, 80.44}}]},
            TemplateBox[{"\"Cayman Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CaymanIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.033530394226830115`, 50.179}}]},
            TemplateBox[{"\"Central African Republic\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"CentralAfricanRepublic\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CentralAfricanRepublic"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04819486098610291, 51.182}}]},
            TemplateBox[{"\"Chad\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Chad"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013828969442191863`, 79.955}}]},
            TemplateBox[{"\"Chile\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Chile"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01343078676567563, 75.331}}]},
            TemplateBox[{"\"China\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "China"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018516248631090432`, 74.038}}]},
            TemplateBox[{"\"Colombia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Colombia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03207696700007876, 60.874}}]},
            TemplateBox[{"\"Comoros\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Comoros"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01818759936406995, 74.22}}]},
            TemplateBox[{"\"Cook Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CookIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014948664096910261`, 79.93}}]},
            TemplateBox[{"\"Costa Rica\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CostaRica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009275597654075174, 77.048}}]},
            TemplateBox[{"\"Croatia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Croatia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009425207723573512, 79.262}}]},
            TemplateBox[{"\"Cuba\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Cuba"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012837451306219183`, 77.138}}]},
            TemplateBox[{"\"Curacao\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Curacao\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Curacao\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Curacao"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011417459027977066`, 79.841}}]},
            TemplateBox[{"\"Cyprus\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Cyprus"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011145948187309754`, 77.69}}]},
            TemplateBox[{"\"Czech Republic\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CzechRepublic"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04009135012614612, 49.963}}]},
            TemplateBox[{"\"Democratic Republic of the Congo\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], 
                "]"}], 
              "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "DemocraticRepublicCongo"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011345616719826299`, 79.388}}]},
            TemplateBox[{"\"Denmark\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Denmark"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025099595353087062`, 61.801}}]},
            TemplateBox[{"\"Djibouti\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Djibouti\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Djibouti\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Djibouti"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014673028656535289`, 75.55}}]},
            TemplateBox[{"\"Dominica\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Dominica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Dominica\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Dominica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02065756502700392, 73.402}}]},
            TemplateBox[{"\"Dominican Republic\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"DominicanRepublic\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"DominicanRepublic\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "DominicanRepublic"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.027354505537861114`, 67.27}}]},
            TemplateBox[{"\"East Timor\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "EastTimor"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021474585400640796`, 76.471}}]},
            TemplateBox[{"\"Ecuador\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ecuador"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021911036311924346`, 71.157}}]},
            TemplateBox[{"\"Egypt\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Egypt"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.020110859372179466`, 72.599}}]},
            TemplateBox[{"\"El Salvador\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"ElSalvador\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"ElSalvador\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "ElSalvador"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.034770962926578435`, 53.062}}]},
            TemplateBox[{"\"Equatorial Guinea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "EquatorialGuinea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03978486806176674, 62.852}}]},
            TemplateBox[{"\"Eritrea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Eritrea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Eritrea\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Eritrea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010390029757344219`, 74.441}}]},
            TemplateBox[{"\"Estonia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Estonia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03484563709329464, 63.635}}]},
            TemplateBox[{"\"Ethiopia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ethiopia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ethiopia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Ethiopia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013253061559957261`, 79.44}}]},
            TemplateBox[{"\"Faroe Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "FaroeIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019967692873209705`, 69.81}}]},
            TemplateBox[{"\"Fiji\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Fiji\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Fiji\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Fiji"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01123855198913703, 80.535}}]},
            TemplateBox[{"\"Finland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Finland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012364630687411246`, 81.81}}]},
            TemplateBox[{"\"France\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "France"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.023479599692070825`, 77.121}}]},
            TemplateBox[{"\"French Guiana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "FrenchGuiana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.016043500116821603`, 76.257}}]},
            TemplateBox[{"\"French Polynesia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"FrenchPolynesia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"FrenchPolynesia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "FrenchPolynesia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.033170450147099455`, 63.48}}]},
            TemplateBox[{"\"Gabon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Gabon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04216062486816524, 58.818}}]},
            TemplateBox[{"\"Gambia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Gambia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Gambia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Gambia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03932803715766277, 73.42}}]},
            TemplateBox[{"\"Gaza Strip\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "GazaStrip"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01330612242977971, 74.301}}]},
            TemplateBox[{"\"Georgia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Georgia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008626742206204208, 80.743}}]},
            TemplateBox[{"\"Germany\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Germany"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.030082634978386022`, 61.132}}]},
            TemplateBox[{"\"Ghana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ghana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010450048766894246`, 80.19}}]},
            TemplateBox[{"\"Gibraltar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Gibraltar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Gibraltar\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Gibraltar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009308772995892419, 80.77}}]},
            TemplateBox[{"\"Greece\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Greece"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01613855882148565, 70.07}}]},
            TemplateBox[{"\"Greenland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Greenland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Greenland\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Greenland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01918401959860548, 72.768}}]},
            TemplateBox[{"\"Grenada\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Grenada\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Grenada\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Grenada"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013230337980249713`, 80.947}}]},
            TemplateBox[{"\"Guadeloupe\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guadeloupe\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guadeloupe\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Guadeloupe"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015431867154082825`, 78.854}}]},
            TemplateBox[{"\"Guam\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Guam"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.030508355579061605`, 72.099}}]},
            TemplateBox[{"\"Guatemala\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Guatemala"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008783699450823764, 80.77}}]},
            TemplateBox[{"\"Guernsey\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guernsey\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guernsey\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Guernsey"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.039854713566534895`, 56.112}}]},
            TemplateBox[{"\"Guinea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guinea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guinea\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Guinea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.039349189674959165`, 54.291}}]},
            TemplateBox[{"\"Guinea-Bissau\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"GuineaBissau\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"GuineaBissau\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "GuineaBissau"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02099025982559148, 66.295}}]},
            TemplateBox[{"\"Guyana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Guyana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025123764034804003`, 63.102}}]},
            TemplateBox[{"\"Haiti\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Haiti\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Haiti\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Haiti"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025526248207856348`, 73.817}}]},
            TemplateBox[{"\"Honduras\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Honduras\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Honduras\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Honduras"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.007589114525823635, 81.86}}]},
            TemplateBox[{"\"Hong Kong\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "HongKong"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009871574754619632, 74.62}}]},
            TemplateBox[{"\"Hungary\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Hungary"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01425970783390092, 82.086}}]},
            TemplateBox[{"\"Iceland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Iceland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019755294181806583`, 66.414}}]},
            TemplateBox[{"\"India\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "India"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018624024004282647`, 70.833}}]},
            TemplateBox[{"\"Indonesia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Indonesia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018773009142978008`, 74.048}}]},
            TemplateBox[{"\"Iran\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Iran"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02976630198351782, 69.419}}]},
            TemplateBox[{"\"Iraq\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Iraq"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015146596292814118`, 80.707}}]},
            TemplateBox[{"\"Ireland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ireland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010072870159730418`, 78.82}}]},
            TemplateBox[{"\"Isle of Man\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "IsleOfMan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019743077391024523`, 81.801}}]},
            TemplateBox[{"\"Israel\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Israel"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009086338317745765, 82.385}}]},
            TemplateBox[{"\"Italy\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Italy"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.034129128408706015`, 55.45}}]},
            TemplateBox[{"\"Ivory Coast\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "IvoryCoast"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01797144520656571, 73.525}}]},
            TemplateBox[{"\"Jamaica\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Jamaica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Jamaica\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Jamaica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008334813557403753, 83.58}}]},
            TemplateBox[{"\"Japan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Japan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008829082495716421, 79.75}}]},
            TemplateBox[{"\"Jersey\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Jersey"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029019111744966092`, 73.854}}]},
            TemplateBox[{"\"Jordan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Jordan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019943943901074544`, 66.536}}]},
            TemplateBox[{"\"Kazakhstan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Kazakhstan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0346632967679823, 61.716}}]},
            TemplateBox[{"\"Kenya\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kenya\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kenya\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Kenya"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02313184289104969, 68.905}}]},
            TemplateBox[{"\"Kiribati\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kiribati\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kiribati\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Kiribati"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02317521785061993, 74.288}}]},
            TemplateBox[{"\"Kuwait\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Kuwait"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.027360099878316453`, 67.533}}]},
            TemplateBox[{"\"Kyrgyzstan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Kyrgyzstan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02767669333339854, 68.309}}]},
            TemplateBox[{"\"Laos\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Laos"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010208631351823141`, 72.15}}]},
            TemplateBox[{"\"Latvia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Latvia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015024208449814303`, 80.007}}]},
            TemplateBox[{"\"Lebanon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Lebanon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02526015445131081, 49.446}}]},
            TemplateBox[{"\"Lesotho\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Lesotho"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.034590696159160605`, 60.556}}]},
            TemplateBox[{"\"Liberia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Liberia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Liberia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Liberia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01940341223206208, 75.325}}]},
            TemplateBox[{"\"Libya\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Libya"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009662921348314608, 80.06}}]},
            TemplateBox[{"\"Liechtenstein\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Liechtenstein"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010504127037023877`, 72.11}}]},
            TemplateBox[{"\"Lithuania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Lithuania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011636252463056483`, 80.547}}]},
            TemplateBox[{"\"Luxembourg\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Luxembourg"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008041090764607628, 84.36}}]},
            TemplateBox[{"\"Macau\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Macau"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010797237127856707`, 75.198}}]},
            TemplateBox[{"\"Macedonia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Macedonia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.035068743074013774`, 64.723}}]},
            TemplateBox[{"\"Madagascar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Madagascar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Madagascar\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Madagascar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03920603595198051, 55.311}}]},
            TemplateBox[{"\"Malawi\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Malawi"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01759597494242464, 75.017}}]},
            TemplateBox[{"\"Malaysia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Malaysia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.022737654469394623`, 77.919}}]},
            TemplateBox[{"\"Maldives\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Maldives\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Maldives\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Maldives"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04284355968354614, 55.032}}]},
            TemplateBox[{"\"Mali\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Mali"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009354168839665847, 79.75}}]},
            TemplateBox[{"\"Malta\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Malta"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.028920125368031156`, 71.19}}]},
            TemplateBox[{"\"Marshall Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"MarshallIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"MarshallIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "MarshallIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011009707694337097`, 81.41}}]},
            TemplateBox[{"\"Martinique\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Martinique\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Martinique\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Martinique"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03545952255818806, 61.55}}]},
            TemplateBox[{"\"Mauritania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Mauritania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010736820219843795`, 73.613}}]},
            TemplateBox[{"\"Mauritius\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mauritius\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mauritius\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Mauritius"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02854756662364285, 79.19}}]},
            TemplateBox[{"\"Mayotte\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mayotte\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mayotte\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Mayotte"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018817381387857962`, 77.501}}]},
            TemplateBox[{"\"Mexico\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Mexico"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.08815412423400786, 73.799}}]},
            TemplateBox[{"\"Micronesia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Micronesia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Micronesia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Micronesia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011974182701719235`, 68.899}}]},
            TemplateBox[{"\"Moldova\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Moldova\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Moldova\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Moldova"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009631027526517863, 80.09}}]},
            TemplateBox[{"\"Monaco\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Monaco"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02190910932927998, 67.503}}]},
            TemplateBox[{"\"Mongolia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Mongolia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011265875934876702`, 74.821}}]},
            TemplateBox[{"\"Montenegro\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Montenegro"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01967729240456513, 72.76}}]},
            TemplateBox[{"\"Montserrat\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Montserrat\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Montserrat\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Montserrat"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.022638099516739736`, 70.941}}]},
            TemplateBox[{"\"Morocco\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Morocco"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03974969456241976, 50.25}}]},
            TemplateBox[{"\"Mozambique\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Mozambique"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018389246981391685`, 65.176}}]},
            TemplateBox[{"\"Myanmar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Myanmar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.024708577975082344`, 64.483}}]},
            TemplateBox[{"\"Namibia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Namibia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02417215289378009, 64.2}}]},
            TemplateBox[{"\"Nauru\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nauru\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nauru\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Nauru"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018013593987011276`, 68.41}}]},
            TemplateBox[{"\"Nepal\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Nepal"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010658472802818253`, 81.038}}]},
            TemplateBox[{"\"Netherlands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Netherlands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015041404214746356`, 76.306}}]},
            TemplateBox[{"\"New Caledonia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NewCaledonia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"NewCaledonia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NewCaledonia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01363862495823141, 81.132}}]},
            TemplateBox[{"\"New Zealand\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NewZealand\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"NewZealand\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NewZealand"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02245901730295327, 74.839}}]},
            TemplateBox[{"\"Nicaragua\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nicaragua\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nicaragua\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Nicaragua"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.05160577417256911, 58.409}}]},
            TemplateBox[{"\"Niger\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Niger"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.041705536454762014`, 52.506}}]},
            TemplateBox[{"\"Nigeria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Nigeria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01859872324107284, 76.7}}]},
            TemplateBox[{"\"Northern Mariana Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"NorthernMarianaIslands\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NorthernMarianaIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014416366451771422`, 63.81}}]},
            TemplateBox[{"\"North Korea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NorthKorea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012576666656711574`, 81.503}}]},
            TemplateBox[{"\"Norway\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Norway"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0250958929974095, 76.552}}]},
            TemplateBox[{"\"Oman\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Oman"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0246605181779804, 66.57}}]},
            TemplateBox[{"\"Pakistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Pakistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.017004009468141637`, 71.22}}]},
            TemplateBox[{"\"Palau\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Palau\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Palau\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Palau"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.020169608682146276`, 77.556}}]},
            TemplateBox[{"\"Panama\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Panama"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.028471553160917235`, 62.421}}]},
            TemplateBox[{"\"Papua New Guinea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "PapuaNewGuinea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.023534902934345264`, 72.259}}]},
            TemplateBox[{"\"Paraguay\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Paraguay"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019656433133276946`, 74.826}}]},
            TemplateBox[{"\"Peru\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Peru"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.024303252650360718`, 68.703}}]},
            TemplateBox[{"\"Philippines\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Philippines\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Philippines\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Philippines"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010774590483725126`, 76.408}}]},
            TemplateBox[{"\"Poland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Poland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008426694715170525, 79.945}}]},
            TemplateBox[{"\"Portugal\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Portugal"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011746342078708377`, 78.864}}]},
            TemplateBox[{"\"Puerto Rico\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "PuertoRico"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011912956107193146`, 78.369}}]},
            TemplateBox[{"\"Qatar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Qatar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04015938111830055, 54.15}}]},
            TemplateBox[{"\"Republic of the Congo\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "RepublicCongo"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01661249177090191, 79.646}}]},
            TemplateBox[{"\"R\[EAcute]union\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Reunion\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Reunion\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Reunion"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010417339915768082`, 73.831}}]},
            TemplateBox[{"\"Romania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Romania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01177390605984691, 67.979}}]},
            TemplateBox[{"\"Russia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Russia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03499475997821651, 64.066}}]},
            TemplateBox[{"\"Rwanda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Rwanda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011391907817205709`, 78.44}}]},
            TemplateBox[{"\"Saint Helena, Ascension and Tristan da Cunha\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintHelena\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaintHelena\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintHelena"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018017283548018913`, 73.2}}]},
            TemplateBox[{"\"Saint Kitts and Nevis\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintKittsNevis\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaintKittsNevis\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintKittsNevis"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015369587532146444`, 74.804}}]},
            TemplateBox[{"\"Saint Lucia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintLucia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaintLucia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintLucia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015043808894032071`, 79.07}}]},
            TemplateBox[{"\"Saint Pierre and Miquelon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintPierreMiquelon\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"SaintPierreMiquelon\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintPierreMiquelon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01603197249048873, 72.488}}]},
            TemplateBox[{"\"Saint Vincent and the Grenadines\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintVincentGrenadines\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"SaintVincentGrenadines\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintVincentGrenadines"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.026350750506230113`, 73.156}}]},
            TemplateBox[{"\"Samoa\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Samoa\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Samoa\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Samoa"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009691372077140721, 81.97}}]},
            TemplateBox[{"\"San Marino\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SanMarino"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0365986554227371, 66.337}}]},
            
            TemplateBox[{
             "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaoTomePrincipe\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaoTomePrincipe\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaoTomePrincipe"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018603768312132715`, 75.479}}]},
            TemplateBox[{"\"Saudi Arabia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaudiArabia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03933473147854182, 63.451}}]},
            TemplateBox[{"\"Senegal\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Senegal\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Senegal\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Senegal"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009277795126693526, 74.059}}]},
            TemplateBox[{"\"Serbia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Serbia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.016388434260774687`, 73.187}}]},
            TemplateBox[{"\"Seychelles\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Seychelles"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03508422375332586, 45.561}}]},
            TemplateBox[{"\"Sierra Leone\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SierraLeone"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01023017471512738, 82.322}}]},
            TemplateBox[{"\"Singapore\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Singapore"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010592750142073464`, 75.397}}]},
            TemplateBox[{"\"Slovakia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Slovakia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01004679100019911, 79.591}}]},
            TemplateBox[{"\"Slovenia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Slovenia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029068732044152484`, 67.675}}]},
            TemplateBox[{"\"Solomon Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SolomonIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04548078063206645, 55.05}}]},
            TemplateBox[{"\"Somalia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Somalia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021355970492547796`, 56.916}}]},
            TemplateBox[{"\"South Africa\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SouthAfrica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009895179219503536, 78.72}}]},
            TemplateBox[{"\"South Korea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SouthKorea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03664690610656131, 55.264}}]},
            TemplateBox[{"\"South Sudan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SouthSudan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010172993715609376`, 82.1}}]},
            TemplateBox[{"\"Spain\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Spain"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01744621448719422, 74.293}}]},
            TemplateBox[{"\"Sri Lanka\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "SriLanka"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.026854112608077546`, 62.055}}]},
            TemplateBox[{"\"Sudan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Sudan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.017525395724355422`, 71.019}}]},
            TemplateBox[{"\"Suriname\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Suriname"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029811132606050936`, 49.}}]},
            TemplateBox[{"\"Swaziland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Swaziland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012106253906079431`, 81.818}}]},
            TemplateBox[{"\"Sweden\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Sweden"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01099612798650676, 82.604}}]},
            TemplateBox[{"\"Switzerland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Switzerland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.024433263278576374`, 74.553}}]},
            TemplateBox[{"\"Syria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Syria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.00896414702264326, 77.96}}]},
            TemplateBox[{"\"Taiwan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Taiwan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03772258334942678, 67.248}}]},
            TemplateBox[{"\"Tajikistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Tajikistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03874020099243888, 61.53}}]},
            TemplateBox[{"\"Tanzania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Tanzania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009536087568885233, 74.401}}]},
            TemplateBox[{"\"Thailand\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Thailand"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03838060140261355, 56.537}}]},
            TemplateBox[{"\"Togo\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Togo"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02502979737783075, 72.673}}]},
            TemplateBox[{"\"Tonga\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Tonga"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013968136728394153`, 69.865}}]},
            TemplateBox[{"\"Trinidad and Tobago\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "TrinidadTobago"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01732069567380019, 75.873}}]},
            TemplateBox[{"\"Tunisia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Tunisia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01643746866156241, 75.259}}]},
            TemplateBox[{"\"Turkey\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Turkey"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021126222400177218`, 65.452}}]},
            TemplateBox[{"\"Turkmenistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Turkmenistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01408937448494032, 75.42}}]},
            TemplateBox[{"\"Turks and Caicos Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], "]"}],
               "\"Entity[\\\"Country\\\", \\\"TurksCaicosIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "TurksCaicosIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02311635554695812, 69.29}}]},
            TemplateBox[{"\"Tuvalu\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Tuvalu"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04378650408037754, 59.209}}]},
            TemplateBox[{"\"Uganda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Uganda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010900802506002555`, 68.525}}]},
            TemplateBox[{"\"Ukraine\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ukraine"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015713189472544808`, 76.841}}]},
            TemplateBox[{"\"United Arab Emirates\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}],
               "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedArabEmirates"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012120362669980312`, 80.547}}]},
            TemplateBox[{"\"United Kingdom\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedKingdom"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013157998841676802`, 78.941}}]},
            TemplateBox[{"\"United States\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedStates"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014829178208679595`, 80.152}}]},
            TemplateBox[{"\"United States Virgin Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}],
                 "]"}], 
              "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedStatesVirginIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014388103718261491`, 77.23}}]},
            TemplateBox[{"\"Uruguay\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Uruguay"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021578810261893858`, 68.241}}]},
            TemplateBox[{"\"Uzbekistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Uzbekistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025777764311090575`, 71.626}}]},
            TemplateBox[{"\"Vanuatu\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Vanuatu"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019494763571904713`, 74.633}}]},
            TemplateBox[{"\"Venezuela\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Venezuela"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015366029406193154`, 75.945}}]},
            TemplateBox[{"\"Vietnam\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Vietnam"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.049026012997569035`, 74.54}}]},
            TemplateBox[{"\"West Bank\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "WestBank"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019985647649802655`, 67.764}}]},
            TemplateBox[{"\"Western Sahara\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "WesternSahara"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.028240466551240576`, 63.112}}]},
            TemplateBox[{"\"Yemen\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Yemen"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04344620468527278, 58.105}}]},
            TemplateBox[{"\"Zambia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Zambia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03308246841246873, 59.871}}]},
            TemplateBox[{"\"Zimbabwe\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Zimbabwe"], "Tooltip"]& ]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"Child Mortality\"", TraditionalForm], 
         FormBox["\"Life Expectancy\"", TraditionalForm]},
       AxesOrigin->{0, 43.621050000000004`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       Method->{},
       PlotRange->{{0, 0.08815412423400786}, {45.561, 84.36}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], 
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{
           Hold[$CellContext`n$$], {1, 2, 3, 4, 5}}}, Typeset`size$$ = {
         300., {98., 102.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
         Typeset`skipInitDone$$ = True, $CellContext`n$113415$$ = 0}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
           "ControllerVariables" :> {
             Hold[$CellContext`n$$, $CellContext`n$113415$$, 0]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
           Plot[$CellContext`x^$CellContext`n$$, {$CellContext`x, -5, 5}, 
             PlotLabel -> StringJoin["Plot of x^", 
               ToString[$CellContext`n$$]], ImageSize -> 300], 
           "Specifications" :> {{$CellContext`n$$, {1, 2, 3, 4, 5}}}, 
           "Options" :> {}, "DefaultOptions" :> {}],
          ImageSizeCache->{345., {141., 147.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]},
     {
      GraphicsBox[RasterBox[CompressedData["
1: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
GN0dkRK/PAYvqzlRd1uiR+mvtqs7D8F3zkLg+t86PHrcwL1Gh4Jl5xH9eWVs
hOhKLuESbYe8RM3abcJM8L5UtXB81QZJzq1FZterEA3F74+IH07b2H9qF9Gd
Z6G7Y/gUhtHaLLnn/jgTFi9UF5s4DkC1b4F3TEgtdsX7FRXfIfcViu3kJ/rb
8UxUNucPE4512zruJRL8H6rk4xDdid86s/O9NhNdu7wGk+gcLPlXri1PeM0q
9tkth8FmGJwsrjMNpjB+q3ImjXzvUtuFma4/LJw5lro6roTC0vcL7E+Q51zJ
a5P32taNIMk7dewrxDe7LH/xIYnCye7ZRdpNLMT6/z2USfiK33+b6TDpT9c9
tZ731eM4aLPGfOA8A/MivBeVXqjBJaPoiDsqFdgilW3l8YiD6wqJ9jvfMTGR
qV2me6IJOobylxvLyH6ab9CSJTjMOnbJPkmyF/5T/wyPBlBop+/20M/gICgp
SddRvhMqYZr9AbeIvr7h3Wrcy4Hl80d8g4mdSBGoOXpqFxtNZYuZNtZjuFte
1Wf2twFacVw+DW4UFI0jbSadOHAzX3b04bUOJMdcGx2eZkLhFL9N0r0BtCkm
he5Lr0WHfnkXD5n7qbLJkys/UDgxq/A3y3wM+aeto8brKSxWusH9NoNCXe+3
c6mdQ3izu6a7iPC8btuEqz/ZS/+hly9E1MZgntqyhEn453qUJddjwj8tPLef
vZvow0i6mt9uUifV9CLbj9Tfujdtxd75E0iPOahwuJSC1i+9Vr67FPiidurP
H+5Gzn6fW5L5DIRdrl++eGUjYmhtSunrK1Fcs/0evzAL3nqKgUJSg5i/zizW
SKgOLVr7s7lDyVzSBf+pEf5Y5JsioVTMgmPCctuFj5jgul6kEaXSBwWO6f5j
d2rALzezaLkxAxdWSMcqapVj2Qv/xbRQEp5Cei32PWXgzJRApMVGOprTc44z
GBVgtxecX9HFRJuPKfdf6QEIj8bMu2ZVi+KtZ05736BQKHFAiIfoqUfTUHj0
BRZ+Bs+xPyUQPt/IkOtZSnTqv/jdF0Jr0H/IrDzvBwNZySVrkla0wlrk9M4c
6SrciTewSc9noy0r8eSOdRPQWajs9OAtHW9HlzkuC2LAs3z/aHd9LTb/WTF1
xqYCEsY+xf4Efw8iFhSrBVLoGbI5V72sGw0jZWOpYCHAbZAmNjWIvBUZJj7p
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
55l7HIifjG1/H7muG68k0j6PPK7G/wGo0ZCA
        "], {{0, 0}, {20, 20}}, {0, 1}],
       Frame->True,
       FrameLabel->{None, None},
       FrameTicks->{{{{19.5, 
            FormBox["1", TraditionalForm]}, {15.5, 
            FormBox["5", TraditionalForm]}, {10.5, 
            FormBox["10", TraditionalForm]}, {5.5, 
            FormBox["15", TraditionalForm]}, {0.5, 
            FormBox["20", TraditionalForm]}}, {{19.5, 
            FormBox["1", TraditionalForm]}, {15.5, 
            FormBox["5", TraditionalForm]}, {10.5, 
            FormBox["10", TraditionalForm]}, {5.5, 
            FormBox["15", TraditionalForm]}, {0.5, 
            FormBox["20", TraditionalForm]}}}, {{{0.5, 
            FormBox["1", TraditionalForm]}, {4.5, 
            FormBox["5", TraditionalForm]}, {9.5, 
            FormBox["10", TraditionalForm]}, {14.5, 
            FormBox["15", TraditionalForm]}, {19.5, 
            FormBox["20", TraditionalForm]}}, {{0.5, 
            FormBox["1", TraditionalForm]}, {4.5, 
            FormBox["5", TraditionalForm]}, {9.5, 
            FormBox["10", TraditionalForm]}, {14.5, 
            FormBox["15", TraditionalForm]}, {19.5, 
            FormBox["20", TraditionalForm]}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
         "RangePadding" -> Scaled[0.05]}], 
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{
           Hold[$CellContext`n$$], {1, 2}}}, Typeset`size$$ = {
         300., {124., 129.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
         Typeset`skipInitDone$$ = True, $CellContext`n$113452$$ = False}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
           "ControllerVariables" :> {
             Hold[$CellContext`n$$, $CellContext`n$113452$$, False]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Plot3D[
             
             Sin[$CellContext`x + $CellContext`y^$CellContext`n$$], \
{$CellContext`x, -3, 3}, {$CellContext`y, -2, 2}, ImageSize -> 300, PlotLabel -> 
             StringJoin["Plot of Sin[x + y^", 
               ToString[$CellContext`n$$], "]"]], 
           "Specifications" :> {{$CellContext`n$$, {1, 2}}}, "Options" :> {}, 
           "DefaultOptions" :> {}],
          ImageSizeCache->{345., {168., 174.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]}, {2,"\<\"Charts\"\>"->
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$113020$113469 = False, 
         DynamicChart`click$113024$113469 = False, 
         DynamicChart`click$113028$113469 = False, 
         DynamicChart`click$113032$113469 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.722713633111154, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{48.58578643762689, 
                    151.4142135623731}, {-44.087877869953154`, \
-0.5857864376268935}}], {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113020$113469, 
                    FEPrivate`Not[DynamicChart`click$113020$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113020$113469, {{{1., 0}, {
                    0, 1.}}, {-0.19562952014676113`, 
                   0.041582338163551946`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$113020$113469}]]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.4660765716752369`, 
                    2.722713633111154}]},
                    
                    ImageSizeCache->{{57.23124067336681, 
                    161.86705988913843`}, {-103.4142135623731, \
-0.5857864376268935}}], {}},
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113024$113469, 
                    FEPrivate`Not[DynamicChart`click$113024$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113024$113469, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, 0.17320508075688776`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$113024$113469}]]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    1.4660765716752369`}]},
                    
                    ImageSizeCache->{{148.5857864376269, 
                    251.41421356237308`}, {-102.86640309920044`, 
                    58.192738791620414`}}], {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                   StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113028$113469, 
                    FEPrivate`Not[DynamicChart`click$113028$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113028$113469, {{{1., 0}, {0, 1.}}, {
                   0.1827090915285202, 0.08134732861516004}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$113028$113469}]]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]},
                    
                    ImageSizeCache->{{48.58578643762689, 
                    232.31591299986786`}, {-3.4142135623731065`, 
                    99.4142135623731}}], {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                   StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113032$113469, 
                    FEPrivate`Not[DynamicChart`click$113032$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113032$113469, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$113032$113469}]]}}}, {}}, {}}, {{{
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-0.9781476007338056, 
                    0.20791169081775973`}, {-1.0759623608071862`, 
                    0.22870285989953573`}}], 
                    LineBox[{{-1.0759623608071862`, 
                    0.22870285989953573`}, {-1.1759623608071863`, 
                    0.22870285989953573`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{-0.9781476007338056, 0.20791169081775973}, 
                    0.016666666666666666],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"a\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-1.2150882648365386, 0.22870285989953573}, \
{1, 0}]}}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[1, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113020$113469, 
                   FEPrivate`Not[DynamicChart`click$113020$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113020$113469, {{{1., 0}, {
                  0, 1.}}, {-0.19562952014676113`, 0.041582338163551946`}}, {{
                1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$113020$113469}]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-0.4999999999999998, 
                    0.8660254037844387}, {-0.5499999999999998, 
                    0.9526279441628827}}], 
                    LineBox[{{-0.5499999999999998, 
                    0.9526279441628827}, {-0.6499999999999998, 
                    0.9526279441628827}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{-0.4999999999999998, 0.8660254037844387}, 
                    0.016666666666666666],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"b\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-0.6699999999999998, 0.9526279441628827}, {1, 0}]}}},
                  StatusArea[#, 3]& ,
                  TagBoxNote->"3"],
                 StyleBox["3", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[3, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113024$113469, 
                   FEPrivate`Not[DynamicChart`click$113024$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113024$113469, {{{1., 0}, {
                  0, 1.}}, {-0.09999999999999996, 0.17320508075688776`}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$113024$113469}]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{0.9135454576426009, 0.4067366430758002}, {
                    1.0049000034068611`, 0.4474103073833803}}], 
                    LineBox[{{1.0049000034068611`, 0.4474103073833803}, {
                    1.1049000034068612`, 0.4474103073833803}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{0.9135454576426009, 0.4067366430758002}, 
                    0.016666666666666666],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"c\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {1.1414418217125653, 0.4474103073833803}, {-1, 0}]}}},
                  StatusArea[#, 5]& ,
                  TagBoxNote->"5"],
                 StyleBox["5", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[5, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113028$113469, 
                   FEPrivate`Not[DynamicChart`click$113028$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113028$113469, {{{1., 0}, {0, 1.}}, {
                 0.1827090915285202, 0.08134732861516004}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$113028$113469}]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-0.30901699437494734`, -0.9510565162951536}, \
{-0.3399186938124421, -1.046162167924669}}], 
                    LineBox[{{-0.3399186938124421, -1.046162167924669}, \
{-0.4399186938124421, -1.046162167924669}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{-0.30901699437494734, -0.9510565162951536}, 
                    0.016666666666666666],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"d\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-0.45227937358743997, -1.046162167924669}, \
{1, 0}]}}},
                  StatusArea[#, 6]& ,
                  TagBoxNote->"6"],
                 StyleBox["6", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[6, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113032$113469, 
                   FEPrivate`Not[DynamicChart`click$113032$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113032$113469, {{{1., 0}, {
                  0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, {{
                1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {
                DynamicChart`click$113032$113469}]]}, {}}, {}}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       LabelStyle->{
         GrayLevel[0], FontFamily -> "Arial"},
       PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
       PlotRangePadding->Scaled[0.1]], 
      GraphicsBox[{
        {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.6719999999999999], Thickness[Small]}], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.211007932584796`, 78.38880565395604}, {
                51.13227735552281, 79.97985673746952}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{84.00187423520767, 
                148.17967195657891`}, {-5.562881408370615, 
                79.97985673746952}}],
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{153.79274053783055`, 
                217.9705382592018}, {-62.25804017226402, 79.97985673746952}}],
              
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 6.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{223.58360684045343`, 
                287.7614045618247}, {-90.60561955421075, 79.97985673746952}}],
              
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5437956204379562, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 
                0.}]}], 
             LineBox[{{4.456204379562044, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
                0.}]}], {{}, {}, {}, {}, {
               LineBox[{{1.4562043795620436`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4562043795620436`, 
                  0.}]}], 
               LineBox[{{1.543795620437956, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.543795620437956, 
                  0.}]}], 
               LineBox[{{2.4562043795620436`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.4562043795620436`, 
                  0.}]}], 
               LineBox[{{2.5437956204379564`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.5437956204379564`, 
                  0.}]}], 
               LineBox[{{3.4562043795620436`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.4562043795620436`, 
                  0.}]}], 
               LineBox[{{3.5437956204379564`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.5437956204379564`, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"a\"\>", 
               Offset[{0., -2.}, {0.9999999999999999, 0.}], {0, 1}, 
               Automatic, {1, 0}], 
              InsetBox["\<\"b\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1}, 
               Automatic, {1, 0}], 
              InsetBox["\<\"c\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
               Automatic, {1, 0}], 
              InsetBox["\<\"d\"\>", Offset[{0., -2.}, {4., 0.}], {0, 1}, 
               Automatic, {1, 0}]}, "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]}, "GraphicsAxes",
         StripOnInput->False,
         Antialiasing->False]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, True},
       AxesLabel->{None, None},
       AxesOrigin->{0.4655474452554744, 0.},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {
           0.9999999999999999, 
            FormBox["\"a\"", TraditionalForm], 0}, {1.9999999999999998`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
            FormBox["\"b\"", TraditionalForm], 0}, {3., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
            FormBox["\"c\"", TraditionalForm], 0}, {4., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
            FormBox["\"d\"", TraditionalForm], 0}}, {{0.9999999999999999, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}}}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       PlotRange->{{All, All}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{None, Automatic}]},
     {
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{0.3836399216673073, -0.0560017525371722}, {
          2.6163600783326926`, 1.6395309340697881`}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                PolygonBox[CompressedData["
1:eJxlmndYzn3497NJVsaNbptbdla2U1Jk72Rk74gyMktWkllKiChJGZkRepeK
kFTaRXtf19V1tdzc4vEcv/P8/fE8/uDoyNH4fj+f83yPV7dV1nPX1tXS0gr5
89f//Vf+/P2zzu2EnDh6vfrY+aZ5xygpp/BRg/NxVGm53P5lqBOdfvshdOTE
OLJ5vtDI8YUznV280jUl/xPZv8v6r1+GC9X9p9/tcSafSPFld7pHlzO0Q1MV
6nMzlvKfdVluEXWWCl+GJjZpGEvrjv4oG9PiPC12ciq1XveRGuu+bme31ZVi
5s3VSn4TQ3UrhjfokO9G47v83W5s7xjKutN3gMF2dwoqLeh34/gHWhPpU5PY
7iL1fHrfqHHxe9I3c5jbM9mT3A/tMd865T2dcDlpMiHoMjWeYbwl0f8dJTkm
rJ/l50X72zc7PLrJO+oWP3DR/ufXSJWXfNF7YzQdqKh/fm+1N624732v4fu3
tPPM0znVnW5Qwt5NkVZ931JISkT+24U+ZGo6LD3B+Q3duF25w8Xbl561+lU+
siyK5o1bsufLfzep75e3Da5Ni6KDNGzmgo236Ir/Ob0GdyJpidvtt6dK/Knl
jiWDN+tEkkdJAbocCCAH6jU53iqCXuWFeN/oeYeqtMuXjvj4ms4tMy4JzL5L
G5Kf2XgNeE31Y1X3Yx/cp9Trjk71TofTpDvBZ2fEBNH0LdOvblSF0b5Lx3/F
vn9AYSPbPf40M4x0dhxsFJT4kFY0DnPdbAnKru+WOKT0EU25Ng8juoTS2nq3
m3k0fUIGhkWl9bJf0uEr9hc6jHpKLT/ubRfn/YKGr/llUmUTTP+ubj7xysoQ
ct2hd3fZ82eU+uP6lg3dn5P5ybj3TjohFHZuuOewvGByWbUvztfqBfnrv4vU
8n1KTaa2yM1Me0lOWKqOWfOEoHcwzXx+KG1bqNbz7PWYjH6G6ozMBC1SHp68
tvAhOdhanfz4LIxGHvnLdvCtB9Qxu2/CdOdw6qoXeLV2fRC5Tgq77rPqNWmt
OeDmOuce2fVd/3eaUQTFnfMt6/c5kLpmFAZqekeSNz5MjJx/m9I+7FGr2kTR
CmWF59JkP+qwbNrDT43fkIFeR02VuS8tNHqYdKbeW9IyM5pyKu06PetqNle/
QTQ5KOPGT3t6lbYW1R1wptk76mrWRbnvuScZX5y3M/jv9xTmu+XynZdu5HLs
kMm5IR/IQcvONcT+DB13GvCmyawYCgtuo9Y7dpRytfWGN7X5SA5fVnn+aL+b
qn6OLt9/OZa0VuS6lQ4wo6EWNQeMP3wiB5O+VfYft+HT3JR53g5xFLbZzsty
hSOy9R6G3+4cTw6PMybUWrhg+90nk+8gnrwPdqn42McVy1acKHBbnUBde8Qb
e/1zEXZhvZRztD+Tw1vHC1Y9vPBUszf6/aPPpGV4qbJTy+swLVvVWbE8kQwa
2145etoHep9qf3g2T6IV6dNMlDp+aLH9fMdQJJH3nZ6q+Sf9sdms5TuyTaa4
g7XuL5sEwjT3RPcGfVJIa04y9XS6C4fsdhcqs1PI+5x5lUm9IHy6allTfimV
nv2IiN4z8QHSpqz2/LowjeJWG3jdPfQQY1aNuO3bJp3UMVe254Q9gmWnwz97
JaZTY8Mmpm21nqD+y3r6Ey9kkP61nR3N6CmG1l11/qt5Jk1onKvafzAY/Tws
pnzV+0KLts+MCHr1DEUeN+f2zPlCdukhHvk/n2PB25vRrre+0lnj3lbtx77A
f1fTc1pYZ5H/HdcJ0/e9xOdujeqF6mVTdFuttg4hrxA5tY5qmUM2ZR+0Knn0
PRTXPCnQoiCbftoqvtr+HYb9d2KX+0zNIRf/7u+avQxD7MEOKwcE5VD7L4se
3VoSjm0jro8sbZtL/q3OeBn9Fw6T6kC/mH25NMw06njGpdew9c3xeZuTS2F7
/9u+c3QEjBbFrYydnEez7w9e2iI9AuPGzJ+aeDePMvPWm97eE4lZ14utPrbO
pw3trxoYd4hCddj5eff25NO/0xM7fnkWhazaJ5c2ZOXTkUPaDXYvegOzCfPD
NJMKqM3TCeUt/32DkIwGHccHFJB36a60AI+3eFTtpDexRSH173I3YtKIaGy3
LZpZYVtIL+fl3f2aHI2jJW+nGacW0hSnDhftdr2D59Tfd/uMLaLEl7Mcddu9
h9mjfU0vXSuiNZqjVneevMfhvj4lTnWLSd3r5ULTBR8wf5/xw9I1xbR/ccWE
7KoP8Fw3xP/Rm2LSOaPfb69bDJRTkZHSu4QuRli2bTPsIyZqdegyzamE9P91
+33380eE/PrwQ6u4hB73/1Ay2TYWDb4duKEwLaUJK+sk5uh+gv5rnVKtm6UU
d2FE6L6Hn7D0h+EYg7plNLDAMFG7Txx++VadtLIsox2/57xLsYvDulZ+C249
L6OXHbaE+kbHoa/t+FPxrRVUd5jTo+3t45EYcfpKhpWCpsz08R+/IR6PeiQu
fRKpoLMbQr2aPotHqwmBujP1lJTsmHY+tVEC7Mc6bXbbpqTOXlXHb5on4PeY
uP27IpW0JrjFAZtbCZhWeS8yp52KAuL72tC3BIwNQP+I9SqqKDNZrzP5M9SR
Xs0bBatoZMOVS9PcP8NoyZbRnvXL6WDX/XP8Cj8j0m3D7zWzy+nNaA9TW8NE
jLPba7jgUjnpLHg4ZsKxRHz3K5s5P7ec5lt/NGiWnIgZZ84O/KeNmi6dKO6V
3isJI2Y/vtDaUE3ZPvX0bu1Mgk7hmn+KFqpJP7Rzyx1RSXg0qOjihV1q2pY6
qoFR22QsC/a41vqCmh5XzP/RbG0yijfqVy54qKafOtvK0x8nw/5N8PI5sWqa
1Ptk/q36KfC7/yDhR7GanIz80nbMT8GmwvUbJ9fVUNyS8Fgj3xScHjTToX9H
DbXflRnRvCoFQw0jX18z0NDSs9+eZRinInDHgjEeJhryDdC95++airZvFqxp
YqEhReQAn515qVjyFiOVmzRkkDXl4sShaUj5OtJk9D4N2X1ffarF4TS09On0
vPiEhsJa2ztmJqSh71a73Rp3DdUfeGn37e7pGGQY0XvmDQ1Nn/LEapdNOhQm
C0y/B2rIbVXcSuPX6RgzaNkw1SMNpe4vW9hSNwMHp0ye3CdEQ109Gk7/sjID
MWO2p9wK1dCGB92MAh5koOBa05kbwjV058NYw911MqGa0HTIptcaqiow7zdp
TiYe+esMu/fn82O1bLu2up6Jg5eajTKEho50PN32qzoTDm45qxu80FD0sNva
gRO+wKF2cqeuTzTUclbk791nv6B2q0tHl7saWrQxq2pS9hckHL+8aravhq4c
/lHSyuAr9L7YzdnpqaF8r7ZZX+2/4klV/Uv1T2mo/zODxMBPX3EvqL5pE3sN
bUuY9s6uSxb6DLF8fMZaQ88U60JNrLNw/duhCzctNaTVyPGRLrJgGf+9wGK6
hm6cnZlo3SgbY4d0LHo5UkNvOmXOXDgoG90sk9pm99BQacDGd2PN/3z+58Mu
yc00pDPym3EP+2zYemmSHtaoySDqSGiTW9l4HJfe+eRXNc2fqztKHZuN26sW
FOyIUtOurGuPkmuy8dwysuHxwD/n02rAwFedc7Bj1iRKO6um0O8h/j6mOchs
vqTNkZ1qyj02pYfz1hysGjQ41NtCTfXbJHttc89B9NWtLczG/Tm/11e3Nw/N
QV/P5CUeXdU0faDm/LjCHGjNCl/mV09NW18cbNazeS5uOPYe3v1jOZ2fouOk
bZiLf08HuRScL6enSZ51NctyYf91xIyPi8opdVXvAylHczEvw6qkRZdy+ln+
+Nuru7lYNnWyfV6BiroemGjjm5SLvncHXD5wV0UTteMUzrW5MPuY/UN3l4rW
eSxbv71XHoKt7WenkIqce5blmM/Iw7vU6ga12iq688Bu6fideYjX9K/zJEVJ
ceMbpvT0ykM7p+kbB/opqeqD65ymUXmwNlq9xX2XktpZdIvRKPKw+FiUTnsz
JY0uvGea2iYfXm9scjI6KcnSdmx46Nh8mP4Tq2hUrSBHrfdjbq7JR3Vc1TrE
Ksj3lPnTky75cFX+e7Z7oIKiOxYY2DzOR7bdJOeZzgpS3LIJXJSZD3eD1X2W
/Zl3zYdr/UP1/2jNkVtT18xR0JDXp7x79S/AZeNZO+1GKWjhLD09nfkFGJTf
1PBWTwXZZfpfqNhXgJu6k8791FXQlY2GLdN8CuA2t0k/h/oKCquJcMaHAgz7
MODN8O9llHt4TgO/ygKsdew5upOmjBq2yrJ30SuE9ZmjW4YoyqjvVasfNsaF
mO8zccGW0jKa3u/HDovNhdgVcu7f8LIy2vbseDm5FqLv8FN7uqrLyM2k7aZ/
XhQi7feh7ju/ldHThBv5OnmFuFb0Zbd/HQWlLzdYXqldBPvw2zOvNVfQL8Wr
tLQhRRj0YEfR6M4K6r532vywxUWgO2eaWRgoaFKjtFg/xyI8X2gzOnGSgja4
rTM7FVCENq5/vzq8REEu3aoibBOKsOfqxIIxOxR0796h8Yt/FOGOpc6Q2NMK
ShjT4vmE7sWYfqvfkSZ/nndN9JWhvacWIy248byQaAW1X9j3XjObYuzUDcsP
KFLQ2Lxg/SrPYrjo3nbyaaSkFdtMfNLDixG8vEPiJn0lOdYmdAovKcarQ+1y
ov68fz/nFRdvtSpByB7f03ablfT+L5Xu6VElyLO0fG1ySkkK332ndqwsgblr
/cDye0pqOaRJ4yUnSnBqTGC9kXFKGgZ3R6MHJfhlONQ8W62khdN71vZOK8ET
ZbBxQEsV7U17sLt5nVK8Sr3yynyQiq6uo4oq/VL8elE4J3C6isIqY6wyZpdi
r+7p9Rs2qCjfYXFRuF0plhrstZ/nqKLGzYtX+nuX4knrFJshl1TU//LOzNPR
pTAM33s/5r6KZurXM9+pLkW2ua5N2WsV2Tw5G7+kfRmOByfUWnxWkfvEztMn
TiiD8oZVfEG2ip59Cnyjv6EMO283TrMsU1Hm0lFGLc6W4djn1l4eFSrSKn3z
ojq4DLl1AresrVFR993zDTOzypDfzc7Z+8/HpvVzg143UqDhqzTTnpUq2nTO
ut/tQQpM/T6k76c/X8+lc+3NM+YKdIibrHP4z/cLCnTuusteAXWjMwN6xaso
cWT7y0tvKdB47sZpV1+pqCbqZlvjTwrcjhoSlH5TRR3nDT3b55sCOVF96P0J
FY3PDtNu2UWJmO7996/YqKIVW2YerTFVYmrl7DNuk1R05EfG78ytStQz2Dxp
pZ6K/I9v3BvhrkSHvccaRimVFNPmW9XtUCXu+e9ICX+hJNX1I9ZnC5XoE3Tc
eNlRJekO0i3d1VyFHQMuzvGeqiTDl9fWLDNUYcHsA9YeTZW0yGxAlrGlCivr
d1ky9895258cYtH3mAqLtWc1zndQkPfqKYkt76kQPMjz8KrhCnqtTpr5LUkF
VI5LKCwoo8IDq999qVXhr7unPrmcLyPtphrjyF7lWO2X2ch2TBn1v3gwNGBG
OZYFTD0Xkl1Ks3vpjDq3sxzRbS/lHnMspR0PPR/t9ipHu/B5/rVdS8mdeg+0
jCrH/m1VU01ellBIzGP/Scpy+J+0jToxv4TK+18/d0FbDUWvMzeqS4rJobIo
1qmzGnBLH/xkfzHphgzU2T9EjTLTuQ41OsXk67DTzNpUjeYj1z0vvlREhpNf
Hlu1WI2hro2+vfiniN42qxe5YKsal30Vra4HFZJFolkdM0c1Av4ytnk3spDK
Lp0dP9ZdjfwZDXPWoYD2r0zZNyhAjaL+AxYH/tHHzfU7P+8eqoZO++ys6Oh8
8latqWmboMY6Vf5MzbR8GvwkcGiTQjX6Z2wetjA2jyL2VWz7+V0NJ/c1N/Vn
59GCiaPulTfTIH2Vw1+e8blU2NihLLebBrtv1RmbMjeX7D690U8ersE9512Z
rRJzSNu92bp3Zho8avnNZOeCHLq8dL7Py2UajKow1RikZNOAHpez72/XYGHT
VlrWFtmEkpxOPkc1OHSscvLDZ1k0O0h/ibunBhsPn3k4KOwr5e6yvnjirgZW
407o+b77QjvGPU3aH67BgeiiDouTMqlh/VrdbUkafBho9OViXgZ5vDeevbpE
g8gZ9i18q9KpzznnUwtrNTjex+TFi8bp9MI8/r1ZqwrkexUY/t01jaZ3bt94
XK8KOGclt/41OpW+5luaGIyqQGr3E7ruFim0LfCmY48ZFZj781DHtvuTqY6N
Au1WVuB5oKeh/40kch05tLbJzgpcdRx6we5jIvX6vWd0rVMF4v8zdQn8+Zme
RoXtVl+pwPHcptdXGXymKS6NnuQFVcC6YwfXFxsSKH3uzIrkyAoMMojYFHcz
njZ3uDDofWoFzFKPOgcXxVFtVobVK0UFjPKNIg4PjKMzft0DgrQq0ah6ULJT
VSx13bKxyKdNJezqz1Jqu3+kh0ODenroV+L0Zo3+NaMYmvSjZqXz2ErEz37g
Nvvbe0oKG3ftwOxKWOzJ1O8Z/I7WHz+SuW1NJRa2vNa0w6Fo+j7jQ4c1dpU4
lYlE/QVv6WQbXXNzl0qc83L4PHnoG/o7Y5HbVO9KjKwcsXCtXhTdu34tftzj
SkxaMK5yc7NImrChsPng6EpUDIxIMGoSQfEDB0zvmVmJaT3pe3Tz17S62vbE
X+pKWIXes8zqFE7VL0LeaNevgkveppMWhmF0zLFO/V9/VSEx3097VFAotTeb
YqTpV4WK1mmmpQ1eUUCLMwfzqQol0zQma7e8oDHJSS9S5lVhuYv/xqmFz+nj
lb+/v19fBeu/nA9P2PaMlq9ebRi6rwoRFo26JWoHk7pPgO2DM1UYNnaK9cUn
T8hRrQ7y9anCgPa/Ejtte0xtgkeoPIKrsLYgx6pi1CO6eeBgv5MfqnD7rzn7
bug+pBGTojYczPrz/f759PXZ9yB6p63jt72yChPW7a45+OU+LYmfm7emUTWW
Zw4g+9y7pPDw7LpIrxpnjbfGHKlzhw5aZi+bNqgavTY87XxjVAC17NX78njj
aoTFFE3JP+FP18u2pA42r4bnkQ7OFho/Gvrwcdtem6sx06Ng7TjrmxRl99/c
9vbVMPBo3Pl8XV8yp4lnm7pWw1Q95uOOgBtU0uDEx19+1fDaNaVPw3XXaU/M
J+2KkGpsGNOzdNMwb2rq2m5KQWw1Atp1n3Gxz1Xyslh2NDW3GqGzWs24r3OF
BnX1ff2hphq/e9C2XS0vUXhh6e9Q7Roc8jnTevLQizTv7uBxDzvXYPJv9x4q
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
XpZ5WghPy7wthLf9f3nc/wOK9/pB
                 "]], {{{0.20233681324789438`, 
                 0.}, {0., -1.}}, {1., 0.}}]},
              
              ImageSizeCache->{{70.38134055662462, 
               139.79437357479395`}, {-46.55632844706055, 61.87951169887887}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], 
                  "0.9966261757472066`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                  "0.8668229468053272`"}, {
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "0.5046190592413617`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                  "0.4228319342111344`"}, {
                  StyleBox["\"min\"", Bold, StripOnInput -> False], 
                  "0.1659206765967678`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 0.9966261757472066}, {
                 Style["75%", Bold], 0.8668229468053272}, {
                 Style["median", Bold], 0.5046190592413617}, {
                 Style["25%", Bold], 0.4228319342111344}, {
                 Style["min", Bold], 0.1659206765967678}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                PolygonBox[CompressedData["
1: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
WlhgpYaTnnfZw5s99mM23BYWBI40f6iz1A6ONidJOXgLC9buLP4wyuY6zL0y
XD7zjbAgdN3vj/5ptYFi0fUq4h+EBZ0FC3aNtrwKt/0va+gVCAu8xQ5b3Jp+
BdTWxhn7NgoLkt5ny6g8/heEM3vONfUICzivjTJSdFg+btj/+0z/H/n/0/dD
/n7085B/Hv0+yL8P/b7Ivy9dD/L10PUiXy/dD+T7QfcL+X7R/US+n3S/ke83
PQ/k50HPC/l50fNEfp70vJGfN50H5PNA5wX5vNB5Qj5PdN6QzxudR+TzSOcV
+bzSeUY+z3Tekc87vQ/I7wO9L8jvC71PyO8TvW/I7xu9j8jvI72vyO8rvc/I
7zO978jvO80D5HlA8wL/Oy/+M0+Q5wnNG+R5Q/MIeR7RvEKeVzTPkOcZzTvk
eUfzEHke0rxEnpc0T5HnKc1b5HlL8xh5HtO8Rp7XNM+R5znNe+R5T/sAeR/Q
vkDeF7RPkPcJ7RvkfUP7CHkf0b5C3le0z5D3Ge075H1H+xB5H9K+RN6XtE+R
9yntW+R9S/sYeR/Tvkbe17TPkfc57XvkfU96AFkPkF5A1gukJ5D1BOkNZL1B
egRZj5BeQdYrpGeQ9QzpHWS9Q3oIWQ+RXkLWS6SnkPUU6S1kvUV6DFmPkV5D
1muk55D1HOk9ZL1HehBZD5JeRNaLpCeR9STpTWS9SXoUWY+SXkXWq6RnkfUs
6V1kvUt6GFkPk15G1sukp5H1NOltZL1NehxZj5NeR9brpOeR9TzpfWS9T34A
2Q+QX0D2C+QnkP0E+Q1kv0F+BNmPkF9B9ivkZ5D9DPkdZL9DfgjZD5FfQvZL
5KeQ/RT5LWS/RX4M2Y+RX0P2a+TnkP0c+T1kv0d+ENkPkl9E9ovkJ5H9JPlN
ZL9JfhTZj5JfRfar5GeR/Sz5XWS/S34Y2Q+TX0b2y+Sn8b9++j9+G9lvkx9H
9uPk15H9Ovl5ZD9Pfh/Z71MegJwHUF6AnBdQnoCcJ1DegJw3UB6BnEdQXoGc
V1CegZxnUN6BnHdQHoKch1BegpyXUJ6CnKdQ3oKct1Aeg5zHUF6DnNdQnoOc
51Deg5z3UB6EnAdRXoScF1GehJwnUd6EnDdRHoWcR1FehZxXUZ6FnGdR3oWc
d1EehpyHUV6GnJdRnoacp1Hehpy3UR6HnMdRXoec11Geh5znUd6HnPdRHoic
B1JeiJwXUp6InCdS3oicN1IeiZxHUl6JnFdSnomcZ1LeiZx3Uh6KnIdSXoqc
l1KeipynUt6KnLdSHoucx1Jei5zXUp6LnOdS3ouc91IejJwHU16MnBdTnoz/
zZP/kzcj582URyPn0ZRXI+fVlGcj59mUdyPn3ZSHI+fhlJcj5+WUpyPn6ZS3
I+ftlMcj5/GU1yPn9ZTnI+f5lPcj5/3UByD3AdQXIPcF1Ccg9wnUNyD3DdRH
IPcR1Fcg9xXUZyD3GdR3IPcd1Icg9yHUlyD3JdSnIPcp1Lcg9y3UxyD3MdTX
IPc11Ocg9znU9yD3PdQHIfdB1Bch90XUJyH3SdQ3IfdN1Ech91HUVyH3VdRn
IfdZ1Hch913UhyH3YdSXIfdl1Kch92nUtyH3bdTHIfdx1Nch93XU5yH3edT3
Ifd91Aci94HUFyL3hdQnIveJ1Dci943URyL3kdRXIveV1Gci95nUdyL3ndSH
Iveh1Jci96XUpyL3qdS3Ivet1Mci97HU1yL3tdTnIve51Pci973UByP3wdQX
I/fF1Ccj98nUNyP3zdRHI/fR1Fcj99XUZyP32dR3I/fd1Icj9+HUlyP35dSn
I/fp1Lcj9+3UxyP38dTXI/f11Ocj9/nU9yP3/cQDIPMAxAsg8wLEEyDzBMQb
IPMGxCMg8wjEKyDzCsQzIPMMxDsg8w7EQyDzEMRLIPMSxFMg8xTEWyDzFsRj
IPMYxGsg8xrEcyDzHMR7IPMexIMg8yDEiyDzIsSTIPMkxJsg8ybEoyDzKMSr
IPMqxLMg8yzEuyDzLsTDIPMwxMsg8zLE0yDzNMTbIPM2xOMg8zjE6yDzOsTz
IPM8xPsg8z7EAyHzQMQLIfNCxBMh80TEGyHzRsQjIfNIxCsh80rEMyHzTMQ7
IfNOxEMh81DESyHzUsRTIfNUxFsh81bEYyHzWMRrIfNaxHMh81zEeyHzXsSD
IfNgxIsh82LEkyHzZMSbIfNmxKMh82jEqyHzasSzIfNsxLsh827EwyHzcMTL
IfNyxNMh83TE2yHzdsTjIfN4xOsh83rE8yHzfMT7IfN+xAMi84DECyLzgsQT
IvOExBsi84bEIyLziMQrIvOKxDMi84zEOyLzjsRDIvOQxEsi85LEUyLzlMRb
IvOWxGMi85jEayLzmsRzIvOcxHsi857EgyLzoMSLIvOixJMi86TEmyLzpsSj
IvOoxKsi86rEsyLzrMS7IvOuxMMi87DEyyLzssTTIvO0/5e3/R/UbLRd
                 
                 "]], {{{0.30434419160194653`, 0.}, {
                 0., -0.9999999999999999}}, {2., -1.1102230246251565`*^-16}}]},
              
              ImageSizeCache->{{184.78965588416872`, 
               247.6593300708476}, {-86.31702175607062, 80.64020500788895}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], 
                  "1.5624612664967445`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                  "1.297076526883818`"}, {
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "0.8482140054628031`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                  "0.5764973100209567`"}, {
                  StyleBox["\"min\"", Bold, StripOnInput -> False], 
                  "0.021067915035871465`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 1.5624612664967445`}, {
                 Style["75%", Bold], 1.297076526883818}, {
                 Style["median", Bold], 0.8482140054628031}, {
                 Style["25%", Bold], 0.5764973100209567}, {
                 Style["min", Bold], 0.021067915035871465`}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, \
{}}, {}}, {}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7754133086869819, 0.021067915035871465`},
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {
           0.7754133086869819, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}, {2.224586691313018, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {
           0.7754133086869819, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}, {2.224586691313018, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.008, 0}}, {2., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.008, 0}}, {0.7754133086869819, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0, 0}}, {2.224586691313018, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0, 0}}}, Automatic}], 
      Graphics3DBox[
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], 
        StyleBox[{{{}, 
           {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], Opacity[0.5], 
            EdgeForm[RGBColor[0.44526024, 0.5448808799999999, 0.69105456]], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-3., 1.5, 0.}, {-2.5, 2., 1.}]},
                 
                 ImageSizeCache->{{91.8833121252018, 
                  108.83186848670283`}, {-31.256517504172315`, \
-20.03201360523791}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, -1., 0.}, {-2., -0.5, 1.}]},
                 
                 ImageSizeCache->{{71.44089384782265, 
                  89.45137496989044}, {-0.2797945928053558, 
                  12.063543416055701`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, -0.5, 0.}, {-2., 0., 2.}]},
                 
                 ImageSizeCache->{{77.5832102722083, 
                  95.45867093635633}, {-6.981768537843512, 
                  6.008638702261336}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, 0., 0.}, {-2., 0.5, 1.}]},
                 
                 ImageSizeCache->{{83.7463995198799, 
                  101.33287067423768`}, {-11.82922267564875, 
                  0.08938778187785346}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, 0.5, 0.}, {-2., 1., 2.}]},
                 
                 ImageSizeCache->{{89.62890445305106, 
                  107.07834899275608`}, {-18.269566030992387`, \
-5.698717615137609}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -3., 0.}, {-1.5, -2.5, 1.}]},
                 
                 ImageSizeCache->{{55.14303092244525, 74.12776847089441}, {
                  28.206295341567042`, 41.6358004307928}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -2.5, 0.}, {-1.5, -2., 1.}]},
                 
                 ImageSizeCache->{{61.89686415185096, 80.64052987404123}, {
                  21.719222492772744`, 34.896542053421975`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -1.5, 0.}, {-1.5, -1., 5.}]},
                 
                 ImageSizeCache->{{74.5941788489547, 93.21531366621133}, {
                  5.686530772647014, 21.88988261132607}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -1., 0.}, {-1.5, -0.5, 1.}]},
                 
                 ImageSizeCache->{{81.22878996594179, 99.28761581735586}, {
                  3.140737167501708, 15.611596020644406`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -0.5, 0.}, {-1.5, 0., 1.}]},
                 
                 ImageSizeCache->{{87.38047567514366, 
                  105.22299164376429`}, {-2.7743429428498168`, 
                  9.47649493345627}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 0., 0.}, {-1.5, 0.5, 6.}]},
                 ImageSizeCache->{{93.07007917177134, 
                  111.02602090482696`}, {-12.879967517475226`, 
                  3.479736244726496}}]},
               StatusArea[#, 6]& ,
               TagBoxNote->"6"],
              StyleBox["6", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[6, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 0.5, 0.}, {-1.5, 1., 5.}]},
                 
                 ImageSizeCache->{{99.04033709461754, 
                  116.70108137360893`}, {-17.65229323859726, \
-2.3833071681938804`}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 1., 0.}, {-1.5, 1.5, 3.}]},
                 
                 ImageSizeCache->{{104.92094626707834`, 
                  122.25235985094822`}, {-21.45638173903118, \
-8.11705835271295}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 1.5, 0.}, {-1.5, 2., 1.}]},
                 
                 ImageSizeCache->{{110.65259645734423`, 
                  127.6838624666248}, {-25.165144693438393`, \
-13.725747409002583`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 2., 0.}, {-1.5, 2.5, 1.}]},
                 
                 ImageSizeCache->{{116.15845429262214`, 
                  132.99942432086388`}, {-30.46568368951715, \
-19.213421897700712`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 3.5, 0.}, {-1.5, 4., 1.}]},
                 
                 ImageSizeCache->{{131.98912775383823`, 
                  148.28643659400018`}, {-45.71282011899342, \
-34.98829576172903}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -2.5, 0.}, {-1., -2., 2.}]},
                 
                 ImageSizeCache->{{71.94731947736895, 90.83458389680374}, {
                  24.54969988821145, 38.75531815257351}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -2., 0.}, {-1., -1.5, 1.}]},
                 
                 ImageSizeCache->{{78.55790999382837, 97.11859068073127}, {
                  19.01141292761852, 32.084310256922336`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -1.5, 0.}, {-1., -1., 1.}]},
                 
                 ImageSizeCache->{{84.9258616915141, 103.256659579687}, {
                  12.737195885298735`, 25.570047949975496`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -1., 0.}, {-1., -0.5, 7.}]},
                 
                 ImageSizeCache->{{90.73267622883009, 109.25381606502395`}, {
                  1.349332878815332, 19.207070913066712`}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -0.5, 0.}, {-1., 0., 10.}]},
                 
                 ImageSizeCache->{{96.66264976245756, 
                  115.11485748586456`}, {-7.255950354818857, 
                  12.99016953396363}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 0., 0.}, {-1., 0.5, 9.}]},
                 
                 ImageSizeCache->{{102.71834610734862`, 
                  120.84436586785438`}, {-12.199328030828674`, 
                  6.9143706814084105`}}]},
               StatusArea[#, 9]& ,
               TagBoxNote->"9"],
              StyleBox["9", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[9, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 0.5, 0.}, {-1., 1., 9.}]},
                 
                 ImageSizeCache->{{108.57624712663434`, 
                  126.44671985979147`}, {-17.894246977148143`, 
                  0.9749244373983359}}]},
               StatusArea[#, 9]& ,
               TagBoxNote->"9"],
              StyleBox["9", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[9, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 1., 0.}, {-1., 1.5, 4.}]},
                 
                 ImageSizeCache->{{114.52536864034249`, 
                  131.92610589359404`}, {-19.149166014604784`, \
-4.832708287186215}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 1.5, 0.}, {-1., 2., 1.}]},
                 
                 ImageSizeCache->{{120.21410854984833`, 
                  137.28652861738368`}, {-22.062676835922822`, \
-10.51286732146751}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 2., 0.}, {-1., 2.5, 1.}]},
                 
                 ImageSizeCache->{{125.65093787382791`, 
                  142.53182065632615`}, {-27.42894593448185, \
-16.069704049937666`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -3., 0.}, {-0.5, -2.5, 2.}]},
                 
                 ImageSizeCache->{{75.63103636142125, 94.8142096164515}, {
                  34.97612219556031, 49.59759472333156}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -2., 0.}, {-0.5, -1.5, 1.}]},
                 ImageSizeCache->{{88.76156145697718, 107.37363472236252`}, {
                  22.68925865657806, 35.90410699993451}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -1.5, 0.}, {-0.5, -1., 13.}]},
                 
                 ImageSizeCache->{{94.25068882075007, 113.43311827989444`}, {
                  5.674581882215691, 29.30031801005591}}]},
               StatusArea[#, 13]& ,
               TagBoxNote->"13"],
              StyleBox["13", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[13, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -1., 0.}, {-0.5, -0.5, 14.}]},
                 
                 ImageSizeCache->{{100.41683203323797`, 
                  119.35256843538664`}, {-1.3818806147144258`, 
                  22.850925239533552`}}]},
               StatusArea[#, 14]& ,
               TagBoxNote->"14"],
              StyleBox["14", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[14, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -0.5, 0.}, {-0.5, 0., 23.}]},
                 
                 ImageSizeCache->{{106.01373363180161`, 
                  125.13678395371224`}, {-15.48897202314311, 
                  16.550576591694533`}}]},
               StatusArea[#, 23]& ,
               TagBoxNote->"23"],
              StyleBox["23", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[23, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 0., 0.}, {-0.5, 0.5, 14.}]},
                 
                 ImageSizeCache->{{112.454320550434, 
                  130.79034681273484`}, {-13.27601785210754, 
                  10.394164515839861`}}]},
               StatusArea[#, 14]& ,
               TagBoxNote->"14"],
              StyleBox["14", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[14, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 0.5, 0.}, {-0.5, 1., 17.}]},
                 
                 ImageSizeCache->{{118.14218792666797`, 
                  136.31763430844447`}, {-21.676546148280757`, 
                  4.376812197860222}}]},
               StatusArea[#, 17]& ,
               TagBoxNote->"17"],
              StyleBox["17", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[17, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 1., 0.}, {-0.5, 1.5, 1.}]},
                 
                 ImageSizeCache->{{124.41170222351658`, 
                  141.72283035792748`}, {-13.368812802707605`, \
-1.5061393238281937`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 1.5, 0.}, {-0.5, 2., 2.}]},
                 
                 ImageSizeCache->{{129.86687099238776`, 
                  147.00993606150962`}, {-19.774663655439973`, \
-7.259143188565234}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 2., 0.}, {-0.5, 2.5, 2.}]},
                 
                 ImageSizeCache->{{135.237706198662, 
                  152.18277958010864`}, {-25.20361076239338, \
-12.886457955231439`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -3.5, 0.}, {0., -3., 1.}]},
                 
                 ImageSizeCache->{{79.54519903380616, 98.94871114807808}, {
                  46.70285717122375, 60.86709863093114}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -2., 0.}, {0., -1.5, 1.}]},
                 
                 ImageSizeCache->{{99.1059375937705, 117.76925612181293`}, {
                  26.417227196966806`, 39.77689708333771}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -1.5, 0.}, {0., -1., 8.}]},
                 
                 ImageSizeCache->{{104.92049454034776`, 
                  123.74743528273333`}, {13.76968901874325, 
                  33.08172305374722}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -1., 0.}, {0., -0.5, 12.}]},
                 
                 ImageSizeCache->{{110.8308167632087, 129.58653507992616`}, {
                  3.9372328514108297`, 26.54414207876456}}]},
               StatusArea[#, 12]& ,
               TagBoxNote->"12"],
              StyleBox["12", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[12, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -0.5, 0.}, {0., 0., 24.}]},
                 
                 ImageSizeCache->{{116.28869296633087`, 
                  135.29135312466877`}, {-12.978585831873993`, 
                  20.158654672382482`}}]},
               StatusArea[#, 24]& ,
               TagBoxNote->"24"],
              StyleBox["24", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[24, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 0., 0.}, {0., 0.5, 14.}]},
                 
                 ImageSizeCache->{{122.60794662756567`, 
                  140.8664688753776}, {-9.90915869657794, 
                  13.920014291905012`}}]},
               StatusArea[#, 14]& ,
               TagBoxNote->"14"],
              StyleBox["14", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[14, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 0.5, 0.}, {0., 1., 28.}]},
                 
                 ImageSizeCache->{{127.88441266909649`, 
                  146.31625589781143`}, {-28.2850839621505, 
                  7.823212960921026}}]},
               StatusArea[#, 28]& ,
               TagBoxNote->"28"],
              StyleBox["28", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[28, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 1., 0.}, {0., 1.5, 10.}]},
                 
                 ImageSizeCache->{{134.05543896894477`, 
                  151.64489330763575`}, {-17.91507175798919, 
                  1.8634678618655691`}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 1.5, 0.}, {0., 2., 1.}]},
                 ImageSizeCache->{{139.70212537939432`, 
                  156.85637645826606`}, {-15.740605174398077`, \
-3.9637911772705117`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 2.5, 0.}, {0., 3., 1.}]},
                 
                 ImageSizeCache->{{150.17200065075647`, 
                  166.94558591834763`}, {-26.625778312293868`, \
-15.238137901200329`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -2.5, 0.}, {0.5, -2., 2.}]},
                 
                 ImageSizeCache->{{103.25504948644414`, 
                  122.27122670390341`}, {35.996522940356655`, 
                  50.65906872984604}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -2., 0.}, {0.5, -1.5, 3.}]},
                 
                 ImageSizeCache->{{109.48765007999488`, 
                  128.30836540459254`}, {28.420288178956213`, 
                  43.7037910022438}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -1.5, 0.}, {0.5, -1., 7.}]},
                 
                 ImageSizeCache->{{115.44353852633571`, 134.2024309972135}, {
                  18.33762089715859, 36.91532178407649}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -1., 0.}, {0.5, -0.5, 10.}]},
                 
                 ImageSizeCache->{{121.3457991413576, 139.95844991877564`}, {
                  9.30732655320617, 30.28773132623276}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -0.5, 0.}, {0.5, 0., 13.}]},
                 
                 ImageSizeCache->{{127.14394032350796`, 145.5812158802952}, {
                  0.43447710204939227`, 23.815367644452053`}}]},
               StatusArea[#, 13]& ,
               TagBoxNote->"13"],
              StyleBox["13", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[13, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 0., 0.}, {0.5, 0.5, 21.}]},
                 
                 ImageSizeCache->{{132.6969538907402, 
                  151.075303181803}, {-12.78380757797585, 
                  17.492840443548545`}}]},
               StatusArea[#, 21]& ,
               TagBoxNote->"21"],
              StyleBox["21", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[21, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 0.5, 0.}, {0.5, 1., 13.}]},
                 
                 ImageSizeCache->{{138.5754741389394, 
                  156.4450791235407}, {-11.510101453947232`, 
                  11.315006145331697`}}]},
               StatusArea[#, 13]& ,
               TagBoxNote->"13"],
              StyleBox["13", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[13, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 1., 0.}, {0.5, 1.5, 7.}]},
                 
                 ImageSizeCache->{{144.19839347384067`, 
                  161.69471558411925`}, {-12.023294850961143`, 
                  5.276953932819087}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 1.5, 0.}, {0.5, 2., 5.}]},
                 
                 ImageSizeCache->{{149.5867306893523, 
                  166.84100346930978`}, {-15.961707040198291`, \
-0.6260072688406471}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 2., 0.}, {0.5, 2.5, 1.}]},
                 
                 ImageSizeCache->{{154.84971901861084`, 
                  171.85647511676285`}, {-18.090483494733423`, \
-6.398360947273861}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -3.5, 0.}, {1., -3., 1.}]},
                 
                 ImageSizeCache->{{101.18304730423142`, 
                  120.69974985998329`}, {54.88836210298753, 
                  69.38517448878868}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -2.5, 0.}, {1., -2., 2.}]},
                 
                 ImageSizeCache->{{113.98673534811323`, 
                  133.04495228371516`}, {39.91895784719293, 
                  54.74001246845814}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -2., 0.}, {1., -1.5, 1.}]},
                 
                 ImageSizeCache->{{120.22867164612491`, 138.9939540009193}, {
                  34.027687874291, 47.68593049780495}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -1.5, 0.}, {1., -1., 8.}]},
                 
                 ImageSizeCache->{{126.0185423663622, 144.80100329668906`}, {
                  21.168676278491123`, 40.802202333140805`}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -1., 0.}, {1., -0.5, 11.}]},
                 
                 ImageSizeCache->{{131.87257453002422`, 
                  150.47112107563385`}, {12.042808286878849`, 
                  34.082730614838766`}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -0.5, 0.}, {1., 0., 18.}]},
                 ImageSizeCache->{{137.52482691230972`, 
                  156.00909421348973`}, {-0.533041562876317, 
                  27.521705537470197`}}]},
               StatusArea[#, 18]& ,
               TagBoxNote->"18"],
              StyleBox["18", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[18, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 0., 0.}, {1., 0.5, 11.}]},
                 
                 ImageSizeCache->{{143.38177059917103`, 
                  161.4194890354305}, {-0.36474903526207925`, 
                  21.113588095855427`}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 0.5, 0.}, {1., 1., 4.}]},
                 
                 ImageSizeCache->{{149.0252486814544, 
                  166.7167329527669}, {-0.20252054011167075`, 
                  14.853094488996941`}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 1., 0.}, {1., 1.5, 8.}]},
                 
                 ImageSizeCache->{{154.3867572738203, 
                  171.93406447188292`}, {-9.577400454067732, 
                  8.735181589598572}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 1.5, 0.}, {1., 2., 3.}]},
                 
                 ImageSizeCache->{{159.68799501551592`, 
                  176.96387575949066`}, {-10.980195574430116`, 
                  2.755033395187777}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 2., 0.}, {1., 2.5, 1.}]},
                 
                 ImageSizeCache->{{164.8281998301512, 
                  181.886000620719}, {-14.899181853794751`, \
-3.0919516156615394`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 2.5, 0.}, {1., 3., 1.}]},
                 
                 ImageSizeCache->{{169.849344616219, 
                  186.72434877933048`}, {-20.418750077700583`, \
-8.810172291769298}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -2.5, 0.}, {1.5, -2., 1.}]},
                 
                 ImageSizeCache->{{124.91019731912789`, 143.9713219507032}, {
                  44.79222671303694, 58.87949632474263}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -1.5, 0.}, {1.5, -1., 1.}]},
                 
                 ImageSizeCache->{{136.9685519001749, 155.54613019675597`}, {
                  31.196762280848162`, 44.74348329182344}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -1., 0.}, {1.5, -0.5, 4.}]},
                 
                 ImageSizeCache->{{142.7236176798976, 161.1274334124891}, {
                  21.98321058739513, 37.93020627377755}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -0.5, 0.}, {1.5, 0., 10.}]},
                 
                 ImageSizeCache->{{148.33537041819724`, 166.6025950769183}, {
                  10.255942381102862`, 31.27868543578625}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 0., 0.}, {1.5, 0.5, 8.}]},
                 
                 ImageSizeCache->{{153.9455762846447, 171.9630153440002}, {
                  5.81430868381911, 24.783227898582464`}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 0.5, 0.}, {1.5, 1., 10.}]},
                 
                 ImageSizeCache->{{159.3935813650138, 
                  177.2299389063676}, {-2.0380242993016857`, 
                  18.4384048270628}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 1., 0.}, {1.5, 1.5, 5.}]},
                 
                 ImageSizeCache->{{164.70666387348598`, 
                  182.2740179533573}, {-3.5894977966630854`, 
                  12.239036297311273`}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 1.5, 0.}, {1.5, 2., 1.}]},
                 
                 ImageSizeCache->{{169.87478077564737`, 
                  187.1793864945905}, {-5.953388695272914, 
                  6.180177192595134}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -3., 0.}, {2., -2.5, 1.}]},
                 
                 ImageSizeCache->{{129.77808152243074`, 149.1455610054473}, {
                  55.97992613299304, 70.52143225586781}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -2.5, 0.}, {2., -2., 1.}]},
                 
                 ImageSizeCache->{{135.9402517637275, 155.05360288329146`}, {
                  48.82861739104617, 63.07878901342629}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -1.5, 0.}, {2., -1., 2.}]},
                 
                 ImageSizeCache->{{147.80000591512322`, 
                  166.44567145621699`}, {34.1519673961229, 
                  48.740314783050145`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -1., 0.}, {2., -0.5, 2.}]},
                 
                 ImageSizeCache->{{153.52892067933865`, 171.9461086926927}, {
                  27.508340720984464`, 41.83125432745915}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -0.5, 0.}, {2., 0., 7.}]},
                 
                 ImageSizeCache->{{159.10674670841, 177.3823114806147}, {
                  16.584554738885988`, 35.08735240905502}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 0., 0.}, {2., 0.5, 2.}]},
                 
                 ImageSizeCache->{{164.57778362908735`, 182.5609796057293}, {
                  14.684199027147802`, 28.502756893685742`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 0.5, 0.}, {2., 1., 9.}]},
                 
                 ImageSizeCache->{{169.90173619194584`, 
                  187.84548364633235`}, {2.3288055480881518`, 
                  22.071888901368233`}}]},
               StatusArea[#, 9]& ,
               TagBoxNote->"9"],
              StyleBox["9", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[9, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 1.5, 0.}, {2., 2., 4.}]},
                 
                 ImageSizeCache->{{180.18763726357273`, 
                  197.64726240971083`}, {-5.208067154069981, 
                  9.650292726844011}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 2., 0.}, {2., 2.5, 2.}]},
                 
                 ImageSizeCache->{{185.15769869707918`, 
                  202.36747046273172`}, {-9.255598937810436, 
                  3.6496364817989644`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., -1.5, 0.}, {2.5, -1., 1.}]},
                 
                 ImageSizeCache->{{158.8136073062117, 177.50207782722762`}, {
                  38.94079827798367, 52.7938795807486}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., -1., 0.}, {2.5, -0.5, 1.}]},
                 
                 ImageSizeCache->{{164.44087264501084`, 182.9019009595921}, {
                  32.20079005313013, 45.787001536448905`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., -0.5, 0.}, {2.5, 0., 3.}]},
                 
                 ImageSizeCache->{{169.9303511689585, 188.2213236301267}, {
                  23.849692193125144`, 38.948780481431136`}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 0., 0.}, {2.5, 0.5, 2.}]},
                 
                 ImageSizeCache->{{175.29015564236866`, 
                  193.34926155375197`}, {18.312995922934352`, 
                  32.273199418472586`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 0.5, 0.}, {2.5, 1., 4.}]},
                 
                 ImageSizeCache->{{180.52482722586694`, 
                  198.44840650632221`}, {10.281173308590489`, 
                  25.754524202745905`}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., -1., 0.}, {3.5, -0.5, 1.}]},
                 
                 ImageSizeCache->{{186.6918802022858, 205.2917686585018}, {
                  39.973035711593674`, 53.86726069990107}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ]}, {}, {}}, {{}, 
           {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
            Opacity[0.5], EdgeForm[RGBColor[
            0.81411984, 0.6199495199999999, 0.28227672000000004`]], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 3., 0.}, {1.5, 3.5, 1.}]},
                 
                 ImageSizeCache->{{184.70368455280664`, 
                  201.4552590907993}, {-22.725701702000986`, \
-11.199542845712774`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 2., 0.}, {2., 2.5, 2.}]},
                 
                 ImageSizeCache->{{185.15769869707918`, 
                  202.36747046273172`}, {-9.255598937810436, 
                  3.6496364817989644`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 2.5, 0.}, {2., 3., 3.}]},
                 
                 ImageSizeCache->{{190.01760967037288`, 
                  207.08533261336186`}, {-15.770550770893934`, \
-2.217174833785954}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 3., 0.}, {2., 3.5, 7.}]},
                 
                 ImageSizeCache->{{194.77099191297998`, 
                  211.83997813896053`}, {-24.732524334291618`, \
-7.954569954830987}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 3.5, 0.}, {2., 4., 1.}]},
                 
                 ImageSizeCache->{{199.42131009988543`, 
                  216.05108994042342`}, {-25.011629737160234`, \
-13.566784360538865`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 1.5, 0.}, {2.5, 2., 1.}]},
                 
                 ImageSizeCache->{{190.6359003491453, 208.0603037130672}, {
                  0.7833820526600022, 13.166271561451847`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 2., 0.}, {2.5, 2.5, 11.}]},
                 
                 ImageSizeCache->{{195.5203832472243, 
                  213.21531967437528`}, {-13.78948493130363, 
                  7.086497828153618}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 2.5, 0.}, {2.5, 3., 32.}]},
                 
                 ImageSizeCache->{{200.29591751664586`, 
                  218.92363161290928`}, {-38.21646442625897, 
                  1.1432097784776474`}}]},
               StatusArea[#, 32]& ,
               TagBoxNote->"32"],
              StyleBox["32", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[32, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 3., 0.}, {2.5, 3.5, 16.}]},
                 
                 ImageSizeCache->{{204.96610810978424`, 
                  222.63704996871076`}, {-29.414861517097915`, \
-4.668137551372023}}]},
               StatusArea[#, 16]& ,
               TagBoxNote->"16"],
              StyleBox["16", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[16, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 3.5, 0.}, {2.5, 4., 10.}]},
                 
                 ImageSizeCache->{{209.5344026705114, 
                  226.731718499129}, {-29.621385481404417`, \
-10.351889544559597`}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 4., 0.}, {2.5, 4.5, 2.}]},
                 
                 ImageSizeCache->{{214.00410002214534`, 
                  230.57359065396997`}, {-28.123446536503153`, \
-15.912202839757725`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 1.5, 0.}, {3., 2., 3.}]},
                 ImageSizeCache->{{201.22225446465436`, 
                  218.81183535753775`}, {2.4755843079233273`, 
                  16.7290289836751}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 2., 0.}, {3., 2.5, 23.}]},
                 
                 ImageSizeCache->{{206.0184729975418, 
                  224.57042803540742`}, {-21.160343109401516`, 
                  10.56856264361831}}]},
               StatusArea[#, 23]& ,
               TagBoxNote->"23"],
              StyleBox["23", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[23, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 2.5, 0.}, {3., 3., 62.}]},
                 
                 ImageSizeCache->{{210.70702055549188`, 
                  231.67202329263233`}, {-63.21684015826442, 
                  4.547292671550721}}]},
               StatusArea[#, 62]& ,
               TagBoxNote->"62"],
              StyleBox["62", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[62, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 3., 0.}, {3., 3.5, 53.}]},
                 
                 ImageSizeCache->{{215.29148257450035`, 
                  235.65790947738896`}, {-60.00464067314984, \
-1.3394459633920945`}}]},
               StatusArea[#, 53]& ,
               TagBoxNote->"53"],
              StyleBox["53", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[53, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 3.5, 0.}, {3., 4., 19.}]},
                 
                 ImageSizeCache->{{219.77528704517653`, 
                  237.7281834236708}, {-34.366589207932876`, \
-7.096112136480855}}]},
               StatusArea[#, 19]& ,
               TagBoxNote->"19"],
              StyleBox["19", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[19, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 4., 0.}, {3., 4.5, 3.}]},
                 
                 ImageSizeCache->{{224.16171306116945`, 
                  240.8634064703741}, {-25.90034854628686, \
-12.726969830908986`}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 1.5, 0.}, {3.5, 2., 1.}]},
                 
                 ImageSizeCache->{{211.94945547282546`, 
                  229.49466471526742`}, {7.697533958197422, 
                  20.339504798878977`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 2., 0.}, {3.5, 2.5, 29.}]},
                 
                 ImageSizeCache->{{216.65463933225402`, 
                  235.92303046111846`}, {-23.27740226173641, 
                  14.09672864271327}}]},
               StatusArea[#, 29]& ,
               TagBoxNote->"29"],
              StyleBox["29", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[29, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 2.5, 0.}, {3.5, 3., 57.}]},
                 
                 ImageSizeCache->{{221.2535090804122, 
                  242.55699071066726`}, {-55.23626280308969, 
                  7.995931799360285}}]},
               StatusArea[#, 57]& ,
               TagBoxNote->"57"],
              StyleBox["57", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[57, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 3., 0.}, {3.5, 3.5, 50.}]},
                 
                 ImageSizeCache->{{225.74962773131813`, 
                  246.48864569185633`}, {-54.06236683926336, 
                  2.0323251795826707`}}]},
               StatusArea[#, 50]& ,
               TagBoxNote->"50"],
              StyleBox["50", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[50, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 3.5, 0.}, {3.5, 4., 29.}]},
                 
                 ImageSizeCache->{{230.14640084338185`, 
                  249.13514134557022`}, {-40.15312999402706, \
-3.7986673136437616`}}]},
               StatusArea[#, 29]& ,
               TagBoxNote->"29"],
              StyleBox["29", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[29, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 4., 0.}, {3.5, 4.5, 5.}]},
                 
                 ImageSizeCache->{{234.44708512214993`, 
                  251.38118758405574`}, {-24.501664457390913`, \
-9.501420495818541}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 1., 0.}, {4., 1.5, 1.}]},
                 
                 ImageSizeCache->{{218.10046315388615`, 
                  235.90829180957402`}, {17.462026890166822`, 
                  30.47539823387455}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 1.5, 0.}, {4., 2., 1.}]},
                 
                 ImageSizeCache->{{222.82033305860955`, 
                  240.42630854658978`}, {11.2233316477522, 
                  23.998664157040995`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 2., 0.}, {4., 2.5, 8.}]},
                 
                 ImageSizeCache->{{227.43162437175914`, 
                  245.38714386509906`}, {-1.0049907899892112`, 
                  17.671917469147388`}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 2.5, 0.}, {4., 3., 22.}]},
                 
                 ImageSizeCache->{{231.9380411939062, 
                  250.8853276975148}, {-19.384646221828376`, 
                  11.490007723404815`}}]},
               StatusArea[#, 22]& ,
               TagBoxNote->"22"],
              StyleBox["22", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[22, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 3., 0.}, {4., 3.5, 22.}]},
                 
                 ImageSizeCache->{{236.3431210354542, 
                  255.1681761866999}, {-25.117230841648603`, 
                  5.448017620613186}}]},
               StatusArea[#, 22]& ,
               TagBoxNote->"22"],
              StyleBox["22", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[22, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 3.5, 0.}, {4., 4., 11.}]},
                 ImageSizeCache->{{240.65024407790042`, 
                  258.3725529214447}, {-21.012891247617326`, \
-0.45875003570762374`}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 4., 0.}, {4., 4.5, 2.}]},
                 
                 ImageSizeCache->{{244.86264182405802`, 
                  261.621033729691}, {-18.78660988769083, \
-6.234784518029034}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 4.5, 0.}, {4., 5., 1.}]},
                 
                 ImageSizeCache->{{248.98340518375915`, 
                  265.478092986405}, {-23.3869786582504, \
-11.884378553729809`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4., 2.5, 0.}, {4.5, 3., 2.}]},
                 
                 ImageSizeCache->{{242.76334504097824`, 
                  260.13013568261624`}, {1.7113456288004407`, 
                  15.030424362345155`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4., 3., 0.}, {4.5, 3.5, 4.}]},
                 
                 ImageSizeCache->{{247.07460709091677`, 
                  264.44527214471935`}, {-5.921851996531128, 
                  8.908495175918176}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4., 3.5, 0.}, {4.5, 4., 5.}]},
                 
                 ImageSizeCache->{{251.28938116390543`, 
                  268.58188443908426`}, {-12.546467224315272`, 
                  2.9244656106003397`}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4.5, 3., 0.}, {5., 3.5, 1.}]},
                 
                 ImageSizeCache->{{257.94679985157205`, 275.089563928308}, {
                  0.0587215295701462, 12.414644463183617`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ]}, {}, {}}},
         FontColor->GrayLevel[0.4]]},
       Axes->{True, True, True},
       AxesLabel->{None, None, None},
       BoxRatios->{1, 1, 0.4},
       FaceGridsStyle->Automatic,
       ImageSize->300,
       Lighting->"Neutral",
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-3., 5.}, {-3.5, 5.}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.1]}},
       Ticks->{Automatic, Automatic, Automatic}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]}}, 1,
  Alignment->{Center, Center}]], "Output",
 CellChangeTimes->{{3.65918048910951*^9, 3.6591805250987663`*^9}, {
   3.659180571042089*^9, 3.659180585091605*^9}, {3.6591806395860786`*^9, 
   3.659180700996031*^9}, 3.6591854656292667`*^9, 3.661670171350132*^9, {
   3.674970724052598*^9, 3.67497072709015*^9}}]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Visualising Frequency Tables", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, 
   3.659178513038447*^9, {3.659181363046502*^9, 3.65918137580404*^9}, {
   3.659182002558535*^9, 3.659182007126169*^9}, {3.663574551476749*^9, 
   3.6635745733357677`*^9}, 3.663577210006481*^9}],

Cell["\<\
When visualising data using a chart it is crucial to understand that your \
visualisation is a representation of the data - and to choose as clear and \
unambiguous chart as possible. Consider the following three charts that all \
visualise the same data:\
\>", "Text",
 CellChangeTimes->{{3.659178999679151*^9, 3.6591789999945383`*^9}, {
  3.659181396463543*^9, 3.65918142899436*^9}, {3.659181489107718*^9, 
  3.659181585169118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TabView", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<PieChart\>\"", "->", 
      RowBox[{"PieChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"",
            ",", "\"\<IT Services\>\"", ",", "\"\<Zoology\>\""}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"LabelingFunction", "\[Rule]", "None"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PieChart3D\>\"", "->", 
      RowBox[{"PieChart3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"",
            ",", "\"\<IT Services\>\"", ",", "\"\<Zoology\>\""}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"LabelingFunction", "\[Rule]", "None"}], ",", 
        RowBox[{"ViewPoint", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.21149154538597087"}], ",", " ", 
           "3.001197517299212", ",", " ", "0.8414777408745291"}], "}"}]}], 
        ",", " ", "\n", "   ", 
        RowBox[{"ViewVertical", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.04958960267809786"}], ",", " ", 
           "0.40720144552881316", ",", " ", "9.11991148019252"}], "}"}]}], 
        ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<BarChart\>\"", "\[Rule]", 
      RowBox[{"BarChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"ChartLabels", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"",
            ",", "\"\<IT Services\>\"", ",", "\"\<Zoology\>\""}], "}"}]}], 
        ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659173659295195*^9, 3.6591736678072443`*^9}, {
  3.659173783673476*^9, 3.6591737970160227`*^9}, {3.65917410861942*^9, 
  3.659174221245366*^9}, {3.659174263854562*^9, 3.659174307533519*^9}}],

Cell[BoxData[
 TabViewBox[{{1,"\<\"PieChart\"\>"->
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$35547$35803 = False, DynamicChart`click$35550$35803 = 
        False, DynamicChart`click$35553$35803 = False, 
        DynamicChart`click$35556$35803 = False, 
        DynamicChart`click$35559$35803 = False}, {{
         Directive[
          RGBColor[0.5, 0.5, 1.], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.5]]]], {{{{{{}, {{
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.982864, 0.7431472, 0.3262672]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35547$35803, 
                    FEPrivate`Not[DynamicChart`click$35547$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35547$35803, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 0.1732050807568877}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35547$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[1., 0.544, 0.2]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.34906585039886595`, 
                    1.0471975511965979`}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35550$35803, 
                    FEPrivate`Not[DynamicChart`click$35550$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35550$35803, {{{1., 0}, {0, 1.}}, {
                    0.18793852415718168`, 0.06840402866513376}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35550$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.7453292519943293`, -0.34906585039886595`}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35553$35803, 
                    FEPrivate`Not[DynamicChart`click$35553$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35553$35803, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35553$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.6754608, 0.4848, 0.7224792]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.443460952792061, -1.7453292519943293`}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35556$35803, 
                    FEPrivate`Not[DynamicChart`click$35556$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35556$35803, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35556$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.4992, 0.5552, 0.8309304]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.443460952792061}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35559$35803, 
                    FEPrivate`Not[DynamicChart`click$35559$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35559$35803, {{{1., 0}, {
                    0, 1.}}, {-0.18793852415718168`, -0.06840402866513377}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$35559$35803}]]}}}}}, {}}, {{}}}}, {{{{
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35547$35803, 
                  FEPrivate`Not[DynamicChart`click$35547$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35547$35803, {{{1., 0}, {
                 0, 1.}}, {-0.10000000000000005`, 0.1732050807568877}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35547$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35550$35803, 
                  FEPrivate`Not[DynamicChart`click$35550$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35550$35803, {{{1., 0}, {0, 1.}}, {
                0.18793852415718168`, 0.06840402866513376}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35550$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35553$35803, 
                  FEPrivate`Not[DynamicChart`click$35553$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35553$35803, {{{1., 0}, {0, 1.}}, {
                0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35553$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35556$35803, 
                  FEPrivate`Not[DynamicChart`click$35556$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35556$35803, {{{1., 0}, {
                 0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35556$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35559$35803, 
                  FEPrivate`Not[DynamicChart`click$35559$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35559$35803, {{{1., 0}, {
                 0, 1.}}, {-0.18793852415718168`, -0.06840402866513377}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$35559$35803}]]}, {}}}, {}}}, 
       DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
     ContentSelectable -> False, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> {
        GrayLevel[0], FontFamily -> "Arial"}, 
      PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
      Scaled[0.02]}],FormBox[
     FormBox[
      TemplateBox[{
       "\"Physics\"", "\"English\"", "\"Chemistry\"", "\"IT Services\"", 
        "\"Zoology\""}, "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
          Background -> Automatic, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "None", ",", "None", ",", "None", ",", "None", ",", 
                    "None"}], "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {
  2,"\<\"PieChart3D\"\>"->
  TemplateBox[{Graphics3DBox[{
      RGBColor[0.5, 0.5, 1.], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.1]}], {{{}, {{
          RGBColor[0.980722, 0.7110406, 0.2420506], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35828 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJzt1mtIU2EYB3C1G1SjMrtoZk2RVqhYKLa0HisLLAsvEJk5YZkEfpAKKyLS
uTLLYWZeoiK6fZA2bIa3UHxNamlWSxRXq9Ri6bxse6S0qZnZB98D8fShz+2B
A+N34MDO4f3/H7E8LfbwDCcnJ5epK2Lq+v3bMY5xzL8OsonW9J5Bv+q6aSna
vfaJwmZj4+crX6rCtDDtR8Zmz1peb2MmpcupgKAG7r59IbXDqTam0tzOlEub
uPtkLM1LG7WyGznvnPWub7gPRR7LHU+xMsMqb3GCvY27rLzzQWClhX29KoqL
aTZwzwh226AzDbKz4cZzjYr33JPuzLQXjAww9z1b+t+u7OJei8kXVAP9bO7+
Wrsl6hP3fRuuiHVP+9jO89fne4x+5r4xWn83TWlmXkvDYquvmLhXSpdEtkt6
2eQyKFy9pIf7tegiWXzVF3bO/eopnaKXe/jio81n/E0sJ1zsub7DzN1FLcpq
u/yZlWzdUey8qJ97ot/toTld3ezE62z518AB7gmVkK6VdrLAm14PPwYNcq9x
ff5OUmxki/2seRUrLNxz43L2Sg0d7MlQmeiSSfDE7Ydi6p3a2IRPmO/lPCv3
/APdu+L9X7Mu2ViBm7tN8OPzznps0rFlngpVrlJwj8GaVFNSHQvStcRmvxL8
zmqtpPRgKVNqDtyrGRG8fEyiXwf5YJPqZ9t/Cj7cZL7/OLICUlIe/QjtEdwY
sSA5KaQRbNs2zrylETyqU230CHkBrOS7Ij5W8ILMxgCzqBVmaLRZLQbhf4WK
FSfLrO3wLE6ecGyz4MG533q7H7+FQp+FayxK4f1cbL4mK079ADFzGrzH1cJ7
/jn5e7pAHbXffLpK+C704F/uO9zh/7fT5wiBPncI9DlFoM81Ap0DCHRuINA5
g0DnEgKdYwh07iHQOYlA5+qUkzmMQOc2Ap3zCHQvINA9MvV8sncQ6J5CoHsN
ge5BBLo3EeieRaB7GYHucQS69xHoPQGB3isQ6D0Egd5bEOg9B4HeixDoPWr6
vPy5dyH8AuY5laI=
                 "]], 
                
                BSplineSurface3DBox[{{{0.4999999999999999, 0.8660254037844387,
                   0.}, {-0.3660254037844388, 1.3660254037844386`, 
                  0.}, {-0.8660254037844387, 0.4999999999999999, 0.}, {-1., 
                  0.2679491924311227, 0.}, {-1., 5.551115123125783*^-17, 
                  0.}}, {{
                   0.4999999999999999, 0.8660254037844387, 
                    1}, {-0.3660254037844388, 1.3660254037844386`, 
                    1}, {-0.8660254037844387, 0.4999999999999999, 1}, {-1., 
                    0.2679491924311227, 1}, {-1., 5.551115123125783*^-17, 
                    1}}}, SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.9659258262890683, 1.}, {1., 0.7071067811865475, 1., 
                  0.9659258262890683, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 2}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.4999999999999999, 0.8660254037844387, 1.}, {
                 0.4999999999999999, 0.8660254037844387, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-1., -3.216245299353273*^-16, 
                 1.}, {-1., -3.216245299353273*^-16, 0.}}}]}}, 
              ImageSizeCache -> {{100.38834872409797`, 
               488.0127567638249}, {-61.680548519600066`, 
               121.37388017888667`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35828, 
                 FEPrivate`Not[DynamicChart`click$35828]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35828, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {-0.10000000000000005`, 0.1732050807568877, 
                0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$35828}]],
            DynamicModuleValues :> {}]}, {
          RGBColor[1., 0.487, 0.1], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35829 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmI9IAaxR8EoIAb8/g8C9+3X+ES8qNr22h4mfvbZnYnb
dj60nxSm2Zm55BVc/MwWnonqiY/tZzTxdz4sewkXb4sor5/35Yn9Ig2r3ZL6
L+DiN+22llUXPbPf8fwwY8q5Z3DxmKDjV0xuPre/3J72UTvsKVxc9cGtixHq
L+2/VGyM+nr8MVw8Vqb8b1/0K3s1N9ddUaqP4OKdkd0LZ5a8tk8R3jCRu+AB
XPzgp/ec4YVv7D+tsAudGnwX4R5/jvWHAt7a32tM6rmx4iZcXFo3yOmb4Dv7
H9xdJSseX4WLhwecna215Z39gd6yv8/ZL8HFnT+5te8we2//UHPJJiXjM3Bx
FtutBZIz39u/PGJ2LNnyCFw8zuTju+e33tt/DnY/Oj10B1ycnd1B58Hv9/ab
btecXGK3AEN8FUR8P7o5ryHm7Ee39xnEXrg4zJ33Ie6Ei6P5Cy4OC4dvkHCA
i2MHH+xHxUfFkcWxp58P9tjT2wd77Onzgz329PzBHnv6/2CPPb8gxFHzF8Ic
1PyIsBc1/yLciZrfMfwFF8dennywx17+fLDHXl59sMdevn2wx14efrDHXn5+
sMde3gLdg7V8/mCPvTz/YI+9/P9gj72++GCPvX75YA8A4hXGVw==
                 "]], 
                
                BSplineSurface3DBox[{{{
                  0.9396926207859083, -0.34202014332566877`, 0.}, {
                  1.2266815969056775`, 0.4464755881957988, 0.}, {
                  0.4999999999999999, 0.8660254037844387, 
                  0.}}, {{0.9396926207859083, -0.34202014332566877`, 1}, {
                   1.2266815969056775`, 0.4464755881957988, 1}, {
                   0.4999999999999999, 0.8660254037844387, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7660444431189779, 1.}, {1., 
                  0.7660444431189779, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.4999999999999997, 0.8660254037844388, 1.}, {
                 0.4999999999999997, 0.8660254037844388, 0.}}}]}}, 
              ImageSizeCache -> {{32.68711992982149, 
               336.64511697853015`}, {-94.56686068843058, 
               43.70694303276039}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35829, 
                 FEPrivate`Not[DynamicChart`click$35829]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35829, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {
               0.18793852415718168`, 0.06840402866513376, 0}}, {{1, 0, 0}, {0,
               1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$35829}]], 
           DynamicModuleValues :> {}]}, {
          RGBColor[0.757, 0.40959999999999996`, 0.1], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35830 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmI9IAaxR8EoIAZI6wY5fRN8Z/+Nu6tkxeOr+2HiN/05
1h8KeGt/pzGp58aKm3DxQ5/ec4YXvrH/sMIudGrwXbh4V2T3wpklr+2ThDdM
5C54ABePkyn/2xf9yl7VzXVXlOojuLjag1sXI9Rf2n+q2Bj19fhjhPqg41dM
bj63v9Se9lE77Clc/Jbd1rLqomf2254fZkw59wwu3h5RXj/vyxP7hRpWuyX1
X8DFz27hmaie+Nh+ehN/58Oyl3DxC8/uTNy286H9hDDNzswlr+DijGDygf0q
n4gXVdtew8V7T86Im5Z9xz6Q/YDS79Vv4OKW3V+eP9h5w36ysoD62+a3cHF7
xcbyde+u2B8NToousn0HF5/acEjvBe9Fe+Y1G5pOX0eIB99bfUvK/JT9/unf
GyOD3sPFH7nwp8SbH7J/72TBMm8NQlz05IslOz232Kembfpj/Qwh/vGXxnkt
+wn27y3Ps/34hxBPUtigsSJmxf7mNVGLd3xDiHO92ZH9JH7PfpNjp4PaziLE
G4q566Ssju2XkGns6W5GiGMHH+xHxUfFkcWxp58P9tjT2wd77Onzgz329PzB
Hnv6/2CPPb98sMeevz7YY8+PH+yx598P9tjz+wd77OXDB3vs5ckHe+zlzwd7
7OXVB3vs5dsHe+zl4Qd77OXnB3vs5S1QPdby+YM99vL8gz328v+DPfb64oM9
9vrlgz0ARFXOXw==
                 "]], 
                
                BSplineSurface3DBox[{{{-0.17364817766693008`, \
-0.9848077530122081, 0.}, {0.6527036446661394, -1.130515874847136, 0.}, {
                  0.9396926207859084, -0.34202014332566877`, 
                  0.}}, {{-0.17364817766693008`, -0.9848077530122081, 1}, {
                   0.6527036446661394, -1.130515874847136, 1}, {
                   0.9396926207859084, -0.34202014332566877`, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7660444431189779, 1.}, {1., 
                  0.7660444431189779, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 0.}}}]}}, 
              ImageSizeCache -> {{160.41750263717344`, 
               410.9131333719787}, {-114.01463571982481`, 
               1.8576382744329578`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35830, 
                 FEPrivate`Not[DynamicChart`click$35830]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35830, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {
               0.10000000000000003`, -0.17320508075688773`, 0}}, {{1, 0, 0}, {
              0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$35830}]], 
           DynamicModuleValues :> {}]}, {
          RGBColor[0.6348934, 0.4204, 0.6877891], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35831 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIJIAaxRwF+0FDMXSdldWy/hExjT3fz+/1w8agHXpG6
5/Y/iPs1SUQSIR7qnBy4j+Hy/n/KNqr9fe/g4i3BHX6W16/tP/xxHW/Xk7dw
8Y1Cx29qTLu1X1TnXd8WaYR4yFb70g2W9/YbzZFbf9fkDVw8SmfBR/b7D/ZX
nmtL+mzwGi7OtJq36XL/o/3THV2nMQq+govbCheerNF9sr/LQVHG8NoLuPjU
gKlxkdue7m+XnFxxrPE5XHyTpajnFY3n+5kk7KcoiD6Di1sEnF+U3/xiv5yY
TdD2iU/g4tjBB/tRcYg49nD7YI89nD/YY4+XD/bY4/GDPfZ4/2CPPZ18sMee
rj7YY0+HH+yxp9sP9tjT+Qd77PkCKI41H32wBwCBrOa0
                 "]], 
                
                BSplineSurface3DBox[{{{-0.7660444431189779, \
-0.6427876096865395, 0.}, {-0.5320888862379558, -0.9216049851068764, 
                  0.}, {-0.17364817766693008`, -0.9848077530122081, 
                  0.}}, {{-0.7660444431189779, -0.6427876096865395, 
                    1}, {-0.5320888862379558, -0.9216049851068764, 
                    1}, {-0.17364817766693008`, -0.9848077530122081, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9396926207859082, 1.}, {1., 
                  0.9396926207859082, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 0.}}}]}}, 
              ImageSizeCache -> {{308.55514959893014`, 
               496.78385961843867`}, {-86.5085239176434, 
               21.629167413722968`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35831, 
                 FEPrivate`Not[DynamicChart`click$35831]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35831, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {-0.09999999999999996, -0.17320508075688776`, 
                0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$35831}]],
            DynamicModuleValues :> {}]}, {
          RGBColor[0.4366, 0.49960000000000004`, 0.8097967], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35832 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
                   
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIJIAaxRwF+YBFwflF+84v9cmI2QdsnPtkPEw82mqh4
7MjL/V6ts3ikfj6Ci+/8kNLe8/rVft6I3T/e+jyEi8cvZPkx6dvr/ZK+dq9u
yN6Hi9eaihgde/Jmf6vDrZZDjbfh4jEb760y2Pp2/+/JvMGBJ6/DxT94FnX/
Tnu3/568kmL0j8twceV6sb78n+/2z+64yXhe6AJcXOWl+e6v2e/3z16zoCHJ
8gRcPOMXG6vEvvf7vzQzVeiZHICLT/HWPNj4/v1+6batZ3psNsDFobbvZ48R
MVZbtnAP/lD7YD8qjiyOHm4f7LGH8wd77PHywR57PH6wxx7vH+yxp5MP9tjT
1Qd77Onwgz32dPvBHns6/2CPPV98sMeejz7YAwBAwfB2
                 "]], 
                
                BSplineSurface3DBox[{{{-1., -1.2246467991473532`*^-16, 
                  0.}, {-1., -0.3639702342662025, 
                  0.}, {-0.7660444431189779, -0.6427876096865395, 
                  0.}}, {{-1., -1.2246467991473532`*^-16, 
                    1}, {-1., -0.3639702342662025, 
                    1}, {-0.7660444431189779, -0.6427876096865395, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9396926207859082, 1.}, {1., 
                  0.9396926207859082, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-1., -1.2246467991473532`*^-16, 
                 1.}, {-1., -1.2246467991473532`*^-16, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 0.}}}]}}, 
              ImageSizeCache -> {{308.55514959893014`, 
               520.0339307170566}, {-73.73511949261572, 
               29.762863828736457`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35832, 
                 FEPrivate`Not[DynamicChart`click$35832]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35832, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {-0.18793852415718168`, -0.06840402866513377, 
                0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$35832}]],
            DynamicModuleValues :> {}]}}}, {}}, {}}, BoxRatios -> {1, 1, 0.1},
      Boxed -> False, FaceGridsStyle -> Automatic, ImageSize -> Large, 
     LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, Lighting -> "Neutral", 
     PlotRange -> {{1.2, -1.2}, {1.2, -1.2}, {0, 1}}, 
     ViewPoint -> {-1.12978742660665, 2.7505787502997205`, 
      0.9580693654851675}, 
     ViewVertical -> {-0.09954770908724002, 0.36361595093833105`, 
      9.262147126010767}],FormBox[
     FormBox[
      TemplateBox[{
       "\"Physics\"", "\"English\"", "\"Chemistry\"", "\"IT Services\"", 
        "\"Zoology\""}, "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.980722, 0.7110406, 0.2420506]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[1., 0.487, 0.1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.757, 0.40959999999999996`, 0.1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.6348934, 0.4204, 0.6877891]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
          Background -> Automatic, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.980722, 0.7110406, 0.2420506], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6538146666666667, 0.4740270666666667, 
                    0.16136706666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.980722, 0.7110406, 0.2420506]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.980722, 0.7110406, 0.2420506]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.980722, 0.7110406, 0.2420506], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.487, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.32466666666666666`, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.487, 0.1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.487, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.487, 0.1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.757, 0.40959999999999996`, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5046666666666667, 0.2730666666666667, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.757, 0.40959999999999996, 0.1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.757, 0.40959999999999996`, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.757, 0.40959999999999996`, 0.1], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6348934, 0.4204, 0.6877891], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4232622666666667, 0.28026666666666666`, 
                    0.45852606666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6348934, 0.4204, 0.6877891]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6348934, 0.4204, 0.6877891]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6348934, 0.4204, 0.6877891], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2910666666666667, 0.33306666666666673`, 
                    0.5398644666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4366, 0.49960000000000004, 0.8097967]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
             ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "None", ",", "None", ",", "None", ",", "None", ",", 
                    "None"}], "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {
  3,"\<\"BarChart\"\>"->
  GraphicsBox[{
    {Opacity[0], PointBox[{0.4451141552511416, 0.}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.54337899543379, 0.}, {1.45662100456621, 3.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{32.16357719558412, 
            129.44403440361498`}, {-166.31261246027088`, 158.5227957786919}}],
          
          StatusArea[#, 3]& ,
          TagBoxNote->"3"],
         StyleBox["3", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.54337899543379, 0.}, {2.45662100456621, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{138.1381778383779, 
            235.41863504640872`}, {-58.20080971394995, 158.5227957786919}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5433789954337898`, 0.}, {3.45662100456621, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{244.1127784811717, 
            341.3932356892025}, {-58.20080971394995, 158.5227957786919}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5433789954337898`, 0.}, {4.45662100456621, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{350.08737912396543`, 447.36783633199633`}, {
            49.91099303237097, 158.5227957786919}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.543378995433789, 0.}, {5.456621004566209, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{456.0619797667592, 553.34243697479}, {
            49.91099303237097, 158.5227957786919}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4451141552511416, 0.}, {5.55685114155251, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5433789954337899, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5433789954337899, 0.}]}],
          LineBox[{{5.456621004566209, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {5.456621004566209, 
            0.}]}], {{}, {}, {}, {}, {}, {
           LineBox[{{1.4566210045662098`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4566210045662098`, 
              0.}]}], LineBox[{{1.5433789954337898`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5433789954337898`, 
              0.}]}], LineBox[{{2.4566210045662094`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4566210045662094`, 
              0.}]}], LineBox[{{2.5433789954337893`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5433789954337893`, 
              0.}]}], LineBox[{{3.456621004566209, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.456621004566209, 
              0.}]}], LineBox[{{3.543378995433789, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.543378995433789, 
              0.}]}], LineBox[{{4.456621004566209, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.456621004566209, 
              0.}]}], LineBox[{{4.543378995433789, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.543378995433789, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Physics\"\>", 
           Offset[{0., -1.9999999999999998}, {0.9999999999999998, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"English\"\>", 
           Offset[{0., -1.9999999999999998}, {1.9999999999999996, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Chemistry\"\>", 
           Offset[{0., -1.9999999999999998}, {2.999999999999999, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"IT Services\"\>", 
           Offset[{0., -1.9999999999999998}, {3.999999999999999, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Zoology\"\>", 
           Offset[{0., -1.9999999999999998}, {4.999999999999999, 0.}], {0, 1},
            Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]}, "GraphicsAxes",
     StripOnInput->False,
     Antialiasing->False]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, True},
   AxesLabel->{None, None},
   AxesOrigin->{0.4451141552511416, 0.},
   BaseStyle->{FontSize -> 14},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
        FormBox["\"Physics\"", TraditionalForm], 0}, {2., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
        FormBox["\"English\"", TraditionalForm], 0}, {3., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
        FormBox["\"Chemistry\"", TraditionalForm], 0}, {4., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
        FormBox["\"IT Services\"", TraditionalForm], 0}, {4.999999999999999, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
        FormBox["\"Zoology\"", TraditionalForm], 0}}, {{1., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Large,
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]}}, 1,
  Alignment->{Center, Center},
  ControlPlacement->Top]], "Output",
 CellChangeTimes->{{3.659174127345495*^9, 3.6591742257558804`*^9}, {
   3.659174264621051*^9, 3.6591743124202414`*^9}, {3.659176350463203*^9, 
   3.65917636299478*^9}, 3.659177581131789*^9, {3.6591816021092663`*^9, 
   3.659181617340329*^9}, {3.6591854738383913`*^9, 3.6591855020386677`*^9}, {
   3.663577217439159*^9, 3.6635772200265617`*^9}}]
}, {2}]],

Cell["\<\
BarCharts are the most versatile and easy to consume visualisation of \
categorical data and can be easily generated in the Wolfram Language by \
operating on the output of Tally:\
\>", "Text",
 CellChangeTimes->{{3.6591816194837923`*^9, 3.6591817080757732`*^9}}],

Cell["\<\
BarChart expects a list (or list of lists) in the first argument and has a \
number of options for labelling the bars:\
\>", "Text",
 CellChangeTimes->{{3.659181801576024*^9, 3.6591818255271397`*^9}, {
  3.6591818607657824`*^9, 3.6591819244048967`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Extracting Elements from Tally", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, 
   3.659178513038447*^9, {3.659181363046502*^9, 3.65918137580404*^9}, {
   3.659182002558535*^9, 3.659182007126169*^9}, {3.6591822630592003`*^9, 
   3.659182292519182*^9}, {3.6591828843655987`*^9, 3.659182888741393*^9}, {
   3.663574558723331*^9, 3.66357457959092*^9}, 3.673761659831098*^9}],

Cell["\<\
The output of Tally is a nested list with the count of each item distinct in \
the second element of each list, the structure of the object can be \
visualised using TreeForm:\
\>", "Text",
 CellChangeTimes->{{3.659182305221986*^9, 3.659182355576645*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"departmentsTally", "=", 
   RowBox[{"Tally", "[", "departments", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TreeForm", "[", "departmentsTally", "]"}]}], "Input",
 CellChangeTimes->{{3.655552126028328*^9, 3.6555521454869204`*^9}, {
   3.655552668043029*^9, 3.655552674893113*^9}, 3.6555527881212587`*^9, {
   3.659168939963677*^9, 3.659168959121826*^9}, {3.659181718967143*^9, 
   3.659181722380641*^9}, {3.659182357682729*^9, 3.659182363260741*^9}}],

Cell["\<\
In order to insert the output of Tally into BarChart we must be able to \
extract the relevant parts of the data structure:\
\>", "Text",
 CellChangeTimes->{{3.659182375717043*^9, 3.6591824295940113`*^9}}],

Cell[TextData[{
 "In the Wolfram Language the ",
 StyleBox["n-th",
  FontSlant->"Italic"],
 " element of a list is the ",
 StyleBox["n-th",
  FontSlant->"Italic"],
 " element of a list, and can be extracted using the function Part:"
}], "Text",
 CellChangeTimes->{{3.6555531422630043`*^9, 3.655553174888493*^9}}],

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"departments", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553042611*^9, 3.655553060733569*^9}, {
  3.655553245827072*^9, 3.655553247946261*^9}}],

Cell["This is more typically written in shorthand:", "Text",
 CellChangeTimes->{{3.655553186466704*^9, 3.655553193846209*^9}}],

Cell[BoxData[
 RowBox[{"departments", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553042611*^9, 3.655553068217494*^9}, 
   3.655553249701075*^9}],

Cell["\<\
It is often convenient to extract elements by negative index:\
\>", "Text",
 CellChangeTimes->{{3.655553204635379*^9, 3.655553219271543*^9}}],

Cell[BoxData[
 RowBox[{"departments", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553220941392*^9, 3.655553250825769*^9}}],

Cell[TextData[{
 "When using Part it is useful to remember that the Wolfram Language is (at \
least in general) ",
 StyleBox["row orientated",
  FontSlant->"Italic"],
 " - so to extract the second column of the third element of ",
 StyleBox["departmentsTally",
  FontSlant->"Italic"],
 " the following would be evaluated:"
}], "Text",
 CellChangeTimes->{{3.6555532624739933`*^9, 3.655553338918837*^9}}],

Cell[BoxData[
 RowBox[{"departmentsTally", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553341088389*^9, 3.6555533482459*^9}}],

Cell[TextData[{
 "To extract the entirety of the second column it is therefore necessary to \
use the operator ",
 StyleBox["All",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.655553407105968*^9, 3.655553470052075*^9}}],

Cell[BoxData[
 RowBox[{"departmentsTally", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.65555347173834*^9, 3.655553475318337*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Using Transpose to Construct Tally like Lists", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, 
   3.659178513038447*^9, {3.659181363046502*^9, 3.65918137580404*^9}, {
   3.659182002558535*^9, 3.659182007126169*^9}, {3.6591822630592003`*^9, 
   3.659182292519182*^9}, {3.6591828843655987`*^9, 3.659182888741393*^9}, {
   3.66166910597604*^9, 3.661669116978153*^9}, {3.6616692738494463`*^9, 
   3.661669286033122*^9}, {3.661669439271811*^9, 3.661669439923424*^9}, {
   3.661674536865087*^9, 3.6616745407563467`*^9}, {3.663574585542571*^9, 
   3.663574585564385*^9}, {3.673761662283671*^9, 3.673761662474964*^9}}],

Cell["\<\
Lists are the primary data structure in the Wolfram Language, and it is \
crucial to understand how data can be combined together or otherwise operated \
on to create usefully shaped lists for visualisation and further analysis.\
\>", "Text",
 CellChangeTimes->{{3.661669135237503*^9, 3.661669135889264*^9}, {
  3.6616692552957087`*^9, 3.6616693671915827`*^9}, {3.661670188867084*^9, 
  3.661670209014935*^9}}],

Cell["\<\
The Wolfram Language is designed as a very mathematically-orientated \
language, it\[CloseCurlyQuote]s functions are therefore typically named after \
the mathematical operation you are undertaking. For instance, to combine two \
lists into a Tally like operation you would use the function Transpose.\
\>", "Text",
 CellChangeTimes->{{3.661669371083886*^9, 3.6616693790378933`*^9}, {
  3.661669442645891*^9, 3.6616694780498343`*^9}, {3.661670123503139*^9, 
  3.661670123986568*^9}, {3.6616702121510353`*^9, 3.661670314495791*^9}, {
  3.661670373043047*^9, 3.661670387205349*^9}}],

Cell[CellGroupData[{

Cell["Generating Data for Transpose", "Section",
 CellChangeTimes->{{3.661670377611808*^9, 3.66167040859166*^9}}],

Cell[TextData[{
 "For the purposes of an example, let us generate some data concerning the \
typical RCUK grant holder. Unfortunately, the RCUK do not provide the \
underlying data for their diversity report (",
 ButtonBox["http://www.rcuk.ac.uk/RCUK-prod/assets/documents/skills/\
RCUKDiversityNarrativesanddata.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.rcuk.ac.uk/RCUK-prod/assets/documents/skills/\
RCUKDiversityNarrativesanddata.pdf"], None},
  ButtonNote->
   "http://www.rcuk.ac.uk/RCUK-prod/assets/documents/skills/\
RCUKDiversityNarrativesanddata.pdf"],
 ") but we can infer that the average age of a grant holder is 49."
}], "Text",
 CellChangeTimes->{{3.6627110374731483`*^9, 3.662711158108086*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s create example profiles for these researchers, firstly \
by obtaining likely names for the individuals from the ONS website. The \
details of Import will be introduced later, but by referring to the \
documentation for Import it should be possible to understand the basics of \
this input:\
\>", "Text",
 CellChangeTimes->{{3.661674134278111*^9, 3.661674232740019*^9}, {
  3.6627111700559683`*^9, 3.662711239287945*^9}}],

Cell[BoxData[
 RowBox[{"boysNames", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/\
1904-1994/top-100-baby-names-historical-data.xls\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<XLSX\>\"", ",", "\"\<Data\>\"", ",", "\"\<Boys\>\"", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "105"}], "]"}], ",", "8"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.66167382009092*^9, 3.6616738532312403`*^9}, {
  3.661673909900702*^9, 3.661673940665359*^9}, {3.6616739706816177`*^9, 
  3.661673981627241*^9}, {3.6616740468349*^9, 3.661674096974449*^9}, {
  3.661674129589719*^9, 3.661674129870181*^9}, {3.661674235306056*^9, 
  3.661674237050056*^9}, {3.662722437614616*^9, 3.6627224397850018`*^9}}],

Cell[BoxData[
 RowBox[{"girlsNames", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/\
1904-1994/top-100-baby-names-historical-data.xls\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<XLSX\>\"", ",", "\"\<Data\>\"", ",", "\"\<Girls\>\"", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "105"}], "]"}], ",", "8"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.661674244926053*^9, 3.661674251586299*^9}, {
  3.66272244194557*^9, 3.662722444646605*^9}}],

Cell["Lists can easily be joined together using Join:", "Text",
 CellChangeTimes->{{3.66167426098838*^9, 3.661674269133719*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersNames", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"boysNames", ",", "girlsNames"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.661674271153577*^9, 3.661674287687158*^9}}],

Cell["\<\
We might be interested to know the birth months of these individuals, which \
we\[CloseCurlyQuote]ll assume are equally distributed through the year and \
can therefore be generated with RandomInteger:\
\>", "Text",
 CellChangeTimes->{{3.661674341483078*^9, 3.661674385718924*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersBirthMonth", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "12"}], "}"}], ",", 
    RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.661671336504637*^9, 3.661671359013241*^9}, {
  3.66167439057473*^9, 3.661674427245219*^9}}],

Cell["\<\
Thus far in the course we have only considered discretised data, however the \
Wolfram Language provides a huge variety of tools for generating data from \
continuous distributions:\
\>", "Text",
 CellChangeTimes->{{3.661671776447544*^9, 3.661671801186346*^9}, {
  3.661672318061791*^9, 3.6616723840650873`*^9}, {3.6616725409947357`*^9, 
  3.661672544076191*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersHeight", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"160", ",", "20"}], "]"}], ",", 
    RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6616725460532637`*^9, 3.6616725658793707`*^9}, {
  3.6616744188701153`*^9, 3.661674452380265*^9}}],

Cell["\<\
We could continue to generate data about these grant holders as necessary\
\>", "Text",
 CellChangeTimes->{{3.661674736374516*^9, 3.661674761281514*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersWeight", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"SkewNormalDistribution", "[", 
     RowBox[{"75", ",", "20", ",", "5"}], "]"}], ",", 
    RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.661674764572199*^9, 3.6616747651864243`*^9}, {
  3.66167497286985*^9, 3.661674991379861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transposing Data", "Section",
 CellChangeTimes->{{3.661672329277121*^9, 3.661672331718397*^9}}],

Cell["These lists can now be combined together using Transpose:", "Text",
 CellChangeTimes->{{3.661670506029069*^9, 3.6616705218124313`*^9}, {
  3.661672589841762*^9, 3.661672592799776*^9}}],

Cell[BoxData[
 RowBox[{"grantHolders", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
    "grantHoldersNames", ",", "grantHolderBirthMonth", ",", 
     "grantHoldersHeight", ",", "grantHoldersWeight"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6616705234461193`*^9, 3.661670544291562*^9}, {
  3.661670581214118*^9, 3.66167058175782*^9}, {3.6616713806064787`*^9, 
  3.6616713840123167`*^9}, {3.66167259939467*^9, 3.6616725995424013`*^9}, {
  3.6616744639031878`*^9, 3.661674480287891*^9}, {3.661675000719933*^9, 
  3.661675000843225*^9}}],

Cell["\<\
Using our knowledge of the Part function we can now visualise the \
distribution of birth weights using the DistributionChart function\
\>", "Text",
 CellChangeTimes->{{3.661670575644802*^9, 3.661670650277361*^9}, {
  3.661671436424642*^9, 3.661671472660356*^9}, {3.661672607370328*^9, 
  3.6616726179774323`*^9}}],

Cell[BoxData[
 RowBox[{"DistributionChart", "[", 
  RowBox[{"grantHolders", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6616714738205347`*^9, 3.661671481256831*^9}, {
   3.661671563568568*^9, 3.661671564890362*^9}, {3.661672622979789*^9, 
   3.661672628676832*^9}, 3.661674507539925*^9}],

Cell["\<\
It is important to consider the disadvantages of combining data into nested \
lists in the manner - despite data being collected together about each \
individual it is dependent on you to remember what data each column contains. 

It may be more convenient to use Associations, as discussed later in the \
course.\
\>", "Text",
 CellChangeTimes->{{3.661675083339182*^9, 3.661675174891433*^9}, {
  3.662711275258238*^9, 3.6627112754684134`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Exercises: Parts and BarCharts (10mins)", "Title",
 CellChangeTimes->{{3.659169073065624*^9, 3.6591690839888353`*^9}, {
   3.659182499836954*^9, 3.65918251106387*^9}, {3.659182891838498*^9, 
   3.659182902488941*^9}, {3.66167550777286*^9, 3.661675507849574*^9}, {
   3.6635745911338778`*^9, 3.663574591268847*^9}, 3.663577299737113*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Manipulate", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184985964301*^9}, {3.661676350003971*^9, 3.661676355872403*^9}, {
   3.663574594497498*^9, 3.663574596511503*^9}, 3.673761669855432*^9}],

Cell[TextData[{
 "It is almost trivially simple to create interactive elements in the \
notebook interface of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " using the Wolfram Language - the \[OpenCurlyDoubleQuote]Hello World\
\[CloseCurlyDoubleQuote] example of an interactive element is as follows:"
}], "Text",
 CellChangeTimes->{{3.6616755145210953`*^9, 3.661675576082089*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "19"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6591839379018803`*^9, 3.659183942563328*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Manipulate", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184985964301*^9}, 3.6616763596522713`*^9, {3.66357459920026*^9, 
   3.6635745993684196`*^9}, 3.673761673579012*^9}],

Cell["\<\
The Syntax for Manipulate variables is very similar to that of Range and it\
\[CloseCurlyQuote]s relatives:\
\>", "Text",
 CellChangeTimes->{{3.661675633447165*^9, 3.6616756555078077`*^9}, {
  3.6616756938254547`*^9, 3.66167572214186*^9}, {3.661675771080003*^9, 
  3.661675771676622*^9}}],

Cell["Generate the range 0.0, 0.2, 0.4, 0.6, 0.8, 1.0", "Item",
 CellChangeTimes->{{3.661675727093205*^9, 3.661675729522307*^9}, {
  3.661675773853593*^9, 3.661675803986834*^9}}],

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "1", ",", ".2"}], "]"}]], "Input",
 CellChangeTimes->{{3.66167573342934*^9, 3.661675749075077*^9}, {
  3.661675791515975*^9, 3.661675792898858*^9}}],

Cell[TextData[{
 "Variable ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is only allows to have the values 0.0, 0.2, 0.4, 0.6, 0.8, 1.0"
}], "Item",
 CellChangeTimes->{{3.66167580771161*^9, 3.661675828171205*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66167580771161*^9, 3.6616758406742277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Manipulate", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184985964301*^9}, {3.661676369129429*^9, 3.661676375627832*^9}, {
   3.663574602935315*^9, 3.6635746030366364`*^9}, 3.673761676875291*^9}],

Cell["\<\
Labels and default values are provided to Manipulate as follows\
\>", "Text",
 CellChangeTimes->{{3.661675898599774*^9, 3.661675918006757*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "0.6", ",", "\"\<Slider 1\>\""}], "}"}], ",", "0", 
     ",", "1", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66167580771161*^9, 3.6616758406742277`*^9}, {
  3.661675965271031*^9, 3.661675975788569*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Manipulate", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184985964301*^9}, {3.661676394160512*^9, 3.661676397149208*^9}, {
   3.663574609876204*^9, 3.663574612025601*^9}, 3.673761680081942*^9}],

Cell["There are a variety of ControlTypes available to Manipulate:", "Text",
 CellChangeTimes->{{3.661675854128248*^9, 3.6616758700814*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "sliderValue", ",", "checkboxValue", ",", "setterValue", ",", 
     "textValue"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sliderValue", ",", "12", ",", "\"\<Slider\>\""}], "}"}], ",", 
     "0", ",", "1", ",", "0.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"checkboxValue", ",", "False", ",", "\"\<Checkbox\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "textValue", ",", "\"\<Hello World\>\"", ",", "\"\<Enter Text:\>\""}], 
     "}"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.661675656522537*^9, 3.661675685421533*^9}, {
  3.661675872990848*^9, 3.6616758909850683`*^9}, {3.661676169808901*^9, 
  3.661676250001696*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Manipulate: ListPlot", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184985964301*^9}, {3.661676406598858*^9, 3.661676436524478*^9}, {
   3.661682748870563*^9, 3.661682761777513*^9}, {3.662716677398385*^9, 
   3.662716680585927*^9}, {3.6635746159406557`*^9, 3.663574616022503*^9}, 
   3.673761711775172*^9}],

Cell["\<\
ListPlot and its relatives provide tools for visualising scatter charts and \
are extremely flexible:\
\>", "Text",
 CellChangeTimes->{{3.661676443003499*^9, 3.6616765080978947`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "6"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.661676510104022*^9, 3.661676530377696*^9}}],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "4"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.66167653503655*^9, 3.6616765646420794`*^9}}],

Cell["\<\
Often there is an expression that you wish to evaluate at particular points \
and visualise the results using ListPlot - to first generate the data one \
would use the Table function:\
\>", "Text",
 CellChangeTimes->{{3.661676594398283*^9, 3.661676646620613*^9}}],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", 
     RowBox[{"i", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6616766483780193`*^9, 3.661676663803398*^9}}],

Cell["\<\
Manipulate then becomes a powerful tool for exploring your expression:\
\>", "Text",
 CellChangeTimes->{{3.661676686321846*^9, 3.661676715133062*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "+", 
       RowBox[{"i", "^", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "5", ",", "8"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.661676732419573*^9, 3.6616767952921467`*^9}}],

Cell["\<\
Conversly, Manipulate might be used for scanning through an existing dataset \
such as the following:\
\>", "Text",
 CellChangeTimes->{{3.6616768231356*^9, 3.661676843092497*^9}, {
  3.66168080549387*^9, 3.661680810725644*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"price", "=", 
   RowBox[{
    RowBox[{"RandomFunction", "[", 
     RowBox[{
      RowBox[{"WienerProcess", "[", 
       RowBox[{".3", ",", ".5"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0.01"}], "}"}]}], "]"}], "[", 
    "\"\<Values\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", "price", "]"}]}], "Input",
 CellChangeTimes->{{3.661677024133597*^9, 3.661677040288912*^9}, {
  3.661677166670905*^9, 3.661677211309897*^9}, {3.661680784405415*^9, 
  3.6616807887316732`*^9}}],

Cell["\<\
Using the Take function an IntervalSlider can be used to effectively slice \
through this data:\
\>", "Text",
 CellChangeTimes->{{3.6616808133915586`*^9, 3.661680835149486*^9}, {
  3.661681063440205*^9, 3.661681069612692*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "@", 
    RowBox[{"Take", "[", 
     RowBox[{"price", ",", "foo"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"foo", ",", 
     RowBox[{
      RowBox[{"IntervalSlider", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "100", ",", "1"}], "}"}]}], "]"}], "&"}]}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.661677058768635*^9, 3.6616771548454647`*^9}, {
  3.661677232292555*^9, 3.661677240121356*^9}, {3.661677273313944*^9, 
  3.661677274482154*^9}, {3.661677315723669*^9, 3.6616773779182987`*^9}, {
  3.661677496456463*^9, 3.661677504467162*^9}, {3.661680838451715*^9, 
  3.661680839710635*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Exercises: Manipulate (25mins)", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184989576367*^9}, {3.661682772245614*^9, 3.661682785883873*^9}, {
   3.662711577782604*^9, 3.662711582314618*^9}, {3.662716709489929*^9, 
   3.662716726058938*^9}, {3.663574619338147*^9, 3.663574619426814*^9}, 
   3.663577344376747*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Sharing Interactive Elements", "Title",
 CellChangeTimes->{{3.662712823754702*^9, 3.662712836882587*^9}, {
   3.663574625852096*^9, 3.663574625919653*^9}, 3.673761715115099*^9}],

Cell[TextData[{
 "There are two mechanisms through which interactive content built with the \
Wolfram Language can be shared with others, including those who do not have a \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " licenses."
}], "Text",
 CellChangeTimes->{{3.662712839132394*^9, 3.6627128690127773`*^9}, {
  3.662712916466858*^9, 3.66271292022328*^9}}],

Cell[CellGroupData[{

Cell["Computable Document Format (.cdf) files", "Section",
 CellChangeTimes->{{3.6627129274233*^9, 3.662712940653337*^9}}],

Cell["\<\
Wolfram Language notebooks may be saved as .cdf files which can then be \
opened by others in the freely available CDF Player \
(http://www.wolfram.com/cdf-player/).\
\>", "Text",
 CellChangeTimes->{{3.662712948820715*^9, 3.662713005055793*^9}, {
  3.6627130446161957`*^9, 3.662713049880343*^9}}],

Cell[TextData[{
 "It is important to understand that CDF files are ",
 StyleBox["runtime only",
  FontSlant->"Italic"],
 " - the user cannot ",
 StyleBox["evaluate ",
  FontSlant->"Italic"],
 "or modify any code within the file. For this reason, any interactive \
elements must already have their data embedded within them."
}], "Text",
 CellChangeTimes->{{3.662713051765089*^9, 3.6627131146718597`*^9}}],

Cell["Take for example the following interactive element:", "Text",
 CellChangeTimes->{{3.662713118540038*^9, 3.662713126325448*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
     "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6627131367379827`*^9, 3.662713141513438*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{";;", "i"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", "\"\<Elements of list to show\>\""}], "}"}],
      ",", "1", ",", 
     RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.662713144691347*^9, 3.6627132197262373`*^9}}],

Cell["\<\
Creating a .cdf containing only these files and opening it in CDF Player will \
not work as expected:\
\>", "Text",
 CellChangeTimes->{{3.66271342740171*^9, 3.662713469130116*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 223}, {
    450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{450, 223},
  PlotRange->{{0, 450}, {0, 223}}]], "Input"],

Cell["\<\
This is because the output of Manipulate does not know the value of the \
symbol list. There are a number of ways of solving this:\
\>", "Text",
 CellChangeTimes->{{3.6627134751474457`*^9, 3.6627135172666388`*^9}}],

Cell["\<\
SaveDefinitions \[Rule] True will ensure* that the Manipulate stores all of \
the necessary information for it to run\
\>", "Item",
 CellChangeTimes->{{3.662713520069293*^9, 3.662713563177786*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{";;", "i"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", "\"\<Elements of list to show\>\""}], "}"}],
      ",", "1", ",", 
     RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.66271358356621*^9, 3.662713587943028*^9}}],

Cell["\<\
Initialization \[RuleDelayed] (expr;) allows the Manipulate to pre-evaluate \
expressions before it is displayed on screen\
\>", "Item",
 CellChangeTimes->{{3.6627135913273582`*^9, 3.662713628349728*^9}, {
   3.662713919660427*^9, 3.6627139442300997`*^9}, 3.662714127981997*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{";;", "i"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", "\"\<Elements of list to show\>\""}], "}"}],
      ",", "1", ",", 
     RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
        "}"}]}], ";"}], ")"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.662713937013605*^9, 3.6627139389171886`*^9}, {
  3.6627140754346*^9, 3.6627141247754107`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Cloud", "Section",
 CellChangeTimes->{{3.662712942723468*^9, 3.662712945749763*^9}}],

Cell["\<\
The Wolfram Cloud is a collection of tools for using the Wolfram Language in \
the cloud, either as a service or so for sharing interactive content built \
using the language.\
\>", "Text",
 CellChangeTimes->{{3.6627145453069677`*^9, 3.662714593329175*^9}}],

Cell["\<\
This is achieved very easily, by simply wrapping a Manipulate with the \
function CloudDeploy. Note the use of Permissions\[Rule]\
\[CloseCurlyDoubleQuote]Public\[CloseCurlyDoubleQuote] to create a URL that \
can be accessed by anyone.\
\>", "Text",
 CellChangeTimes->{{3.66271504133158*^9, 3.6627150598463993`*^9}, {
  3.6627156298786297`*^9, 3.662715686822019*^9}}],

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DistributionChart", "[", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"mean", "^", "exponent"}], ",", "sd"}], "]"}], ",", 
          "25"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"mean", ",", "1", ",", "5"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"sd", ",", "1", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"exponent", ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1", ",", "1.2"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662715061743771*^9, 3.662715228598864*^9}, 
   3.662715317722471*^9, {3.662715525953508*^9, 3.662715537827187*^9}, {
   3.662716088455348*^9, 3.662716088969108*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Importing Data from XLSX", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183624948501*^9}, {3.659184993074416*^9, 3.659184998317258*^9}, {
   3.66168287838774*^9, 3.6616828789809847`*^9}, {3.66271416488163*^9, 
   3.662714173431085*^9}, {3.662722685127851*^9, 3.6627226896038303`*^9}, {
   3.66357462946288*^9, 3.663574629518257*^9}, 3.6737617286959133`*^9}],

Cell[TextData[{
 "The Wolfram Language implements many operations through \
\[OpenCurlyDoubleQuote]super functions\[CloseCurlyDoubleQuote], importing \
data is a good example of this as ",
 StyleBox["Import",
  FontSlant->"Italic"],
 " is used to import all of the supported file formats:"
}], "Text",
 CellChangeTimes->{{3.662716750387608*^9, 3.662716820916387*^9}}],

Cell[BoxData["$ImportFormats"], "Input",
 CellChangeTimes->{{3.6627168222629347`*^9, 3.662716825209447*^9}}],

Cell["\<\
For example purposes, we\[CloseCurlyQuote]ll export data from a Google Sheet \
as an .xls file. The Google Sheet contains survey results concerning how many \
desktop items University employees had on their work machines, it can be \
downloaded directly from here: https://goo.gl/cGr5kN\
\>", "Text",
 CellChangeTimes->{{3.6627168597658463`*^9, 3.662716971556547*^9}}],

Cell["\<\
The expanded URL clearly has a .xlsx extension, this can be imported directly \
using the Wolfram Language as follows:\
\>", "Text",
 CellChangeTimes->{{3.662716977888221*^9, 3.662716989314011*^9}, {
  3.662717361891135*^9, 3.662717374928392*^9}, {3.662722010911344*^9, 
  3.662722021932438*^9}}],

Cell[BoxData[
 RowBox[{"desktopItems$Import", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://docs.google.com/spreadsheets/d/1dYg-w-\
k0upVEKhBzXCbikDN33o3pMtjPhy7Zb9E7kDg/pub?gid=651658206&single=true&output=\
xlsx\>\"", ",", "\"\<XLSX\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662717048741501*^9, 3.662717071301218*^9}, {
  3.662717341887258*^9, 3.6627173558660507`*^9}, {3.662717438040263*^9, 
  3.662717443522843*^9}, {3.6627220265065823`*^9, 3.662722042610621*^9}}],

Cell["\<\
The output of importing an XLSX (or XLS) file is as follows, even in the case \
of a single sheet workbook:\
\>", "Text",
 CellChangeTimes->{{3.6627222837953253`*^9, 3.662722339094901*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"sheet1", ",", "sheet2"}], "}"}]], "Input",
 CellChangeTimes->{{3.66272230423664*^9, 3.662722309980299*^9}}],

Cell["\<\
Additional information can be supplied in the second argument of the function \
to restrict the import to specific sheets, and columns. This was performed \
previously for the ONS data:\
\>", "Text",
 CellChangeTimes->{{3.66272234431494*^9, 3.6627224018261547`*^9}}],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/1904-\
1994/top-100-baby-names-historical-data.xls\>\"", ",", "\[IndentingNewLine]", 
   
   RowBox[{"{", 
    RowBox[{"\"\<XLS\>\"", ",", 
     RowBox[{"(*", 
      RowBox[{"file", " ", "format"}], "*)"}], "\[IndentingNewLine]", 
     "\"\<Data\>\"", ",", 
     RowBox[{"(*", 
      RowBox[{
      "representation", " ", "of", " ", "data", " ", "to", " ", "import"}], 
      "*)"}], "\[IndentingNewLine]", "\"\<Boys\>\"", ",", 
     RowBox[{"(*", 
      RowBox[{"sheet", " ", "name", " ", "or", " ", "index"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Range", "[", 
      RowBox[{"6", ",", "105"}], "]"}], ",", 
     RowBox[{"(*", "rows", "*)"}], "\[IndentingNewLine]", "8"}], 
    RowBox[{"(*", "column", "*)"}], "\[IndentingNewLine]", "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6627224575597343`*^9, 3.662722458505851*^9}, {
  3.662722525085849*^9, 3.662722529696157*^9}, {3.662722600509651*^9, 
  3.662722644843217*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Importing Data from XLSX", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183624948501*^9}, {3.659184993074416*^9, 3.659184998317258*^9}, {
   3.66168287838774*^9, 3.6616828789809847`*^9}, {3.66271416488163*^9, 
   3.662714173431085*^9}, {3.662722695825362*^9, 3.6627226986717863`*^9}, {
   3.6635746336256847`*^9, 3.663574633715781*^9}, 3.6737617314840727`*^9}],

Cell["\<\
The Google Sheet name isn\[CloseCurlyQuote]t meaningful in this case so let \
us import the first sheet by it\[CloseCurlyQuote]s index:\
\>", "Text",
 CellChangeTimes->{{3.662722316959866*^9, 3.662722319672587*^9}, {
  3.662722921270032*^9, 3.662722937252674*^9}, {3.662722983423271*^9, 
  3.662723001040351*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"desktopItems$Import", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://docs.google.com/spreadsheets/d/1dYg-w-\
k0upVEKhBzXCbikDN33o3pMtjPhy7Zb9E7kDg/pub?gid=651658206&single=true&output=\
xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<XLSX\>\"", ",", "\"\<Data\>\"", ",", "1"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662723026489583*^9, 3.6627230375151453`*^9}, 
   3.662723562884252*^9}],

Cell["\<\
The following pattern is useful for extracting the column headings and data \
from the import:\
\>", "Text",
 CellChangeTimes->{{3.662723053163669*^9, 3.662723060340107*^9}, 
   3.662723118017549*^9, {3.6627234911307993`*^9, 3.662723545850256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"desktopItems$Headers", "=", 
   RowBox[{"First", "[", "desktopItems$Import", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"desktopItems$Data", "=", 
   RowBox[{"Rest", "[", "desktopItems$Import", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662723548115226*^9, 3.662723578116168*^9}}],

Cell["\<\
As before, the data can be displayed as a Grid easily to inspect the data for \
consistency.\
\>", "Text",
 CellChangeTimes->{{3.662723582030444*^9, 3.662723590636346*^9}, {
  3.662723652333479*^9, 3.6627236569002733`*^9}, {3.6627237361136217`*^9, 
  3.662723745404994*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"desktopItems$Data", "[", 
      RowBox[{"[", 
       RowBox[{"10", ";;", "15"}], "]"}], "]"}], ",", 
     "desktopItems$Headers"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662723609552423*^9, 3.662723629709384*^9}, {
  3.662723664159422*^9, 3.662723721330789*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Filtering and Cleaning Data with Patterns", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
  3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
  3.659183624948501*^9}, {3.659184993074416*^9, 3.659184998317258*^9}, {
  3.66168287838774*^9, 3.6616828789809847`*^9}, {3.66271416488163*^9, 
  3.662714173431085*^9}, {3.662723835069718*^9, 3.66272384591357*^9}, {
  3.662723923403994*^9, 3.6627239287705917`*^9}, {3.6627251785342627`*^9, 
  3.662725192721465*^9}, {3.6635746383509808`*^9, 3.663574638452464*^9}, {
  3.673761734735345*^9, 3.673761734903535*^9}}],

Cell["\<\
The Wolfram Language provides extremely useful tools for data processing and \
cleansing, through the use of pattern matching through both Cases and \
replacement rules.\
\>", "Text",
 CellChangeTimes->{{3.662723847251773*^9, 3.66272390385151*^9}}],

Cell["\<\
We\[CloseCurlyQuote]re going to address two issues with the second column of \
the data:\
\>", "Text",
 CellChangeTimes->{{3.662724114047991*^9, 3.6627241510054493`*^9}}],

Cell[CellGroupData[{

Cell["\<\
A user entered \[OpenCurlyDoubleQuote]7 shortcuts to folders\
\[CloseCurlyDoubleQuote] which we will replace with the number 7\
\>", "Item",
 CellChangeTimes->{{3.66272415403172*^9, 3.662724184111546*^9}}],

Cell["\<\
A user entered 4384 which is an unrealistic value - this record will be \
removed from the dataset\
\>", "Item",
 CellChangeTimes->{{3.66272415403172*^9, 3.6627242320171223`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cases", "Section",
 CellChangeTimes->{{3.6627239053586693`*^9, 3.662723906078884*^9}}],

Cell["\<\
Cases is a super function for filtering data according to patterns and/or \
conditions, in order to use the function it is important to introduce the \
concept of Heads.\
\>", "Text",
 CellChangeTimes->{{3.662723913537644*^9, 3.662723944227998*^9}, {
  3.662723994936528*^9, 3.6627240208640547`*^9}}],

Cell["In the Wolfram Language every expression has a Head:", "Text",
 CellChangeTimes->{{3.662724023496148*^9, 3.6627240750997753`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Head", "[", "1", "]"}], ",", 
   RowBox[{"Head", "[", "\"\<1\>\"", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6627240769616003`*^9, 3.662724095520808*^9}}],

Cell["\<\
Cases can be used to find all elements that have a particular Head using the \
syntax, _Head\
\>", "Text",
 CellChangeTimes->{{3.6627241013468237`*^9, 3.6627241082437*^9}, {
  3.662724246713488*^9, 3.662724288616811*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.", ",", "\"\<1\>\"", ",", "4."}], "}"}], ",", "_Real"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662724289578599*^9, 3.662724305031344*^9}, {
  3.662724348019272*^9, 3.662724354239965*^9}, {3.662724979627913*^9, 
  3.662724980538176*^9}}],

Cell["\<\
This can be applied to the dataset above to find all elements that are \
Strings:\
\>", "Text",
 CellChangeTimes->{{3.6627243787874527`*^9, 3.66272439439223*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"desktopItems$Data", ",", 
   RowBox[{"{", 
    RowBox[{
    "date_", ",", "number_String", ",", "os_", ",", "department_", ",", 
     "uni_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662724396110639*^9, 3.662724428310628*^9}}],

Cell[TextData[{
 "Cases is primarily useful where data needs to be subsetted and operated \
upon, however we are interested in ",
 StyleBox["replacing ",
  FontSlant->"Italic"],
 "the element of the dataset - which will be achieved using replacement rules."
}], "Text",
 CellChangeTimes->{{3.662724450764455*^9, 3.662724511684268*^9}}],

Cell["\<\
We can, however, use DeleteCases to remove those elements where the number of \
items is greater or equal to 1000:\
\>", "Text",
 CellChangeTimes->{{3.662724513472589*^9, 3.662724589647403*^9}, {
  3.662725683828452*^9, 3.662725685477293*^9}}],

Cell[BoxData[
 RowBox[{"desktopItems$Data", "=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"desktopItems$Data", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "date_", ",", "number_", ",", "os_", ",", "department_", ",", "uni_"}], 
      "}"}], "/;", 
     RowBox[{"number", ">=", "1000"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662724555576086*^9, 3.662724566597357*^9}, {
  3.6627245975162992`*^9, 3.662724599313731*^9}, {3.6627256578394737`*^9, 
  3.6627256740599327`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Replacement Rules", "Section",
 CellChangeTimes->{{3.662723907383566*^9, 3.662723910320428*^9}}],

Cell["\<\
Replacement rules are useful where elements must be modified should they meet \
a pattern and/or condition, they are typically implemented using the \
following syntax:\
\>", "Text",
 CellChangeTimes->{{3.662724614128552*^9, 3.662724662503187*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "\"\<7 shortcuts\>\""}], "}"}]}], "}"}], "/.", 
  RowBox[{"element_String", "\[RuleDelayed]", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"element", ",", "\"\< \>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6627246924153*^9, 3.662724808305791*^9}, {
  3.662724970139586*^9, 3.662724988858368*^9}, {3.662727883806024*^9, 
  3.662727895348024*^9}}],

Cell[TextData[{
 "The /. is an ",
 StyleBox["infix ",
  FontSlant->"Italic"],
 "operator for the function ReplaceAll, and the symbol \[RuleDelayed] is \
simply :>"
}], "Text",
 CellChangeTimes->{{3.6627248163591547`*^9, 3.662724866770546*^9}}],

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.", ",", "13.", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "13.", ",", "\"\<7 shortcuts\>\""}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"element_String", "\[RuleDelayed]", 
    RowBox[{"StringSplit", "[", 
     RowBox[{"element", ",", "\"\< \>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66272486951406*^9, 3.662724881084083*^9}, {
   3.662724990085554*^9, 3.662724991063781*^9}, 3.6627279025973577`*^9}],

Cell["\<\
More processing of the string is required to obtain the 7 and to convert it \
into a Real:\
\>", "Text",
 CellChangeTimes->{{3.6627249287065153`*^9, 3.662724965873885*^9}, {
  3.662725028874013*^9, 3.662725033182837*^9}}],

Cell["\<\
The following will extract the first element of the List resultant from \
StringSplit\
\>", "Item",
 CellChangeTimes->{{3.662725036019412*^9, 3.662725059542418*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringSplit", "[", 
   RowBox[{"\"\<7 shortcuts\>\"", ",", "\"\< \>\""}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662725008120306*^9, 3.662725022440504*^9}}],

Cell["ToExpression will convert the String into an Integer:", "Item",
 CellChangeTimes->{{3.6627250638634157`*^9, 3.662725089275941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", "\"\<7\>\"", "]"}], "+", "2"}]], "Input",
 CellChangeTimes->{{3.662725095792325*^9, 3.662725111755258*^9}}],

Cell["\<\
These steps can then be combined to replace the string with the number 7:\
\>", "Text",
 CellChangeTimes->{{3.6627251181774397`*^9, 3.662725138754652*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "\"\<7 shortcuts\>\""}], "}"}]}], "}"}], "/.", 
  RowBox[{"element_String", "\[RuleDelayed]", 
   RowBox[{"ToExpression", "[", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"element", ",", "\"\< \>\""}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662725149551869*^9, 3.662725162279739*^9}, 
   3.662727908986261*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Exercises: Processing Data and Importing From Excel (20mins)", "Title",
 CellChangeTimes->{{3.6627175986264544`*^9, 3.6627176055645933`*^9}, {
   3.6627251714843683`*^9, 3.6627251730215187`*^9}, {3.6627252076420527`*^9, 
   3.6627252150189734`*^9}, {3.662725324977351*^9, 3.662725332131886*^9}, {
   3.6627294177264967`*^9, 3.662729419917474*^9}, {3.6635746436951323`*^9, 
   3.6635746437275887`*^9}, 3.663577997408388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Associations", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591838212196493`*^9, 3.659183823220511*^9}, {3.659184479677973*^9, 
   3.659184483365548*^9}, {3.6591852029720583`*^9, 3.659185207288683*^9}, {
   3.6627284053047047`*^9, 3.662728405416157*^9}, {3.662729401647541*^9, 
   3.66272940449356*^9}, {3.662799157839304*^9, 3.662799158212596*^9}, {
   3.6635746475876226`*^9, 3.66357464768878*^9}, 3.673761738976913*^9}],

Cell["\<\
Thus far we have used Lists to store and operate on our data, however it can \
be incredibly useful to use Associations. Associations are similar to \
associative arrays and dictionaries found in other programming languages. \
They are introduced here to provide a basic introduction only.\
\>", "Text",
 CellChangeTimes->{{3.662728411535742*^9, 3.6627285223387127`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"assoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Key1\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Key 2\>\"", "\[Rule]", "3"}], ",", 
     RowBox[{"\"\<This is my third key\>\"", "\[Rule]", "\"\<data\>\""}]}], 
    "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662728524546283*^9, 3.662728591279059*^9}, {
  3.6627292668959618`*^9, 3.662729268449264*^9}}],

Cell["\<\
Data can be accessed directly from an association using the key:\
\>", "Text",
 CellChangeTimes->{{3.662729284837614*^9, 3.6627292991588783`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", "[", 
  RowBox[{"[", "\"\<Key 2\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662729300804017*^9, 3.662729308542307*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.662729308960779*^9}]
}, Open  ]],

Cell["\<\
The following code creates a list of associations using the function Map - it \
is beyond the scope of this course but is addressed in detail in the Wolfram \
Language programming course:\
\>", "Text",
 CellChangeTimes->{{3.6627294913783693`*^9, 3.662729540496049*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"desktopItems$Headers", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Timestamp\>\"", ",", "\"\<Desktop Items\>\"", ",", "\"\<OS\>\"", 
     ",", "\"\<Department\>\"", ",", "\"\<University\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"desktopItems$Associations", " ", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{"desktopItems$Headers", "\[Rule]", "#"}], "]"}], "&"}], ",", 
     "desktopItems$Data"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.659183774482112*^9, 3.659183775586823*^9}, {
   3.659183963672213*^9, 3.6591840097028008`*^9}, 3.659184412335277*^9, 
   3.6627297917399473`*^9}],

Cell["\<\
This structure is useful as all Desktop Items can be extracted easily:\
\>", "Text",
 CellChangeTimes->{{3.662729832716797*^9, 3.6627298537667713`*^9}}],

Cell[BoxData[
 RowBox[{"desktopItems$Associations", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "\"\<Desktop Items\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662729828251193*^9, 3.662729860055945*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Associations", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591838212196493`*^9, 3.659183823220511*^9}, {3.659184479677973*^9, 
   3.659184483365548*^9}, {3.6591852029720583`*^9, 3.659185207288683*^9}, {
   3.6627284053047047`*^9, 3.662728405416157*^9}, {3.662729401647541*^9, 
   3.66272940449356*^9}, {3.663580548807423*^9, 3.663580550075232*^9}, 
   3.673761773999023*^9}],

Cell["\<\
Associations allow for SQL-like queries to be written and offer a more \
streamlined and (computationally) faster approach to filtering data than \
using Cases (or /.) on a list.

The following query will select all elements where the key OS is equal to \
\[OpenCurlyDoubleQuote]Mac (OS X)\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.663579121768373*^9, 3.663579240997813*^9}, {
  3.663579338246004*^9, 3.663579350158848*^9}}],

Cell[BoxData[
 RowBox[{"macOS", "=", 
  RowBox[{
   RowBox[{"Query", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#\"OS\"", "\[Equal]", "\"\<Mac (OS X)\>\""}], "&"}], "]"}], 
    "]"}], "[", "desktopItems$Associations", "]"}]}]], "Input",
 CellChangeTimes->{{3.6635791931542587`*^9, 3.663579211839258*^9}}],

Cell["Additional criteria may be added easily:", "Text",
 CellChangeTimes->{{3.6635793638963747`*^9, 3.663579376832683*^9}}],

Cell[BoxData[
 RowBox[{"messyMacs", "=", 
  RowBox[{
   RowBox[{"Query", "[", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#\"OS\"", "\[Equal]", "\"\<Mac (OS X)\>\""}], ")"}], "&&", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{"#\"Desktop Items\"", " ", ">", " ", "20"}], ")"}]}], "&"}], 
     "]"}], "]"}], "[", "desktopItems$Associations", "]"}]}]], "Input",
 CellChangeTimes->{{3.6635791931542587`*^9, 3.663579211839258*^9}, {
  3.663579378488552*^9, 3.663579466306614*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Exercises: Associations (10mins)", "Title",
 CellChangeTimes->{{3.663579711325551*^9, 3.6635797315079193`*^9}, {
  3.663580347345605*^9, 3.663580349584774*^9}, {3.663580553303797*^9, 
  3.6635805536527653`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell["Going Further with the Wolfram Language", "Title",
 CellChangeTimes->{{3.663583479730219*^9, 3.663583484510553*^9}, {
  3.663583567111652*^9, 3.66358359280107*^9}}],

Cell["\<\
The ITLP Courses catalog currently has two courses dedicated to the Wolfram \
Language, with additional content planned for the future. If there are \
specific courses you\[CloseCurlyQuote]re interested in then please do pass on \
this feedback in the survey you\[CloseCurlyQuote]ll receive after this course.\
\>", "Text",
 CellChangeTimes->{{3.663583572521284*^9, 3.663583670781012*^9}}],

Cell[TextData[{
 "Oxford provides access to ",
 ButtonBox["Lynda.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.lynda.com"], None},
  ButtonNote->"http://www.lynda.com"],
 " for all staff and students; Lynda is an video learning service with a \
variety of content dedicated to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and the Wolfram Language."
}], "Text",
 CellChangeTimes->{{3.6635836736943493`*^9, 3.663583780246174*^9}, {
  3.663583822889921*^9, 3.663583822898226*^9}}],

Cell[TextData[{
 "The Wolfram company maintain a Q&A community at ",
 ButtonBox["community.wolfram.com",
  BaseStyle->"Hyperlink",
  ButtonData->{"community.wolfram.com", None}],
 " where users of Wolfram technologies can discuss their experiences and ask \
for assistance. "
}], "Text",
 CellChangeTimes->{{3.6635837820797663`*^9, 3.663583861011942*^9}}],

Cell[TextData[{
 "Stackexchange is the canonical Q&A community for programming questions, and \
the dedicated subsite ",
 ButtonBox["mathematica.stackexchange.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/"], None},
  ButtonNote->"http://mathematica.stackexchange.com/"],
 " is an excellent source of information and support in using the language \
and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " environment."
}], "Text",
 CellChangeTimes->{{3.6635838629136972`*^9, 3.663583981611245*^9}}]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1920, 993},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["PresenterNote"], CellMargins -> {{66, 10}, {7, 7}}, 
       LineSpacing -> {1, 3}, CounterIncrements -> "PresenterNote", 
       MenuSortingValue -> 1400, FontFamily -> "Arial", FontSize -> 14, 
       FontColor -> RGBColor[255, 0, 30]], 
      Cell[
       StyleData["PresenterNote", "Presentation"], 
       CellMargins -> {{100, 10}, {10, 10}}, LineSpacing -> {1, 5}, FontSize -> 
       24], 
      Cell[
       StyleData["PresenterNote", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
       FontSize -> 22]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[948, 36, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[285927, 4739, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[303518, 5040, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[305119, 5084, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[306812, 5135, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[441908, 7669, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[675516, 11689, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[677075, 11738, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[679335, 11796, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[981553, 18520, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1084713, 20650, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1088516, 20757, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1097435, 20971, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1097881, 20983, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1099058, 21014, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1100739, 21061, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1101828, 21091, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1103568, 21137, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1108148, 21267, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1108837, 21283, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1133699, 21778, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1137644, 21877, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1140344, 21951, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1148285, 22184, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1148818, 22197, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1152139, 22287, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1154323, 22343, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1154644, 22354, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1158004, 22445}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[647, 25, 264, 6, 304, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[948, 36, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1015, 39, 298, 7, 265, "Title"],
Cell[1316, 48, 283731, 4663, 168, "Input"],
Cell[285050, 4713, 430, 11, 105, "Text"],
Cell[285483, 4726, 407, 8, 135, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285927, 4739, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[285994, 4742, 183, 2, 265, "Title"],
Cell[286180, 4746, 488, 9, 105, "Text"],
Cell[286671, 4757, 15774, 253, 391, "Output"],
Cell[302448, 5012, 669, 15, 165, "Text"],
Cell[303120, 5029, 361, 6, 135, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303518, 5040, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[303585, 5043, 287, 4, 92, "Title"],
Cell[303875, 5049, 214, 4, 30, "Text"],
Cell[304092, 5055, 564, 9, 68, "Text"],
Cell[304659, 5066, 109, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[304793, 5071, 88, 1, 30, "Item"],
Cell[304884, 5074, 85, 1, 30, "Item"],
Cell[304972, 5077, 98, 1, 30, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[305119, 5084, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[305186, 5087, 288, 4, 92, "Title"],
Cell[305477, 5093, 487, 10, 87, "Text"],
Cell[305967, 5105, 139, 1, 30, "Item"],
Cell[306109, 5108, 233, 8, 32, "Input"],
Cell[306345, 5118, 197, 4, 30, "Item"],
Cell[306545, 5124, 230, 6, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306812, 5135, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[306879, 5138, 284, 4, 92, "Title"],
Cell[307166, 5144, 431, 9, 49, "Text"],
Cell[307600, 5155, 578, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[308203, 5168, 133045, 2479, 281, "Input",
 CellID->481840482],
Cell[441251, 7649, 202, 5, 32, "Output"]
}, Open  ]],
Cell[441468, 7657, 403, 7, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441908, 7669, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[441975, 7672, 333, 4, 92, "Title"],
Cell[442311, 7678, 263, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[442599, 7689, 89, 1, 64, "Section"],
Cell[442691, 7692, 410, 15, 30, "Text"],
Cell[443104, 7709, 22510, 374, 128, "Input"],
Cell[465617, 8085, 254, 5, 49, "Text"],
Cell[465874, 8092, 762, 17, 38, "Input"],
Cell[466639, 8111, 323, 9, 49, "Text"],
Cell[466965, 8122, 2239, 42, 33, "Input"],
Cell[469207, 8166, 321, 10, 30, "Text"],
Cell[469531, 8178, 138, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[469694, 8183, 179, 5, 28, "Item"],
Cell[469876, 8190, 159, 3, 28, "Item"]
}, Open  ]],
Cell[470050, 8196, 129359, 2131, 199, "Input"],
Cell[599412, 10329, 296, 9, 30, "Text"],
Cell[599711, 10340, 4040, 71, 61, "Input"],
Cell[603754, 10413, 482, 9, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[604273, 10427, 157, 2, 50, "Section"],
Cell[604433, 10431, 294, 5, 49, "Text"],
Cell[604730, 10438, 16896, 282, 165, "Text"],
Cell[CellGroupData[{
Cell[621651, 10724, 312, 7, 49, "ItemNumbered"],
Cell[621966, 10733, 236, 4, 49, "ItemNumbered"],
Cell[622205, 10739, 277, 7, 49, "ItemNumbered"]
}, Open  ]],
Cell[622497, 10749, 253, 7, 30, "Text"],
Cell[622753, 10758, 234, 4, 49, "Text"],
Cell[622990, 10764, 19127, 318, 166, "Text"],
Cell[642120, 11084, 166, 3, 30, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[642323, 11092, 122, 2, 50, "Section"],
Cell[642448, 11096, 388, 7, 49, "Text"],
Cell[642839, 11105, 4614, 81, 91, "Input"],
Cell[647456, 11188, 160, 3, 30, "Text"],
Cell[647619, 11193, 116, 2, 28, "Input"],
Cell[647738, 11197, 245, 5, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[648020, 11207, 154, 2, 50, "Section"],
Cell[648177, 11211, 386, 11, 49, "Text"],
Cell[648566, 11224, 100, 1, 28, "Input"],
Cell[648669, 11227, 277, 5, 49, "Text"],
Cell[648949, 11234, 25872, 429, 153, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[674858, 11668, 96, 1, 50, "Section"],
Cell[674957, 11671, 328, 6, 49, "Text"],
Cell[675288, 11679, 179, 4, 30, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[675516, 11689, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[675583, 11692, 437, 9, 92, "Title"],
Cell[676023, 11703, 281, 7, 30, "Text"],
Cell[676307, 11712, 158, 3, 32, "Input"],
Cell[676468, 11717, 198, 4, 30, "Text"],
Cell[676669, 11723, 179, 4, 32, "Input"],
Cell[676851, 11729, 187, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677075, 11738, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[677142, 11741, 384, 5, 92, "Title"],
Cell[677529, 11748, 195, 4, 30, "Text"],
Cell[677727, 11754, 268, 4, 75, "Input"],
Cell[677998, 11760, 233, 4, 49, "Text"],
Cell[678234, 11766, 350, 6, 32, "Input"],
Cell[678587, 11774, 267, 5, 30, "Text"],
Cell[678857, 11781, 142, 2, 32, "Input"],
Cell[679002, 11785, 296, 6, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[679335, 11796, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[679402, 11799, 505, 6, 148, "Title"],
Cell[679910, 11807, 161, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[680096, 11814, 260, 5, 30, "Item"],
Cell[680359, 11821, 238, 5, 30, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680634, 11831, 6712, 162, 420, "Input"],
Cell[687349, 11995, 294158, 6519, 696, "Output"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[981553, 18520, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[981620, 18523, 454, 6, 92, "Title"],
Cell[982077, 18531, 444, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[982546, 18543, 2932, 68, 216, "Input"],
Cell[985481, 18613, 98644, 2017, 423, "Output"]
}, {2}]],
Cell[1084137, 20633, 273, 5, 49, "Text"],
Cell[1084413, 20640, 263, 5, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1084713, 20650, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1084780, 20653, 553, 7, 92, "Title"],
Cell[1085336, 20662, 265, 5, 49, "Text"],
Cell[1085604, 20669, 492, 8, 54, "Input"],
Cell[1086099, 20679, 215, 4, 30, "Text"],
Cell[1086317, 20685, 312, 9, 30, "Text"],
Cell[1086632, 20696, 202, 4, 32, "Input"],
Cell[1086837, 20702, 126, 1, 30, "Text"],
Cell[1086966, 20705, 176, 4, 32, "Input"],
Cell[1087145, 20711, 151, 3, 30, "Text"],
Cell[1087299, 20716, 172, 4, 32, "Input"],
Cell[1087474, 20722, 402, 10, 49, "Text"],
Cell[1087879, 20734, 180, 4, 32, "Input"],
Cell[1088062, 20740, 231, 6, 30, "Text"],
Cell[1088296, 20748, 183, 4, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1088516, 20757, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1088583, 20760, 792, 10, 92, "Title"],
Cell[1089378, 20772, 420, 7, 49, "Text"],
Cell[1089801, 20781, 590, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[1090416, 20794, 113, 1, 64, "Section"],
Cell[1090532, 20797, 735, 15, 68, "Text"],
Cell[1091270, 20814, 453, 8, 68, "Text"],
Cell[1091726, 20824, 782, 15, 75, "Input"],
Cell[1092511, 20841, 541, 12, 75, "Input"],
Cell[1093055, 20855, 128, 1, 30, "Text"],
Cell[1093186, 20858, 203, 4, 32, "Input"],
Cell[1093392, 20864, 291, 5, 49, "Text"],
Cell[1093686, 20871, 351, 8, 32, "Input"],
Cell[1094040, 20881, 373, 7, 49, "Text"],
Cell[1094416, 20890, 378, 8, 32, "Input"],
Cell[1094797, 20900, 163, 3, 30, "Text"],
Cell[1094963, 20905, 386, 8, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095386, 20918, 101, 1, 64, "Section"],
Cell[1095490, 20921, 190, 2, 30, "Text"],
Cell[1095683, 20925, 566, 12, 32, "Input"],
Cell[1096252, 20939, 324, 6, 30, "Text"],
Cell[1096579, 20947, 350, 7, 32, "Input"],
Cell[1096932, 20956, 454, 9, 87, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1097435, 20971, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1097502, 20974, 342, 4, 92, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1097881, 20983, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1097948, 20986, 465, 6, 92, "Title"],
Cell[1098416, 20994, 388, 8, 49, "Text"],
Cell[1098807, 21004, 214, 5, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1099058, 21014, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1099125, 21017, 444, 6, 92, "Title"],
Cell[1099572, 21025, 298, 6, 30, "Text"],
Cell[1099873, 21033, 178, 2, 30, "Item"],
Cell[1100054, 21037, 206, 4, 32, "Input"],
Cell[1100263, 21043, 212, 6, 30, "Item"],
Cell[1100478, 21051, 224, 5, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1100739, 21061, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1100806, 21064, 467, 6, 92, "Title"],
Cell[1101276, 21072, 153, 3, 30, "Text"],
Cell[1101432, 21077, 359, 9, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101828, 21091, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1101895, 21094, 465, 6, 92, "Title"],
Cell[1102363, 21102, 140, 1, 30, "Text"],
Cell[1102506, 21105, 1025, 27, 138, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103568, 21137, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1103635, 21140, 577, 8, 92, "Title"],
Cell[1104215, 21150, 193, 4, 30, "Text"],
Cell[1104411, 21156, 184, 4, 32, "Input"],
Cell[1104598, 21162, 404, 12, 32, "Input"],
Cell[1105005, 21176, 273, 5, 49, "Text"],
Cell[1105281, 21183, 289, 8, 32, "Input"],
Cell[1105573, 21193, 160, 3, 30, "Text"],
Cell[1105736, 21198, 552, 14, 138, "Input"],
Cell[1106291, 21214, 237, 5, 30, "Text"],
Cell[1106531, 21221, 550, 14, 54, "Input"],
Cell[1107084, 21237, 236, 5, 30, "Text"],
Cell[1107323, 21244, 788, 18, 96, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1108148, 21267, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1108215, 21270, 585, 8, 92, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1108837, 21283, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1108904, 21286, 183, 2, 92, "Title"],
Cell[1109090, 21290, 367, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[1109482, 21303, 122, 1, 64, "Section"],
Cell[1109607, 21306, 306, 6, 49, "Text"],
Cell[1109916, 21314, 404, 10, 49, "Text"],
Cell[1110323, 21326, 133, 1, 30, "Text"],
Cell[1110459, 21329, 242, 6, 32, "Input"],
Cell[1110704, 21337, 552, 14, 96, "Input"],
Cell[1111259, 21353, 190, 4, 30, "Text"],
Cell[1111452, 21359, 17988, 300, 238, "Input"],
Cell[1129443, 21661, 224, 4, 30, "Text"],
Cell[1129670, 21667, 207, 4, 30, "Item"],
Cell[1129880, 21673, 633, 16, 117, "Input"],
Cell[1130516, 21691, 288, 5, 30, "Item"],
Cell[1130807, 21698, 886, 23, 117, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1131730, 21726, 98, 1, 64, "Section"],
Cell[1131831, 21729, 267, 5, 49, "Text"],
Cell[1132101, 21736, 377, 7, 49, "Text"],
Cell[1132481, 21745, 1169, 27, 180, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133699, 21778, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1133766, 21781, 478, 6, 92, "Title"],
Cell[1134247, 21789, 367, 8, 49, "Text"],
Cell[1134617, 21799, 108, 1, 32, "Input"],
Cell[1134728, 21802, 378, 6, 49, "Text"],
Cell[1135109, 21810, 306, 6, 30, "Text"],
Cell[1135418, 21818, 489, 9, 96, "Input"],
Cell[1135910, 21829, 199, 4, 30, "Text"],
Cell[1136112, 21835, 147, 3, 32, "Input"],
Cell[1136262, 21840, 276, 5, 49, "Text"],
Cell[1136541, 21847, 1066, 25, 201, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137644, 21877, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1137711, 21880, 481, 6, 92, "Title"],
Cell[1138195, 21888, 323, 6, 30, "Text"],
Cell[1138521, 21896, 469, 12, 96, "Input"],
Cell[1138993, 21910, 258, 5, 30, "Text"],
Cell[1139254, 21917, 342, 8, 54, "Input"],
Cell[1139599, 21927, 284, 6, 30, "Text"],
Cell[1139886, 21935, 421, 11, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1140344, 21951, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1140411, 21954, 614, 8, 92, "Title"],
Cell[1141028, 21964, 258, 5, 49, "Text"],
Cell[1141289, 21971, 180, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1141494, 21979, 215, 4, 30, "Item"],
Cell[1141712, 21985, 189, 4, 30, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1141938, 21994, 92, 1, 64, "Section"],
Cell[1142033, 21997, 310, 6, 49, "Text"],
Cell[1142346, 22005, 136, 1, 30, "Text"],
Cell[1142485, 22008, 212, 5, 32, "Input"],
Cell[1142700, 22015, 231, 5, 30, "Text"],
Cell[1142934, 22022, 321, 8, 32, "Input"],
Cell[1143258, 22032, 172, 4, 30, "Text"],
Cell[1143433, 22038, 284, 7, 32, "Input"],
Cell[1143720, 22047, 335, 7, 49, "Text"],
Cell[1144058, 22056, 253, 5, 30, "Text"],
Cell[1144314, 22063, 496, 12, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144847, 22080, 102, 1, 64, "Section"],
Cell[1144952, 22083, 258, 5, 49, "Text"],
Cell[1145213, 22090, 532, 13, 32, "Input"],
Cell[1145748, 22105, 243, 7, 30, "Text"],
Cell[1145994, 22114, 558, 14, 32, "Input"],
Cell[1146555, 22130, 231, 5, 30, "Text"],
Cell[1146789, 22137, 175, 4, 30, "Item"],
Cell[1146967, 22143, 231, 5, 32, "Input"],
Cell[1147201, 22150, 137, 1, 30, "Item"],
Cell[1147341, 22153, 162, 3, 32, "Input"],
Cell[1147506, 22158, 165, 3, 30, "Text"],
Cell[1147674, 22163, 562, 15, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148285, 22184, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1148352, 22187, 429, 5, 148, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148818, 22197, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1148885, 22200, 617, 8, 92, "Title"],
Cell[1149505, 22210, 381, 6, 68, "Text"],
Cell[1149889, 22218, 411, 10, 32, "Input"],
Cell[1150303, 22230, 156, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1150484, 22237, 159, 3, 32, "Input"],
Cell[1150646, 22242, 70, 1, 32, "Output"]
}, Open  ]],
Cell[1150731, 22246, 279, 5, 49, "Text"],
Cell[1151013, 22253, 708, 18, 54, "Input"],
Cell[1151724, 22273, 162, 3, 30, "Text"],
Cell[1151889, 22278, 213, 4, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152139, 22287, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1152206, 22290, 570, 8, 92, "Title"],
Cell[1152779, 22300, 452, 9, 87, "Text"],
Cell[1153234, 22311, 324, 8, 32, "Input"],
Cell[1153561, 22321, 124, 1, 30, "Text"],
Cell[1153688, 22324, 598, 14, 96, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154323, 22343, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1154390, 22346, 217, 3, 92, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154644, 22354, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1154711, 22357, 170, 2, 92, "Title"],
Cell[1154884, 22361, 399, 6, 49, "Text"],
Cell[1155286, 22369, 509, 14, 49, "Text"],
Cell[1155798, 22385, 355, 8, 49, "Text"],
Cell[1156156, 22395, 549, 14, 49, "Text"]
}, Open  ]]
}
]
*)


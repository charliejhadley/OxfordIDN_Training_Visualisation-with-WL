(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1386589,      27486]
NotebookOptionsPosition[   1355323,      26657]
NotebookOutlinePosition[   1366358,      26902]
CellTagsIndexPosition[   1366315,      26899]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Data Visualisation: Data Analysis & Creating Interactive Visualisations with \
Mathematica\
\>", "Title",
 CellChangeTimes->{3.655538756390427*^9}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
vQ3jjNqs3oxnTFS0+P333023h1OnTnn0XDrOcsyMSSD2yNGjV02ITeDb4OMI
Ic7g3G+/eXQ31F0NZn2SKjWotNzrMX1/4ULL7AK9djx5NivPcg4Hh5oak0Av
OaTOvi9qsAn1TeDj4OsIIfbm5s2borhAvX9HTUfdvs2O2pya4XU9/7yWrZTV
T3OHkcNHePR8Vp3lqLwLXJMGlJRptxd/lhl1YeHr4PMIIfZl8PMvKJ/7jwfW
Y235atQx1/t7wd9u326pbWzcsNGj57PiLMeqmATqXsC8V52CD3nchH46qM9D
CLEnC96dr3zOo2coe/BVrWV5BV6Pa6+ne1puH1evXvUo5wj5hbtjm5g2fodC
wiyLSaCylq2124y/C76k2IRc/IXvvWf5fCKE1MzevXuV9+Jr4dJ+xiRV6uRj
gSLXy/q5OPf54dQPWuykS8eOHj3rNJNyMg6ER4nCzCzLYhKoVVq6druhahs+
pYXibwvfBx9ICLEHf/31l2gm0SeuKjUNrCu+ZUxSrT4oKvV6bEcMG67NVubO
nu3Rs2I/Q/XY7YuKtjwmgZIam7f3Q3km+JamivNN4APhCwkh+nni8a5K53eU
SxtqB2r3XXbV8YC6okVyildjGxkeYcm94Oo4cfy4R88bXLeecQ9a1dh9Hx0r
WqamWR6TGGMfGqbddqj/CT4mSvE3hi8khOhl+tSpSud1sEuLWMu1Rs2VuBf8
5htv6DYZ0Twp2aNnxvuqGLddcfEiq1lzLTFJpVAjRbf9UP8TfE2w4m8Mn0gI
0QPqCoXU9+6OanUax7ppNQr15lOaxns1ttgr+fOC/p6ow4e+6NFzoxeh7Ljt
aJIo0pPUnjW2ys72+O7z7hh1ez+UGo1TXHcNPpE11wixHvR4S/XyLKE69WaN
kkdqSnmF1+Nrh70SsGHdeo+eO7R+kJGn6u2YbUtqZuR2qLTV1jk54sKFC2Le
3Lke/butzdK02xD1sHorzjWBbzSrDyYhpGr6PNtb6TwucvmFY8xzrVGotdG4
YSOvxjfC9W//+OMP3WZjgP7CiDU8ef75bb2rSbYpvYXXY1adivMLxN9//228
y8IFCzz6t+vYU9iWwv3hIsWxCXwkIcQalnz8sdL5m+jyB98xJnmkZPZKRrw4
TLfZ3EcHD/sM9ij0vCbZ2uxcr/sGVaeytiX/jUmAp3OBPYXtK/igRMWxCeyD
EGIup0+fFtERDZTN23CX1vDuzSN1JDhUxMfGeTXGqFdy+uefdZvOfcyeOcuj
d8BdFoyBu+P1aV6BaOD6NyrXGMRSqA13Lys+/9yjn+Htvg9ljeCLwhTaDHwl
fCYhxBzu3r0rKkrLlPr6abx745amSuyV9O39nG7TeYijR456/B5L3Kzjjtou
np4TPUrdujz+UEwC1q1d69HPmcrefbYXfJJK24HPhO8khKjH05pYj1Iv5rm6
Jdwt9fYODnT48GHdplMlKQmJHr1H/5LSR47VnNJyo+aJSjvt8cQT1fZm+3rL
1x79rDEW9SKk5NRL8XkOfCchRC3Hjx0zcidVzdNMrJfMKXFLM8u83yvp2rmL
btOplqGDB3v0LnHRDY2actWN06Ryz3JW3BH2mmrqF7t92zaPft6wMu6XOEHw
TZkK7Qi+Ez6UEKKGO3fuiKL8fGVzNNKlLcwpcUuyeyVfbdqk23yqZc3q1R6/
z+pWeVWO06sS51zVqd9zfcTt27drfIcD+/d79jPd2POh7CH4qEiF9gQfCl9K
CJFnzizPchQfpXmMSdzWOxL5PJlp6bY+10Z9B0/r8o0ou/8cBP0Lh0jsJ1Un
1H5zZw05dPCgRz/Xm3tFlD7BV6m0K/hSQogcP/7wo4gMC1c2L59hTonbwpor
Uzd9/jvv6jafR9KuzLOa+s3iE/47PjjT6d22RHlMghqu7sZz6Mvsyc/umCtf
u5ayVs8ozDWBL4VPJYR4T3uF++Oprvl9kDklbgu1Lrwd66iICHH58mXd5vNI
Zkyb7vG7oVYa7gx3yy9UHpN4WhMXd0A9+fnF2Tna7YryTPBZqQpjE9w3J4R4
x+JFi5TNxdBA1inxVGWtWns93i+NGKHbfNwCd4U8fbcRrli5Xetc5THJxPHj
PX5+T+OSVmnp2u2K8lzwXaEKbQ2+lRDiGejvFqewfvcr7MfnkTZm5kiN98mT
J3WbkNskNmmqPMbwVNOnTfPq2TFPPPk9955DUc7SKwr7+8U1irFFD01CnMQL
AwYqm4N5gfXESRv4FSepZ1Gx1+PdsV173ebjEYMGPq81Jnln7jyvn/3SpUse
/a6YSO/7D1J6BR8GX6bK7uBjCSHusePbHSKojprz1IhA3gn2VNsTUqRqg638
fIVuE/KI1StXaYtJFr73ntSzexqXoCeAbvuivBd8WYQi24OPha8lhNQM6jW0
zMpW5vcn8vzGY8nce8X+8I0bN3SbkUdgbcd6bWU8grjvkyVLpZ/99q3bHv/u
o/WCtdsY5b0mKjzPga99VI0cQvydd+e9o2zOFfJOsMfaHxlt9KjzdsxfHf2K
bhPyiorSUktjkmWffqrs2T39/fuiG2q3M0pOhQrv58DnEkKqBnlYsS6fqWKu
oU8wz28819uStdSdlO96L9OnTrUkJkE/vw3r1it9dk+fYUfTJO12Rslps8u3
hSuySfhc5sASUjXDhgxV5v9f5/mNxzpZu45IS0zyesxRo8ypHDxwwPSYpEFo
mPKYBHj6HKi/otvWKHm9rvA8B76XEHI/hw4dUtaHtVVgPXHcBn7DaVoiUUcN
WvaJurMJq0F91fi4xqbGJN9s3WrKs3v6LGuzc7XbGiUv+LhWiu7nwPfate83
Ibro3KGDkvkVFMj6ad4KNcq9HfeGDSLF1atXdZuRFM/3H2BKTIKxQd9fs/A4
fmxTqN3WKDWCrwtSZKfwwYSQf0HPWVVrQD/munqlrc3SpMZ96ODBus1ImhWf
f25KTLJ3zx5Tn9vTZ1pUWKLd3ih16qcwB9bO/b8JsQrsn7fOkastWqnGrvm5
n/1vvNJQyZ64e3bv1m1K0vz111/KzhINe4yJEQf27zf9uaMjGnj0XPPalmu3
N0qd4PMaK4pN4Ivt3AOcECtY/NFHytaB2bWZ6+qNDoZFiqjwCK/HPSs9Q7cZ
KaNMUX9gxCRHDh+x5JkbRUZ59GxTyiu02xylVvB9qvwofDIh/grqbzWTuP9x
rwp4fuO1ZkjulcycPkO3KSljytuTpW0xCT1oTp2y7Jk9jUverGin3eYo9cpX
tGcCn3zz5k3L7JcQO4G+ICrmEfK+1tXm+Y23apPRwuuxR53Uc+fO6TYlZeDc
RcYWUxISxY8//GjpM3sal4wpZ1zii4IPVJUDK9OziRCncvXKFZHQuImSOfQs
90q81hcZWVJj371rN92mpJQ7d+6IprFxXo1FevNUcfbXs5Y/c0h9z2roDy9j
fomv6llFeybosQ0fTYg/MWPadCXzJ9ql3TbwB07V86XlUuOPnne+hjf3hbMz
WmiJSYCnz4ocZ912R5kj+MJoBX4Vgo8mxF9AHB7XsJGSufMK67p6rUOhDaTy
XfENndajzx1WrVjp8ViMeHGYtuf19Fn7lZRqtz3KPI1WVAcWPTi5Z0L8BVV7
JfGBdcVh3gv2WrPL5PZKRg4foduUTMHoL+zh2QjOcHTh6Xd7pritdtujzBN8
Yryi8xzumRB/APE37lCqmDPTeS9YSjL5rtC+7/fpNifTaOdFzHb655+1PKun
z9m9gPVefV3TFd0bhq92eh1nQh6Fqjs4WS6dtMH8d6q+zMiUGv9W2dm6TclU
Zs2Y6fGY6Kr74Olzot+AbvujzBV8Y6YCPwvxbg7xZZCLgDxvFXNlIfdKpDRc
8gxn7uzZus3JVI4dPerxmAx+/gXLn/Py5cseP2d5q9ba7Y8yXwsV7ZnAZ/ti
HhkhYNEHHyqZJ7mB9bTPeSfrWGB90Vgi7xi5F7///rtuczKd5knJHo2Ljrq3
yIXx9PvlZbTQboOUNcpV1G8YvpsQXwM9F+C3VcyRxdwrkdLHBUVS49/jiSd0
m5MljBg23OOxuXDhgqXP6E1c0to1D3XbIGWNFivaM4HvZt8c4musW7tWyfwo
Yg01aXWXjEvWrF6t25ws4YuNGz0eG/wbKzlz5ozHz5iTmqbdBinrVKTobs76
desstW1CzEZVP7SPuVcipe+jY0Ro/SCvxx81Dfyld8a1a9dEREioR+Pz9luT
LH3G06dPe/wNm6F/jw1skbJGqvZM4MMJ8RX27tmjZF7kMa9EWlPL5Xr0jRo5
Urc5WQrq7HsyPlbX5T9x4gTjEuqRylOUZwJfTogv0O+5PkrmxIfcK5H3T5I1
Sw4dOqTbnCxl4YIFHo1PfFxjS5/v0MGDHn/D+JhY7XZIWasPFe2ZwJcT4nTO
nz8vwoKCpedDDvdKpLWlWbrUNyjKz9dtTpbz66+/ejxOv521rk+ON3FJowaR
2m2Rsl45CvZM4Mvh0wlxMpMmTlQSp8/hXom0XpU8w/nw/Q90m5MW8lq19mic
kONtFdu3bWNcQrmlOYr2TODTCXEqt27dMva1ZedBUmBdcdwG89rpSktM8vob
REVEGDW8/BFPY+txb4617Nm8iUtC6tXXbouU9YIPTVJwNwc+Hb6dECfiTV/W
qjQ+gHeDZbU+q6XUNxg6eLBuc9LGwQMHPBqrxzt1tuzZcHfTm++p2x4pPYIv
VeGT4dsJcSKd2neQtv9Grvj+IHsGS2tYmdwZzt69e3Wbk1ZSEhLdHiv0OrOK
1StXMS6h3BZ8aUMFeybw7YQ4jZ9+/FEE1ZG3/yHcK5HWcdcYJkicp+W1bKXb
nLQzcvgIj8bs3G+/WfJcSz7+mHEJ5ZGGKNgzgW+HjyfESYx5/XVp2w92adtj
3CuR1YrWbaS+w+JFi3Sbk3a2bN7s0Zht+vJLS57r/YULGZdQHgk+NVjSN0Pw
8YQ4hdu3bivJd+3Mu8FKNLC0zOtvENewkVH31N9BjduGDSLdHrcZ06Zb8lzz
5s716rseCOOdHH9WZwV3huHj4esJcQIbN3jeV6QqfVo7UPv8dbr2NowTMZFR
/JtIAb179XJ73Pr2fs6SZ5o86W2vvuv+iCjttknpE3yrCh8NX0+IE+jVs6e0
vacFcq9ZVodDQkVBZpbX3yC4bj2j/wr5l+XLlrk9dtktMi15ponjxzMuobxS
moK4BL6eELvz119/ifDgEGl7fzOAcYmMkOv6REGh1Dd4useTus3JVly6dEmE
1K/v1tihRsj169dNf6bRo0YxLqG8EnysrJ+Gr8e8IMTOLHzvPWlbD3Npjw3m
rZM1VPJeMLTtm290m5PtQG0St9f+fftMf55hQ4YyLqG8EnxsmKSPgODzCbEz
6IUta+c9mO8qpSmS9eYhf+yF4w64m+TuGH68eLHpz9O/b1/GJZTX6qEg/7W8
pMR0OyfEW9DjTEXNkk/YC8drLWtTaOSFyH6DtWvW6DYnW3Lx4kW3z3JwxmI2
T3XvwbiE8lqfKOiZA58P30+IHZkza5a0jaN/w0kbzFcnamtyc6Mnm+w3QM7m
nTt3dJuTbXH3LCc1OUUcPXLU1Gfp2K494xLKa8HXquiZA99PiB0pyJOr3wUN
Z76rV9oXGSXSk5Klxx9CDVFSPZ6c5WBvBX3/UP/EDNoWFjEuoaQ0XEH+K3w/
IXbj559+krbtIJe2sGaJx8Ldm04KYkIIfWDMWkN9BU/OciqVm9NSHDp4UPmz
tM7JYVxCSWmLolomWAMIsROzZsyUtuv8QPbC8UavKchzrdT8d97VbUqOwJN7
OZUKCwoW06ZMEbdvq6uR2dzLPTLGJdS9aqMg/xVrACF2oqSoWNquJ7BHn8da
UuDdPn5V4l6J+3hylvOgigsKxQ+nflDyHHGNYhiXUNKaoKCXH9YAQuzCuXPn
pO+AoI/Urlrs0eeJtiWmKMlzrdSiDz7UbUqOwZuznHvVIDRMvDd/vrh7967U
c0SEhHr1+48Eh2q3X8o+2llLvpcf1gCsBYTYgQ/ef18+1q7DvRJPdCQoVLRO
z1AWk2SmpbMHl4eMHztOety7dOwozv32m1e/HzGNt79Xt/1S9lOJghoPWAsI
sQNdO3eRtufJrFnikQaVliuLSaD169bpNiNHoiI2aRwT41X/M9T/ZlxCqdJk
BbVMunV53IRZRohnXLt2zeu95Eph/3C3DealU7SwuFRpTFJRWqbbjBzN9GnT
lHyHUSNHetRT5+yvZxmXUMoEHyx7loO1AGsCITr5YuNGaX9cyHs4bmtbfLKI
Co9QFpM82b27+Pvvv3WbkeNRFZvktWwlfvrxR7d+56lTpxiXUEpVqKDGGtYE
QnQyYthwaTsex1pqbulYYH3RpkWmsphk3JtjpfMuyf9QFZs0bBDpVh8A1EPx
5udHhoZpt2XKnhqnoMYa1gRCdIJa27J2vO0x3sNxRy+Xq8kpQd68FT3l/JGZ
02coixtfHf2KuHXrVrW/a/u2bV79XNzh0m3LlD0FXyxrt1gTCNGFzD5ypbID
uVfijla2zFXSEzG0fpDYsG69btPxadD3XVVsgtyfCxcuVPl7vD1DjY+J1W7P
lH2VrcBuVdXnIcRTFi5YIG2/L7KW2iOF3jdJjZtIjzVqZmzZvEW32fgF7y9c
qKSvM4SarkcOH3nod6xasdKrn9csPkG7TVP21YsKaqwhNidEB72e7iltv58F
sB/Oo/RMoXwtXeyTMB/NWpZ9+qmy2CQyPOKhu9zor+jNz0J/R902TdlX8Mmy
9oq1gRCrQb5kXMNGUrbbMLCu0Wdb9zy0sxYWlihZ15Z98qluk/FL1q1da8SE
Kr4hzvFmz/xfP/l5c+d69XNQj0+3XVP2FXxyQ8l7OVgbmFNPrGb/vn3SfrZb
YD3tc9DO2t0oVsRGN5QeZ/bi08umL780ztBUxCbQ6FGjDJ+PHoDe/Pu8jBba
bZuyt7op6OOHNYIQK5k7e7a03U5ljdca9XheG+kxxp0Oop9vtm4V0RENlMUm
A/v3F2PfGOPVvy1v1Vq7bVP21hQFtV/nzZmje9oRP6Pnk09J2+03tXk/uDrN
U1DTFf0Bbt9mzxu7sHfPHqM2iarYxNs9mHatc7XbN2VvwTfL2ifWCEKspElM
rJTNJrPGa7X6LiZOuk9wVnqG0T+F2IvDhw8b/XBUxSbeqHtBoXYbp+yvZMkc
E6wRhFjFyZMnpX1jb8Yl1eqJ/AKpsY2KiDC+EbEnqPuTkpCoLS7p07ZUu41T
9tezCmrS0w8Rq/jow0XS9jqbuSVVamF+kfTY8u6N/UHPveyMFlrikiFlFdrt
nLK/ZivIMVm8aJHuqUb8hKGDB0vb6/ZazC15UHsjo0RjybvXgwY+r9s8iJug
jmthG/ncZk81upxxCfVowUfL2hrWCkKsIDenpZStJvEMp0r1KZKrn5bdIlNc
vXJFt3kQD0Av5w4V7SyNS8aVt9Nu65QzlCR5loP+2ISYzdWrV0VIvfpStvok
65Y8pBWZraTGNKR+fXHwwAHd5kG84MaNG+Kp7j0si0umcr+EclNPStYxwVqB
NYMQM9m5Y6e0X5zE3JL7dKROfZGRlCw3phMn6jYNIgHucz/ff4Alcck7pWXa
bZ5yhiYpyDHBmkGImaBWjqydrq3Nnjj36nXXOiEzntgrvXXrlm7TIJKghusr
L482PS5ZXFis3eYpZwi+WtbeWF+NmM2Afv2kbDTcpeM2mG920damiSIsKNjr
8cT5zaGDB3WbBVEIeuCYGZcsyyvQbveUM3SsVoDhs2XsDbWJCTET2ZzXfOa8
3qcOrXOlxhO1yInv8enST5T1+3tQLVPTxPfRsdptn3KG8iVzX7FmEGIWOCuQ
9ZXPBzAuqdTCPLn6ac2TkplT5sN8tWmTiAwLZ2xCaRV8toytYc3gOTMxC5wX
yPrDmcx5NXQwKFQkxjWWGsuNGzbqNgliMt/v/d60uvWITXbHxGmfC5S9NVNB
7ivPmolZLF2yRNo+NzLn1dBLbeX68j3d40nd5kAs4odTP4jUlGamxCbpSUli
R3yS9vlA2VcbFeS+Yu0gxAy87ateqTCXjrHOq9jaJFGqBkx4cIg4ffq0bnMg
FnL+/Hnj3pUZsUlS4yZiS7N07fOCsqfgs0MlbYx5cMQsZGs/tWQ9NUOdmetK
vAC1YTu172BKbIL+Bxszc7TPDcqeypGsr4a1gxAzaJGWJmWbPXkXRyzJaS01
hk1j48Tly5d1mwLRxM2bN6Xv6lenBqFh4tM2hdrnCGU/9ZS8k4O1gxDVIJ8a
tTJkbPP1AP/OeT3q+ptDtq7rog8+1G0KRDOovzZ+7DhTYpPguvXE3NJy7XOF
spfgu2XsCmsH7+QQ1Rw/dkza533g53dxJkr25WuVnS3u3Lmj2xSITfjow0XS
vaqq05iKduLkY8xRp/7VBwru5GANIUQlG9dvkLbLrbX9N+f1+5AI0ahBpNT4
rV+3TrcZEJth1DgJjzAlNunTtlQcqxOkfe5Q+vW1y3fL2hPrGhDVvDN3npRN
4i7OSRvML10aJrlXUlxQqNsEiE05sH+/SGjcxJTYpKxla7E/Mlr7/KH0Cr47
TNKWsIYQopKXX3pJyiYzAv33DGdbTJx0ndzt27bpNgFiY86cOSOyW2SaEpu0
SE4R25KaaZ9HlF5lSNoR1hBCVNK9azcpm+zgx3dxns7Llxq7zh066P78xAFc
unRJtC+vMCU2iYmMEsvZ78+v1UHyTg7WEEJUkpOZJWWTA/20L87a5ObSa8Ke
3bt1f37iEHCP+IUBA02JTXBXZ7Ir7tE9pyg9GijZJwdrCCEqiY5oIGWTE/w0
LmkrGc9xr4R4w/SpU02JTaD+JaXiaL1g7XOLslYTJOOShg0idU8L4kOgjpes
L/vQD+8If5jVUnrcmFdCvGXl5ytEREioKbFJcVYOe/75mT5UcFf4yuUruqcF
8RFOnDghbY8b/Kxf39HHAkVGYpLUmLUrK9f96YnD2btnj1Ej2IzYBH11vsjI
0j7XKGu0QUH/PqwlhKhgy+bN0va41wbzykpNbVMgPWbfbN2q+9MTHwA9Hs26
q4P9mIVFpdrnG2W+4MNl7QVrCSEqWPLxx1K2GB7oX2c4BwPrisbRDaXGrLBN
G92fnfgQ6PnXpWMnU2ITaER5hTjupzlk/qRwSTvBWkKICmZOnyFli2l+FpeM
LSiS9vPIDSBEJbdv3RbDh75oWmxS2rIVc058XGmSNoK1hBAVvPHaa3J/+/tR
7ZJ99epL15tPTWkmbt++rfuzEx9l4YIFpvXViY+NE2uzc7XPQ8ocFUrWMMFa
QogK+vftK2WL3QLraZ9PVunVgkJp3/7e/Pm6Pznxcb7e8rWIiYo2JTZBzDOl
vJ32uUipV1eXL5exjQH9+uk2feIjdO3cRcoW+/rJfsneoFARGRYuNVZxjWLE
tWvXdH9y4gf8cOoHkZWeYUpsAvUqaisOhYRrn5eUOvWV3C/BWkKICpCDKWOL
owL8I79khII7OOPeHKv7cxM/ArXru3TsaFpskpOaxt46PiT4chl7YD4/UUVG
aqqULU7yg5pq37n+LowIDpEap5D69cVvZ8/q/tzEz0Auk2xfzpqEWtGLCku0
z1FKXpMka6thLSFEBY1jYqRscZ4f1FQbLNmbD3qu17O6PzXxYz58/wPpvtc1
aWhZhThWJ0j7XKW81xzJuKRJTKxuMyc+gqyv+sjH90u+jYhS4s93f/ed7k9N
/Jxvt283rT4sVJCZJXbEJ2mfs5R3+kgyLoGfJESWq1evSvuiFQG+vV/St3We
9BgV5efr/tSEGPzyyy8iP1fepqtTTGSUWFxYrH3eUp4Lvlz2+zOvn8hy/vx5
aTvc5MPnOFsjIkVIXbm7c9DSJUt0f2pC/gvWjv595OoDPErDy8p5ruMwbVLQ
I+f333/Xbd7E4Zw5c0baDrc9FqB9PpmlAblyd5Wg2OiG4vr167o/NfEQ1E/9
9ddfxZ7du8X6deuM2BJ1the8O198vHixWL1ylfhq0yZx+PBh8c8//+h+XK+Y
M2uWCFYQd1cnnus4S/Dlst8cawohMhw9clTaDvfV8s245NuQcCV5Ja+8PFr3
ZyYecuPGDdHQw7q+cQ0biYrSMvH6q6+Kzz/7zDF/N279+msjdjYrNuG5jnO0
r5Z87z6sKYTIcPDAAWk7POSjcckLrXOV+OWTJ0/q/szEQ9atXavk2+e1ai3G
jnnTmGd25ueffhKtc3JMi02gF8sqxNF6wdrnNVW9DtaS3y85dPCgbnMmDgf5
+bJ2qHsumaFdQSHS9Uqgju3a6/7ExAtwp1v1uozaq1PenmzkdNmRq1euiF5P
9zQ1NmntGoOtyc21z2+qesl+Y6wphMggG5dE+Ghc8mKumr0SJ/UNRv2ttWvW
iG+2btX9KFq5cvmKaBAaZtrajLNBxD3IW7Ebd+/eFbNnzjKt7x8U6RrbuaXl
2uc4VbXCGZcQzXz5xRdSNhjtg71x9tYJEg1CQqX9L3rh3Lx5U/cnfiTI2Zw1
Y6ZISUgUT3XvYaxN/sxny5ebtiY/qM4dOojt27bpfuWH2PbNN6bWOYGeKWor
DoRHaZ/v1P2KluyRs+nLL3WbL3E4uGfAuOR+vaSgXgn0yqiXdX/eGjl37pwY
8/rrolFklPG8uTktjb0Cf6dHt26WxSX3xicH9u/X/er3gZ4JbQuLTH3vVFcs
vD6rpfY5T/1PsnEJ1hRCZGBccr++d71PpKI9/COHj+j+vFVy+uefxZBBg+67
a4ReBKdPn9b9aNq5ePGiCAsKtjwuqVT/vn1t1UMJ+30jh48w9Z1xZjShvJ04
6eN1o50ixiVEN4xL7tdriu7gFOcX6P60D4E6n8OGDH3o7jPqV/h7Tkklyz79
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
AAAAAAC/6gsgCmon
     "], {{0, 550}, {550, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{142.6015625, Automatic},
   ImageSizeRaw->{550, 550},
   PlotRange->{{0, 550}, {0, 550}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
jUuGmrKxifhwfiWTjLIg/UQHskZr9ftQVvELSWyK1IvdW5+9v8Ek1mN8/gyZ
5KDYYuoBJ7jtG0Pe9F/d2ZzN2Zztb9Os+7oom4jtJKggr9VuiA9yReBnb2EO
x8iL37+Px0OKILx3ftzqmRchvcgovXIjhCwS0uN9hPxANumeS7nkF/JJ34Lk
ltx4MLgILv+QE9s5/l/ieHnvR4uR1xMzojCOdVBfjuQMG2zi+artZB0frzf1
kk0cJHyyv77aQSQ39c8qmj8MjnF3mmocq+TaHJH69bVVB21sQp3g8xfIEkc8
dSw28ogl9pWvna+nEj/JoTrKDVIHzcilKatMMl7iV12VaySO5r6fg43EWyU2
lxuSeyy162VOvwbKI0NcLBhWij011FS/kvr4eF3dh6MyVw63fdxL+UTmvglt
oXEmweSPO97KTQnCJd3+aczvJ/PzyHzHEa11vr+INsooYdQTjusbJZa3hAVT
yRJTyiubTCWTzDa5ZIyr2mIkrkRYxGASsZV8rjEiIrGVpHUV+1cOo3aa5FYt
rWWXzIMkddRCuM1nEuPaSf1HEnMb0iUb9nfKZnzuZmutkR9i1lUxmOQjzX2W
nGfZj7PNNGY28nOtLys18FOGfIisiWUQ+aPOQS3zHlzjes7z93SKj/fzHN8f
XciI/cja6InMHb7IPN4W2FYP1j3+yLr0BRnCH/xBab+hjvpvBpk8MsSBTYYp
kyTy9bSj7YCzMrcwGUN45FATWA811eU9ZI+DfuSdlobdxCo5OOIz2lxbY2DF
l3O135v+mzubszmbs/19WlYmsMZV2WRlbio/sJ2P91TGiUEFMJFj+lqpfd4/
P+4PKIRbvT5EMPnk1i/v49bP5JIfP8BNjlNXu76NYI5joT1zq9+nl9RhK4aj
7TUGVfImIvvkRvTIkrj4pdbKWFVHucTGJmuotSI+v66OnUvWm2wiOTfbOXbv
9lLt8dK4VmEfmbdX8lPjOUYl8j76Ap+/LPXSpF4917WV9+gH+fppjvunxOZS
VznlFNdxrJ7GxJ6rZ+eSC/W1dtocrre/i+bRiAw2KaM+jz5FNEbmSSu1mdzy
Vp6R/qbYiUzJc/fJJnPIA32KKZcM5Tp/NyWxJcsrK9ec8FI+ER3jcR3h+T9R
V/dPat9LDlAw9y9W/C3dsyHz67cNG0Zwc/XjhHPMD2ulsSbiCwppSTbooPHD
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
uz2NuvMp81yNeruPu7+DJzM88KR3fsQ2VNtGzCg3xC5vitj5DQ2bydNR5fCc
bPF8eRM8X9sK8TPdkTBRctVqkku8kDSvNpLnuSNljS/ZvRLA437B441ln/K1
BVnrGpKDGiFruQesK9xN/6KXxmILKy8SriCDLCWDLKEWVzOEpSqr0Vexa1kV
5ZKllYHFFTSWbBF7mYtnAfllivzXy6tmc3/mcf0LqD19eZOU9IavhM7mbM72
V2pZiU/xdHFzPCaXCJs8GUM+GVvAkMEoEwoi9g+1o7wiiUkx/D5FXjKKzbeT
OIVsMrWEaTdxIZeQJWaYbGLTTAfxNSt5xND00sZ7hU9essm00somU10NLkmd
6GK89rDPe7j+Oa+1I4oiZXp5o55J3LjSeDapDGJHFUFMnw/w5LfciO6TEw9/
zYUHfQvi/pDiiBxSEneFS/oXRUTfIggjk4T0LoxbZJKbPfPjxs95DS65+q88
uPxjflzoVgznupOvAt4FNv1D58oJdOQRB0Yx2CQnl4uZbOJmZxPxv69y5BOy
SaD48jk+SaxkoK+D/F6T/TXrKpEf73MbGb0RP0s+wY6WeD6vLg53K4k/3bMZ
NemXcEzfSB4Iqqxxsas5zm6U2JMqFmPOY8nNGe1qwdZq6svZWf1ViV9H2OSw
KeETyc85IrXZJHfZzYINfM9dsWWQUa7UUUYRSb7wS66opWxy2uQasbUIj4gf
R+qVSB2VXwtaMKgomYU8cL2Bco189ngtneNYbBq2Wmviz7nmbcH6Cjrv0LTy
3F6nf+J2x2wIaf+WMZ+e5PEKl8g8NuLbkTqwBouYPCIxKFIf7SKZ5WJrCy60
1hqtJ3luDpPvjvJcXfnoXdwfXhWpm9sCN/8FhP9kxCTj6Kdag0ZilIVNjnWy
S+wmh4VJOphcYrOVCJc0Jpf4aS7ubjLpbg/VKW/EDf4A92QunqGlyN1FEUM+
iiGXPJHa+dNqI2aJP2LnNUDsSnLJj9nwrPt7iFvbFs+X+pHLK/L/VwUvZtdG
4tzaSCKfJAf5IGUOGYLHnsBz9YTHmtrFgkypX7KZv5/l7sha6g6r1NiRPLlF
/E0e7aKcvIDssISfXaI8YiWnWBdWVl5ZXMUUHy+xqSLXUV5jx8QuupBMEkAm
kbotE4sDEtcyvZzaTGbxfbP4/jncxkL5bzQHIg696Uuhszmbs/3F2rM13+IR
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
r+d6iuPuQn5+BLc7i3x1pvXbuCG11dpw3f5aH17m0hMeOS8+Gi/NMzpeX2qR
5EL4gEqIXdwEWfvJF9fJIbfII6e/VhY51IU8Qh0R/Scu+cyBSz5Wf47kTR36
SP1q+3jOZf4ZsZXs5Xewy0eZxBC/513k0V383s/UQtKsgogggzwY5IIHnSyI
4nE9JC896kxN9sSjmd7kkvp4Mt8XMR0tePwtuSSgJZ7Na4i40WXxfFI1xE+p
jhfz6iBxZk2ktrDgGc+Z5BynfEzuWFwbGWt8kbGgJjIWkknW1jf8M2ntLEjm
OU/hecr4jr/Z/dzv7S3UhjFL4lTLw2oK8yoajzGLTDGdv2feJ6h/xsVkEv6u
F9VRWwn/pxiZU+0lNpuJ8Ik8b7OdTCujdpNZtriTisomEneysglwJcDJJ87m
bM5mtMcbeuH2iHy4Q90bQUYhh9wblhf3h3NZNCyPXXz8gO95REZRNimAWN4j
PR1bCM/IJ/HjC+LF+AJI+qMQUsgoacInVCYZBVNK2LlEltlbDbkol0xRKZtQ
k0rysyWVS8RmQjZJGlvCYBPRnZ/ewRWpEco+fqwLVRqxw4txn0rhcX/y089m
nEnPnLj3cy6DS+786z1EdMuFsF/yIZSMcqtHXtz8MSdufJcD177PhSs9iuBS
v3K4Mrwqjv1UCQ8n89q6q6DO32fz5QQ42klMLllmYxRhk3x8nse3woFNlle1
20yES5bVApZynFrqCetSL44ZXshaXP+lMheTRxY1RMbiBkhf7E35cKzxNZS6
2M9QiqFGSF7sj+SlLZAyxxWpCz2QtqwZeaURxfvgQHLKDt7H7+aYua4tHk+q
j6s/ueAwx7FA8sfSYhYEFLFgDRllS2Xlkq1VNfbklFmTXuJh91VTNjlqxn+c
Ne0ac8tonMg4F63FGmKyyRl3u06723N1JBZ2uRt5poDWqZUcGMNWYjKJ2GUk
90fqmlzysefYSF14qcN6jmPqSn5+DPd7stQSaajz14gv5py/zpl3TOw7Yqvh
+691LYzIETUQL7wmdpHr3YFrP5FFupJBPidPdFEecdQRU0dtcvDlHPvMziTS
H/6Un+mkXLJfuIRj/J7G/M14qwwmaWDaSqQGaiVuuxaeDsmOUPLGvV7FcI+M
8ID8FMVjifqlAB7O8jbsXYYvZ0ApY+7CxzPr4+ny5ng2sTq5xI1cUsPgkoSF
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
QUnwfmxqXGf5P4Pl6H6WUU86mEzSQv0kV8Vf0pQp7fRlssgF8sR5lpUXGiiT
XLFyCSW+hyMyTjl/H0M2iZiQBe9HpcN7cslbcsmboY4GmwQPSo/7PO6dBjpu
265yZBMXnWflZptErKf+hsdklIet7HG/hZVLEuJWEzvc4G/O0HZHrsqrfS6k
3Vfaeg3/a16zXMmtdZyVtEVuMjZlNuWSRTKPsoyl+SttFevXx2vhOm3CeV7X
ZdqOS81MLuHn02SuM9JnmMywvopqQ1WTS2jT3CtasLyMtu1c6uKEa2SN2/1d
cH9wCTwcRj4ZWcbwozwY9bvR7+gd7ejrMSkQsb0JIjfRHh/vi6gDXbCTv9/C
e7aLrHWK9/kk//MA66Xvp5VFzOLaCHctRzapgC9zKyJq3u+Inl+JbFKF10Jb
vIR2ZBm5ZJn4TP5ULnFvoP6SLc1VElsi/7eBWi/tOTLmfgfa6PYalyfrVjax
5RNbLjHUlTaROtJNfSr722s70LGetP31gInSptKUTNIbOMFtOxtpn+bdLc24
lraqAzZsQsb5cqAh3tBO+Y+zwJN28yGfw8OWuv6MdfnnMu4f6/z+5BJ/8oj3
IJUXbXrYJOHTkuSPkho/IDGIW2mTtvHZbxcmYbozr2qX6Tc5lg1R69MaczJf
rG2PhwPy42GvXHjcOyee9swOn6H5ycwOeMjn7N81Dfy7pEHAwBwIHJYTLwdn
RfDgLHgzxAkfp+bDcz6vK07kEGfm5cIW3GAevkbdoi7lZd4ua8GXVsojsS1t
/CHdTIboYDKFLZN0UP/GB3LLYTL7+tzqT9zK423PL+yeDBFLSumYLXv+0v48
Pc3jdDKPKwzC9c/83/COyiSicG77wOOHUiHNday3tyMdEHOO+WUznxXLAsyU
d6awEeMaNDgpTnKfQ3w/Zd0Y89Xol5PdZq4/c74/2/l1rFqaN07f/CV5dH2F
td9wvrj1b+05+b9nFFsG8TC/9zDbWb6xSgFlDGGQlXmUQWwlfhJhEtnn2zHz
m7/JpW0z4hOROBGjfcaUcIhsW82y5tJM4PXjn1rmxy/xy/8LS9jVLYbPRHwl
noNNf4mklDeZxHtQUkMGozB9RhYRPR9ob8h/sD3esT6/n1wxo6j6CR60M3lE
/CRN1VciXHKJ9vpiQ2WSc9z/TF3acOrCXxajjeUi03NkhoMsT++ynIyamgPh
42mTRzjiHblEfCWvh6Qjn2TEy/7pjD46d8g1t3nMHaxXbmTZvkf8Jm0Sw6d7
atqnhN+45E5TO4NLrjdMgMvkn4+Ls+u44hvz6Hx8wiVrzfZiwyecV8unFZSb
1N1ymH5mfnaVMU9YzlxoiHss00/zvC/xOi9SF5ooj5ziOZ3kdZ6idpMZPMgO
66XdiXyyrpJyyYryGmdypGkyXOzshCvdc+NmX2fcHVgMD4aUwCPyyd3hv8Nn
WB6EDuU5j0uFt0sL4vJQZ7yWfjPXhuNkmzTGmHNbedzt1XT82Z3knzNNEiJ2
cS0ySUV8nlkekbMq4usccsk8csn8yohdQDZZWF3ZZCm5xE24hHywsj7L28Ya
T7KRXLKphfpKNrSOY5PtbZVJrNrTwYZPOqkOdI7TwS4qYRORtP9YJVyyta72
Rd0lc9T05bbuZCKei3sl7Q8k++1rG8cmImkrOtUNAbTB16rquDiPWa/36iWx
C2QPabfpq2ziy338hUeYyngvT5l68buPU/if24vz/0tpLMFW5oEtudSPtp12
ZzvTHbnVb7KDPLqDduZYZnxamgpnayfDrW65cb97TjzskR2PumeDZ7/ceNQt
Oy6RK57yGfszL/v1cETA4DwIHOCElwOdjPgS4ZKwcTlxn/tcNLnkGnWRulKQ
70AeshXzR2wbZY5ovguxrUx2aG3yRztzva253s70k/D6/ZkPt/AcNuTX/vH7
+U4cJAPvLaZ95SV92D092byCji93rDGiZ+VFdDvloE885kcqnJ8/UWFttB3p
LRXC7cHM70E1yShLCwFXmUeWkUNGSQwW35tlBfFhXHojXkzeRalzfJ6WUZlE
2ne+zfOXR7lEWGOx2V9nkQ2TWNtxvvUZzhOXuplcssJcFyaR99Uab7LS9J1Y
+cP4ztxnjS2nmFyx0vSHuOVUybpVBpfkidvHum2FtM1k/z5ORDhkkckiVh5x
4/GvLwW+xI99Fr/EL/+ZJXB9T8Nv8nSwg8EmngMTx7HJIOUTg0vIIT9yyfMB
9ng51AEBg+yxgjyxtIzGl0isvZVJhEcu01ZfbKT+kgtkifMsr87WU5t+6k+m
1BnqnKQs8/aXM9lkcnZ8HJ35G5e8GZwOwQPS4vVgR7zokwa3G6nf5Dq5ZltJ
ZZPdJSS+xQ7enVPgQbNEuGdwSQL1l3D/89VkLLJMOq74hjwmk+TWfjYeudVf
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
Nb5OS2MwSRSZJMr0lRhtOaa+zFRW+eKqbTsGt5jxJrHC4Z9+4rzE8Uv88j90
8ZtVVeNMrFxi9ZvIet+Ehn7kkud9/pVLhEf8DSax+8Yktlzi3zWBwSQvrFzC
stcqvw7kE+GR9sIhFO2OL+3MM5bx3iyrvVim+vCzb6fE8O/+K/y6pzJiYJ91
TW30v5FYvBss9x41NrmkrsbG3mhihzP8Lmgiy8sztWjrKtDuUOvJGB60nyuL
0O4WN30l5TWeRJhkmXAJy8Il5JCF1AJqPvebw9/MIpPMKoJYV2q6C2Knsayc
zX3nl0bkxEJ41Dm10aazilzgVoz2oixtisSostxfxM/TaV+WlbJgV80k2F7D
HtuZ7qyVRBmldlJsquGA040c8JZcEjnYEf4T8qHFbxb0IFvg2ABc6pQDC3Jo
rOty2r1VYpN4XDeuH6ih49EuykXbRVbZTmaReQx3mdpZTG2cB+vEb0eTv3b1
oh1poXJvGcciq1qZMj9v7sm6ZjlcrkabRTt1hTbtKq/nHI9/pqj2fT1Ju3jA
UerHtE9nR2q7jmhnZ2WO4+SSucUQI3M5Sj9x3pO3wzPquCkScyv7bOugsrKJ
tAnt62iMKy928lFLU9JfuK32G5Z+XDKOjsQ2id/kdjuTTZivbpJbAmUssYUW
7YNl9A/PrnMRiNZl0zkKRDLntNGWk1XHVduaHTe6ZsfFhmlxs4Ed7rRKh3vt
M5FLMuJxm1TwJAP71Bd2Tgg/2vkAfg7kvQ/qaG9wyQt+97iixpFI+00YmeRT
wzgu+UJ9baJcIj4Tw0/Cc47lNR3hs5onMSlkys28r5sKqN9Enp30QRNtclYm
kXX3/PqcfXiPYnm8SB77PRVqcomkVh55z/MIKc//HJEUON8I9ycVMXhEjn+U
+fZKXeXGC2SJ89RLiXEZoFwSK2wyimwyMa1yiW07jvRfW5gXL/vwufBd9OT1
+7dSveAzCmyjzPaS1/qK9yCY72dIPW1HCuUz+9ib92Y078uclIhek4fsy3fw
bA3ySX3ApyUibzTCo1XFEDg+PSLHJkP42OT4ODKJoU/kEfn8eQLfmcnkkSkp
DS4x2m+mpMJnrosipqRBBLdZ9Xlaanye/hu+WONNxIcyNy2iF7Me83DvzyuU
45f45X/48vWNL54O+OUbl3jKer+E8OyT8Hsu6WP6SrhucEmvH7ik179yicEk
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
NWcf1JRM09jkNKlrs/KAS5yw5IM6KDZqYRJqTwX16ZPWel1Oa7G8nFsKiKjP
53COcUHUag+OmVUod46B5JWFZfF2eGy86M4+vy+fQfvZ8KgLxxjJn11f89Te
H18Az7c2w6foMfiMefh46w9cW1ANu5sktZ6tF3xvw/z0ZBX218ENUiGyfV5c
GlQGd0dVx63+5fj8VwiXO+bDtY45cLVNFlxtlR6XyCPnm6fHuWbpcaF5Rlxu
nQVrOa5M4fg/NZPmF3/SPgN2V01g2ZS2SJ7Y3Ny3mc0Q2iCT5SfiyCUSV7oy
L8eB6i5oks6GuhxXu5GdpmRRPpmcWeM9pG7OpCTkwrZ5rHyumNbkK7E/9zFc
4ksuWdIJFxokxWquc0d+jjEFOP6J30JB5RTReh67HM8XXLKCWteb7NMS11um
RiTH+HU/6jwI5vB6zGuuXLK0XYwkD63U6RlTjrxRgdxRmhIuEb8fcsX4X9kW
IGvk5f8ldjsX5WbVE8LknHydCRjlAoxOqHVnpTZjMK/xKbLIlXHAUe7Puork
nmQ6nzOXvLIwFUUmWZQU2Jwa5zge/h6b54vHe5AscoL30EnDJee+tpewvcm/
b/P9u9QDvn5YUeN0n3Jcfk69qGK4pIpyyduqMVwi9pO3dibxiGGSL7jEw3BJ
DWWcZ7yv33G8/kQmedYnNW7wvD4oH5O37VJVzXcnPjmX3JVFxEby0dQJ/GBn
EmMzsXiFv/XbtXW+Rmpf+xcmlxTVPMWL+N5ibmOp1LLmPRhYShllpalPKXM4
ojU89rUVlU3sEi6R+HWpBbiXLHKE+7eF7QK+v7mGxncfqa8+Jke4P0ckv29T
ZROZIz7F/ucc+5+L7TVGR+Z1hE+i+8RS/xLLxyS28YNlvzFYfExc8GLjiG/d
jToX5+Jc/g8uL6MOWVwiNUaOUofZNxxiX3G4qfqUSL99pVMs3OrqYjHJg57f
4X438kk3F9ztFg/3usaz6gZb6qQ1hO91dPmrbrCldnFxty2fc9pQrckfreLg
NjlEfPNvNo9l5WGSfAfCI9eoqw01j+Tl+oZN6moup3OemmftDPu6E5K7hH3g
UfbFR9jvRVbQ3KTP54jNvjHHoxpqLxEuWUUtJ5csFj7hc/OyGng/wRXPyCaP
2fc9Zt93rxv7OzLWbfaJVyQPfi3x7UyKe1NK4e3+bvj8zhefP8/G81ODcMar
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
OIdj7CWXDJc4Msm9cQXx8emdb91lOhfn4lz+B5ZLfF4+ZGKDRUeMjjZT3zSx
uVp80kS5xKqh1lhrvYqP/VE+Dx1voDUwpP6FxONEk0ceto+H553j4XF7vm4d
Cw/ZBz1oobovNUfF35TrjJZapOyzbnIdN9iHXeP6rvC57LLUmmffdoH94Dn2
jWera5960uTYFvvFQTuX1I4DbKip+eclf0kQX68hm6xkGyhcQi3hWLjIcMlc
ag6f1WdR8/g5n/K43zcDolrHxcW2iRHVLhUuUGdap8HpllRzcknTlDwHwidp
caR+Uqtm7q4i4nsbG6e65saTNa2AO17Acz88OzwUu0dUgE8hF3QWPqGmpNJ6
slMz6BzL/NxqF9lSLgE2loyHdUXJGflsmEaW8MuiNhGxneysk8nKy/WXreRr
/aQ+riv4+eU59G+pDyd2k3HpbOjFbR+q72r5j2BKY9VkacklPsIOLZRPAnvj
br8yWMP93JpVWWS1iw3b0knsR0Lc6is1ENuS+waQYbobLjHa8Tse/lYM0V3z
cT09eV5bqWaQ2+axXdmDLTnjT57rcbwm48gmo8kkQ0qQRbjeCbwu/nXJIu3J
IoOAC5PIIr7A5YnA3r54u6QO7g7PgdO8V/ZIHDLP21Hxqx0rvrW58XpseqtG
9k7eN0HlNUZkS4N4ONQ7Cy5NLIYXK3hf7ON+h3Ab8/idZVr3bwvP1/7iPD/F
eC8Xi+GSKHLIFeoqueQa2xtc5y3xe6XucLv3JB6HPPGY9+DTqiYex115Q+wi
b4yP6/tqqg8i3r8fq2v7oYa+L4wicTjiIyL+I7e4rWiuO9rE/kgrXCL5Zi9z
u+/q6JyNsMltD837dobvn5I625WUS85X0Xp/IuERidc+8zWXyO/IyGITwyfH
qv3XXGJnk6+5RCR5Xu3aV0uZRLRH3qujbHLEMMlRM49zsrkDk7TRuJwv5nHI
JVe789z3Yp8xrQbZ/9W37Sidi3NxLv9jy+NDG3Go+X/BJU0cJP1JY63vesLU
eT1hXp9ooP5t9nprUqtL8sWLHfda5ySI7pkGt7qlxM2uKXG9cwpc7ZTS8i29
2j4pLrVLgqg2SXGh1Q843yIxzjVPjNNNv8epxolwslECMk98rjsBjtSNiyN1
4pJB4rGPjPUXl+wtJX1lbLWTbOc4uE7sJcIl5JNV1Aq+Xl7DcInYSDzUVjKH
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
NM51ufiLcOxaLXMxhkmWUstzaY54n6zKI5Mzq5/JHz8qp2wqHIdsFetvbBJk
2CQwr9SBTY679bLgXsP0WMVjnsLvrssRwyZ2HlnuoECuOyCd2HRi46znTzhf
2xUXPNLhRKlY2Mz9k7z3G/LFw/sRdYHJ5IZBNYDRwmmDeLz9eK7+wFu/jgjn
ek4XTYOnLYsCI/n/ed15nsgbIWOAw1OBkzOAI97kkvHqi7K4l/qlhI4CgqmN
v2mNQP9OXG9P5RGZ75HXYj9Z9xs+zm2D882yIrKc5jbbQq7aKLHDPLYQckAE
r/tusTnw3thV2twv8lneT1slPqYNuWRqfryZVAKvJxXCay9RAbyW97zzKJv4
uOHtdLLJ9Mx455sG7/1S4INffHw0OUy28X6ekUyZZF1OtrxuW/g6mNph2GRn
PmUR8UPZSZ0vrv6rEbwHB6a2oSF5r+d3atMK4eeD+Zlthkv28rpFldR8r5el
DmAZ1dWyyhWSv/66A5eIpBag2Ft2Vo+HY71z4EqfbLjVNwse9c2AZ31+xOte
yfGuazy8amvDC473T3gMdytpjtlL3LdLJTSv20VuI4rvR1U2XOIRYyv5mkuk
XrfoTE0HLqmpXCISO8m5uiqxkUiNCYkZPkudNrUoDtdTW6rUEBZfEpmv2VZN
53L+mteR+jujPL9lN+dcnItz+Q9a3ty7as3h7GH/spv9z27Jv17b+K2ZfNJW
vkbhkWpfyZFJqsTYScIrKZeEG1tJuJ1Lyuo4E1pK2cSaxzH2ku1f20uKxNhL
7P4lazlOrOHY9WZLbeB8J40RDiN3hLehOlAdtXZbKF/vaM+xsh05hePwZhE/
s5Fa78AkkgdD8mEEch3LqaVGkjdjbTdyTW9+VnxHm+LVmMq43jUvjtRKjO3c
l0COp/NT8bk5neYVWWz8WJcaX1Zf4/sqGs9x98/04hsTG1uKulhsso7P0yI7
l6wrqGxzoGxiRNfJCLRzQ2TTbMgfl+Mgt7HBLcZe4sgkK7KqlnF/lknu+V/j
4FiV9LhcPzduNMqLa3Vz4qJHWmvM3eImtvic+DSYXDKex7lkII91MDCXzDCR
58VLcqr+ZtlPEEr2OOIDnJ7JdhpZZBIQMQHYO5HncgTPizCN5IOVPGj8fNhY
zVcyoZ5VCxABPZVH7JJ5n7DxuNu7MFbZeF25v8Ey/ks89q+aZ8xiEqmRU0Lz
dYSU0HtE7hs7l1xoSraYnAevyCWvJv7KthBeTS6IV1PyU3nwmlzymlzyxicr
lQFvZ6Qmn6QkmyTGh1kuPD4XnCbbzE1JtuT5COJ12+DAJmKn2cH9Csmr+7eL
99stsXdQs11taEkWaU5NlHPNfd8vPkf8zFZqG5nkMI/jcimVsEmUtKXVXmKx
STmj8mr3EDvJu+paz1hizbqQuwdksWFEgbiYUPJ7+FZNhfm102FNsyzY2jYr
IjplxxFyy7kBbrg+2BXRg7Ph8ZBMeDooHV70SYJnXWx43JLMUkfnfi6V1ly0
Z3kuz3BfzkrscTX1eRVdoM7xt37BU1vLdsLf/6k6ais5ZvI4Sy6AfebZRHxM
JCY4mNpWVf1MpBWfk+BqMf4k20ViW22X8Zv2cc7FuTiX/6zl1Y1z2CM8Qi7Z
I889tVWO9cqtelxmDmcv23011LdEfF0teagvv/i97pV6X5WM2OfupnaVV0UY
PhFfV6ldLz4moSV1TseymxSPsZtsdbSbFFYfk8Xss490Zh93n2Pc0RbA/sbA
To6DwXWoBhT/Dm5O8X/b2loxv9jSXrWpreYrt9tK1rRy4BJqObWUWsLxOoBa
xHUsJPcsZLtExmuOtWt7aSzrjAZ4OqQMolq58nhdsDav+nv48Bl8Gse7WZk0
xmYOucGbXDIho+blDMgrxxsfG36NbcmRT4RLAvNJPHIc3KmXETdrpsOzDm6o
myY2CsexYRGZJMjtSy6xM4lopbAJ2Wc13w8rEhenPDLjoqcbrtTOgXtNC+BJ
y4K4VC0rDvB/Z6VmTvfyPDYyxVJyyHzhiyHkDi/g8Azg+Cxt90whj3ipIsgl
+yaT98aY2B1+flEvtbmcn0N+oWbzfI/n9VjYQ7lksd1W0ku5JPRP3Oj8M7aQ
5/byeHcX1PmOnb/wHvhFuURq94k/z45iel8Iw4qdTbhEuPU0n9E/T8qFlxNL
4uWEwnjhJSqEF5N+xkthE28yi3dOMokr3szIire+GY3NJBXez0zE6x0PUb15
jbgPK3g+V+f8kk225tI5HWll3kb8QsLZDuTnG8S3oVNSG/xd1YfEmuvjNd3E
6xZCJjkueU+4zxfIAOeN/cLOJRInLGxyyfDJJfGDrax55+W4B5Jde0n+M16/
kbxnhvOe+Z3Xc1BqckoKG/okU/VPa8Nv/P8octAk3ku+7kkRUD8dVrfOhO2d
s2FXbzccG5QDZ4fmwvUROXF7pCseDs+MJ0N/xIN+SXCzvfq0nq2mOkkdk9h+
/oYPumuc/17zvBHGZ40QyVXCdjvb7VX09Re5SsQPtlqMtjsomP1EMPuJV7cu
fMMezrk4F+fyn7ZEb59n+aOFU7tra50t8SuRuGDJV2LlL6mtOdQiTTyOVVO0
ekwszn72QfurGrHf2ltFuUSYZHcFwyXllEss24mdSQyX2G0mlt/rVz4mFpP8
qr4XMhY/W12NO90diCQzHCQzRFIR5JFtZJONtShPrZVj5TMhq6wTX1h+dn0r
tZWsJ2Osa6cxp2vaah5R4ZJlrf6BS8g4C/jduXztT81pSgmrtNHcG5ITTOrD
TKiFB32L41TDTDyWWFYeeB+OJRMSU8kpMstQjmsz3SQWKYllM9lYOC42/BL7
LyYRm4n4rEiukmu1fsQVjzRAl1wYVygR0to053iwawyXfM0kokCZD5F5Ecmz
XjIJomrnxMUa2XGtthtu1c2FR81+xqt2xfCgQS7clXz2s8kN+4U/vIFDvnw9
nQwyFdglPDLFoSWP7OH7YRN47oZYOdOw6Xfjn9Ifz3xac8wrrfndJIdsgOSn
76XzPH/ZS/jetpG41CQjNqfWOjN7Cun4LjV9JWZF5kjEpyS4sHJJqJ1LSpvc
GyU1N877Ma7kkuJ4Mf5XPJ8kKoTnXgXxYkoBi01eTs2NVz4/kU2y4I13JvJJ
arybkQzvZ8TjNSZrDLVhLsf9pTyfq3LYsCaHssnGnOo7LExytqjyhT95sPV3
NjRKaEM/XsOV4g/Na7Utr8ZGi8J/lvkvnes5W1ztE5a4v+dLamzORcMmUWX0
9aPKWtNPWLUr74/+vHajsn0lbvsP7uNo6k/eU2NEbtr+mV3zz4/gcQwlqwzh
OR2cUllmJP83nud2WnkX+HsmR2CLH7GyYzbsJ6+c6p3Rmp/dV15/n+KfLvbN
nRU1d5qlylqPL8zU45P8JaJQ9xiFOOhfccn1ddO+bQfnXJyLc/mPW06Nq4+w
OppfIMzkGoiw+5PU0rxJ+0wMzl+5S2ppvhI7k1g2E3cTF2znElMvfVeFGFuJ
MEm4sZdYTOIYH2zmcezxOJbfa2H1MRE2WcK+d3/rVMAdjnHH2yiTHBCbSUut
Kby7ucmxJvX7yCjragNra5t89J6qQL4fKH6wZJUV5IuVLZVLVjjkPV/S5ksu
md/ccEkzZZLZZJOZTTj+ch0+3N50/j2b61jUXuXXFJ9GVcWdzgVxuFY6a9/n
iV2e49rgRDzW0j9gX4XkZDAXbC4SBxsKmbxpktM+n84BnaqcDHdqZwY65cKa
ymmQnlzSMAk/w3Fo1X/BJKszaU5XP74O4mcOcF3RNTLgTr2cyiX1yCKN8uJx
0wJ40fJXvK2bE5+9eKxH/IGd5I5w8keEMInM2XgbTVVmiZyhXLJxhPqbrJdc
rWx3TsCTIbURyP3bl0b8PnheZkuNvt5qS7GziUjyx274HadqJsdWXsvdBdRe
ImwicyF7C2vtGIl7CpW6RMU0/79lMymtdjZp9/M+ezUyE15OKoGn4wvj6YRf
8Wwi5VUIz8glz6cql7z0yUEuya5sMiMD3vmmwPuZSXlN4+PF5FhYklvrB4nN
ROZzhE3WuOn8zfliyhqDU6kfSTNeu5Fkh60StyNxWLk1164wyW5+7hT390wx
rd9nvTZ8crak+r6eLxWji7z3H1fWdgKvUweet9947UZwX4bLfSL2EgcukTo4
Fpv8pGwy1k3z0I/j/o4nP03IbZQnRlIrZxz/96ebrmfQj+QW7v8SHttaiXcv
rfOtUg9YmCTM7hNmcrsKj/zFJIZLQqt+ySQ7HLTdI0Yyj2OJfUPkgNLfuntz
Ls7FufyHLZ/ev8WuhnHVXlIrRsIl4sMmuZLsEn8SmVveUz1mHke4JNJuN6lq
5nLsTFJJc5VYTMIxJZz9cDj7w3D2zWGlNL97qKk9Y40/dpUwccPGdrKthDJK
IPvmZ2urA/c55h1uRZEFItnub61MsovaTX7Y2UTz0q+118kxCiSXLKvJsbIG
x6YaWltY6vhJXvoFMvdAxghopjwSwHUuFj6hFkiMTkvlEqmTO6vZl1wyrSHg
TU2pr/XqJpN7fJorq8zm97zq4v1v5XCrVW7sqpwakeSMPWWTkMkS8TgTWHX1
1v+svjNS/1fq+e0pERePG7niQ7PsONE4G4q72FCa46Mvx6+trn9nklX8zio+
J0fyfDVJ54KK38VGD6mRkychztfKgZdN8gDtfwXa/IJnzQrideui+NA4Lz4M
rsXzRQ7Z7gWEkTvCvZVLDswCzi4Gbq2hVgHH5vCcjiaTDCNbjCCXDCeXDLPs
KXd7VMYScskpXif48XrM7EC266tcssiBS1YMsNjkGO+BYD7j786vNhOZzwkv
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
Bmg9tAZMsgJ8sqwJeKIROEMX1i1uAf7ANsuxjxVgkVWdzeLxsss6agyiscg8
a+GSWfjMzOayDvOE7iU1f4lW85f7ckpJDteY5nnpYbdiRMMq4Nk0HzX4LBfV
+MhEG75H218kO5OwvCE/2LmjsIftvv2EauC+NfwEAps0+lgYhfPTLyvxNbik
Mb3oU5Weti5IbzaOJLqwjyjWjZ6sHaFxCMeLBDCPgGP8Occanu3JDVwSuhJM
Mk/ky/6S9RTXpYLWj5Nk/QPu4xAzl+wGj+wCj+xmjSHymk3Pl3SiYOwrML+M
Ew6EHT6o+k8i2IaDa+Pa56KbPT6m+/3AosO/pEfjf6RHUwpSxvSilDajJKVO
L0V3phWjO9OL0e0ZxenWjMKY/0x35uSn1Hk/U9qi/PRgeQF6tLoIPVtXjF7Y
FNXG5LzclBdskpteb5a6wgkTTbQV5+JWSnwmuzg/TDGpiaj363jwOOKSEoPC
63kcMed7ZV8Ji+sRa2yiuOQ0FKUUiXWnMA/n9TUlb95crpfEv/nC4iOZiteT
oHFgkzHQKHx/ozEfC43H+5PwnU4tKowym30likvmF1e+EsUlOpvoXLJYcckc
ridVVWJFDjRW4605TsfAJYeamKXXC9al1Q3Wx+O8R8Ets7PJAbQXTxMuftC2
zTJZJsv015xi1g16L5doy60NaqXUwiDlKzncVMRcwrF07rCLTpxvtKLE361R
dYRXY3l1GdEKtJfLS4qYPZbqKi5aouL7puN5dh329fb6UKLk0bCf4JDzA4VL
TkORAyUXfTiWT3KcSX8zl4T2lZxrWq61PpJnzedXyUnPTLK9reKStmYu2QzG
2GTgknWtxVeyEhyxAjyxDCyypCmYpDE4oyE4oz44w4poRj2Zz2pANBvMMgfb
zMX28/H5hdjvQmYTaD6OM9da2GQatpnZQlv3dGQdrR7fviJiE/fALp2t/zd6
1bcMJXcsSve7FKeUDoXoUOP85AI76pLvj0zCcv1B4i7HF/pM85Ewk7AagGfq
Q+WxrmUeEz37tQJR/2r0qMVP9HIO7scFJ6JoJ3rjupBCsE0gFAImCf5IfCZh
YCFy5tp5nON1HpH3XOnLCVtPl1sX17jkDvt2tuF7shtBZD9Fxh7rTLJzFJHf
fHo4y5pC8kmca3STXHS9/dd0u3dhuju0FD0YV4keTq1FzyeXoxcTCtGTsT/R
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
TJbJMn3wKdF/M/nAtvq2k76b/e2lb5zzu/JYHD2uRJO16ICac55XLeZVxb3q
tUG1+qDKR8IKVuK88Vy7j+tjcPyJE+zDHtiMzTUkh+telZPeo7qImcSZxxF/
jvZ4cRUtniTz9QLpv3k0mzIfzdXGBdNj6AnWP8Gz/FPYzqd4tn+2TMYHP1sl
erpG9IS1VvR4HdZtxP44Vxr2kYT9JYBposcThYMTgrsSebQk2lWHaH0pooU/
EE3NLezSR/X16D6URsp3wn4UtNlcu05bRnueyYwSMJzoLez8Q2fJ53pnJ+z/
Ns0/8vbqRnp7CYxxfqX4SniccOh0LabkzYjy9KxXCXo5rDK9GFSOXk9tQG/X
95BY2KvglYjVMu6GxwT74DP+OP/juN5rO8AwOE6ig/Tl3HIRNkkFd9wDc9wD
v9zH+aQHYg6lQXfxOhlsc8sHwjw5mCjMBufBdXhwb70WYs5jfFZSYLFPtFqA
7mARe3DJsjwmmg+NwTrbL8Elpf4NJimRnUl0X0lEDi5hf4mm8qLj5YRPYvGb
u8B8US47lxyvJr6FLHGt3Vqio/i9HcX3c4Tr8TKj8OcVoxxuLHyizZuadajp
v+ASQ261rLoMiksOdMQx8FtxxPFW/iRcwsrKUa+4ZHcJM5tk+UxKSd8l51ub
ld9E48EmoTjX43WkL8e5nPhJuA/Hn+sHV5VaxVwTcH818ZcwozhVkn4cjU+q
muVeTeShYrd8lS8lUPWjumJ5F9bZ4HPzcKzN1SUGmP/bnjgHj7oG6UxiZeCR
+hJvpuk9XOJi8JUwl0QsG/CBW0TLZJks04ec4n3Xa0yicYnqv/G1Vv4Sjndt
L3ledR7JUmulVtmZhGNJgptJbAnnxuT8JRx3wvmmud1xQPu0A23YZtiHdWjj
lqOtXIR2dUMleVbz1mv2KS5xwrPbxs9MFLWgMpjEBgJvpHNcK5QOO5w+V3R/
HubzJM71AexnxmLJU5IBNnm4HOyyAgwCW/1ktXDJU9j0Z2Cc5xuwvAFz7Pv3
Hdj/XsgBcoJcIGdZ/t2e6AXndAUHpPHYYJzH1dlEUeOIDg8k8u1OtLcF0cZa
RIvBL1O/F3bppGJUIsBQFAJbDw65gX3c2CpK5LjVrcoPAt3cKeNxgqcQncYx
nAZr9XUSvsVz5DcmetqjANGmnpKXPmGHxL2e3yjxJYE4H0euezOKyG4o0fSW
lLmgM9HqXlKfbw9YyxPbBOKzh3EfojYTXd5FdGoLjgceOoHXUduJLvIYHzBM
ahDOG+e7l3PXg3XcZguf7J5EFLmJLg+y0ur3efwNtgs8shKa9RG+T+hUYROd
K6n6bP5NP4nuK9F5JMtXUjY7k7A4d8kxnnPtZfzuTuG3crSi9OH8GZdkY5K6
4jc5orhE85n8Cy7JOR7n3+GSIPwGQrvj/4H5hmLv8JkUN/tMdht8JvaKS9hv
4lRa6glv4fxsPEaa6zng2p1VnAmziVM58SvyemaT47jecFzrSSgUyz64Ny6c
HxZy4hz2Vcxc4l49+7JbDald5VnTXLOK505Y51Jb+UKYS5TPhLnEvZ6SVQ4e
MXBJFo+8h0uc+Xmlw+cfulm0TJbJMn2gKc5jLXmj3fRB++nTVrjEV3GJHmPi
ZxgfnM1P0lr6cIINbXSQ4hSOQXEHiziijdmJtseW88mjfVtdXXKqrQCDrOR8
17Aja/B6d3WJb+WYEg/FJG7VJa8rM0n49NLSd8NM8hB28TE4JAN28j7sZNoc
0T2suwulzhOlzCe6A91eIDnmtTme9W8tVgKz3Oa6N8tEKeCW1JWSu4Tzz99b
J/zxADb/4SYcE7b72TbKfAF2eb2HMt/yOGKdXdwhV7ALXr9yJHq+G+dnh/1x
fAiOmW4rca+J2E8CbH/CFrPioessW8k9cg7ncWCS+Eo2d6AXsEk3Ye9v/2Ki
Z73BJO6cUx/b33EAk+AzV7dI3CuPFeZxw/fcwU/B9HhifW3c7qV8JoqFLYuD
LUvA/UzCfb1t9RWlNPuJ7ncuTnesitDTkU2JAnAPPHGP/DAPwbVHgleO4Vz3
grsccT77pmJ5MthmktT485tPaYt7aLWGXT/Gsz/OcSk0g2vpFAArwF6eLPp+
Joko+Z7+m3cwyakcTKJzSTh+Q2F4LxK/mwuwb2GVJOb1eHWzNCapIVyiMYni
Ep1N/lMuOdTiPVzS5k+4pKOwCftMHHC8FfnBF8WFTXQm0ee6z2SP4hIHxSaO
+P72lZFxOOwnsS8l8VYsnUt47lZR2MQJy84VZdzPUTBJFI57DmxwEffpjJXU
vGF/CfOJY1V5JnDR/Sc1hEt0udYUuam5E6u2iMf/uyomMbIJ5wjIySWuObjE
paFZzo2y6/7F4x+4dbRMlsky/W9PV+znkhfaTe+2Io1DDPGuWYzSSvJp+6oc
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
mag1jtWB89TjHBZiO0cr8Q9dwbXdbCOscobj1evJ/9SxhsSlsxxr/ZFLdDbh
+N59nOcZ+3Opn51NXHL6SnJwiZMuHDf51P4P3FpaJstkmf5/Tq+eZNCR6fW0
vhvPtiIva5GnziXWikVayVxf9reW/CV7mUnqSg3gbWhLtvEc6+yYT9AObWEm
qaOYRPlN1tWQ/pz13DdTS9XU0JmkpvTjsM+YmYT9zVthn84t5XE3GyHODT9D
MYniEu6/0ZhEcYmW05VjOBZJnWDNV2Lwk2T5Shab+3D+wCU5fCXMJdfBInE6
kygu4bmRSzQtFT+JxibQxaXCKBeUzkPnsP7MEmGRs7yOc5XA7l9ZK2zC+V2v
bBT2uMjCe9dsJQd9OJ/jDhFzB4vjS2I4rmSzii/B/ArWX+VcsRzLaiNjhzWp
dVe2yNgdjkO5Bj5JAI/EbAeTrCY6Ah3HMY9vFCYJ5XyxOLfzOymmZ3l6MLQa
kf14ovV9JYZ2RQ+ixZ2IVnbHV9KOloBLAsAQabAll/GdRuO7PAc7GQUbejQ/
+AO/jdttf6RjhbLHuHK/Tjy2Hfuz1L+p8zcT1cpjopqfmKgaVDo3Xv9d8old
rmSIK6ksMa/c38O2uvcPf6NNVT+jJPy2z+N5P4xjKqqI7yQSv9OL7XLTtT7f
0+3RpenpfCv8HFpS8tz69HixFWWsbUtPt/ak19vAXts6Em1tSWTXkGgX5wTG
NTq2AX9hnWMzzJtAVliuhfeqY7ty2L4I0aa89HbdP+m3NZ/Tk2W56NF8E6XP
AaPNMNH1iWCyUSa6OgznNlBq5pwaID4BzgG7icflgAvscC9m4j70+d5EvcAn
/XE/R4EbZoIbVhUx0e5SElfCfTwOut+krMS6MpfoysYllYRL2E/iVkXEbOKj
xt3Yct6SMlIjpze+m4441q841oSy4uPk/Kyn8L+/jrYiCYrB8olGkm+I/Sb8
f97Nda8wd1T9OfsUkzjWk1ganu/D9s5W4kNxzekn+RMuOTy56QduNS2TZbJM
/7+mx7djKXBgAfLE85+HgUuYRzx1LmFGYRbhvK5K3spP4olnwj1oV3aijdmJ
NmM7q6EwyTYrM5ewNtc2M8kaMMdqyI77aOpKXQ2OI3HXfSR4z6G68hGjjdz2
FZ5PV1VXTLI4B5PMFibRuGSe+EkylK/k/kIl8MfdRWZfic4krFsGLkn6F304
zCTXl2X3l1xbLlzCTKJpqUjnEo1N8H70MmETjUmw3Tle5nztK8EBayX3PMeW
xG2SbZhPOL8rjw2+vEEYhf0azCOBU8UPwkyis0iMiivRYkq2GqRiTDjHK9fJ
4bz0F5UuYB8XwCfncZxzSmdwnLNQFPMIzusYeOjwSmGSQyu1ccCc0+QGmCSm
yWeww2PBJL+CRcAkXK94fnuiCY3o7Ya+eJ7+lq5xXC1+D1eqS3/NBc5nBnt3
EnrcvwpF4/vOySXhsLXn8b1HlZc8bCH5Rfshf8gL6+zyYl1R8cEwk2ji/K7Y
f2Q1iX0dh99NXXDNPuzrVlvVf1NdxZXwuFlscwDH2F9axhPv5nzsX5po0Dfi
n5iE13PBBUvx/mq8vxb7XVsvD9k2/YLsW/2NXNvmId/2H1FQZxMF98DvuFde
ujble8pc/jlFj8pDsSMUdwzBtfTDefXE9f2Kc4SOdoN97WqiQ13Fb7Jfjc8J
wX62VRGfiU1xYZMdJSQX7SAwST+oPxilNxilH+bD80ke2rDa0rezt5Rwyb5y
wiZOBi5x1v0mlZQMXKKJa3TjGgPxP91fU5b3VpYxcfOxz1E4j19xT7pCQ3FP
5lWR/z6PtTvHfhRcQ2I7fCc85q6R1LxiX8lu7G8n1ybCsn1dYRKWvRIvO9UX
DsnJJU6N/qh90LPUGx+28bRMlsky/Y9Pd88e1HjEE22JB9psjzYidxZYxMNa
2ETnEk+Wyu/Kca5uzdHWoN3Zxb4SPMPsYKEd2W70lUC23K+j/CXrawmTMJvY
11F1RuvKmEL2k7gon7C9GnPIvuitsBMXN3Me180QOOIxmOTpbDOX6HElnKtE
55KHYI+MReIrYS5JYyk2YSZJg41Nh81Nh82/t0bG2vC4mzuwubeXS37XG2CH
BPBB/FJhEn1Z95XwnGNfmUv0WBNdOptcXSZxJcwlF9lnwsvY/irHmKxRNfs2
iuLBB9fAAme5b2a1cAczCfMI98kk7yXaP4XIZZjEwqZw380WA5fovpItwiZG
MZ9c0pkE8wu25vk5XXjvzGbRaej8Nm3MLx1hJuE6fzjvg9BZrD+9lU7X+lTL
kUpb+guXLO1ItABMMsuaaHxDLLejB31K0HXYtZhaikuqCUccAVs87Vma3gyo
SAd/zDEeuJTEtB6HrsCupsMm3gVzpMKepvIylAY9xH7jVD61LC6pLFxyvLLE
ukZh+UhR8Z9c5nhWrDte493jcMLwfhR+u9uxzwVFwCHgpiVFpZ7eLCWtnl9h
E03HfDJs80TMx2M+HtuNx/ajfpFaMrF9wCBtpS/Dp7Gqp43/ix/Xr2wlOQm1
Mfb472l1uVUuE54fBLNwDSo7nLNNMdFWHitcUmJhhyk2GfyDcEqv76XuH4+J
4fNnP9Ge0tnZhLlE4xOVU419Jjwu2EX14RjZxL2qGhus8pZw3Ov+WpJrmWt8
b+N+V3xuFvY/DOfVi3PV45onYZ9ra0mM2RFc4xVmFCgG13mScwI0krgS5hLu
790J7a5jZpO9VpIrgOPTsnFJw+w8ogn3NHL9qA/dhFomy2SZ/gen6/5byK09
2ol2ikOYM5Rc9eVWst7TwCReKq7EGe3sjnoy1ndXE8wVk+zgdr2+cImRSbbU
kdhXHouzvbaMF/Q25F1yqy1jDB24f7q6+E14DKQdngkv72wMHtlEmZkLlJ9k
ljDJ0zmYz1WxJfPezSWcq4RzltxbKLoPu5qxWuJJrs+EHZ8IGz9LauFwH84d
HhMMXrm3UcbJpG8TZezA/ndhv7vxepfU4LuP9feYD7ZIvOrNjVIzOAGfv75a
MQn7PfR4VxXrynX6OM41cYNwSRw+cx3LsfjcOY6bXS5xJFyv7wrnQ8GxbuO4
O/sS7e6Dc9wl8SQ8fljL9ZqTS2xFWUzCwvpLWwxconwl56FzmzngGTwCBoli
n4kdtE3ymPjhXnpNk1xszCXsN7nmSNe7lydXk9h/WgIWWQMuWYT5XDDJjOZE
05oRDaqkxZRcw/cbW0e45JKKI0lq+hHR7E50lONWC6ucaTnq3kSqPPMcM6IJ
dvUYtg+rIHPOSRJWUcbgGH0lGpdUlT6bKBzvKo59sabKW1LDoFp/HB/MedQi
2bdTT3SRx9BCZ61kzuNoT+OaIqEI6CR0DAqDjsJehjWVOk6xnU2UMhA2vYUa
g6OPw7GWnK/BHbKPx2EmyRL7XnpKnNY2zjPPdXOKKjZRMSej8pvZZEg+WeY+
HkfuJ8N/0bGs9O8wl2jKwSWc55V9Jc5q7qL6cTTpY4IVm2jj82tI36qXylfi
r3Iv8/PDZmy7DPuYhuMMAzsNwDmOwvLCGuIz5fpY53FdcbjO87j2SLQfR5lT
mkiMyR7cr+11JHfRLmy/p770Czs2ECZxzskkikucsN83L5590HbUMlkmy/Q/
M53dMkpjEje0EW7W4hthFnEFd7i0FPGyq5q7s1qqPpzWknuEmWQX2oxdTZWf
pJFI95VkYxI1Jof7cBzqKh+Jyr3krsYVMo9wvw3nZmLfyV6uEYL2Nt6rrfhJ
3s4TP4nGJIpLmEmeGHwlrAydSRaqHGqLZK75TZZS5gsbqYHjDbu5GjZ1EbTS
JMtroPUfazEBZJufaHtxol0ViOyrETk3kNyuvh2IArsSHQQjHBlKdHIMbPkU
2PFZMiYnDlxzHbb7HM4lZpnwSfwaGXOTtEGUuF7G4VxfZ2ASbHMB53hhicS1
ci3hGKxPcxBfyRLY+l29cA37wEF7ZPxwgp1wybuY5Kqtuf+GmSQbl2xRfTfQ
OegsWOT0RuGT89jvSZyfJ5gtYJ5oUz8wCc7r+Gqt7nDG4q7kByYJ+hL2Cd/R
k7E1sQ14aV4bopktiKY2AZc0pdd9y1Acvsu4eopL8B2f51o0sJe0tBM5NitD
A7Gf+ApmJmE+MeZOM+aaP1XeLH1M8LuY5ERV4RJtzmOBa4iOGX0lNXIwSV3D
+GCVf551DL/x4/h9n8TvPBx2NBzzU7CpEbCJkc1xLdAZvD7TUvoxWBfYP9BS
4l9DdSb5D7hkP7jkMLjEHvtYwDnnOd6jpMSb2Cq/Cec4mZBfYk0G4zsYmk+W
e4JN9nBtwibia9xlYBMn1ZezV9USdq8iMSZcY0f3mzCTuOi+k2oyDo7Ffass
D72vVcWl+9SRmBLuh+VY1x01ZWzdYuxvCvY7HIw5uLSJ5laXOllhuP4juF/h
HDeL+xDFfWvWEifs11T8I8wmdtjfNsUpDg2FRXSfiaPSPmx/zm7ah2tILZNl
skz/z9Nvj+7T4ZkNybWdmUnccvBINqH9cG0hyx6tJRfJXu6nQXuxG+3C7mbi
K8likobZY12ZS3gMzkb1LMR5C7xVDgPOSc1xJU4qRo5j+JlJOM/B9kLYvoiJ
bh/5FUyyhTJ/B3c8A5M8h+1/qrjk8WyDr0Tvw1FxJQ/BJA8NTML9OOmLwSSw
u0n8/N+UaBVs42xovprPhKZBE6Gxqj7wMFULZ4Cq0ddH1cXprWrZ9FXr+3Mt
Pmi0mnP+eZd2OP5Ootuw97c2GPwoRjGXrBc/yqWlwiop+MydHTL+5rGLjNEZ
X57IcSDugYfU6GMmSbTLwSWb3+ErUTxymev7QdHQxRzxJGc2CpewDyUC5xK0
UBtLQ/vGYRt81mOqxLG6TSYKB5fccKQHG/uSP+c4yYvv8QsT3exeCFzSG/cR
TDIDvDe5IdGURvSkW0GKxfcah+86hrkEyycKm+jViGr0cn43Le6jw98kr/y5
0n/M55qTScKNXJKDSfT+G91XckIXflM8DodjSo6rvhtNOX0leh61nLnnwSaH
wCWHGql5E6mTw3X6Dipx/YRgHnejxt6w/eU8gjw++KC1mUvYb6JzSZCRS4xM
oriEFYbf16JK0mfkhnO04/G77DcpIbyxHfNpBbKzyUAs9wCb2OE+RDeXONed
pQw+k0qipfjsFLDNAVxvCO7BHu7rqSJMkuU70fOU1DBzCedVYyZx0/mkjlmc
e575RK+PY4/3t9aQHEXTKkgfD98T9yYS98q+Eq9GUivrKO7dcdybY9aSx5/r
V/jgvu5jH6yV+F121jczCoufj5xwjb//9uJDN62WyTJZpv+LKf1qBPn0zkuu
aBNd0D66Wr+bR5yVmElcmou4P4dfcxwJ+5Z3o13Z3VwxSWMDk0B2DYRLmEk4
d8nWuhJzz/4Rrimq5XuEnLHeAe2WA9qqfbUk/wEzydYfsQ62Jj16sPhJXoM/
ns8AU8wULnk+W6QzCce6PpqbPd41w8AlKud85kvY3psLwCTKT7KAn9m5D0L5
TBYoRpmnOGUWNEOxyhTFK+OhcYo/RigGGaD4pI+qhYNrok01pH/nLuz6DfBH
olI8x7auMesa17BZgflKnNsm1YezQnwlyduJfMEHfb6X+StvyVXC+db+wCWb
DVyix5coXVZjcC5B0dBFnUk4tnWj9OcwmxzEfXIHe+wcLnGsvC4SnGI7mGgF
j0cZSnR0GVHYKo1xTsLWsM/EE1xyvlFuouUdcd+aE01tTDSpPu5VPbrf7luK
qS1cEst9IBz/2igX0e4xtL7sV1QQnx/+T3y+lMR/nHoXk5R9P5OE54gp0X0l
Jwy+EuaRU7CRJ2pJrOsfuCSHr+QPXNIoR55XlVMtK/d8E8k/r+VUa6lyqrU2
51QLycklbSR3SfC/4JJAKLSHiQIwHwHemFVUeH5HGdWnUxJ2uqTwyRxw/MB8
wibD1PzX78EwuC8XW0j9PmYTHtO2j+NKVL2+eTzOp6z4eI7hWneWlRyvnEON
8xdmSc89X1Plea0pXKKpbnY20fK6qtxp/OzB9Tb5f8/jg7n/1hntg3dTye+q
xb5aqdiSehJbwjX6fJsJl4S0Et4LxDX4cFvEPMPPQw1E9swm2NeZLZM+dPNq
mSyTZfoPpzg/G3JuIzzigrbSpZVhnoNHnNEGODdXaib+EvaXsr9jB/f7Yv0e
A5Nsb6yYBG3EVsxtG0hO1y3KB8v5CbwaqFyPnFOpnowZ1H0kzCOa0GbZwEa5
4P0nt8bJuJuXs3IwieKSp/q4YAOXPAKPPOL+mwXKX7IwqxZO5mvOWbZA+m7W
Kg5ZbuCSxQYuYc1RXKL7UKYqLpmguGSMYpORyqfCjNJBKbgfZb4FQ6RyrtbV
4AeOJ1kjfTnXczLJcnnvkQN4oL3U9+O6wx15vz8SDf4FLDBTmCTJTsbqGGvm
MJekOUkOkpR9uMa9eH8HjrONKNbOzCVZTLJJ6uUwjzCfXOCY1qVEnlPAIqOI
9o4k2oP5ER77jP34zZK4kXW9wHLdpfbfAc6P60ixI2qSG7jCL6+MY6EZ4JF5
LYkmW+Fe1cO9qU7JLf5OsXWFS3iM8Gk8o9OGvnRrVGNqgM82zgPb+4uJrvEY
XwOXnHqHnyT8P2SSE9XMuebZXxJVX9XBMca7cqxrTi6xUlxSPzuXHGn4xzyv
oTm4JLTVO7ikzTu4ROV6De7451wS0Ann2ldscL+vwRFlpLaMkU12lJQY18VF
hEc0NslvoiE/m6g72GQtWOQS98Hi/uwoLeOSuIYD+0x8cI8WgU0mch47nNPx
BsImzrh/ztVEzCWcP4jHx7noTKKrrlnMJNqynmder4NjWOaxwNyPy3GvDmqs
MD+zaONwGkhOOY4pscfr3fUlzoT9Jexf8cY99m0hc7cmMlaYY0wcmFXwPbzI
uPuhm1nLZJks078xvX3zmk6s6kXOPC7AWjjEOYec3sUjzc2v7RtLvw3Hkti3
MDPJ9ibCJMwjer4S5hZmkd3c3tSXHAfuKs80P0Oxj8Re+Uic9JyQavzNpq+4
PuDn9PLhdK3ezdvfhEeESQxckjUOx9iHM1d8JcwlemzJQ8Ukr8Akt/G+D5hk
nWIRjidZkYNLFipfCWuugUumKy6ZZOCSsf+Hvf8Aj+LK1v1h2TPjmfGMDz7G
NmAyJphgwAaTczA555xzMEkSIucochRCZHACTM4ZAQqInJMkEEkICZFBSO//
XbV2qUsC7PnuOffjzLmq53mfXV1d3V29q7vWr9Zeey3DJT0Mm9Q2YztHBwCv
1gLhMsdmsmESb9UVI4k3ES4RJpH9YsgS82jPaTcgdYVpE1BOxo8ykR0mAi/X
mlp+81y1/K6Yejmxa4BDwxG/1Qs4IrEpk5VJhE9uk1Oi+doYMk0094taY/EE
zvmov+Qw33u9B3mkG0UeWd4T8O0M7BipzCJzhZdx29RmqlG1gJW9gZ2Sk98X
UfPbYrVwSRraT9rBh10KsB+5T38ySZ+SQKd8uMbfx6UyqiDa0UdkFamjM+Qj
N35VMixt6M38GtN6JG8yJWOSw29hkkQucfCIzSQHTTzJvsKa4zWY/bq3sPGV
OJnEkXNemGSfYZK9pibO3mT553cbCZfs/i9wSXImsbikvotLRFtlHnFzN0xh
f7RP7YYhUj+Yx7Xka2UTHzKF71fKJpP4uCt5pEN6bbtkdENTnh9vYROZ58/+
WZBb8xNabFJA2WScxKrwfY7W1hwkMh9pVWEXm9hcYrGJyTcvsSVrDYv8XDwp
o9gsIvrZwSm/mByvP5bRvGor7Xk4ZdRXssJwyCojWV8h1x35vkbLyimT/Mx+
/7Gi1rhYIeNAwxq868ttypKypCx/sERdOoqNnbJhlWGSH3ldWlXNoaoOVdFx
WuGQVQ4mkRgSGdeVcZulVU08SQWVPLekvF4zVpjriORq/DkZj4h+Mn7cZXYu
6hKmtpdso02Z+Q9ey7tmsvKSJGAKmcQT8c8GIz6Jn8TEljxyzMN5kCy2JBmX
WH4SYZL13wMzaevHm9jWyQ5/ybhkXDLsd7ikXzI26WGYRB6Hjgde/JqURV7j
kcmqC2SSCNr+mGVkpTLKJOwLfG98JUNLag2/p7/wfecm5ZKrhkmwE1jdAZG0
J3dol6Jpa+/zPN2t9T7uN/5PRHfIiqi+RfFwaDk8mt4QL5a0w7MlXRG/jf2x
h320kjyyuBOwoodqQUdgE/v7xAzjRxnLPmsJTDe+kpE19fH2EfrcvpHYmZPn
+a/UJ26IaJBOuaRvMfZTCbxo9aXlJ7nM38Ip8tYVrmPdUOz9PgvKm/GbK+SP
oLwuX8nv1eJ7jUkKJmWSQ8m5xDDJwaIqGcM5To4IEB+IbLe5xFkHJ5mvRHwk
eysaLqmQlElsf4nVVklWG+cNXJIktqSOxpf8K1yyUeoNt9J48+EZdJxmMM/3
Ov73lkrtSsMmCyRvSR43TCdjdM+obNKNbbdMbmhONhnHPj1RXXOmCZsIl8h4
6Qr243qpS8X36M/3OMpjOyS+UGETqd33XVIuWWV8JpIzbaHUryqpca9rSr7u
L7G4xJYzr6vxnYhk3eknEUaRdnlZjSVZ4eATGcMRyfiNxLlZ1x/jM1nG8xB9
5cS7vuymLClLyvKW5dJmH6zgdXClqLoRr5krjFbaLGJ4xNZKu62k/hGZW7NU
/KTf6/9+WXlXXLzEzctYsC2rFrnJI51Yi6uM+mmFR5abXNTCJCuFSSROJZ/6
SYLGSg5Xb2oiWWSgMomTSx4NMnJwSRJfyXAXlzzQMZyEuOnATW7fQCaZY3wk
U/+AS0YYJhn6hhgT51hOH+MnqSOvTa/ziZ+sIDNMNCwy2SWZmyO6aItMEkm+
uL+Yn10YoA2loQZos9BIjqEsEDbXMAnZJcwwiVXLj9vDF7CfyCS/dUQU7VQE
7dI92o/b7MsIckJ4FjeEfkGb/6kbLnzkhotkvguptU7f+cxuiFvQhjzTB1je
hTwifhIyiU97YM0A8gj7LMhbx3t+cyePNCI3NWN/NQRG11at9+RznlYe2ZBG
2bCM7/sjueRsBek79nWfomS4Eoht9AXO005d5PkPkfGbeR1xf1JrIpwbWpBl
tmflccl8X2GQfMY/ku//Ryb5xsUkh97kKynq0l6Zn1xS86gLk1i1+ko64l2T
+0rKGF+Jk0uS1RDeZauqUTIm+Ze5pO7buUTGciTGZFdr/h/5PYbx3HZLr2wi
MaPLbDb5SiVsMpv93Zs80pG/j+5su2dWNhnNvj1dW2v8yL4Wl4jYj7+xf6by
te7CJpJfn/cgvvl13vGPhk2EUVaZ2BKJCRvB1w7iPnOL6D2GxLtuLKsxJcIn
P/8OlyQqWd55ub9ZbjNKWZeWGS5Z4WATYRJLct/E493QPt+7vOymLClLyvKG
5cXjBzg4qbnFJJaqq5aLhEmkhk0Vl1Y6uGRlZeURkfzP5f8u66sqmlwBFTU/
dqLs3NCO/Ec/Oe6FxFcr48fLTP5pGcMRLpGc1OLD9eW1dB6vlWeWVtLcJBhD
FvFIwiQWlzxycMlD5zjO8KQ1+h64uCQhbpoyycYqtIeGR2aa1ttwyUTjP0nO
JcMdbPImn0l/E1Mic258vgMeL+Xn+2lN4VDvZL4S4ZLJSZnk/gKK+w/Lo0zC
PkYtwyRjKwK3F/I7/sjXz1Jfic0lwiShPuyn7WSDjoihvblF+3OP/XyffRpJ
O3GHNuMm3/MGFf6tG8Job0LZnqYdO8N75xezyBlb2Y/LyCTLu2k7ry2wqqfm
tT86RbkkgMfs15H91VTZZGJ9Mkkt9kVlYClfs2GgFVsbNrSqxSUryUAHCrhZ
PIL+xYAfvkNk7VS4wPN8Qnw57XKTZUZiIe/lO3D/VbSXlw2TWLVt8jn0O0xy
2MEkh97CJIm+kqJJJTElu/jcqUqaM32XsIo9hmP7Ssok9ZXYXLLHwSVOX4kl
u47wv8IlNV31+l7jkrq/wyX1NJ/Jev7mpkre1ywaQ+LJ/vytwnsWVzjZZAn5
Yj7bfllcbNKDbNIiHdmEfXqGn7+Z398nt/pLlosMm8zM64YBMleb+wRWcbHJ
KptLiut9hYzjSA3hgXy/DnwfD+43judhXnHNKy/z7jaU1Xj3X0q/hUnKvCHn
fLI8r+InsXwj5QyjlNOaoJafxHCJ3DtZ4vm4vMXvHV+FU5aUJWWxl4iAzVjT
Mh2W855MlMgk5JHlVVVOJrFkeGSFkc0lq4xWmvHblYZNEnMIVDCtPRZs8jNK
jL1ce1aaGHsZu5H7qJVGK0qon2Tu5zo/4Ma+piaH63DEP/FyMIk9dmNiSx4N
ccnOWWJphCp2hHLJw9FIiKdtvTVM/STzaSunu6m/xOYS21/i5JLkMSZvG8sR
v0knqoWMSdQkCJIf7krNX/LGtUkaUyIsctXhL7HGbiZpXljJzXaXjOGZEeA1
HTw3oN1BEzmmqkCk1AleyfeaSR6Zrf6Sa6a2MNkkATvIWl3wkDbmbi5lkkj2
aRRtwV1yyW3DJTcLKZdc4/pp7nuW9iludgNgD/tlaSfySGcXkyzmevAkq9Yw
jpCtTs4AdnC/6U2Mr4SvG1+HXMLv616W27ltM8/J/rF4+nNPrPoH7S6ZZy9t
4aO22QGvMkDXAoio9gFO8zguyPykQzNwok9Vi0nmkEXPSnxrwT9mkkNv8JOI
j0Tyy5+W/LHFVafZB6fZnqJO8Hd2jAqR+sHiE3HMv9lP7eG+YTVlDpH6Sk5W
0Pxou0sljSvZa/tKKjqYhPLnf+Yw/zsH2O6rrLk4rDp91XR+axIuectcnLdx
iXOOcBIuoTaKz6Sd3jOMJ2eMyaFjOsIm6yu9b425zLDZJLeyicSdeAibZFQu
6ZXVDS35mhHs61NSy5h9MT+PcomwzfJvNb/rLD7fj689zOMJ4nVjQX6tUSXx
6eIvWWli1u0Yk7F8bXe+pjf360sN5vuMLWzyFZXSuPf17O+15VxjN05fyWs8
4sjv6syptsKwyRIzhrOkgkqYZJnhEomBe/Xi2bu+HKcsKcv/80vQvD7qEzFM
YvtHljmYJFEOJllROakSfSZ2PJmTSSq48gZY14k3MImsLy9t4uxLKYOsMDxi
tbyOzfzYDb/yOhp7rSft7GzExwmHeCXxkyQ8dTLJ73DJI6OHw9mOIJOQASKE
SSoAPoZH5jm4ZJqDSya5vT4nx+kzsecLDzJjOSKZEyxzgw91QELcz8BNiW+1
mcToyiTH2M0EzbMmzz9axv1nAX1TA+wPa06x+FyayrHVIlvx+djlSZlEJH6T
a2QfbAW2dMMj2qEo2pKYssokkezTe4ZLxF8SUcQNobQJV2lfztBOned9ddyU
6sBe9tGSjiphE592gG97fhep0TMNCOCxBkzUsZyfpd5NQ3Ic2WRiPfYPj29U
NbJZGeWTtf25Tx/AfzQOVvg7InnOj9AWXa72N2BoRSS0z4Wr/L2c4L39U++W
5JyxCG6XD/0/cMPB7GSBbzR3ayKX2ByS36ECyWT8JEdpf7dT07PR7mbXujGL
c2lu4B/JO6v52nXcd/O3yiWHDI8cLK7jN+InESaJqqt5w+bzNdv42wysaNhE
8qmV09yt+yq6+GSfGb+R+G2JO93M7du4fcf3yiWSL2w/z+nBWmQWar/UGKb2
kkP21NL8ajsln5rMEf4/4ZJGfMzfyrZW/A/x+00iZ4zJqTlLBgqbVP6TxSZW
rb/cLjbxy6O58ztz/55klN5cb8XfxBBuP8HP3CG1q3Krv0S0TOrj8Dc0n/3o
zu0HZUyH1w3fbzQ+XepVrTRz+1eaucKSt2R8IeWSgTw2D6ofz1k/tl7CKPwt
zpY5eDJ3mH23jv27xlwz3ugneVPe+WS5XiWmZGkFF5skSvhxaN13fEVOWVKW
/3eXqMsh2NirIJZVVwaxOMSxvszBJpI7Uu4lJFZkud1WVllcUsnlL1lhq4KD
SWwuKedoHXUsJJZemGSFYRJhEal5vpjXfr9Cep2cznvrbR0z4FUCGQJT8Uri
W4VJng9KHLdJnIPzyKkhrvEbiS2xZfGJ5DMZZsWm4Dr3XV9emWQuteANXGKP
5fwrXDLUwSaSO03ymJwZCDz/kexA1rgmNXQmOphkootLhEmkDSMrPV/FY5um
MSnsG2s+sfhImr8HzKfdf7hc5+VIXnonk1ybpb6ShC3Art54Qvt7n3b8Ac/F
/dLGV0KbGsX2bnHDJLQBV9nv52mnLwiTjC4L7CbnLRUm6aBc4tuWfdIa2Dcc
OCVMQjYJ5LGHTAUO8zv58LmpjdhP9dk/EldSAxhWGRhciX1ANlnSGfi1LznJ
Cw9+KITHNT7AafE9SGzroLJ40fpLi0ludfmGDDMET/nbuzWwFHZXSoWgTFrv
199wyaHkPPImJnHMuwmU3PL8nK5p3FDzL7z/T0U7S7VN7Yb2n7qh02du6Mbn
2nF9Md/7dFn1lQiTHCyp2iUsV0dzxzf/nPbzS62NGyJ+kTIuJknkkkoqqfEi
dV28eA4m8Ximsq9n8L3n8b19S+t9vMQ/SJ6N1dz/N+6/gf+/TfxPbqlhfCbk
kl1SA4daX1N5ZJvNJcnGcJJzyYbGfD255FfyzXjyxTQZ08mudftG8LexSf6z
7J85uZQ15D+3OK9qGPfrQjbpRjbpJfVsMpBXyCanyEI7eOxz8xg2KaRssuY7
ZRMPvtZf/CY8fp+CmndeYl+FSVYY/WzYZAL/6z/wfHlJ7Zxv1G8i6+7UAK4P
4vuOL6q5jSRe/lfxobB/15RP6jdJXp/PKSvXa8WkshnFUiXVzcCt7/rynLKk
LP/PLSdWjMQSXtcSmcSwx1KHEtmkimGRZFyyrLLO/V/hkDxe7vzfV3DkfXbE
x680+QZES2UesdQLLaz3VSLhEWGT1ZXVj/ub+NvnlyI/TKImIP6Ju/KIg0ni
E+cFeymP2DnUHjl5ZIjJ+Wpq9pFJ4iFzbskL60oDC910/MbXcMl8wyiz/yDG
xM6vNsKhYYZJxE8y7s9ABG32EzLE1TFaw0+4RPwlwiNXjS5P1NrC0l731rEe
eV78LOXMuE0zYRJqUWPgGZnl/iKtlxM2SyU8YtfxEybZ3w/PaGNjaA9jeU6i
2Z/3SiubPOA1/i77+Qb7P5TX/FC2F2ljzko8yXD2xy5hEvLIonZUe2WSGc2A
beyv02SSwPGqQ/xOV3yBA6PJbLzfnNqQ3FaHvFaTfVGFjEYmGVwR6PEd+7IF
sHWwxS8Pm6TDvbqpcLv2P3BKmKv3N4ip9Wec4+8lYVFPPO30Fe7xez/tXQAX
q/8FuzMpk/j/K0xS0O21ucAHxS9TSuMiGpFze5BHepBFeqUxSqttJ/LGgAxa
Pzi4ZFIu2Vlcx25eNuXvlr/Tpp9qXeuLddRnsr9iUl/JXuMr2f+95pefTZs9
gsc6me0kvn4i7fQkvn5yMdWUYloLahYZZ47UZGBf+EgsOf8Ly6TWJdvtZIyL
XckaNR3+kj/gEotNGvL422h+w9Hsy+m5dS6NzBGem1e5Yh7P/7zcOkbjk0dz
kkiM+VhyzADySR9ySU+qWTr1iZyQGsY8znncb9k3qqXfaj0c+S8PyqdsEkwe
WiDPF3Yxia2fTE61SeyTvgXUTzLEFvcfWlhbTxGPcQj7bFxRzQct839/kdrD
FZRVfnT6ZZNzSTIesdtlZk6OMIn4TJbX/JOVJyFlSVlSlv/7y+3je7C+59dY
wmvEUt7DLCWXLK3mYpIlTjaporKZRPhErovLDJMsM/6S5Q4eWe74v1tM4uAS
mcsnNT+FQRby+uLzjea7XlJU73fWyz0hr5sH2ryP4B4f4dSAT3Giy3s4554a
z8+3tfKSJGAkXj3xxCvyyKtkTBKfmKskec4Sp9SHkvBwMOJfjiCT0I5e6QWs
KaQsIlrkpnzi5JK3jeUkjzGx86uNNGM3kofeJwfZQeb1LiAzjNI6w6JrZJOr
Y029YfGPTNA6w+I7iZiKhFe/AOdGqa9F4lsbGx6R/LArmyuTRPnxvaZrzb8w
I6umH9v4jYC/O57zOh5L2/CQ5+pBOeWS+4ZLxF8SQYXTNoSX0HjSc+nd8Niz
MLCDfbWELOLXhiKPLKSmkYXW9QPOyNwbYRIe+xF+h4vzkHBwOF6O+Z79Re6Y
XI/9Uov9UFV9JUOk5g05p3cRHdfZ6Mn+bYOYRulwt/aHiGn8GS4If7TIiEj+
JqOGVMVL95KI4m/uUevMuC7jHV9qrKv4PCRmxN9wib/Ra0xi50v7NmmMayAV
TDvaj9+zfSplkd5kkd5s+1D9aG/7f+GGDuSVhfy8M+V17o0wyf5Sqm38DUeQ
Q26QBzwk7wdt/E7272mZ61tefSa2r8Sag8PndldWn4mM30wopEwyrajWfppR
QvMbzzY1KqU+lI/kGuS5ms/38ano0hy+z1y+511PMkF72vMqOp7zxpjXN3DJ
FvLURrKtd171m8xiO+srMorU9COjzCFrzM2tfCJssoBamFf9R775tDbOFG4b
y316ZXHDcG4LEb+JyV0ic/eFPUS/GDYZLGzSQHOcyP9+qfGZLLdVQmPbJbfr
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
r2s+1TQHl8zkuZ1tNNf4TCy/ieESH8mhWEjZxOITwybCJX6GSxLZpIRDDi5Z
XOp1JpF8SIvLaD4SyeG6kOujJV8JNdowifhFbE0wLOLN/aeW1cfTeI1cy/5b
XUt9Jr5lHb6RCq/LySOJOXcrqW4d3/tuDUPKkrK8g8XyjczriRVNP7RYZBGv
ZfN4vZpWUsdlZksOQ94Tbe36dwSPSIvQuTkQ+0tBXuOLAftKAntKIn5LUTz9
rRAecfvDnwuQRwrggWhVQTJJQTJJQWUSp59EmIQ8ctcvOZPkTWSSG8ZPct05
dmMxSXZr7EZ0YXhai0euzednn5E88mOtuFaLP8gkiTzyFrnYwskjv8MgyfeN
9VQekTaGivZ0cAnX73s6uGSg+kvuDVQWsXXXSNbvcP87Aw2XsL3tpWwi84jD
PYw8VcIk19heHkCWkJo8kzRW9iq3XeS2y+4aeyLxJVNpv3uQF26xf174as6T
G+NUNp9ETNQ8sWfII4HCI73IJWSSI/2BAH7uIbY7yBpb25JRqA0N8WpKYTxq
pTldw2gvooVJFlQH1nC/BfWVSWQMR/wks2oDM8glAYO0hnHIcMMkMobD9v5S
xC2pi2sZtbZfqLwn7cEFwyWi4MKaUySA67vIBJH1PgQ8vwO65yKP5EB81y/x
qks2xLX9Aq965kFkr28R3YOsMo/HsLobbpNhtqbVmI+weh8gjL/5q/zNX66h
XHKBukhbe57tPdrjjUWVSYRH+hoesXKj8XGPNG4YmEGZJLC4i0uESfxLupjk
IO2XP+3VEW47yvcdI3Vws5JFyCMjpa6dYZLRhktkfWQezdsaXNX4TMgOB6qo
tku8i+Sd6U97z+19+B4/SXxMczfs5PN7a6n2GC6xfCa1VXulFmBdrT0lds+a
r1/lLb4SwyWSv+Sn+solv7D14/P7yLe3B5JxaiqLvJFLmiYdx7F8JqJmZJmO
vM6UVTaZki+p32R6Pp2/NMvI8psUVM03dSVEwiULDJf4fmfYRLikmFFxjXNd
VNzFJYsMmwiT2ErkEcMklsqqJI+rnzBHKY11HSs1f0prK1wiPhLbT+LNfaeW
17iT2Tx366Tf2K8Lyr2BRZx6E5cYNvGVOfgRl961mUhZUpb/60vcs8e4tN0P
W71KW+MyFofwv+TN/+wsqe/A68/W7n/D0dHpEb4gFx6v/Zb8UYJ2qrTFIvFb
i+L5usKWT+SxaPU3yiSGS5RJ8pNJ8pNJviaTfI37VKKfZInq7mJ77CY3mUR8
JF/hphXjKkwiPpKcuD4rB8Jn5LQUNj27pVDyyaUx6XHGMxWuzsmHmJAWVm40
iSGxcrLGeigr/AGPJCTzlSQkaqBj3dPhb3GyiKfmmH9gWCTacImt+w5JPjWR
/Tg5lzhlcYnNJmxveyqb3BAOcU/KJqFsrwzQ2FiZX3yXtv2Ku3LKVQ8d24nx
Bmbn0vywkZI3ZT4ZhBwQIVxi2ETmEcs4z3nyyNF+ZBHySMAPFJnkcG/lkwM9
ee6p/dy+j9raEVjfEtjehnzSCC/H5sEDGV+YXhZY24UcUg/wrW/YhJpTF5hS
ja/tq7V5jvOYjw1XBUts7wJyzwDcLEAeoV26LvOLhUtkzgltzFHxH1DHvtN1
ybsqc3NeSuxrL3JHl6xI6JKFXJIFr8gmcU3/iZeTa+NGlzy40ziVjiHNrWfN
ddmQhSxS5y+43yat5R8Jo62+Rvt7xeYT6jptyjHakx8+d0NnyTuS3pWr1Smp
GfxrAa1TLH4SqW9jM4l/aWUSW/vEZyK5y+V9M5M/kjHJWKkHI/Vk+P0H5dY4
iBPV1VdysIqLSyTGZDv/p9GdqW5am28Yj2E/+/84tau64ZIaRrVcXCI6UEdr
Bkt8iYzlLDb1IlZIvpIaOnazyvaVcN8fDZP8zPYXYROyhfhUr3m54UxPzTW/
udHvcEljF5dIjMla2daGj9toXv2x5Mtp+V18IuvT86vPxPabzBEuIZPM+1Yl
NSd8CqskN4nIV+beSD76Yionm/gZJrGUjEssOZhkkZHNJlJXeHlZfU5yLFmx
dGXUNzJO4kqETfj8JGqKxPuX13UZ715fT/tVahD5volLzJiNT3ImsX0mkue+
yaeIf/nindqMlCVl+b+13Lt0FAELfsCShh9ZtS+mlDD+EMmR1ONDhIz9Atf9
vsLTDYVph0rxPrkceIGl7SmGFxsL48Xmwni6rhCeklMSmcRwiTCJ5Sf50TDJ
SjLJCmGSfLwNzoeopXnIIrx/XczW6K5fbmUSi0dy4e4iPvaTOTc5rPk3d3xz
4TrXw2fnwA2yStjsr3BlcmacHfwJrkzPhaiDDRD/YoiVi8SKIbF4xPZfvEGP
nHNkBrr4IhmDvJVHkjNJjIfLJ2JzibT3jKIdikomeT4yGaPcFR7xcLCJzSXU
DbJGOHVd5KGMco0METlc857cIlNc7k+b764SP0r0ZGBxIa03HDmOTDKHrx1B
JhmlsSe3ySQRY4FLQ8kH5IUj5I4AMkigMAl55DAf+/fgb6E7eaSbGcvpCuwg
d+xgu51a3xb4rSmwpQVosIBlki+NDLLQ5hK28/h4UmXu003rG5/kMZwYpmwS
InOHplrzfqJp68Ky6zzjsNIqiS85KbEZ1OmiyibiMzlI+/2o2SeAR0GLSdAt
GxK6ZUV8dzJJo/eRMLoyHi1sizCZF9TgP4AZNYFp1a3xG5n3+7hzJtxu/rHl
Iwmrq1xiicdwtZabFd9yuHVmdCCP9E3zOo+4p9ecrV3TaT26k2VdPHLIyMkk
B/l/O8h9ArkeQNs/+ms3DPnS5SMZZ3hENIF2eCyfH8dj3fu9+kwSuaSq5pff
KTVwJK7Yg4/JC555NKb1ZEvNWWL7TCw+qe2ScMkussZBfr/fzNy5ZTU0XnNl
dVeMq+UnMb4Sm0skvuRntr824fMNdH7d3eFknOZkjbr/Opf81swNa/iaTe31
fUeTzSbw+Kfmd3GJLdtvYrEJuWTutypZF83+RnllfmGdc+NbNCmbLCyubOLn
ZBOpr1MqqZIziZNLEh+X0XpcS8vpPGBfanY5HbeZXFbZZKKsi9/EbJO4nXX1
dKxM6jZbc7MNkyyo8AYfyVvYZHWvQu/afKQsKct/2xL34inOb12I1b3Lwru4
xuIvFQ7p/nccHfMFbiwih2wqrL6Q4Aq0RWWBncXxcvN35JDSeLazPl4GeeLF
ySl4dv4nxF37Fa9C1yIufDPibuzFy4ggvLh7Dq9iLuPVg2uIfxSBV7FhfHyV
j0PZhlrrcfcvUdwn+hJeRF7A4/BjeBZ6EE8vbcHT82vw5PyPiA5ajnv7ZyFm
/whEbuuPG792wY3ldRA6uzguTCiMy9NL4uqs/IjcWRNxDz2VR16SS6Jpqx+4
Gz/J27jEM4nexiGJPOJgliRxsPIZFo84ZPPIfa5HeSh3OP0lUTaDOLgk0sEm
NpMkEd/ntrtyyi13wyNGkhc2tJ/mZHs4Rv0nl/vQ5oufxPhKoicBPxbX+jrR
E5DwbBZfO5w8Inndx1rjObgyiIxAHgkifwSSR4LJIkHiK+HjI+SRQ+SRg4ZJ
9pFB9nTmb4Pa0Un9JZvaUx2ADdTyRsAicsiiesolvvVUPlyfSCZZ00ZrG5/m
MR8nB50YoTrL47/ng8d90+NGZs17coPX8zBewyOoyzIXh7bkHHVSuETiOGjH
bsp40aCiQO+cQI8cVHZL4jNJaJMG8VsH4fYPBXGdduGaxOBOqIQnI8pgOxlA
eOQRueROq0+s8RrxkyRySW3lkqv8nzwYVxSTK6VBhz+rv0Ryj7hncORrzURm
4fahWdRPElT6zUwiYzg2l1g+k1oaV9kvs/LIuHwOJqEmFnSDt9S6lRyo/M8G
SQ4SiVul/Kspl4i2C3N1cMMrd9pcHu+g/DpP5rSM53DffTJuQ17YQw7ZW1vb
3UayfR/t5SoyyUIzL3gZP2d5LY0fseJd65i4kvrqK7H8JeSKX5vqWIyM+Yb8
wPM0hNtqO3K+JuOSJEzSWONe1xpt4fH78fNHktG88xs2MbLYhP0ws6Dyh/hO
JuR0w6RcOtYjXCL+EvGdyD7e+TReRV47S8Z6ihi/iYNL/EoaCY+UTqZkXOL3
pm3ltK8llnWxyZsm9TIkvlXiiWeUU5+JN7dPNpKxsd/qaoyJsInkj1lQwaXf
4xKJ7bNENtmZMkcnZfk3X+5cCMGeGf0wr85/wI/Xlg3kkKAx6RAm/pDNhdUX
crSitofqIu5Qe8QdHYRXl/wQH7ED8TEXkfAi5l1/jSTLs7tkoXuDtM5eHG3b
/X7KIzG0xcImwgz22IqTQ5I9TrD1R0xic4nEqcTKZ7ir7ptW+CTWsInwyH0H
qyQyCdfvebiYxPKlmG2Rni4Jh1jydPhNzOObwiPkhwjhEbbhbGNG8nOGK59c
6eNiFfGh3Kf9X1sWmJKK+41HwpNpwA2Z5yM5ZMdozMkZvs/RbqoQckhwT+WT
APLIEbLIYWESssgBqTvYRZlkF3lkJ3lkGzlkC5lkYzsySVsyRyvlEb86wEJR
XcMmUlvvezILr6dXyEPnhUWGKpeIjlExi/HSpyJu0i7d4fX8Fq/FEbxu3+b6
Tdru87Qf5wybSK6QgPyaywwDCgD98wI9v1Qm6Un1yolXtSWHWx88Wt0H4Xzd
zaapcYV24eXQYrjeLTeO09Y87Z4F99p+iuj2aXCO9vjc92Ycp5ZL52kvnntm
w6bOedHCTRnE3c7TmlHzjww0OVp7c30t7ePJcq6YEmGRRB6xxef9JYes5Eir
pT4TGcOxWERUQGNPpCbuCK5Pob39SXinhnLJoepa88bW7mo6xybegxzVngxR
XtnjWDNlkn2GP2ztoXabdlc9rR+zg+1a7rue+26sp5IcHDL/18qb1tClLUZ2
DvoNJo71XD8eW0faXnl9U9WGZkZOX0nD17lE1je1pT3nOR0l+dYKvoFLvtX6
OsIcUr/3QJP3cbL9B7jY9S+42vOvuNbrrzjX6X0EteR3q6cxNytKaW1PGRsS
XpF8bvOLupjEySV+pV9nEL/k28u6mMSWxLTa8jPzbvyMH0Vq+smYuMSbiCQ3
3dp66h+x2KSC5lPweQOXzEvOJEaSP8Z/bkqu+pTl32t5/jgWAasmY2X3HFjT
9W84TA4JJYc83liI7FEeONVM541e8EZC6C9IiDyChIfXgIT4d33ov7/ER1i1
5iweeTZYeUQkLGIzifCJxSjuLp9GrEdSVnnipeM4so+sWzEpTo0wGm40DAkJ
Q8lAQ9QvI618/iPjf5FW3vce3y/K3cEkHg7fifOxg0nuOXgl0iOp7hhfiSUP
5ZEb/bTe3w2uP5D5NYP0cSivU2H9lFeuUffJHturAnMzcl3if6dqPrZIqZHD
Yz8nedXIGiHUcTJICPnjKNsgtgFklABhkm6GScgj+8kj+8gju8kjO8kj28kj
W8kjmyXutY3qx8ZkkZpkE8MlvoZNplZVn8kFfv5FmW9DHjo5VMdwjg7WesW7
OuMe7cdt2qW736u/RHKySZ0dqWEjTCJscrqk5nyXvGpx3cgiQ4qor6RXDsMk
2ZHQ4q9I8CqK+Au+uN06DSJoCyKapEJo7fdxp1MWhLdNj8gWqRDbKT2i2n2K
2M7pcL661qQJr+diksu00xdr8hhauOGUV0F0T6/+EjtHq9Sz8ZI8aEY9M2p+
UskP62SSRDYpqzwiOsx9DnPbRdr8lfzcgbTF42h/B/P1Q8gj02iDfy6udYgl
P/4dHt9Z8sf+6somiVwiPhQe6w6ZNyS5aAaxj8gDu2RfGaepqzGue202qac8
Iuu76xnxGPY1EjvP15AX9nN9b33VHmo3t+3icztlDnJDlfhjRJKHfmtjU59P
nmtpcqsJlwiPNFetT84l4mtpYbiE+63m+29opeM61vhVLmURkTDKNMkPm0v9
IUc7p8G9UTkQMzYnokdnRfSoTMTzjHg4Ki2ejU2HuHGfIm7MJ3g24kPEDPwz
wnu54URrZRXJKedbTN9PfFHTxM9SPCl/2AySfJtfmaQ8kpxJrDk35V1a6JA8
ljmMs3muf+T5+qWOMoeM/8yvkFTzHFySKCeXVNJ52iErxrzrK3LKkrL87vLk
wT2c2bEY++e2wIEx2XDJNxdiN5UATtN+3VxE+7WFNvQc8CzyXR/q/8FyF3j5
s3KHzSJOJrG55EF/wyX9k/LJI4dvhHoVMxSvHo5B/BNvxD2YgOfXe+NlRC/E
RfRE3I0eeHm9O16EdcOL0G54HiptV7xkG3e9B5/vxed7IP5uPytHicUpZBTx
21i89JrINxL78mKI5leT+TnCLpHuyiNRxqcS6e6Q8Z3ccXdwCXWTnxneR/0m
McOUW4RJwvuqwvoqn9yj7d9NPliWj+d8HBKeSl614XzdEK3zd5K8cYyscYLs
cVzWjYLJIIFdVEeoQ5Q/dcAwyZ6OOkd4B5lkW1udj7OpDZmkJXjDCywheyys
7fKXCJfMIJPM4bGcHqj1ek6xD06RRU7xWI4P0vz258daednuyDyeGprLPtrU
2InkNfkqr93nSyubnKYCaLcfNPsnMKI40Cc30Jfqkwv4geqZDQkyR+XiAjz8
sTuu8974ZotPcL3RPyxdrfcXskg6POqcEffbp0FU+88R2yUtLkmNGdqdcNra
K7VVl2m7L9N+XKJNuTM8HyaW/xTd/0PzswqHeGVzcYnkkPegRudUJgksm9RP
4u9kEtqeI/xugZKbgt/Vn5/hxe80klpRRHnlGp+LIn/cYr+cI2MEip+kmpFZ
t7nkUE2Tr4T27lE/Hmt38oGM39RSNhGJz0TGa/YaiY3eY7hjD7/znkaq3dQu
qQvRUFthkZ1khh1stzdUWTxCbTHzgi0/SiOtJSw1vjc1UiVySQszT9g5jtM8
KZesaapsIj4TiWMZa/xHwg/CJTK2Mz6PG4LapyKLfIlQj/QIG5QFEcOy4OaI
rLg14kvcGZUNkbz2RY3Jgvtjs+DBuAx4MjEDXnmnIxt/Bkz6CC9G/gmRA9in
HZXB1rD/fYopo4hmSZ3okq8zicwTXlju7TySnElEC5JJtkncq8w/svL7V1P+
mCN+lQrJlIxJ5r5JZNGzm33f9cU5ZUlZ3ri8iL2B+ydX4dm5+byPXk5bFAi8
evquD+u/vsTHIOHxr0iI6v86j9iyGKSfxSUJD0Sj+Bo/4PkussxB8kIwXj0/
S34I4/vdoCKR8OqJvHnixzyNDENUyCaErxuHC3Oa4phXbhz3zIyTXllx3D0T
jvXLiKN9qQFZcNQ9K472y8Rb/lw4M64AznkXwtmJBXFxRhGEr/oe4T9VwfWf
qyJqTxPc92+BR8fb42VYb8TfJDM8EV/LMMMrY007EgnPh2n+NWEUi1cMn9wZ
oLJiTNje6KN8IvnZbvJ7hzmYRHhFGEXysR1uCKwpYtUBTHg2RWNhrxgeOU7O
OMX2pGESi0vII8GGR4KoAHLIYeESsshBssgBssi+Dlp/eFc7nXsjXLK5FbCx
peqXRuor8XNwyexq5JLv+d48tvBRyiZn+D1PSzwL24ujebyz8bTXh4jKpzlj
H9r1/3jdjjL57C8Jl5RViZ9EYkUsJvHIZ7gkl3JJvzyAzAVa0QHxUWtwi3b5
Zj3J2f4Rbjb/GFdkvk2Dv+Fhr5x42CUjojt8hvsdUuNB588R1uTPVixqqPhL
6hgeIZdcrKN1hZ/QBv7WLhfa/UkZZJCDR6y8aEYDstLmFlHfi80kh3jch2h7
DnHb4YqGSchdwZWVUUJoh/fTRp2kPYzmd7tr5icHyByc6uojOVjD8EgN5RCr
raU1b4RrDvG4d/I1Z1q6IW4Q7beZj3OgrpGM19RVWWM54iOpr2M4NpNYXMLH
uxuqdorIDDvJDDsau9jE8pVIzgA+3tLUxSWbDY9samy4pKnhkmYmxqSxyUXP
x7+1dI3hCJMkqrHOHZY5ysImE/Mrm4zKIXOa30PEmLy4Oigrrnll5E/6c1zt
/wmiRqXH/fHZcJtMcndsNtwblxVR47MiekJWxEzKhgfe2fBwchY88s6KZ1My
8zeZEZiVFpj2MRLGvY8oT/ZbB/UbrZT6XYXVZzOtEJmgBJmjrGOc5g98JG9j
Eh+H5kucbBmNKZE4WKkDICwyu3xSLpljlJxH5tji72cO/yfXDq59V1folCVl
eeuSYDFIwrs+jP++JeEJ7/G3mPGP/i695ivxwqvY6dz3NyS8CCKL3cF/Rz+8
fBRDztuNqz8Ox+nxVRHcOx2O9c+IkL7pEdQzHQK7pcWRTp/iUNuP4d/qI0sH
mv8D+xr+BXsb/In6APubfIh9TT+Ef5tPEdAjI4L7ZsXpkQXIMIVw1a88bqyu
SXZphofHOuBlaC9rfCchYYSLWbiOJ4M1jjbS+EqETWS8R/hEOERiTa47mOQW
bf3R5sDOSsDjsVqb+BqfO0cGOSk8wva0rJNDThhZTEIOCTIKIIccoQ5TBzso
k+xvr0yyp53mU9veGthKFtncgkzCz9vQDFhe1zWGI2wyvzrvUStpXErECM1/
f9bLxSWnJPftPMTNKoLY/Fr772myOjviN4ng9fcCr/2XKuh8nHNSC9izIDC0
MDAgr/pKhEukbfcp0C0Tz+BBPPRphhu0KcIjt1p8bPlJLtV+DzGds+Nmpyx4
4Z4PUW3+iehOn1GpcbfNRwgQnwxt+ZX6LiYRXeAxRbV2wwnPfOiVQWNJBn/p
4pHhdkvb2T+r1pc7UUH9JYfKKY8cquhgEiq4is6vCWR7mJ8Zwc+5UUW3S1zr
/hrKIoepI+yXw7ZqqaTOzSHhER7nofoqGbORGjjR/chzPckRfO2BBkbCPvVU
wiL7GiqX7BUeaWxawyNW20DHbnbZXNJE2cTymdhcwu1byRdbmhkuaahMsrG5
5nNNjC1p6qonvI7b17U0XNLiDVzSTHNGb+yo+d6ETSbl13jYDU1S4ea0org8
piDCxhfAlRFfIaBrGvg3eQ9nJC8+v/OjYR/i/sjPcW9UOrJKBsRMzEwuyYJY
6tGUrHhMPZmaGU+nZcLzaRkQNzOjjnUuSE+O/hQvx/0ZEf15HmT+cg2tkTP5
W/IRGWVWca137vdfYBKbS2S8Zq5p/UxeO5knLGwitf/mVHyLKiXVbL52Nl8b
dmTzf/m6l7KkLCnLmxYyxbPdZBDasHt9VU4uiZkAPFwCPN9LBrkMxD/5/8tR
PblzDXcOrMSFuW0R0j8TTnhkwQn3LAjplwlH+2TE0R/IHb0zURkQ3IvqmRFB
3dOTX76gmf8ch9uSYVp9jP2N/k5b8FfsrvUnS3vrfUCe+YSMkx7HPHLinHcR
hC6qiNsb6+Ph0faIE3/IQ4nvHa28Ej9c41bE93K9j0thJt7kVFsgsCF5ZDRZ
Zihwnkxwmnxxlu3Zbny+q/KJLfGdhJBFjlLBnfhaMkgAdYTyJ4scpA5Qe9qq
drUBdpBJtrfS+cCbmqtWNyaLkEkW1yKXUAtrkEnKq1/lJo/5PFnqHHXWsIn4
Te5MB1bVxDNe85/TDj+ra+rs1HDV2RGficzvFSa5WFZz0L+Q+NbRJcgkeQCy
RSKb/MDt1vjNXP5WfsItvuYmGfF2y4/JJv+08r8/6fM1nvfNj+MyL4fv8aBT
GkR15P12p0/woMsnCOJnhEhO+kbKJRab2JK6yLSD3hU+Qp9PX+eREdTIHDrn
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
71R3hCysg00laScbaK1W8Zfc65GNS7ppLViZd/jBEGWHG3b/OsZV4kgMJsnk
kY4mi3TRHGBhEsn/9ec6wgdzvbTfUk/DkIP2frS//pR3739mEo+e5nIfk0f6
qMQv4sVt8x1uY+S/eg40Y16lDhr54UInnQfnAo/ZBR7D8zwGF6iLthpzdIXH
9JrMg0z2u8P+Yh0b7C/Ne+8vbbC1CG3d12SComSDEjbYW4zswP4gXz/8LTmj
IjmjkupYda5X4nnE5zPoPdzpo7EsV7mtl6hz1Ik+6isxcoF5bHab2uXwVwYR
7e7zz9opPhayyTa+fxy/8/J02nPPvog93x4xZ79HnFM7xF9ohwSntkg83wpJ
Z+2RcsYWr081xptTTZF6thXeXP4OqddaIfVGa6Rda6lMcrYBLCIuZ1xtBsv1
5hTZ5CqZ91Jj5ZKL1AVhFPLJhUw+qaU6S7ZwrJHFKKcz+URUUXWivMkoJZVT
jpJRjpNfztTW9cv3ONXTzx7i67sLa12Uffl4f5AXr1fzuE5SvpvP3+m3GjaY
Xk/jSmT8RmJM1ko9NvGd8Jhuo9bz919CvpzH9ywUjpE5rA8tfsdXQmuzNmv7
O7V7W1viwW57hG5sjNANDXGPfHJvbX2ErG6AkFX1ELyCMvikNoLIJkFkk8B5
NRAwtzoC5lSD/6xqBpv4kU18p1aC78Ry8BlTAj6jv4H3z+SS4cXg+WNRIsJn
vKfOS7uVn3zyocEnRk0MicEkj7gMLIybfQvRbuXFMbLIoQq8B2Z/jnbqDO2S
Z7+CsNx1QAYmggZUdU98JeQQ/wHKJSKZ09i7v7KJ1JSV+m0io3Ybe+c+WhvF
qNlm1pGVGveX+PoWW/JBBXJFVeUSYRRhk4m8Hs8owaN1Gck3hyOsMllBYjVo
P32lTgi38c0MyX0gNy2n3VhOLllqqzViFymXPB/2MTz5Xr/2vJb/kMUnwiUP
JY52Be3HNnvE7WyFPdzfg/XJG02VQzLZJLOmSaakBqxrq3/OBXbNZJL22Xik
0195JFOSX+PVU7kkjAoSn4apgH7KJAEmn3g6ZHGJyHgsHELm8OZn/cghfiP5
/FCNd73eUbnjLPfbsSH3icdtSUEbrCvL37RpHpzlcxfIX1clFrqR1m2RfKW7
fL87bZZHK631InMD+bXVmOkjPC/2lVEGOcrlY9TxiqrT5ILT/I4zVVSOfHzG
rO0vedvPhuVH1LB/IGLgB3g4KA/CBuVGMI+9D3V33Be4NrssnCYXwUnux17u
+yYerw08flvY73T493wiYzn7ySabeUx+4ffeWVzVOC/jL7VH/EUyyeUfkHS1
PZKviX5AyrXv8eYqOeSSvRlL0ozLZJLr3yHtZhuk3WqDdDKK+EkyyAcZTg2R
IYxALsm41RwZN8gnV/j4kskOF3mOXayvuiB+D3LF+TqU9OSTc+SSs5Qjz+kz
3LbTPKdPV1KdymQU8aOUUkY5LJxSRsd/TvMzTlzvFZ7PVxvruoVnDhQnx39B
XiGn7M6D6MU8l8eob2QGz90JZJQZ/G0XNFM/yUb+hts76+vCJ2t5ji4id8+T
8R32TsuGvLuLoLVZm7X9rdrTW1vw+HArhG1ugrBNFPkkjHwSupZaUx/3hE9W
1kXI8joIXloXwYtrG2wSNJ98QjYJJJsEzKZmVoX/5G/h90tJ+I37Br7CJqOK
KZsMKwyv/h/Bs/8ntGEFaMvIJt1yGP4Tt2FF4DLka6NO7Kk6amtO8Zp2gTbo
RiuNjb3Ba9jJKjLv2z/wJmgAMlKkvnx/9ZkIkwQM0N6vv3KJyLMfeBNP9dOa
bQaX9NEaKVK3TerbZ9aSvdJH849X8Rq+jNfs5cIlVZRL5vEaPCoX8HApLBmH
8Zh2/yGvo57NNf7Uk9fe50Ny8trcGVhJe7HKXucOXJaNTfj4UW+dR8+f++Mn
8wO31zEdt5Za3wyLaCMWUic74XzPHNhRjUzWmExA2x7RR3OGhUsMNumhnCKx
sMIjt9v8GybpmDVmY/DIW0wi8azi85AcYPGVREjODBkjsP9bbGL2Xr2VR8T/
4CWxKEP4nhEaMyIxrlf5nWd5TE7UJldWUh/HAeoIl09V17mCjpEn9pAhLrbO
hVvfv4dbrZRFXFsoi0itW/FD+bbVGiwBPEZB3J9QqR3bVfnkYl2uX3wj1Amu
62Rl5ZFTVckictxE/D4nnkdONblNfP6c1LyT+W4HvYdnP+fD42G5DEX9mBfP
hubE8+H58WxWJTzZ/R0izvREyJ7WuLusGi5OLYKjI3IaXLKR27CB27OZx3Rn
ryxGkViTHVze+6MN1vNYTuJ3+WwgH4QOQdK1jlQHJN/ogBTq9a2OeHO7E1Lv
ULc7IPVWW/JIC6Rfaob0i+SUKy3JJN8hXdjkVmukO7eB5UZznq88ly7zXLrS
hFxiZ/AJrvE8u9xYZTBKfdXFesonF8kmF8X3UYs8Qe49X91kFLKGI8/xM5VN
VVIZjMLz/aT4TUw/yuFvtJfxH/GbyHqvczuu2+l3CeeIz+V4MfJKIWBHTjya
o/E+a/hbTeZvNZ6/wWwy52qen1t4Tm7votpKreZvvIC/y1z+n/aOa4SU+Oh3
e0G0Nmuztnfe0l8n4v7OZni42x7hW8klW2wNPrlPNglb3whha+sjdDW1sh7u
rSCfLKuNkCW1ELyIml8DQfMo4ZPpFREwoTQCxpeC/6+l4DdW2KQ4fMkmPkMK
8n66ALwGfUFc+ASe7D3GlIL7qJK42+sTXOG98mnalzO8fl2iLb7V2hzb6ZDD
4BKJib3J3pG25grt1hu/vsh4PZb3pH2VTwJMJjHEZe9+yiQy9uMmtWR7K5M4
S902qY/C/novrSd7qYfOW3y4LTmC1+gVUkuNWsxr9BKyybjcvO5K/o0b4uYW
x+N66qfwsKWNtKM957UWG1sBm78nl9BOrLZXPhG/yVJevzd+h4SJxeFur/Px
CZf4d9A5ZjNjTcQv8Hrq18D8srQZXeD9e2lsLEOb21DjWSN6K5dI3rDBJyaX
iC9FcrHFX+KaySSZPJLpI/lXTELb6dlDY0Y8e6rPROJKHg1TPgmkjQ0imwQN
5DIVwOUAPu8rjCJzu5BF/IdpjZJL3L4TvD8+QPbYXYq2uiSZoawNjpMvz1RV
RjhfXWvFXSavXJVlMuZFqfPSPpcR/+LeXDlP8qflmPi30TkPg7kv93isQrkf
9zsplzzmdj8Snmqp58OR8qaPhN91ht911vy+izV0fqKLtajaKtmWq+RIf1kP
WSpqRA48GSnKbSxHDZQavBSZ9MWproi9/SNiLvVD1ImOuMf/h/uKqrg0vTCO
jsyJzXLPz+3c2TOLTzLZZHUXtcdhB3gOPPwRKbc64fXtznhzpzNSXbpQnZEm
utsRaW7U3Q58/IPBIOkyjnOlhfY3W8PiLGqputWCjGKvPEIuyLjJ5eu2fEwu
udZE/RmXG5gSHwd1uY7qkskoF2sooziRT87zPD8n4nl+VuKbMhlF/CTkk1Pk
k5NllVGOkk8OF1dGkcfiaxFfzJWG/D/Z6feLL0U+f56fOVMUlq15EDJd43dk
nGcsf5cpPFfWfJfFJtt5PsqxXMHffb7Uru/+BSL9b7/LS6K1WZu1/Q3aI8ff
EXW0NcK3N0X4NjvyCbW5McLJJvfXNyCbUKvrIWxVXYSRTULJJvfIJiGLqYXk
k5mVEDS5LIImlUXgb2UMNgn4pST8x5WE389F4Cc13AZ/Dp+RReE9qSK8xpeD
Z//P4UZb7VxdbYfEFNymjXPtKHXPc8ClU06dp7Z9Vr6OSGzR9Q55kB4+GEgc
TSbpq/LrBxpN0HiSS3obY/x/5RIH5RKR1G4zuKSH+kvEd7KT19VlvB6vrKb+
kiW8Rk/7CphXBhlwQprrMDyjbX0kdr0pbbbUL6NtTZnF6/f+buSRZsokIvGZ
yFjO6pZcbgov2tabzWinOpnz3JhcIhK/icxP++Inmd+volGTJWp9Q2wjpx0h
l7i00HGc8F4mm/SSuYhVEv/qas53Y4yHdfh/YZLuZl5NT+URz+6muulYzgOy
xv3B6jMJpo0OGqJsEkQmCSeLPPxZ2eQyv/Mo7e4eyZEtwZ48cph8cEL8FlWV
EbLzwRXywVX+xtfr2OAGl51FfOzaWmrL5oU3GcSPXBLQxqy5z20K5XEJo8L5
+CH3I6KbHnthkifc1he0dQ+lFoqd+tJOkoucTD/J+Rp6Tl0W8Tuv1FVdq6us
Is89+DEfXv76EZ6SSwz9lMvQsxE6B9GzcfnwbF1dPDvXDS9vDEDc1T5Iutkf
iTf7IeZqT4Tub4rzvxcy5syR+h3beyif7JQ4FR7HlfwNZpJdIx3bAE9GKI+4
dUOaezeku3VFuruoE5dFHbmsSnPrgPQ7bZF+qxXSb1A3KefWhiy3qTvSt0TG
7RYGl2Tcom7aqg/jmqmr4s/gOXijNXCT33/rO/bk7ltt9blrEqdirz6WTD4x
VEVlMAr/C2fJGGfZn+E5frqc6mRpcrr4UIqpZOxHfCzifxE/jfhRMn0pl8gt
V2VdJZG4KT/u/KL5OZP5u0zkb7CCv/+2bsom2/lbbuTvvIzn1lye88575r7j
q6K1WZu1vcsWG3zD4BLxmTzYaYcH26ltTQw2ebCRfEI2CV9XH/fX1MN9g03q
IGx5HYQuJZ/MqYKQqeURMqU8gn8vh2CySdCE0ggcXxIBY4sj4MdC8B9dHH4z
qsJ3ahX4Dilo5NZ60D640k7cbqoxmu5dctB25oQbe+ES1y65NJ+4g8rwm/Ca
dqtTDpypJXVEPwYeDwNeDCeL9DbZhAzi01sfC5u4m7prcsltGcPppTXur/VQ
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
wN8wg+dABhnB0sX0mfRVH9rJ0jxO4j9ZVJxM8jEw40tg+jfqH5n+tfLJb+SW
2cVh+SkXEvmZjCXlNSZZGGR7PWAnmWRHA+15Thq9vH6oGVLnFcfroRq3Yhmm
8wi+Gp9H/WF7G/Hz5JvNlck55I21lVWrvwVWlKbIJWtKZzGJ+Ek2Z2MS4Ztz
w97139farM3arO0/rqW/8sGbK23wmmzyxolccq4FXjtSJpuknCCbHLNF8pEm
SDpEHWyExP3U7vpIOCixJy2MueNlvpM4Xv/jJH+TdjPGwRTt0gPyhP/3yiYB
bZVNPJtqfEXUpKLKJaM/x4NMNvnpC4QOzIl7tGVhIz6Hx8DPjNrjUhdEuMS3
Tx4jxiSTTdx75MbdnnmNefLcaDfv/qBz8co8uMG/FAZCOwA3WymbXGlh1FhL
3VEM8XNoE5070r7wubPNwRt9HctxNGutCZcca6Z16j0GArfa4elwzYsxuMSU
sEIkGSWcnBA4ROusGlwyWJnEn4+D+ZonOcWli9ZfC+6XzV8iywM1lydA4m8X
0H5OJId11/xfybtxkXxjvi/8Z+WSwBE2uN5J57vZW85kEvLCUep4NZNJquh8
d1IrzbGaMoiwyRrywLpSOh6zzqzheoLHN7yVySTNszEJGfI5f7NoqSPfTv0f
18gdG8qSPyr/P+ydB5gU1da1S5QsgpJERFGRnMFITorZa44gAoKA5JxzUkGR
nHPOOeeccxrSwETSwOTY61+79qnpBv2+e+/3X23h1nqe9VR3dfVMdZg5b+29
zz5eHrFjNLK2Hj2NnHJF+sB8o7ER1NV6E/v2F3o/ReI9L/J1yLyZHzn+D+W4
3z+/8kgv6d1KLujNbY8nyCm5+NiziOb3JqYin9uWrDK7Cj8fMuM0cudUfj7T
KxpXUD6ZVVnjXVNfRnLP3PZcYZmDLGvzyHp9mMvHpT/wlBeVMYQ3xgqjkDlG
l9C1pn/jeY0rpHESYZKJhkkmleLP5XN2DfL3n68rV65c3XdKCtuLxC21kbCB
TLKuFhJWv4aEVTWQsLI64pfTS6shbnEVxC2sjNj5NLkkZnYFxMx4BdELayqb
8No+imNNZH3DJnWUTYRVQnmtHEAuCeCYduYdwyYcX45yPLrU6EGEdXnaGzMx
bHKBXCI9ys7xuefbPoUdHMs3vyK1G5lw8ptMOF43A44aNrH71Mu6w5+lw76P
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
SzaRdw5U1BiJxEoC+fxEydkYJpEcjsRN5L4dJ/nUxEccBqnrwyS+694IlwiH
dKa7PKpcwu+Ivfbe4ALKJs72R+lLUpiPZ8ANWeOQ53xd5gvbfUeqaB2s5HAc
HpE1a8aXUWb59TnN43xluOR7n5qSpuY8fHmktY8ljvIzz2/uq38cJ7FdSZnE
seRvVlRRO7WvoXv8/AfsypUrV/eREiOAXbwu3U4u2UYe2SpMQh7ZQK+vql5T
hf+HK8GzyMslUvOXsrgiYoY8i7hBTyJ5YimkjCuO5KHkkZ/ykk/oQep4h0sk
ZtLfyyaRwiZ9fGMmj+NGj7y41o1c0jEXwg2b2DETcklQy0dxuUVWnZsj6/o1
IZsIl9wdM6mvMZMjd8VMbC75IoPNJbukzuTtjIiawmv13VLrWpSvUbikuMZM
lnD/Yu5bJLES7pvH+3OeJZdwbJ3G8WwyPYEeSu9/Cylbq9v9zxa/rX1GMMTC
DbLJ1S7kAGGTDhozuSI5HR53ua3GSmQb2NYwSTuNmYTxeRfba5+y2UWUSZwc
jqxFI7yx6hUL66qRSeiNtcgk5Iptb5BJ3rKwl5yysoz6UGVdg+iMrJsoazp/
aSG8YQYcra194qXvyCmZP8yfE/q2l0ESyR/Jn2r+RuImKQ6TfG44pL6xwye+
818amryJ8EgXEyuRHE6PHDRZsP9TyiFO/1bplfZrcZtL0C8nkgc8gxjhGekj
L2vtSS5nZHHDI/SEMurJ5XUd4GY+XNLIsImTu2l+F4+0MW5nHh+cjp9vRc3h
SJ2Jb6zEYRObRxxX9FrWUJLtpSV+/iN25cqVq/tIN/doDsfhki3VDJcYJllb
hVxS2eYSLJQ17F4hm5BPFr2MlMklkSJrhsx8wd4m/fIMkn5+AklDyCY/etkk
no4b+KSXTfr55HOk/rWPT8ykZz7ttSZ1JqbXWmj77AhpQy5p9SiutMzus95w
Ns3l2DGTrKl1Jt6YSSblkjoml+MbM/kyE9bWTovzMk91T1llEvFKEzcRJrEt
MRNu53IMnZsXmG6YZCI9nv6FXp4fuPgltnGM3iPj42gLMQMs8hav+8kYoR0N
l7RXJpHtlXaGR9pqn5PLhk2kD9vVPuQOssK0AqY3yYsW5pSyMLmo5m9WvWBh
bVVlkg01LGw2TLKDXLHnXa1zXV9O60YOV9E1EgM+fwAXZP3Er9PgaqMsOPUe
+YVsc5wMc5y/69o/lEmSHCYhf3jIMJ7PlUukT0nqHJxvfHIl9c3tRj5M0Mjh
Eh8m6Z4T6JVL3Tu3MsmQwt55wL+RN3qRWbql1ZjIb0WUR5a+rmvpSf7G4ZGJ
ZdWTymo8pZvhJYeLmhge8c3fOCwibi85JrO/v6V954VFVpgak1SbHM4yxz5x
k2UVuK2o24BZfv0TduXKlav7SldmArvIJdtqaqxks+GSjfw/va4KmaSSekUF
zaULmywim8wsB8+kkvBMLYWUSfToQkgZmhdJQ5+i89u5nDvYxJdLJGZCNonq
+7jWwAqbSMxE2KTXU3YN7LWuuU1PE7KJ4RI7ZtJK5wzbMRPhkmbZca4JueT7
rDjTmFzyncZMnPrXoyaX4/Qz2UfbMZOvHsaWD7iPx9o96ddz3FspMROOh0sK
a7zEiZnM53aexEo4hk2lJ5lYyXhlEGGVmJ3vYj+vy1N+tuy6E+GS2+SL6z0s
hEkv+Y5awyo8YnNJe51THGiYRNhE7t/oZ2Enx/6Jz2lNydIXlEumFtde72t4
f82rmrvZUF2ZZCuZZPtbFnaRSfa9/wAO1raw5UWdcyN9VwO4/8LXDyLwqzQI
+uZBXPs+Cy7zdxysaOEY2eZ6w7RIrqdzbxI5vifxsRRhkjq0xEY+M3biJb51
HL7zcL83TOBwQeeHDZPQPXOQR8gkfXLrdlB+7UcivdKkZ5rd2zW/cskw4ZUC
yiJL+d2cX+VOJhEemVxOLY8NzafxEt9zcHI4Ti1JG8MjDpN0MvETsqPdu1U4
ZBW//8urGVfx5muWV/Z6WaU7Lbx+fIQf/4BduXLl6j7T6Z7ATsMkW2Rt3eom
XsL/wetk7TN6ZQWzjh2vK5fJOjFkkolkkimlbS7xTCyOlOHPIuWXfEj+9Wll
k58Mlxg2if8jNpGYCR3Z90lTa/Ik2eQp3OyW2ztvuIvkcrIjlFwS0iaHcgmt
PWBNzKRpVgSQTYRLTjeSmEkWnGjwCI59q1xypG7mO2MmwiZ1smDXV49g03sP
IXoKx8BdHOtWcZxcxttLCho2oRfT83l/PsfTmZbWlTg5HOGScXo7dsajSBjB
22M5tg+1EPeThSgyxs2+mpcJlphJJ+WRKxI76aA92GwuESbpoDUl0idW+q7O
K6Fr7614ycKiciZWUp6s8bJFXDRxklpkktqGSd6xsIdMsv/DNPZ84O2vaszk
GI89/56FS3XT4krdNAj5Ni1uNs2CoK8tHOVj18kYCe3y2GsGJH5i2XN1k79S
HvE4taR1fLjkM5Oz+d74bhb4wSd/0jmj5m6ESZw4SZ88AJkU/PxT+5JIzzTp
TSKc0j09meRZjZcIn0if+GVkkylkhwml+N4bJpliPPtVXeu3ieWdg9PM51x8
8zfCJB0Nk3Q2fNJdPtPimsOR+cAy78bxyipqh09WVFYvN/HD5YZLDvT079+w
K1euXN1P2vsxsL2GqS2prvESO4dT2cRLZJ1dwyTLK2gvKXs9VTLJ9DJkE3LJ
+KLw/PYUUn7Lj5Rh+ZE05EnN5/z8pLLJT142kVoUm0vIJxozofvlxe2+5JK+
TyOit+GSbl4uCRcuaZdd60ykP33rHN6YCdnkfNNHvTETHy45LnUm35r617o+
9a9fkUvqZsEessm62g/hUu88JpfzPF8juWQZx8tlhZRPFtELeR0/Nw0ww8RL
fLnEYZPR6pThHNeFS362ED3AQgTZJKwHmaSz4ZKOaomdOGxy2fQ8udrLwqqq
FmYWsrD8ZeUSqSOZVYr7SpJHpKakos4H3uTDJDvJIbvft7DvgzQ4+Ekae+7N
bh63mRxzjD/vIu9fqZcOwd+mQVjDdLjRNDPCGzyAa/UfQFzr7IhplR3xDckk
ZI7kr02cxGESZ97tVz5xkwZmzG9imMRhAN/cibhzOpO7MbGSvrmVSQZIH5O8
wOBnlEecfmlS19rnUe5/UufeDC2g83JWv0Em5PdvYinDI2SUqfQ0evoLGjPh
+2fXufhyUfM/yN8Ik3Qx7my2459TLllL/llZXb2qqnqlD5/YruzlE/EqelcL
v/4Ju3LlytV9o+jzOg9HuES8parmbxwucWIlEiOR60Jhk6lyzSpzNMtwTCCb
kFE8Y5+HZziZZMSzNpskD3lCuWSocoldB+uwCR1r4iapMRNyiR0z6fc0bvXK
h4gej9s1sE7MJLxjDoR1yOmdm9Mmh91r7Y6YiV1n8ojGTL7LgpMNTf2rxEzq
3VVnwu3eetlsLtn8fjocJMtgHTlkTYE72WQRx6uF0nuUY+oczdfYnmR4ZKLh
k7H0SI7pI5RLEoeRS8gmUQOVS672thDazUJIZ+1Nf9lwicRQ5HYgfZPH7v/S
wvQCyiOy3s3KlzVeIjkcqTOR9fYkd7PpNWUSp6ZEmcTCgY8fxJHP0uHkR/xZ
Vfj4CxZOkEsC+Xhwg0wIJZNc/T49rjfNiNstHiGPPIro5pkQ2zanvYaAxEpS
vlEm8fj2AWlsWOQLnS9s729heMTJlzhM4tSYtjJcIjwivVL75PLGSQaSS8in
tn8tbOYBS10r2XAQHxuQW3M4wwpqjGTl67qmjeRvUnnEMMmMF+w195J/fMrO
Rd1RU9LCcEkHHwuLCMN0MxZOGZXbyyXSoyTVVdUOo6yqonb4xPH6j/z8h+zK
lStX94lCFmkOZ7sTK6kCbKrizeGsMkwicRKxsMiUErqdWVoZZVIxeEY9l2o7
ZjI0r7LJ0Cc1ZkJGSfhZ2UT7mSib3BEz4fWzckkeRPSU/vSP4wbZxI6ZkEvC
fbgkuC25hGwiPWAvkU3smMkP2TRmYudysnhjJoZL7oiZfJMV+77NrrmcLzJh
C9kkdlo+YFsRZRLxUvLIIl7PL+TYOT8DMMvSeMk0wyK+TDKa4/UowyW/3ckl
0tfkWh9ySXdyCcfDIFnbr5OJlxguCe+r828WlqZL6Vo3wiRrK1qYX87CDImV
vEomqaRMIvOBhUk2V9dYyV6bSdLg8KdpceyrTDhNdjjMx3aRaU6SSy7/g7+/
UQaEN1YmiWieFbdbZkN0iyyIbZUV8XxPE5s/hBSJk9SnnboRp2eqExf5xtS/
1jfc4cQmHA5w6jjaGndJozzSx8RK+ptYifDI4Kc0LiI5m9GmL4lwidwfkJO3
pU9JUXv9PCyqquvZCJNMLacsIp4pftHuGZ8yqRxu87xi65u+bE5dSTvDHh19
4iPCJZK/6WEeG5ZJ617X1tRczppqXjtskuoqXj5ZZeIlq/mchAi//im7cuXK
1X2hU92B3dXNPJyqPlxCJlldUZnEiZVIDynJ488gk8zh+DG9pHLJhMLKJKML
KJcMexopv5BLfsmnXDJUucRmEztmkk9jJpLPETaxYyaPk0vyIdJwyS1yia6d
Qzbplhs3hE065TJ+3O5NrzGT7Bozaalr6EjcRCy1JsImJxtkviOXc1i4pE56
7P82WyqX2LmcN9IheLDMyynq5ZIlT3O84xi6iGPqfMMkTh5nok/MZIw6hVyS
IjETcknCr+SSX8glg8kl/ZRLJJcT0l3zNUFdTA2sxE+47+ogy+6NP6eQ9koT
ryKHrKmoTLKwPBmETLKxGrcmd7O5prLK3g81TnLo0zQ4+kU6nOBrDPjCwgny
y16yzSnyyRVyS9j36XGtaSbc/CETbrV8BFGtH0MMmSSuTXYkCJe0zOCNkzg8
4uRonJ6pct9ZY6a1T2zCiZE4OZOOxg6X9BMmoQfm0XiI8MiPMlf4afVvhbRH
id2nhJ/BID5nDLfjivF+IWWPNbXJhtxOK+flkVnGs6WPSAWkDC+MuE5ZEdNY
141MaWFyNw6L+FqYpKfhEqlVXmR6pq2rqVvx2mpqm1Gqeu3wia8jTvvtz9iV
K1eu7gt5koC9bwM7+D93W1Uvl2yU/E1FnX8jTLJS5gfz//40csh0wySzSxku
kdg7x/AxZJIxyiUewyUpv+bzssmQJ71c8mO+38dMyCZRA/NpPsfua/K4PW/4
hvSnH1gON0d/iFszm+Lmoh64uXYEordNRvTOGYjaPRdRO2fh1sbxCF82DGEz
2uPy8K8R0Lm8zSVnTOzkZMPM3lwOfaD+Y8omdbOQTTJj0zsP4UTLbMDWwhxj
nufr5jX7Yo6fi3ndvpj751pa8ypcMtkwicMl4wyXCJMMt5BELokfxut2sknU
TxYiBmoP2LCehks4HgZ1Iyt00Z7113nMkW+VSVaYehLpLb+WHLJU1rkpoTUl
m6qQRV7XuTc73yOj8PEN5I4Dn6TBoc/S4giZ5PjX6XCq3sM4/7WF0zzuALnl
LPklmFxytUkm3GieFREtsiKyDcfudtkNk+RAQsfcSGqbFZ5GJlbixEicHiBO
TETc0HCJE49w5uC2te6sKxV3TaNr69lxEpO/8WWSIc+opTfa2JLaK20Cv1/8
nmB4Qd7nvrFFta5k9eu6lp5wicMijueYrbPeHnkmsU9uxLd4wF6rKaX1XTES
Z9vT7CcXYt6LyiIbapFNpM9xDfW6al4+8bUvp4hDN/n5D9qVK1eu7nHdPgrs
5P/X7YZLttKbJFcu+ZuKXiaRmpJZZXQdXbFwyYyS6klFlEvGPa81JiOe9XKJ
EzP55anUmIlvLseOmXCMsutgeQ0dLXwyoiqi5zdD7NZRSAzYgqQbV8hPKf+n
lxd/NRA3di7A5YmtcapdCZwgm5xo8DAOf5sFBxsYLvkmqx0z2fFpeuz6IiNS
pL51k9S7ctxcIjUHHEsXPqS1JU4eZ7KPJ1qpNa8pIzRWkihcQscO1XiJzSX9
LYRLjYnUv/bUGIlwieRvArto3zRZ+1diJKsraJxkAzlkblnN42ytSi6pbmHL
mxor2fEOuYQMs4XHHvwsDQ5/mQHHvkqHk99kwpkG2XCxXhoE8Jij/DnnXuPv
lHV6m2XGTbLX7dZZEd0hG2I75EC8zSQ5kdg5N5I7ZYfHmV/j1LH61mk4MRFh
lQY+POIbI7F55AETnyCTdE+rXGIziYmV/PikYRJ6aH5dC0+2kq+x60de4D7e
H/as8ojDJkv5PV1ZQ/M3DouI576iln0SR5lrepHIvN/p5ZEi/YfbpIeHnOVp
Y5ikl3FPwyfSw0TWYhQu2UT+WV9T12AQr3NczevfcQp/X8DE/+RfpytXrlz9
9ylwguGSqsoldqyEHLLOxEqESew5wcIipZVJ5su8zDLKJNNLcNxQJsH4Qsom
Npfkg4c88js2kZjJkCfUZJT4H/MibsSLSFjWCgkHpiP56p+3JqsnJRnXdy1G
wI+f40iDLDjSJAcO1CeX1Muq83K+zoyNb6XFzVG8Tt8hORyOpUseUzaRHI7D
JU6fV9+5woZLkk19iXBJ3DALMb9YiPxJ61lTuaSn4RKOhVe6aqxk+3tkjyLa
k2T1q7rezfrKyiYzpV8J2WNrNTKI1Lm+pTWu218nl5BZtpNdDn/xEI7VyYjj
dTPh1LcPI6DxY7jUIJ09B+ckf86FNyyEfGjhRrOMuE0OiWqfDTGdciCuYy5l
kk45kSRc0iWXd46NwyFO//bUHE1avf292e/UkvrOvXV4pEc6tXBJau7mD5hE
YiXD6N8KaI3rtJeBEQW5P7/OCZa5X5LPEQZZ9/rveWTeq+o5f8Aq0qtVeqUJ
s/xaACmdsulrbG+YpLePJz+jtSWb+Ts21FQ22WDsMEoqq1S707Jew+Fef9r3
15UrV67+K3TgKy+XbKnC68RKJlZSQeMlUlMylxwyV9arK+uNl8wqZWpeiyuX
TCxs15jYXDLqGXh+zWc7xbCJcEnyMOlrks9mkoSJNZC0oTuSz20GyAt/tW6d
2o2THcviSKPHsJ9cormcLNjwZlqc7yK5nHy83s6qXCKxknk+XDLVMMmUu/I4
wiQjLSSN0FiJzSVDySU/k0sGK5eEcewL6akWLrn2I7mhmYWFxckjLymXrDVr
8G0mhyx6UeMlNpPUUiaROMnuD7iPPLKlvIVdfOzo15lw4htlkrMNs+B80+y4
/F16BH5kIYCPX+Hzwj7meTTLgChySHRHMknnnIgniyR2yY2krrnox5HSLQ9Z
5AEdt50cjc0j5Ix2aZRJ2qcng6T3cotTR5JaT+rDJL0yqfvn9GGSfMolvkwi
PCI5m+EFtKZkGhliPL9bv5ETppTWmiZ7Xjp5eM1rmqsR9nB4ZL4Pl9ic4sMq
zuPCJ9IzbcGr+rukB21Lw1K9TexkfFb9+Q6X/JGFSezbvpxi1mzY8e1f/l12
5cqVq/tGUeeUScRbqyiTbDBMsrqC9iyZX16ZZH5Z9TwTN3G4RHI4wiSTHC7h
uDIiv8ZLfjNs8qvWmSRNrIzkjT3gCTrk71duKykmEsd7v0U2MTETcsm2D9Lh
UIPM5LFcwEryyRKOUwssjZc49SVTLW+/V6fn6zgzF4dckjj8Ti65/ZOFGwN9
uITjXzAdzvuhfU0NSSkL6ypoDcm6yma9m6oWZpNJVpBVttc084ENk0j/tG2v
8P7LFvZVt3CsbmacrP8IzpBJzjV+BBeb50BQk4cR/LmFizVockk4b99qkQ7R
XXIhtnMuxHfLjYSu5BI6qVsuJHfPA0/PJ5U9UutFHBZ5SFnEdiZdh69tOmUW
J0Yi9a3Sp7UHj+0pPJKF472sHZxVuUTqRcROrCSVSZ5THpH4yOhCauEQyeWM
fJ7vcQllE2GSiSV1Lq/kcoRB5hvmWFjBsMkr3n3iBa/eeV+8uJLyiTxHfqf0
xncYbGRa5Ywt5JKNtf6YSzbWUDtscoe5LzHS319tV65cubo3dWUyeLENbON1
5JbKmr8RHpFeJdJzftFLyiQLyiiTyNbmklLKJpLDES6ZwutbWfdOuGSMjC9P
KZMMFz8Lz6rW8Jzf5OcX+z8rYMjHONggix0z2f15Ouz4KAPip/NaeiPZZDHH
2oU+XDLdMMm0u7hkrM7FkTyOzSV0HNkk2uGSwRauCpf0IZOQTYLIJRHklgNf
WlhUlBxSUblkfSVlEplns5w8MrechS3kim2vK5NIreuej7mtRZNL9vCYAzz2
5LeZcPq7RxFAxpJ1DANb5UTwD1kR/pWF0zz2WG0L1/m7IltnQky3PIgTJunx
OBK7q5N7kElo9CKXdM5i+qLytXckY3RKpz1bpZ+82FnvRtbja+eTt+lmYiQO
kwiP9CPb9acH5jBxknze/M2vz3qZRPhjND2miHLJ+GJkXzLGOH63JvD29HJ8
z8toz5z58v2spev4LqigfLGogjLIHa7gs73Lvnwix0wormsJCpvM4u2dbwCb
X1M2EQbZVMvLI3J7Uw3vfdvVvb7x9+BuV65cubrndLQxsKOKMskmHyaRPmpL
X+b/fbLHojLKI47nllIusefiFDVMYjyB155jn1UumVYV2DccnsgQf7/Kf0kB
P32Eww2zYs+X6bDprbS4+ktmvjfkkkWWl0tmGy6Z5lNb4uRxyCXJo9XShz6O
jiV3RA+xcOsnzdekcgmZ5Br3XexiYaWsq/ei9iSxXdXiMGdh62uaw1lK9tgl
TPKmMsnuDy3s/Qe3Vbjl8fvJM4fJHafIVWe/fwznySTSY+5y28cR1iobQuvy
GImn8GdE1OP5tHsYsT2eQHzPPEjslQdJZJEk3vb0egKennmBvvl0LRu734fh
kS5kka58P7o+wseyqWWtmx45+Vhmzd3ckbchj/TNqjwyILvO9x1M/+STv5F6
VsnR2HGSAsokwiPCJcIiYwtrbavESSaSS2aUVzYRyzo2whOyrq8wxWJjub3w
FeMKXi+6y76PCaMIn6x/TWtdR/NcBj+mdaw73lQGET6xtzXVNpcYNvH1RrN+
w+WF/v46u3LlytW9p/hryiQSK9lMr6mgda6Su1nxqsZFhEkcLyyjnCJcIpZr
yhkcP6YX0xoTm0s4tiz+jIP8Wn+/uv+TjnauhsPfZrRrX89LzGBLZuUS8QJT
W+L0evWdj2PyOMljLCSRS+INl8T8aiGSXBIhXCLxkoGatwmhrw0la5Azlpcg
h1Qmj1TWuTcbq2usRLhkRQXtVbJT5gS/Sz4hj+z7lDzyloU95JEDZJjDfN7x
2pbdd/9cM+0tJ7GSoA55ca1dToSQRQ6Sc4K/ewiRTdIgqnUWxPfOiwQ6sU9e
m02SedvT+wnb6E9m6JFb4yTCI90eUXcnY/QQm7X37LVuHtccSLc0XibpY5jE
5pEcyiM/5iGT0EPIJb88TR7h7xguTPIcMNKHSYRFxtHji6glNiL9XCeXUBaZ
IXVNEjcpbdbXq64MsqSilzfuZpBFFdWLff2qbheZ59lMQw5fR9bY+x5/9ov6
N7CttjKJeIvZCpdsqellFNuGS2S7hT45yN9fZVeuXLm69yTrB++sorGStYZJ
pIea1JbMN0yy2GfrxErmmXjJzGLGxTWfs7EVEHJvx6+T4qJxtGl+7P40Iw43
JJcss9ROvMTp8zrN8q6PY/q9eny5ZLiFWDpqGLmE/HGTXHL1R60nESa5yf2n
mpNJSpI7KiqXSF+STVV1Db4tr6lljeAd9E6Zf0Mm2St95T/htqb2lz9UXdcB
PvmmhYDGWXG+RQ5cEiZpkwshnZ7EtQ65EPqthSsNyUh9nsFtckl0myxI6Pck
EvvSfZ5EEu3pSy4ho6AfuWEgmaE3eaNLRjLHI8oiPR/TtW16mXX3hEfEsv6e
uKfUkWT0xkikvnUUeWH6B8DsT/ne1eX3px7fR27nkVvnct+0GlrfKlwyRphE
cjdSo1RE4yOTits9hDVGIn2FDZPMfkH5RHhC5vMukvnAhjUcxlh8F4cs+QOn
7veJt8j99WSTHW/ofHk7/vHanWyS6pp3erMPl+z+2t9fZVeuXLm697T/E42X
OPOBZe6NcMnC8soiS8sqjzie7xMrmVOS40NxZZJtHYDr90+Py9sXj2P/15mx
+/NMiJNczTrDJU7N63QfLnFqS8aTSySPM9YbL4kRLvnFwu0hFm6QS8LJJWH9
lU/CBpE5alhYU47bKmqbSWpqb3l7zRt6xxsaK9ktNSUfWtj3mYUD71s4KEzC
5x8jw5zk9gy5RNZSvtgmDy63zY3g9rkR1jUfrnXMhZtNeR7d8yCmX35EtciE
2HaZkdj/KTX5JEWYhDwixoCnlEu4Dz3IGr0e8661J+5j1gEWyzGy5p48Z9yb
/O70AI4sBIKPADE3/rU3OzYCiLgEXNzM504CtvchG3wBTCmjMRJZ31f69tlM
UlaZZI74RX4eL+paerKmr8Mlvtyx1NeV/sDSm6eCbpeY28Io0ld+a23tfWz3
Pa71P3CJ8VbDJVudtbiN4//F98CVK1euXAG3DiqTrK+o9SSrTZ3r4pc0X7OU
16VLyhuX1X3zS6klXjKbY8X2dsC14/5+JX+KglZPwu6PH8WN38gcWwyXzPbh
Emd+8CQTLyGXpBguSTRcYsdLhlq4NUT7k4QPthBKLongY0cbWFhVkgwiTEIe
2VJdLbkb4ZHtMu9G1gd+U+fd2EzyMZnkCzIJHztczcIRqSl5Tfu4nnvbwoUW
jyGwQx4EdciN0E5P4GqPp3Gjax7cavEAIoVL+udHTPvsiOuQFUkDn0HiwHxI
7k8e6f+0bQx4WplELPeFSWSdPVnPxjZZpF9e9QDDMLPqAee2/ec/gDjyStAu
4PA4YG0TcojMVS+vLCL9WOfTc/gdXVZJe8MvvZtFKulj/4qXV1ImETu3ZU7N
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
VrZFNG4y7gUgKtTfb7P/FHkeONZL4x+bHT4xXOLkcOz5v68rkwibCG/s5jHb
q5p4SW1vzGS3T8xkPx223N+v0JUrV67+Hgpdp0ziW+e66T0g4aa/z+yeUty5
pb+vL7mLSySXkzCWXDKKHkNO+IUc8jZ5RHrMk0u21NY8zgFyyYHPDYs4Na7C
JNx3hLxxrC6ZROIk5JJT5JQzPC6Aj53n7Qt8PPBrjY+EkEeu1SejfK1cEjEo
P6JHFUUMWSOWTBI/phgSJ5ZG8jAyybBn4RlXjPxRTNfwFRYZW1Qt96+f8/db
/PfQ9X3AgebAFodPyB0bqmr/EptNXtftPnL9fnqv1JRU1Z6wTi7HqTORfM4+
Pm8/faqNv1+ZK1euXPlf0gtzfU2tdZU6V5tJPtDcuqt/S0myHtCsu+IlJo+T
4sslZi5OPJnlVGuyiPRNe1P7y2+Vfq7vav3IwS8Nj3xIHiGnHP7MwtEvlUns
/A1549R3aXCaLHJW4iR87AL54xJ55DKPCeYxV3lMKH2e3BLaOjOiRhZB9Mii
NpPEjZFYSXEkTSmD5FHPIWX4s8CE4urxxTVWMt5wSuB2f7+9fz8FLyNnfKB8
srGq5mqk5tXmE8nlGC4R7yGT7K6uvefvZhM7XlJbYyZuLseVK1f/7To+SGMl
UucqTLKjPpAc6++zuieVQpZLmX5XTzVfLpmgXCI1r9Lz9eYwC7s+T2fPC5b1
gHcaNtn1vvaTt+cAkzcOkymOkFOOct+xOiZO0sDCyYYWTn+fBme575zESr6y
cJG3A6WWpJ7yyNXveJ8/J5D3bw0tgKgRhRBDNokdWxzx40sgaWJJJE8ri+Qx
BeAZVQDgfZtLZCtMMoE+Psffb+3fV0nRwOkhyibi3SZ/I1wiuRybS97SGpI9
1Q2b1PJyyU5TayIxk4M8/toqf78iV65cufKfbp8jk5g6V2GSPU39fUb3vhbm
8M7D8eWSScolSeO15jWZ+891sbDt46zY9/mDdv9WWRd4h1kb+LDpS3JE6ls/
NUzC+8edOIkwSSMLZ394EAFSOyL5G/LIJd6+wmOCyS7hZJKQ+jpX+FqP3Iga
WwzRw4VLCiFuXHEkCJNMpqeXQcq4QsCY53mupWgyyeQSut3e39/v6L2hGwfI
Ft/p/OADb+t8nN2GSw68pd7Dx/ZWN3OIX7+TTSSfI1xypr2/X4krV65c+U/b
vgTWvGKY5Ad/n819ocSlpXU+zuS75uL4cEkSt5EjLez/Nh321smI/V+lt/ul
7XlH17/Z9xE55CutI5HtMWES8snxusokEicRLjnzPbmkRXqcq681JZfII5fp
IMndkEnCyS2BfG5ws/S4PbIIIiVWQseOKox4MkqSMMnUUkieUQ6eCYUBYZPJ
pZRJptIr6vr77bz3dGkGWeQ94NDbmsfZa7jk4Num1kT6u9bUXq93s4nkcw7W
5pfIrety5crVf6ECF2mvEpl3s9/tnfCfUtyaf+iawpO9a/Z5TB4nmTySOF5z
PIHdyCCfZsGhhulwsG467PtE17vZLb1LPtY5wHZ969fKJLKV+cB27obMcUZi
JU0fwLmW6XDhO5O/IY9caWAhRJikicZKLnP/zYFPI3J0UUQNL2gzSeyYokgc
V0S5ZFpppMwsz3MtBowvyi25ampJYGZFjo9uPu//pNgQ4Gx7L4vsf8uHTWor
m+yrdWetyU5TayKPh87w9ytw5cqVq79W0ptU6lxXcTza38HfZ3NfKXnXt975
wX/AJcncxo21cLjxg9j3dWYcbpAOh+o/hANfPmTPCd77tta6yhxgqSURHjlO
n/zGxEkMkwQ0tXDuBwsXWmfAxcaav7nMx4P5eNj36svkmfAO2XB7THFEkkmi
RxWxmSR+XDEkTiiOpInFbC7xzHkBmFYC4H1MlXgPuSTsmL/fyntfobOURRw7
bCLzc/bWUD7ZVtMbM9lh8jlH3PVyXLly9V+mA52BlS/y/19ff5/JfaeYfQN0
Ts5k75p9wiUe0+8VMy2E9Jd616w4Qiax3TAtDtZJb8dJpIfaoU8tnKineRu7
vzx9sr6Jk9Bnm5BLmpFLWqTBhXZZcImMcvlbC0HklRAySnhTrS8JbpAGEUML
4DZ5ROpdY0cXJhMVRcKEokiaVIwugZRppeCZSy6ZITUlxXl+ZYCjE/39Nt4/
ig4ATjUFDr+tuR2HTyResl9qXmtpj9i7a00iDvn7zF25cuXqr9HVvcByMsmp
Yf4+k/tSKWdHefuW3MUlsk2aYuHYDw9g31eZcZQ8YrtROhz+Np3dr0R6qMkc
HLuHK7nkZF2NlZxqZJikkWGS5hYutHoQFzs8gsAfLFypr1wS2lRjJcHS47VH
btwmh0SOKIiY0Zq/iSeTJE4mk0wpjuSpJeGR2MicssDsssoma+r5+y28P3Vl
7F1sIv1NyCAHXje1JrXu7AV7uqe/z9iVK1eu/nxJr5Jlr/D/Yx9/n8l9q7gL
y+5cF2eSMopngq41fO1nC7u/yGrHSI42esj2scbpcLRBWhz8+gEc/FDnBNv1
rcIj5JLT9bXG9UwTXyZ5ABfbpMGlTlkQ2JJMIjkcPh5GRgmpx23TTIgY8Txu
jyqIqNHkkjHkknFFkDCJXEImSZpWEikzSsMzszTPqwwwtxwgdSbxbt+aP023
DwHHPgeOGD45YHqWiP+o1iTR/SxcuXJ1n+tgN/7vc2tc/0wlhh/xcslkH0/U
viZn2lrY93UWm0XExxvR36sP1Utn53COf0EmaUAm+VZ9Z+7GwnmHSdqlQ2CX
R3GlNZlEYiUthEe4Jc9c7/cEIsghkSMLInp0IZtJ4icaJplaHMnTS8FDHhFj
tuGSSxv8/fbd/5K5NmfaetlE6lwlZiI1J1tr3MkmwfP8fbauXLly9edJ8jdH
R/j7LO57pURdgmfKH3AJmeT2MAv766XHsUYZccywiMMlJ5umxZH6Gex+aie/
tnBauKS+bs9+r3Wu56XOtaWFi+SQS+0eQmCHdLjSPRuCyDohfDy8FblEeqm1
yoKbowri9qgCqbGSuAlFkDClGBLJJEnTS2isxJdJtrq8+pcq8Fdlk4Nvarzk
oPSur6ls4nDJgbr+PktXrly5+nPk8cATFejvs/ivUFJUMJIn+6zZ5/DJbLJE
F3JJnaw40TQ9jjfJYPsEfbJJWpxqRj75Lh0OfUUuqWfhjPQnaaBbiZVI7uZ8
C83fXGqbhkzyIC53yoArPXMguIOF0OaawwmvnwY3BuXDrbGFEClcMqYQYsYX
QfykokggkyROK4nkGSWRMotcYjNJWWDeKzzxOH+/df99uroMOPyO9lMTNpG4
yY4aOkdHuET62d/Y5e+zdOXKlStX97CSb56Ax5dHZDvdQgpvX57bFae6V8ap
HzJ6mYSMcrJJepwml5winxz+Jo1d83q2oTqAPteMTNJSrPmbwPYPIrBjWlzp
kgnBvbIjpDOZhMxylRxzveNjiCCL3B5ZAJHcRo8rjNiJRe1YSYITKzFM4hEm
mV8OuOzmb/ymyBNac3LQcInUwm6rob3q7V727pxhV65cuXL1/6GIw3fmcOT2
PAu3f7Hshy9ObY9zrR9WHiGLiE/x9ukf0uEsfbT+Q3bNa0AjwyTfWbjwg6kp
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
n7NjJcIlEiuJm+WNlSQtKotkmYMTFfwnv2pXf7muTACOVkfKsd7+PhNXrly5
cvV31oL0dg4n9vy/VmN6ffMkm0skn2NzCbcSM7nS3kIw2SSUXHK1d3pcJY9c
+zGbiZXkRsRvuXHrt6cROYpcMqkAYux61yJ2rCRhHrlkQRkkLyuPpN0d/uQX
7MpvChyA5O0vIf7GBX+fiStXrly5+hvKk5Js91KLG239y8+JDztn175KH1fp
mxYsOR2JnXQgl9BhZJOrfdLj2pAcuP5zDtwYmtNmkogReXD7t/yIHFsA0VOe
R8y0woibWQzxc4RLSmusRObgRIf+ia/Yld91sj5w6G1/n4UrV65cufobKjEq
zK4tiVhS9996XvCgsgjt+TD5RNgkM650eVh7lnQkl5BNrvXLhOtDsuMGffPX
XIgYnhu3R+RD5PBnETX+ebuuJHZ6YTuHE2/HSkoheVlZpOzp+Oe8UFd/I3m0
DjZozj8/1JUrV65c/Vcp8fphpEyzEHN+17/1vKvz2uNanywI7Z7JXpMvqNsj
COqSDiGdyCVkk2v9M+PGrzm01lXyN8IlI59C1MjntN6VTGLncCRWMr8UEiVW
Qi7xxIT9Sa/U1d9KccHAiZbcup+3K1euXLnyUcg8RE7M8m8/LXLfAnJJVoTK
2jc9HC7JiJDOyiXXB2bBjd9y4eYwjZXcGpkHkaOfQdTognYftZgZEispivi5
5JIFpZCyvCwSdruxkv8qxVwEIoSHU/x9Jq5cuXLl6m+i5NOjEL21+b/9vIRr
lxDW82GE02E9HkZQ96wI6poRoeSS8E4WbgzOipvDpdY1l8ZKRj1BLimAqHEm
VjJT6l2LI2F+cSQuLo3kpWWQEh3+J7xCV39reYRJXC5x5cqVK1eq60fnIPHy
uv/Tc8MGl8D1PsomwT0eQ3D3TAjtQi4hm9z8OSsiRuTWupKRuRE5Jh+ixjyP
mAkFEDNTYiVFTKykJJKXlUHS7jb/4VfmypUrV65cubrXlBwTBk9y/P/puddn
NULEgGwI75UZwT0fJZtkQWhXcgnZ5OaQbLhFHrlFNrk9+nFEjn0aUWMLIUZ6
lswqhP/X3r3ERnUeYBgmKI0iBISAwRdsAkkMvhvjFtpNF+2iu1aq2lWkrlo1
kbqo1IvUVkmIqYEax2CHYMDYgAnGBIxtbAYTmsSQlEQqYEtJqBqiqoLEnhkb
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
     "], {{0, 550}, {550, 0}}, {
     0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{141.2109375, Automatic},
   ImageSizeRaw->{550, 550},
   PlotRange->{{0, 550}, {0, 550}}]}]], "Input",
 CellChangeTimes->{3.655548194890024*^9},
 TextAlignment->Center],

Cell[TextData[{
 "Both ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and the Wolfram Language are developed and owned by the commercial entity ",
 StyleBox["Wolfram Research",
  FontSlant->"Italic"],
 " - the use of both these technologies are subject to their licensing and \
EULA agreements."
}], "Text",
 CellChangeTimes->{{3.655548245914282*^9, 3.655548297215069*^9}, {
  3.655548336707088*^9, 3.655548361859696*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a powerful IDE for using the Wolfram Language to investigate, analyse \
and visualise data. It is fairly unique in that the UI is generated from \
intepreted Wolfram Language code and may also be programmatically manipulated \
using the Wolfram Language. "
}], "Text",
 CellChangeTimes->{{3.6555477587308483`*^9, 3.655547892339087*^9}}],

Cell[TextData[{
 "In general, most users of the Wolfram Language use the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " interface (called the notebook) as it provides a ",
 StyleBox["literate programming environment",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". As we\[CloseCurlyQuote]ll see throught this course, it\[CloseCurlyQuote]s \
possible to create interactive visualisations within ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks and to share these with others using a variety of technologies \
that are discussed in the ",
 StyleBox["Wolfram Cloud",
  FontSlant->"Italic"],
 " section of this course."
}], "Text",
 CellChangeTimes->{{3.65554801136873*^9, 3.655548130171258*^9}}],

Cell[TextData[{
 "It is possible to use the Wolfram Language through the shell, on a server \
or remotely on the cloud - this course only considers the desktop ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " environment in detail."
}], "Text",
 CellChangeTimes->{{3.655548414602714*^9, 3.6555484874914703`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is this course about?", "Title",
 CellChangeTimes->{{3.662797673799967*^9, 3.662797677349916*^9}}],

Cell[TextData[{
 "This course introduces the Wolfram Language and the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " environment from the point of view of an user interested (or experienced) \
in visualising research data and creating interactive content."
}], "Text",
 CellChangeTimes->{{3.6627963070797367`*^9, 3.662796350872816*^9}, {
  3.662797630399006*^9, 3.662797780999569*^9}, {3.662797828742887*^9, 
  3.662797836342244*^9}, {3.662797972878335*^9, 3.662797986595508*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`chartType$$ = 
    Histogram, $CellContext`col$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`chartType$$], Histogram, "Chart Type"}, {
      Histogram, BoxWhiskerChart, DistributionChart}}, {{
       Hold[$CellContext`col$$], 3, "Property to Plot"}, {
      3 -> "Height", 4 -> "Weight"}}}, Typeset`size$$ = {627., {73., 77.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`chartType$17176$$ = 0, $CellContext`col$17177$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`chartType$$ = 
        Histogram, $CellContext`col$$ = 3}, "ControllerVariables" :> {
        Hold[$CellContext`chartType$$, $CellContext`chartType$17176$$, 0], 
        Hold[$CellContext`col$$, $CellContext`col$17177$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`chartType$$[
        Part[$CellContext`grantHolders, All, $CellContext`col$$], AxesLabel -> {
          Part[$CellContext`columnNames, $CellContext`col$$ - 1], "Count"}, 
        PlotLabel -> StringJoin["Distribution of ", 
          Part[$CellContext`columnNames, $CellContext`col$$ - 1], 
          " Amongst Grant Holders"]], 
      "Specifications" :> {{{$CellContext`chartType$$, Histogram, 
          "Chart Type"}, {
         Histogram, BoxWhiskerChart, 
          DistributionChart}}, {{$CellContext`col$$, 3, "Property to Plot"}, {
         3 -> "Height", 4 -> "Weight"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{672., {128., 133.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`grantHolders = {{
         "DAVID", 1, 153.05699698060732`, 72.40819579515212}, {
         "PAUL", 11, 144.3674982863825, 96.74491738625878}, {
         "ANDREW", 1, 179.38115872110308`, 97.43329733118253}, {
         "MARK", 2, 130.66533135707104`, 93.03143494731813}, {
         "JOHN", 5, 158.25993207472257`, 113.56690755579984`}, {
         "MICHAEL", 3, 166.2358678024236, 101.14331111181112`}, {
         "STEPHEN", 4, 189.29999244066659`, 89.44246497817487}, {
         "IAN", 10, 128.46405858778132`, 76.86079823646568}, {
         "ROBERT", 2, 143.0659772441906, 94.28215164804448}, {
         "RICHARD", 11, 159.99477696163834`, 93.4502934527263}, {
         "CHRISTOPHER", 7, 141.6904706177919, 97.65362819782949}, {
         "PETER", 11, 144.51388888773886`, 75.87919657211998}, {
         "SIMON", 11, 149.26111091779373`, 85.51702893779121}, {
         "ANTHONY", 7, 188.05995866206436`, 98.33016368890605}, {
         "KEVIN", 4, 173.83256531918656`, 82.19090490314944}, {
         "GARY", 9, 120.64150392617289`, 81.43824554235479}, {
         "STEVEN", 9, 154.612482768071, 110.13012837474264`}, {
         "MARTIN", 7, 155.49377370959124`, 111.90495698871295`}, {
         "JAMES", 8, 180.89023816227976`, 103.42863849722647`}, {
         "PHILIP", 3, 186.97600254046344`, 93.78504059845466}, {
         "ALAN", 10, 172.23293423103996`, 124.74331800029675`}, {
         "NEIL", 11, 159.28998527661275`, 89.98271910103195}, {
         "NIGEL", 4, 163.11926599087215`, 88.39991093355661}, {
         "TIMOTHY", 10, 130.9581782604533, 85.24457842248002}, {
         "COLIN", 8, 147.08617088913692`, 77.83101743336577}, {
         "GRAHAM", 6, 169.8739499609269, 78.04591246489966}, {
         "JONATHAN", 4, 153.405341896703, 103.15689488095288`}, {
         "NICHOLAS", 9, 129.687150997123, 99.17710299753823}, {
         "WILLIAM", 9, 166.8752697896192, 83.95094483868246}, {
         "ADRIAN", 8, 144.7164894334626, 78.47316667653678}, {
         "BRIAN", 11, 165.9821953259068, 69.62636399610572}, {
         "STUART", 7, 185.81905097996224`, 85.853184700319}, {
         "KEITH", 5, 178.50825888849607`, 92.3607861601794}, {
         "THOMAS", 6, 163.71962245450445`, 90.42141291440085}, {
         "PATRICK", 3, 201.2816079489377, 84.68362960429252}, {
         "SEAN", 5, 171.50649674964174`, 83.99963519033888}, {
         "CARL", 8, 158.16546501154784`, 86.97074185370158}, {
         "TREVOR", 2, 186.3473675226552, 71.30923035864053}, {
         "WAYNE", 10, 170.9513386935156, 80.3017516765964}, {
         "SHAUN", 1, 116.26111698059464`, 87.96707046804946}, {
         "KENNETH", 12, 173.9517895559707, 83.83981834083956}, {
         "BARRY", 3, 172.9949329686951, 91.93117705891878}, {
         "DEREK", 11, 136.4607107724595, 103.69875927325432`}, {
         "DEAN", 7, 194.34923609509343`, 85.99160671269492}, {
         "RAYMOND", 10, 138.08063908899294`, 92.93413209857687}, {
         "ANTONY", 4, 163.69033518592167`, 88.43260987740891}, {
         "JEREMY", 3, 187.4964465136431, 80.41755603403224}, {
         "JOSEPH", 3, 187.46101472856907`, 91.56578379997795}, {
         "EDWARD", 12, 174.58515916576061`, 75.27407495294867}, {
         "LEE", 11, 170.98245129173392`, 103.15109498112926`}, {
         "TERENCE", 2, 170.6429263181309, 102.52442785391356`}, {
         "MATTHEW", 12, 143.43536854259492`, 92.73441885512997}, {
         "DANIEL", 3, 160.25959872829787`, 96.92255421728046}, {
         "GEORGE", 9, 144.61030240212432`, 78.89188371018778}, {
         "RUSSELL", 7, 148.93883259530088`, 101.81064170706821`}, {
         "CHARLES", 11, 148.88096748298813`, 89.63361836774594}, {
         "JEFFREY", 12, 191.04101738888858`, 96.48363099988603}, {
         "CLIVE", 5, 140.43696943306006`, 115.76175089678591`}, {
         "PHILLIP", 1, 145.64839564521128`, 91.42186125132616}, {
         "CRAIG", 4, 167.69616479991092`, 139.71762947968568`}, {
         "ROGER", 1, 147.48950082893097`, 106.3760686028615}, {
         "JULIAN", 4, 119.87685329175437`, 69.84150941200626}, {
         "GEOFFREY", 2, 105.95551380732303`, 94.84693965763923}, {
         "KARL", 3, 176.52652919771978`, 97.72866793996516}, {
         "MALCOLM", 5, 229.10136104746567`, 96.96766423512457}, {
         "DARREN", 9, 208.78014260791267`, 72.669515904182}, {
         "TONY", 2, 126.9718691663387, 100.46381449127784`}, {
         "ADAM", 6, 127.68880770146589`, 94.48028221612822}, {
         "ROBIN", 12, 141.4599469528744, 111.98404127435619`}, {
         "GARRY", 4, 206.71154959410143`, 84.6768422446463}, {
         "ROY", 12, 163.8539141284106, 84.15697102253009}, {
         "VINCENT", 2, 160.1213249700257, 77.0446765932462}, {
         "MOHAMMED", 2, 151.7836293134373, 78.13564123597185}, {
         "GORDON", 8, 181.44419355072654`, 94.82713879880006}, {
         "DUNCAN", 4, 193.09290144456824`, 83.91489379815732}, {
         "LESLIE", 11, 154.75174723535383`, 87.32542821039573}, {
         "ALEXANDER", 6, 169.22410119159633`, 108.30252203150654`}, {
         "GREGORY", 2, 154.29681994903666`, 82.95987299315436}, {
         "GARETH", 4, 193.2110389226156, 83.59190213634156}, {
         "RONALD", 9, 161.95644405334897`, 85.64444737674407}, {
         "DOUGLAS", 4, 150.64818907747568`, 107.56682611705162`}, {
         "FRANCIS", 11, 138.09177132764862`, 80.52985597266105}, {
         "STEWART", 11, 151.05205304062127`, 101.95801961610327`}, {
         "GRAEME", 10, 156.0335430540477, 91.77175186776087}, {
         "GUY", 1, 124.57256218718436`, 81.65467968455754}, {
         "TERRY", 2, 146.16751199269305`, 79.11383847840595}, {
         "MARTYN", 4, 137.13803190305305`, 101.53066053567007`}, {
         "ERIC", 5, 172.29250970856467`, 77.75735658358776}, {
         "ALLAN", 4, 164.60048206584625`, 86.10022649731647}, {
         "GERARD", 6, 181.85444864043038`, 68.7501447845252}, {
         "GERALD", 6, 145.25052474082028`, 88.26846724654592}, {
         "HOWARD", 3, 136.62285584281238`, 87.49595405429011}, {
         "JASON", 2, 170.0348897175493, 122.38839723027769`}, {
         "IAIN", 10, 145.49730460626753`, 72.88261695587897}, {
         "GLENN", 5, 135.4407079475314, 87.18477046716872}, {
         "DENNIS", 4, 165.14624643335776`, 82.23620350949983}, {
         "GAVIN", 6, 176.23193719254925`, 115.15320471750704`}, {
         "BRUCE", 3, 149.07119230784724`, 99.43225371318356}, {
         "DONALD", 6, 170.337454459101, 96.75321322303873}, {
         "DOMINIC", 1, 172.71051491107636`, 71.69724645980943}, {
         "SUSAN", 11, 152.5421599770109, 101.00837045746091`}, {
         "JULIE", 3, 157.11797114142047`, 77.80264325704188}, {
         "KAREN", 2, 146.986722004392, 89.44171968339825}, {
         "JACQUELINE", 10, 173.38511640238693`, 124.67744206118425`}, {
         "DEBORAH", 2, 169.73706977240633`, 79.99217502416418}, {
         "TRACEY", 1, 160.26608687294748`, 78.02485623712724}, {
         "JANE", 12, 128.68046215448234`, 78.00861341373839}, {
         "HELEN", 11, 185.091525294274, 78.66553208210432}, {
         "DIANE", 2, 110.94650406355507`, 109.14057304670334`}, {
         "SHARON", 6, 166.89690134866333`, 85.8601081469395}, {
         "TRACY", 6, 183.40735270307533`, 87.63424257180796}, {
         "ANGELA", 11, 161.21530159820688`, 86.18718224812194}, {
         "SARAH", 3, 134.9382624328121, 73.25733241570984}, {
         "ALISON", 10, 173.11607709033655`, 85.72641502143426}, {
         "CAROLINE", 8, 150.86618593744893`, 100.24076867409453`}, {
         "AMANDA", 8, 130.34899182596146`, 97.53504040881036}, {
         "SANDRA", 11, 169.79780794969815`, 82.1549916233784}, {
         "LINDA", 5, 152.8188441117288, 89.09710202914869}, {
         "CATHERINE", 1, 163.33952357516313`, 89.5950862353509}, {
         "ELIZABETH", 7, 176.29129258765772`, 82.90698583783207}, {
         "CAROL", 9, 175.13634992809267`, 101.86417444139364`}, {
         "JOANNE", 9, 136.85921292649266`, 91.28211844494145}, {
         "WENDY", 4, 180.75403493416258`, 83.57795798792746}, {
         "JANET", 8, 194.2630327301081, 94.64980160529915}, {
         "DAWN", 9, 164.65158151389124`, 88.45384038940477}, {
         "CHRISTINE", 5, 155.94472494135837`, 107.33290617965682`}, {
         "NICOLA", 4, 167.19931733411173`, 94.59570390951187}, {
         "GILLIAN", 2, 171.56827824364018`, 78.7237261808526}, {
         "SALLY", 11, 125.03424313206318`, 114.78672941493934`}, {
         "MARIA", 8, 153.30870978104576`, 107.77689885575363`}, {
         "MICHELLE", 9, 152.26145406957954`, 87.30768422277582}, {
         "DEBRA", 5, 157.0759526406178, 96.10460191359488}, {
         "PAULA", 5, 185.45827545765678`, 107.69038779867782`}, {
         "ANNE", 3, 154.14540246860867`, 118.9690123437473}, {
         "LORRAINE", 7, 167.12427438454623`, 103.34629135119962`}, {
         "PATRICIA", 11, 132.74138361730712`, 91.78774290236815}, {
         "MARY", 10, 199.63889357008384`, 97.5805957419186}, {
         "DENISE", 4, 125.84472314047512`, 99.26474358683468}, {
         "MARGARET", 7, 150.16206757739917`, 83.76650697083167}, {
         "ANN", 1, 151.33756035387142`, 86.56533007552348}, {
         "BEVERLEY", 7, 131.44848132842355`, 93.01938470570256}, {
         "DONNA", 4, 114.57656438669204`, 113.51700036003179`}, {
         "ELAINE", 11, 145.025298831917, 101.41638654307926`}, {
         "FIONA", 5, 137.17738208303356`, 94.13575401835656}, {
         "JENNIFER", 4, 152.50580716141351`, 86.44763756596542}, {
         "LESLEY", 2, 150.7750097000099, 79.42336398024335}, {
         "LOUISE", 9, 143.08006491418837`, 85.80083315688282}, {
         "MANDY", 1, 167.63830272621573`, 104.55798982003577`}, {
         "TINA", 10, 157.7197620089166, 89.07876415054176}, {
         "JAYNE", 1, 170.90499888657098`, 78.70201063547256}, {
         "SUZANNE", 7, 161.2122790124351, 79.67287666658835}, {
         "ANDREA", 7, 162.7305463195309, 99.34980212516021}, {
         "PAULINE", 9, 179.05529647719953`, 85.5312677062828}, {
         "LISA", 2, 116.69414381814249`, 97.06904442895089}, {
         "CLAIRE", 8, 149.0292012363618, 78.4228693468191}, {
         "KIM", 6, 187.76515717559573`, 83.20412702152069}, {
         "JULIA", 6, 156.14852994118095`, 85.37889703368607}, {
         "TERESA", 6, 151.17879489630934`, 102.71367272666635`}, {
         "HEATHER", 6, 163.07286611103962`, 92.40100451386219}, {
         "KATHRYN", 12, 184.75303949166766`, 86.52149578589932}, {
         "LYNN", 10, 150.17817241678418`, 93.72711343678498}, {
         "RUTH", 8, 162.76431483389447`, 99.62689640287944}, {
         "YVONNE", 6, 144.10893436289984`, 99.62426505750014}, {
         "JUDITH", 5, 149.91887417331418`, 86.40255856193437}, {
         "MELANIE", 3, 136.28771493784708`, 94.80692490214447}, {
         "MARIE", 2, 167.6653048144736, 89.65238548044184}, {
         "PAMELA", 11, 158.89027280054248`, 94.53763636888264}, {
         "CAROLE", 12, 147.69964354295337`, 85.35773367247377}, {
         "BARBARA", 2, 199.3407114555873, 78.60259219368085}, {
         "GAIL", 3, 159.50892514196858`, 105.61993355210532`}, {
         "LYNNE", 8, 123.45120422882107`, 98.73106755897471}, {
         "CLARE", 8, 179.06459801368496`, 73.27199826779383}, {
         "JANICE", 2, 162.6692851509827, 85.8776485076234}, {
         "RACHEL", 1, 155.66935422033617`, 78.2114410984266}, {
         "JILL", 12, 140.33618437706988`, 92.10863031514283}, {
         "KATHERINE", 6, 176.97180029602384`, 93.27870824127933}, {
         "KATHLEEN", 2, 115.24776264831024`, 77.42400739754079}, {
         "SHIRLEY", 1, 139.2283038574463, 86.16989739830949}, {
         "ANNETTE", 3, 173.1940199550529, 87.7035182790227}, {
         "CAROLYN", 12, 169.841032761887, 95.2398797184451}, {
         "ANNA", 7, 152.8414988373677, 110.39908370304303`}, {
         "SARA", 2, 157.44782946880386`, 76.02727779193724}, {
         "VALERIE", 10, 144.76141736737858`, 96.66639876419364}, {
         "CHERYL", 8, 168.12079778406425`, 84.10735587269843}, {
         "JEANETTE", 8, 179.43840178465385`, 87.86855322944584}, {
         "KAY", 9, 168.16480833599834`, 79.91980517689723}, {
         "ANITA", 3, 187.0129413660036, 100.30645322383455`}, {
         "MAXINE", 9, 162.63770883696924`, 76.07390451273785}, {
         "FRANCES", 11, 122.51333136410926`, 92.73398206810488}, {
         "JOANNA", 6, 158.7750403176811, 90.33375507283642}, {
         "THERESA", 5, 177.65535841698554`, 87.09556485059869}, {
         "DEBBIE", 8, 152.9384121511354, 83.94182035014143}, {
         "LYNDA", 5, 173.79508583582347`, 83.07747012152355}, {
         "MAUREEN", 2, 147.6184015257136, 77.47736639487685}, {
         "ROSEMARY", 3, 182.59531443916367`, 84.3036448849383}, {
         "MICHELE", 3, 156.61567501849584`, 84.9104493028288}, {
         "LAURA", 1, 180.06997914014616`, 79.74417454363066}, {
         "REBECCA", 9, 173.67803213221538`, 85.14494797798156}, {
         "SHEILA", 8, 154.72353923990676`, 88.10499652485782}, {
         "STEPHANIE", 9, 155.46215199650666`, 
          89.26396727334539}}, $CellContext`columnNames = {
        "Birth Month", "Height", "Weight"}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.661686481225089*^9, 3.6616864849765253`*^9}, {
   3.6616865407910137`*^9, 3.661686559513768*^9}, 3.6616866209018106`*^9, {
   3.661686701176491*^9, 3.6616867080498247`*^9}, 3.6627127084496937`*^9}],

Cell[TextData[{
 "In this course we do not consider the nature of the Wolfram Language from \
the point of view of a computer programmer and in fact deliberately gloss \
over functionality required to build generic solutions to programming tasks. \
It\[CloseCurlyQuote]s advised that you investigate the ",
 StyleBox["Wolfram Lnguage and ",
  FontWeight->"Bold"],
 StyleBox["Mathematica",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" Fundamentals",
  FontWeight->"Bold"],
 " course to solidify the knowkedge you develop here."
}], "Text",
 CellChangeTimes->{{3.6627980019432287`*^9, 3.662798090175458*^9}}],

Cell["\<\
This course also does not cover the diverse analytical capabilities of the \
Wolfram Language, for instance its network analysis, machine learning, or \
analytical calculus functions. Future ITLP course may concentrate on these \
features if there is sufficient interest.\
\>", "Text",
 CellChangeTimes->{{3.662797857982873*^9, 3.662797949965293*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scripting Languages and the Wolfram Language", "Title",
 CellChangeTimes->{{3.6591673240861053`*^9, 3.65916732477063*^9}, {
  3.659169774064814*^9, 3.659169780509164*^9}, {3.662798124189246*^9, 
  3.662798128981336*^9}, {3.663574386493498*^9, 3.6635743944232073`*^9}}],

Cell["\<\
The Wolfram Language is an example of a scripting language, for our purposes \
a scripting language is defined as follows:\
\>", "Text",
 CellChangeTimes->{{3.662798130738488*^9, 3.6627981610101233`*^9}}],

Cell["\<\
Scripting languages allow users to write code that automate tasks in a \
\[OpenCurlyDoubleQuote]read-eval-print\[CloseCurlyDoubleQuote] loop, do not \
require a deep understanding of computer science and typically provide a wide \
array of libraries of built-in functions for performing complex operations in \
a simple way. Often without understanding the specifics of the alogorithm or \
underlying mathematica principles.\
\>", "Text",
 CellChangeTimes->{{3.662798223925988*^9, 3.66279840389142*^9}}],

Cell["Scripting languages include:", "Text",
 CellChangeTimes->{{3.66279840989503*^9, 3.662798422814374*^9}}],

Cell[CellGroupData[{

Cell["Python", "Item",
 CellChangeTimes->{{3.662798426171769*^9, 3.662798430300476*^9}}],

Cell["R", "Item",
 CellChangeTimes->{{3.662798426171769*^9, 3.6627984310885897`*^9}}],

Cell["Wolfram Language", "Item",
 CellChangeTimes->{{3.662798426171769*^9, 3.662798433998742*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Wolfram Language", "Section",
 CellChangeTimes->{{3.6635744047397747`*^9, 3.6635744076197243`*^9}}],

Cell[TextData[{
 "The Wolfram Language is fairly unique in the scripting languages in that it \
was originally designed for solving calculus and algebraic problems.\n\nIt is \
therefore often described as a ",
 StyleBox["symbolic language",
  FontSlant->"Italic"],
 " which provides two benefits to all users"
}], "Text",
 CellChangeTimes->{{3.662798130738488*^9, 3.6627981610101233`*^9}, {
  3.662798450476117*^9, 3.662798548089115*^9}, {3.662798602041827*^9, 
  3.662798626568694*^9}}],

Cell["Mathematical problems can be solved directly and simply", "Item",
 CellChangeTimes->{{3.662798862086813*^9, 3.6627988726104507`*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "*", 
       RowBox[{"x", "^", "2"}]}], "+", "x", "+", "2"}], "\[Equal]", "0"}], 
    "}"}], ",", "x"}], "]"}]], "Input"],

Cell["\<\
Output can be represented symbolically, allowing the user to understand how \
expressions are evaluated\
\>", "Item",
 CellChangeTimes->{{3.6627988766739483`*^9, 3.6627989070869493`*^9}}],

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "+", 
     RowBox[{"b", "^", "#"}]}], "&"}], ",", "1", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.662798908684688*^9, 3.662798944856968*^9}}],

Cell[TextData[{
 "Other scripting languages have a broad community of users who contribute \
small, dedicated packages/libraries for specific functionality, for instance \
in R there is library called ",
 StyleBox["lubridate",
  FontSlant->"Italic"],
 " that is incredibly useful for handling dates."
}], "Text",
 CellChangeTimes->{{3.6627990730792427`*^9, 3.662799104112599*^9}, {
  3.6627991719006977`*^9, 3.662799272642511*^9}}],

Cell["\<\
In the case of the Wolfram Language, the vast majority of functionality is \
developed by Wolfram Research and built into the product. This is often an \
advantage as functions work together seemlessly and handle multiple data \
types, however there is a disadvantage in the inner workings of functions \
often being unavailable to the end user.\
\>", "Text",
 CellChangeTimes->{{3.662799276486226*^9, 3.662799432545575*^9}, {
  3.662799470243355*^9, 3.662799480189274*^9}, {3.662799713072604*^9, 
  3.66279977304539*^9}, {3.663574451924965*^9, 3.663574452553383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"digit", "=", 
   RowBox[{"Classify", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4/596Rq0V
f//DQScTEKT8gHF/enE3lbMzxb2F8h8Khf3/38HOlA9TMPUVSBMr65T/yMCA
URqFv45R6B6KACPTfFS+xDdkbhCq/v1sDNORuMd5mIKRuJ/8mFQvIrgfA5n0
kAy7bMrk8QPBvWnA5HwLSW8gk/QJCPPdqlWrThUzMWWWqaqqqqiqyjP5Ok/k
ZoIARsf8tuc/v/+OY5Kvrn785cuXXxBNADV69gw=
          "], {{0, 20}, {16, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/yOB31euZHsw
yTxDiJxts2FmZmJmZr4KFfh7voELyGVmEpYwegUVewlSwuE0a/UrhMY0ZmaH
/pvIhv+fwcS08j8q6BdiNvqCKnSQi1n+ParQFQEm66uoQv/TmZkSpk6deglJ
6CUTEyMTEDA0IYkBnSYfLs/MJHEGLvb31at9H/9/fMXE3PgfHehhEcOi7iAD
0z4Y+zaUdmOS/whl1vOJi+fv/fn3vDhTAkzZx3ZboFuc/JmZ1S8gDPp9VRUU
usxT4SIAQf8y1Q==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 45, 1, 66, 255, 255, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 112, 3, 2, 127, 255, 255, 255, 
          255, 255, 255, 255}, {255, 255, 255, 111, 4, 2, 70, 252, 255, 255, 
          154, 14, 14, 14, 100}, {255, 255, 214, 20, 2, 34, 148, 255, 255, 
          152, 7, 2, 2, 67, 184}, {255, 255, 39, 2, 35, 214, 255, 255, 151, 9,
           2, 154, 230, 245, 255}, {255, 217, 18, 2, 133, 255, 255, 255, 66, 
          2, 18, 201, 255, 255, 255}, {255, 107, 2, 80, 249, 255, 255, 155, 
          11, 2, 158, 255, 255, 255, 255}, {220, 14, 2, 93, 255, 190, 139, 12,
           2, 29, 217, 255, 255, 255, 255}, {143, 2, 2, 67, 72, 11, 2, 2, 2, 
          2, 37, 188, 255, 255, 255}, {143, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 40, 
          151, 255, 255}, {143, 2, 2, 2, 52, 61, 14, 2, 46, 49, 2, 2, 27, 232,
           255}, {224, 184, 117, 184, 244, 255, 53, 2, 190, 240, 160, 19, 2, 
          131, 255}, {255, 255, 255, 255, 255, 255, 76, 2, 190, 255, 255, 85, 
          2, 28, 255}, {255, 255, 255, 255, 255, 255, 183, 2, 190, 255, 255, 
          172, 2, 10, 185}, {255, 255, 255, 255, 255, 255, 183, 2, 174, 255, 
          255, 220, 13, 2, 151}, {255, 255, 255, 255, 255, 255, 227, 37, 24, 
          130, 255, 255, 92, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 141,
           7, 23, 195, 245, 85, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
          255, 73, 2, 2, 58, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255, 
          255, 228, 111, 2, 2, 2, 2, 151}, {255, 255, 255, 255, 255, 255, 255,
           255, 255, 229, 109, 2, 2, 83, 204}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYH4PxScmurI
awzj/D+z3JKNgZGRs/c1hD+fi1EufdbxhnDGchD372pG1vzPINbvDIFTQKqL
kXEmTK9i0P//txgZ98IN22r+/38xoyic/3+b5KvHwiyTEQJfZHtPMIr8RwLu
licYQ5EFhNVOMK5AFhBSPcFYisTfzWx5gT0JSWAbY8N/VWRD1zMu/6/K+xQh
EKP55f9ORkU4/4hC4P//fzIY059D+GvUwJ57JMkoVnz81q1lkzn5joAlXvdJ
sTCCgPkhuOYtMTaMZp3vQUwAQLsBEA==
          "], {{0, 20}, {17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYH4PxjcTkgQ
lGVjTpgD4Z70VJCtrNt/tkpU5DqI3yycewsi88ZEHkgeZZzw7z8UbGIFEt+2
fIHx/99g/Y8KJqmh8nfynkPhn5aPQuEf1A36gcyfI7b0FxL3W4XkUmTpZ5pK
x5C4XxfwJj5C4t8KEjn1B4m/zlLlAhL3Y7uAx0sk/r9w5i4U15xgbICynj59
+v/L7rPbONllIUBISEhWgpHj/8VkY7dEIEivbwWS7QcBnGwU2Q==
          "], {{0, 20}, {
          17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 252, 118, 33, 0, 1, 1, 1, 1, 1, 24, 155, 
          255}, {255, 165, 37, 22, 46, 60, 64, 137, 152, 120, 64, 25, 23, 
          212}, {174, 11, 85, 209, 247, 253, 255, 255, 255, 255, 255, 178, 1, 
          130}, {55, 80, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 1, 
          206}, {178, 244, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1,
           220}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 
          1, 220}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 99,
           38, 244}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          42, 55, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          208, 5, 55, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
           174, 1, 133, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 174, 1, 144, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 168, 1, 213, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 86, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 
          255, 255, 255, 252, 34, 1, 233, 255}, {255, 255, 255, 255, 255, 255,
           255, 255, 255, 254, 78, 1, 233, 255}, {255, 255, 255, 255, 255, 
          255, 255, 255, 255, 251, 13, 36, 244, 255}, {255, 255, 255, 255, 
          255, 255, 255, 255, 255, 209, 1, 68, 255, 255}, {255, 255, 255, 255,
           255, 255, 255, 255, 255, 161, 1, 135, 255, 255}, {255, 255, 255, 
          255, 255, 255, 255, 255, 255, 161, 1, 220, 255, 255}}, {{0, 20}, {
          14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 252, 150, 123, 123, 123, 65, 0, 2, 2, 25, 123, 
          156, 252}, {255, 255, 126, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 150}, {
          255, 255, 74, 3, 3, 3, 3, 20, 38, 39, 39, 39, 39, 39, 214}, {255, 
          255, 74, 3, 3, 3, 99, 211, 255, 255, 255, 255, 255, 255, 255}, {255,
           220, 23, 3, 23, 63, 237, 255, 255, 255, 255, 255, 255, 255, 255}, {
          255, 206, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {255, 166, 3, 3, 88, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255}, {255, 86, 3, 3, 191, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255}, {239, 50, 3, 3, 207, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255}, {218, 3, 3, 3, 52, 134, 134, 134, 133, 145, 
          255, 255, 255, 255, 255}, {255, 91, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 
          88, 223, 255}, {255, 211, 27, 9, 3, 3, 3, 3, 2, 3, 3, 3, 3, 184, 
          255}, {255, 255, 255, 181, 159, 159, 159, 159, 153, 39, 34, 3, 3, 
          30, 225}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 243, 
          59, 3, 3, 207}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          200, 26, 3, 3, 207}, {255, 255, 255, 164, 103, 244, 255, 255, 255, 
          248, 71, 3, 3, 3, 207}, {255, 255, 255, 62, 3, 179, 255, 214, 164, 
          46, 3, 3, 3, 102, 246}, {255, 255, 255, 62, 3, 16, 38, 21, 2, 3, 3, 
          3, 26, 218, 255}, {255, 255, 255, 62, 3, 3, 3, 3, 2, 3, 3, 99, 237, 
          255, 255}, {255, 255, 255, 246, 106, 3, 3, 3, 2, 14, 198, 251, 255, 
          255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 219, 87, 139, 253}, {255, 255, 255, 
          255, 119, 1, 1, 212}, {255, 255, 255, 255, 62, 1, 46, 236}, {255, 
          255, 255, 218, 26, 1, 94, 255}, {255, 255, 255, 177, 1, 1, 206, 
          255}, {255, 255, 255, 68, 1, 1, 206, 255}, {255, 255, 255, 68, 1, 1,
           206, 255}, {255, 255, 255, 68, 1, 15, 215, 255}, {255, 255, 255, 
          68, 1, 103, 255, 255}, {255, 255, 213, 18, 1, 138, 255, 255}, {255, 
          255, 165, 1, 1, 200, 255, 255}, {255, 255, 74, 1, 1, 200, 255, 
          255}, {255, 239, 51, 1, 56, 244, 255, 255}, {255, 205, 1, 1, 69, 
          255, 255, 255}, {255, 205, 1, 1, 69, 255, 255, 255}, {255, 155, 1, 
          1, 118, 255, 255, 255}, {255, 80, 0, 0, 193, 255, 255, 255}, {235, 
          45, 1, 1, 193, 255, 255, 255}, {211, 1, 1, 60, 252, 255, 255, 
          255}, {232, 40, 89, 218, 255, 255, 255, 255}}, {{0, 20}, {8, 0}}, {
          0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{8, 20},
        PlotRange->{{0, 8}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4/2dp68//
kcAHIcbW7ydOGIs45uW1/wYKHGXkUmRiYhQXARLZP///7WZkU8zPP/niycmT
+kxT/mczMc6E6Z3K1PB/g9deGPcIg+pFJJOX8TLWI3GXcvFX/YHzPqdyCR5C
SO6VZrK9Bud96ZdmqPwE5+6QY2KSzl0M5V1UZWViVedjYr8A4a8SyZxz9v82
DqaTSJbdA5r3HsG9Kc0QDzHv2pQT7VPy5JniP0Jk6oG+ZGJibYfZtgzMd0I4
ZUNsjGYswigAoTroBA==
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 229, 134, 121, 2, 2, 0, 58, 242, 255, 255, 255,
           255}, {255, 226, 47, 3, 3, 3, 3, 2, 3, 14, 218, 255, 255, 255}, {
          133, 22, 3, 3, 3, 3, 3, 96, 57, 3, 67, 235, 255, 255}, {42, 3, 3, 3,
           68, 216, 145, 255, 182, 54, 3, 69, 234, 255}, {63, 52, 3, 3, 162, 
          255, 255, 255, 255, 186, 13, 3, 189, 255}, {220, 188, 3, 33, 231, 
          255, 255, 255, 255, 255, 70, 3, 91, 255}, {255, 188, 3, 43, 255, 
          255, 255, 255, 255, 255, 187, 11, 48, 242}, {255, 174, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 176}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 176}, {255, 54, 2, 42, 255, 
          255, 255, 255, 255, 255, 255, 54, 2, 175}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 120}, {255, 55, 3, 43, 255, 
          255, 255, 255, 255, 255, 255, 55, 3, 162}, {255, 98, 3, 9, 134, 255,
           255, 255, 255, 255, 229, 39, 3, 176}, {255, 188, 3, 3, 30, 255, 
          255, 255, 255, 255, 139, 3, 3, 176}, {255, 237, 52, 3, 24, 232, 255,
           255, 255, 235, 34, 3, 14, 192}, {255, 255, 90, 3, 3, 128, 255, 255,
           238, 136, 3, 3, 147, 255}, {255, 255, 235, 67, 3, 8, 95, 164, 56, 
          3, 3, 60, 231, 255}, {255, 255, 255, 217, 15, 3, 3, 2, 3, 3, 57, 
          233, 255, 255}, {255, 255, 255, 255, 242, 59, 3, 2, 60, 136, 236, 
          255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 246, 172, 89, 50, 1, 1, 0, 1, 76, 199, 255, 255, 
          255}, {178, 33, 1, 2, 41, 62, 127, 135, 75, 5, 71, 248, 255, 255}, {
          199, 135, 240, 240, 250, 255, 255, 255, 255, 130, 5, 227, 255, 
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 226, 27, 60, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 188, 97, 24, 2, 100, 255, 
          255, 255}, {255, 255, 255, 255, 204, 19, 1, 0, 8, 29, 1, 67, 246, 
          255}, {255, 255, 255, 165, 17, 2, 2, 35, 186, 252, 162, 27, 123, 
          255}, {255, 255, 255, 50, 3, 30, 157, 246, 255, 255, 255, 131, 12, 
          226}, {255, 255, 255, 166, 173, 255, 255, 255, 255, 255, 255, 215, 
          1, 153}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 45, 92}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 75, 37}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 76, 2}, {255, 255, 255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 76, 2}, {255, 255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 76, 2}, {255, 255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 255, 54, 77}, {129, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 149, 0, 188}, {23, 239, 255, 255, 255, 255, 255,
           255, 255, 255, 178, 20, 83, 247}, {89, 37, 217, 247, 255, 255, 255,
           244, 200, 113, 10, 55, 228, 255}, {231, 42, 1, 33, 61, 61, 61, 19, 
          2, 18, 95, 230, 255, 255}, {255, 246, 172, 112, 55, 77, 55, 85, 151,
           231, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 232, 127, 0, 2, 136, 255, 255, 255, 255, 
          255, 255}, {255, 255, 242, 46, 3, 2, 3, 68, 223, 255, 255, 255, 255,
           255}, {255, 195, 46, 3, 3, 2, 3, 3, 116, 255, 255, 255, 255, 
          255}, {255, 14, 3, 3, 3, 115, 40, 3, 15, 255, 255, 255, 255, 255}, {
          141, 0, 2, 11, 180, 251, 76, 11, 68, 255, 255, 255, 255, 255}, {142,
           2, 3, 162, 255, 226, 116, 149, 217, 255, 217, 86, 161, 255}, {55, 
          2, 85, 242, 217, 173, 236, 255, 179, 157, 46, 3, 78, 255}, {30, 2, 
          46, 55, 18, 17, 117, 30, 6, 2, 3, 3, 3, 204}, {92, 1, 2, 2, 2, 1, 2,
           2, 2, 1, 2, 2, 14, 255}, {217, 109, 21, 3, 28, 52, 3, 47, 84, 2, 3,
           3, 140, 255}, {255, 255, 217, 199, 224, 248, 199, 242, 142, 2, 3, 
          3, 227, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 92, 2, 3, 
          128, 252, 255}, {255, 255, 255, 255, 255, 255, 255, 195, 14, 1, 8, 
          205, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 2, 84, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 24, 236, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 30, 255, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 57, 2, 141, 255,
           255, 255, 255}, {255, 255, 255, 255, 255, 255, 217, 21, 3, 142, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 242, 46, 3, 142,
           255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 58, 3, 
          192, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 246, 129, 5, 105, 255,
           255}, {255, 255, 255, 255, 255, 255, 255, 112, 2, 2, 134, 255, 
          255}, {255, 255, 255, 255, 255, 255, 227, 15, 2, 64, 240, 255, 
          255}, {255, 255, 255, 255, 255, 255, 153, 2, 2, 134, 255, 255, 
          255}, {255, 255, 255, 255, 255, 182, 1, 2, 2, 158, 255, 255, 255}, {
          255, 255, 255, 255, 255, 106, 1, 2, 119, 252, 255, 255, 255}, {255, 
          255, 255, 255, 178, 4, 1, 5, 213, 255, 255, 255, 255}, {255, 255, 
          255, 247, 56, 2, 6, 148, 255, 255, 255, 255, 255}, {255, 255, 251, 
          99, 2, 2, 34, 255, 255, 255, 255, 255, 255}, {255, 255, 195, 2, 2, 
          2, 178, 255, 255, 255, 255, 255, 255}, {255, 204, 10, 1, 1, 112, 
          250, 192, 111, 111, 135, 247, 255}, {255, 137, 2, 2, 2, 189, 116, 2,
           2, 2, 2, 100, 249}, {209, 11, 2, 2, 35, 53, 1, 2, 2, 2, 2, 2, 
          233}, {94, 2, 2, 2, 2, 2, 0, 2, 64, 65, 2, 2, 233}, {89, 2, 2, 2, 2,
           2, 46, 167, 240, 98, 2, 2, 233}, {59, 2, 2, 2, 2, 40, 231, 255, 
          220, 8, 2, 33, 241}, {2, 2, 2, 2, 39, 229, 248, 214, 33, 2, 4, 145, 
          255}, {17, 2, 2, 2, 32, 100, 44, 2, 2, 5, 139, 255, 255}, {89, 2, 2,
           2, 2, 2, 1, 2, 2, 139, 255, 255, 255}, {233, 135, 11, 2, 2, 2, 15, 
          112, 203, 253, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/4PB6zZLRvud
/1HAXCYmJkaHL0giz+y4QGJMuQihp1ZMTFyR6YxMCQixLiYmpQv/HyOLzeVh
cjv+/08TI1MNXEyaiWnv//93mBiFX8LFqtiYVr74k8jEiGTF/6VFHHKJTEzs
u1Gct/8a0C2VqE7+H8DIyIgm5MvGxOSJKjSBA6iVSUp68sLXMKFdIJ+B/MbE
pKg5EaJKjQkuBvSkmZnZUy+QRpu9e/fu2etqwcvExGFRXwgU4el9BjXmwPr1
O/7/ZwAqn4/mDA4mvkVoQv+PtX9CF/oPACEaEuw=
          "], {{0, 20}, {20, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 244, 163, 41, 2, 173, 
          255, 255}, {255, 255, 255, 255, 255, 255, 173, 82, 3, 2, 3, 12, 215,
           255}, {255, 255, 255, 255, 234, 123, 2, 1, 2, 1, 2, 1, 104, 255}, {
          255, 255, 255, 234, 52, 2, 3, 2, 125, 104, 23, 2, 104, 255}, {255, 
          255, 234, 123, 2, 1, 42, 214, 255, 224, 22, 1, 164, 255}, {255, 255,
           153, 2, 3, 83, 245, 255, 255, 204, 3, 22, 225, 255}, {255, 255, 52,
           1, 22, 255, 255, 255, 255, 255, 214, 21, 103, 173}, {255, 255, 52, 
          2, 63, 255, 255, 255, 255, 234, 72, 2, 3, 52}, {255, 255, 72, 1, 2, 
          163, 224, 183, 103, 1, 2, 31, 133, 173}, {255, 255, 153, 2, 3, 2, 
          23, 2, 3, 22, 104, 235, 255, 255}, {255, 255, 255, 41, 2, 1, 2, 1, 
          83, 214, 255, 255, 255, 255}, {255, 255, 173, 2, 3, 2, 3, 42, 245, 
          255, 255, 255, 255, 255}, {255, 204, 22, 1, 2, 1, 2, 1, 184, 255, 
          255, 255, 255, 255}, {255, 22, 3, 2, 125, 124, 3, 2, 104, 255, 255, 
          255, 255, 255}, {153, 1, 2, 72, 255, 255, 52, 1, 2, 234, 255, 255, 
          255, 255}, {113, 2, 3, 72, 255, 255, 52, 2, 3, 153, 255, 255, 255, 
          255}, {113, 0, 2, 92, 255, 203, 22, 1, 2, 255, 255, 255, 255, 
          255}, {235, 2, 3, 12, 52, 22, 3, 2, 84, 255, 255, 255, 255, 255}, {
          255, 173, 32, 1, 2, 1, 2, 52, 194, 255, 255, 255, 255, 255}, {255, 
          255, 235, 104, 23, 2, 125, 235, 255, 255, 255, 255, 255, 255}}, {{0,
           20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK////390UwsCQ
ueg/EghjAgPVh6hCWoX+TEytcKHTrEy69z///2nIVAwX28Si+wxItbIz7UPo
ffAWROoxIYuBQRcHk+VXVKHNHEwSB9CU1TMx5aMJ+XMyJXxGFXomyiR2B02Z
JRNTEZrQRnYmJzSdb8wxlVUyMQWhKfvPzsT07D+m2JXXQPDr/6/Xr29lZmbm
fAWJgUF4QSSU1fI/kAkB2Dg4wrq6jv3/39nS0gJSktLScg1iHAAuSyWV
          "], {{0, 
          20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4Pwy82Z9p
yMjg/hIucE2FCQy6YAJvY4A8NmkmJr6PUJECoID85A1AchGY/ymWlYkp/Mb/
G3wwEXsmJoHiv0CGNFRkB1BFLlgKKvJWhonJ+z+ySDfQ0Otggb9STFwf/v8/
zcnEtByiZDYTkyKQimRiMn8LFjily8RU8v//fGYmpvsQJTZMTLxAZjETk+V3
sEAeKxPnBrAE61awwGRWJu52IP2Ig0kGxH/fAdRdAGItZAKLHMhgYuKM/g4X
OVzBz8SksQFiPlCEVZUN6Gejd9BguMMODiip6jfwwJspy8QUu/YJnP8fANWc
32I=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4tabc/f9I
4BYT02E0/iY0/mw0fi4a3xvOOf4RmX8smFfjEZBfCeHe52ViYlqbC7dvGROT
GVNyEoz/2YTJZjNTciIjI4T/gJFxiyXjbbh8HpPcDCbjD0h8EVmmhf+R+ExM
xu9R+ALr/4P4C0Dc3/5MTLOA9GGI+9bqAZVvh7ifp32uATOjZShTB0hdIxMI
mK39+iqK/QRQ4M+cCK3qlz9BrC9//v8HAPcE1hc=
          "], {{0, 20}, {16, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYH4PxwcYnD9
+B8JbJJkYtqOxF8hw8QkfA/B/y3NxMSUh+D/SGRi4mF6gRBYxMQkd37jLzj/
Iw8T64z//z8sMboIEZjIxFT1/8scdiYmyecg/n42JtP3f2qYQKAFyP9pz8R3
738bmM9kAtEw6f8aHiYmvnV2IIGPIkyCf19pM3H4f/0kAdISy8SU8N+Zicn/
/xcvJtNv//+7MDHdOsLCZPbxvitT5Jf//5+IMDFNtQA6zI6Je+Z3oJFvlCDG
M4nVPQa74ccCdjDfohfq6r//V4YBhRqP/EAKjJMgJauQBL4GMDnt+QdhAwB0
3tkc
          "], {{0, 20}, {17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 157, 22, 154}, {255, 255, 255, 255, 
          1, 2, 39}, {255, 255, 255, 223, 0, 67, 205}, {255, 255, 221, 36, 1, 
          163, 255}, {255, 255, 162, 2, 1, 163, 255}, {255, 255, 151, 1, 23, 
          255, 255}, {255, 255, 47, 2, 98, 255, 255}, {255, 255, 47, 2, 139, 
          255, 255}, {255, 255, 47, 2, 234, 255, 255}, {255, 191, 6, 2, 255, 
          255, 255}, {255, 69, 1, 1, 255, 255, 255}, {255, 70, 2, 76, 255, 
          255, 255}, {242, 51, 2, 118, 255, 255, 255}, {208, 2, 2, 212, 255, 
          255, 255}, {103, 2, 2, 232, 255, 255, 255}, {92, 1, 94, 255, 255, 
          255, 255}, {93, 2, 94, 255, 255, 255, 255}, {93, 2, 94, 255, 255, 
          255, 255}, {187, 2, 94, 255, 255, 255, 255}, {229, 33, 146, 255, 
          255, 255, 255}}, {{0, 20}, {7, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{7, 20},
        PlotRange->{{0, 7}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{38, 78, 255, 255, 255, 255, 255, 255}, {39, 2, 143, 255, 
          255, 255, 255, 255}, {39, 1, 41, 229, 255, 255, 255, 255}, {39, 1, 
          1, 142, 255, 255, 255, 255}, {189, 18, 1, 41, 230, 255, 255, 255}, {
          255, 159, 1, 1, 190, 255, 255, 255}, {255, 176, 1, 1, 146, 255, 255,
           255}, {255, 176, 1, 1, 60, 255, 255, 255}, {255, 198, 15, 1, 60, 
          255, 255, 255}, {255, 255, 52, 0, 14, 200, 255, 255}, {255, 255, 
          149, 1, 1, 153, 255, 255}, {255, 255, 197, 12, 1, 53, 255, 255}, {
          255, 255, 255, 58, 1, 53, 255, 255}, {255, 255, 255, 58, 1, 18, 203,
           255}, {255, 255, 255, 58, 1, 1, 160, 255}, {255, 255, 255, 72, 1, 
          1, 18, 202}, {255, 255, 255, 228, 39, 1, 0, 160}, {255, 255, 255, 
          255, 72, 1, 1, 40}, {255, 255, 255, 255, 195, 1, 0, 43}, {255, 255, 
          255, 255, 195, 1, 92, 214}}, {{0, 20}, {8, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{8, 20},
        PlotRange->{{0, 8}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 223, 119, 34, 1, 52, 
          236}, {255, 255, 233, 141, 221, 179, 31, 2, 1, 2, 2, 103}, {255, 
          255, 64, 2, 14, 23, 2, 53, 175, 96, 2, 95}, {255, 238, 31, 2, 1, 2, 
          53, 236, 255, 117, 2, 95}, {255, 149, 1, 1, 0, 131, 255, 255, 210, 
          10, 8, 205}, {242, 29, 2, 2, 131, 253, 255, 255, 185, 2, 25, 255}, {
          102, 2, 4, 127, 255, 255, 255, 255, 143, 2, 34, 255}, {1, 2, 127, 
          255, 255, 255, 255, 255, 26, 2, 151, 255}, {104, 121, 238, 255, 255,
           255, 255, 162, 1, 14, 221, 255}, {255, 255, 255, 255, 255, 255, 
          255, 113, 1, 49, 255, 255}, {255, 255, 255, 255, 255, 255, 252, 64, 
          1, 124, 255, 255}, {255, 255, 255, 255, 255, 255, 198, 2, 1, 207, 
          255, 255}, {255, 255, 255, 255, 255, 255, 139, 1, 45, 246, 255, 
          255}, {255, 255, 255, 255, 255, 255, 123, 2, 88, 255, 255, 255}, {
          255, 255, 255, 255, 255, 250, 43, 2, 162, 255, 255, 255}, {255, 255,
           255, 255, 255, 208, 2, 36, 230, 255, 255, 255}, {255, 255, 255, 
          255, 255, 149, 1, 94, 255, 255, 255, 255}, {255, 255, 255, 255, 255,
           117, 2, 95, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 117, 2, 
          95, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 166, 27, 186, 
          255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/0PB70eP6o2Z
mJgO/IeDM/XMzMxMQNwH5CwDibwJ5gTy/aYePy7R92bV109AoU+2zMx8PY//
AJkBm22ZH4OUFTFxN52BmPHJmEniGViM2eUHROiNLZPmm/8QMeZ9YMZaDWbu
dRDZxxrM/CC9/jzMzFtgLmlnYmLw9WViYGKqh7uuxhrkFqD7Qr8hnPy/DOS+
48c/IUSe9skBxR4jqfm0WJ1JupGbCUkM6CZm/Zf/w5hnwIUuAd1UCDQnjLkE
LpbEbAp2E5LYIyb192BaHWHeS1Fm32NAoM4s9hKudy0kLJnEDiKs/fG4vjiK
OaMeoeo/AL1lGZ8=
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYH4Pxg8uzt/
foEZE5NR7///P/ek+/uLMTMxg4Hy2/9GEBZEIK7y839eMEtMQrKk7dzXf0Dt
QIGg5cs//4eBDazMzJf+I4F0oPpXyALSQIGJt5AEAkBG8k29DBf4xA22RTBh
LVxo24RuZWU2Biam5chG7SkRZ+ac9gFZ6LAIM7P3N2SR00LMzMtAjFtR+16C
RY6LMbPvA9KfdZlVuoBOv5MrysxcDpJZyMLMLCouwQ+ynu0wSGQe3PvMXCdB
An9WiUMF2OZBbXheX6DCzFNYeP3/fwDphM7o
          "], {{0, 20}, {17, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PwR8ZNz/
/38+Y+1/OChiYtuVqxbIYgIXyWFinPfi7Q9b6TtQgW9eTIyfgLQLkyFUpIqJ
SeEbkF7LJPYIosSbiWkqiHGSiWkKWOQgE5M4mPHOAiJyR56JGSL1P5CpDUQd
YmLi/w8TEQOStxWZmMLgIiDFpoyM0jB3BTAARe4oMDHNgQpMZuM9+P+OBhNT
xFeIwDNtJtn//xcyMel/giqZyKQC9IU5E5MFVGA/L5Pf//8vxJiYZkEEzjkz
ub36/7+eicngFYh/bS4XkyuIxcfEJFXdHhcXx8DE5Pz6P0QEAhj429+BNfeG
QQQ8235CzQcAOQfvVw==
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4PxJIEn4B
ota2/IPwKxkDQZQz4yoIfzejJpD8bcV4FsK/ww3iv2Bk/A01QIzzxv//y5D4
jOf+/w9itP6LzDdlXPsfif9KnO0uMn82Y8Z/ZL4GY3Jr684PEL7St1fijCAg
7zp5y6dfomq/cxgZvXfsSPVnZWIUN2Vk7JFmzIfo3dsZqMDIKP1s5V+4cTsY
JZ8h+xfiH2Q+2zFUPmMpPv5rff6jAJ+17fw=
          "], {{0, 20}, {16, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PxA8jGCI
+g8Bez8AiW9FnGJ+LJKrTrhpaYgy273//7+LkTHjXpm0EDsjGBz8/9/c1a//
/9cV9fXzZ89VZeS/////sofTW6CmPCxizAZSv9qFa6Ai5YyCD///T9ZiTIMK
HGNn1Pr//zo397Z/EIG/doyMs4B63n2Aqvj/x96B8c5/ZLCbkbHgFxL/9xQ+
RvPPSAJPnRm5j/5FEriszMiYiGKGAaOV1nNkgeyg+3+QDf2/0WAfyM8IcKZo
29JqZIHXZoyOy+8ii3Qxeky6jGKPnT2KLQCcORjF
          "], {{0, 20}, {18, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 175, 2,
           174}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 85, 1, 
          143}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 254, 69, 1, 
          113}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 99, 1, 10, 
          190}, {255, 255, 255, 255, 255, 255, 255, 255, 239, 40, 1, 138, 
          255}, {255, 255, 255, 255, 255, 255, 255, 253, 79, 1, 32, 195, 
          255}, {255, 255, 255, 255, 255, 255, 255, 193, 1, 1, 142, 255, 
          255}, {255, 255, 255, 255, 255, 255, 242, 33, 1, 5, 253, 255, 
          255}, {255, 255, 255, 255, 255, 255, 106, 1, 1, 109, 255, 255, 
          255}, {255, 255, 255, 255, 255, 172, 4, 1, 73, 221, 255, 255, 
          255}, {255, 255, 255, 255, 198, 9, 6, 75, 224, 255, 255, 255, 
          255}, {255, 255, 255, 218, 3, 1, 90, 255, 255, 255, 255, 255, 
          255}, {255, 255, 250, 76, 1, 24, 235, 255, 255, 251, 218, 251, 
          255}, {255, 247, 76, 1, 52, 213, 255, 255, 249, 49, 1, 23, 212}, {
          255, 232, 1, 77, 250, 255, 255, 255, 95, 3, 98, 3, 143}, {255, 181, 
          9, 248, 255, 255, 245, 85, 5, 137, 236, 202, 245}, {255, 66, 6, 226,
           255, 196, 40, 1, 1, 104, 151, 255, 255}, {225, 11, 5, 138, 113, 4, 
          1, 1, 1, 73, 255, 255, 255}, {220, 40, 1, 1, 5, 5, 12, 14, 27, 237, 
          255, 255, 255}, {255, 174, 1, 62, 204, 206, 245, 255, 255, 255, 255,
           255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 160, 1, 57, 88, 189, 255, 255, 
          255}, {255, 255, 255, 250, 52, 1, 0, 1, 90, 246, 255, 255}, {255, 
          255, 255, 237, 1, 23, 180, 6, 238, 255, 255, 255}, {255, 255, 255, 
          140, 3, 184, 255, 205, 90, 255, 255, 255}, {255, 255, 232, 10, 56, 
          255, 255, 255, 42, 217, 255, 255}, {255, 255, 143, 10, 204, 255, 
          255, 255, 148, 92, 250, 255}, {255, 239, 30, 19, 255, 255, 255, 255,
           221, 13, 220, 255}, {255, 183, 1, 92, 255, 255, 255, 255, 255, 33, 
          184, 255}, {255, 131, 2, 196, 255, 255, 255, 255, 255, 118, 68, 
          253}, {255, 72, 28, 255, 255, 255, 255, 255, 255, 220, 13, 211}, {
          226, 15, 54, 255, 255, 255, 255, 255, 255, 255, 35, 211}, {211, 1, 
          116, 255, 255, 255, 255, 255, 255, 255, 36, 211}, {211, 1, 116, 255,
           255, 255, 255, 255, 255, 255, 36, 211}, {211, 1, 116, 255, 255, 
          255, 255, 255, 255, 244, 29, 211}, {211, 1, 145, 255, 255, 255, 255,
           255, 255, 141, 9, 219}, {211, 1, 104, 255, 255, 255, 255, 255, 213,
           15, 100, 255}, {246, 45, 28, 255, 255, 255, 255, 238, 34, 34, 236, 
          255}, {255, 198, 8, 196, 255, 255, 209, 27, 39, 219, 255, 255}, {
          255, 245, 76, 6, 71, 71, 1, 34, 244, 255, 255, 255}, {255, 255, 237,
           83, 1, 62, 116, 252, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJyNUMEJwzAQE6GP/tMFusmlIyQTJNB8C0mh5KXRbrT0fLGNXQqtwIaTZFnc
dXr0cwNgPdvVj69uWcZtONlw2573KUgXO62dPUMFIFgQxIHMCfBJhUHMW0Ql
1YUaUuY7iH+oquhR7odJafjeXfI3BRgtQje6qM7QGVFfEDSJMSaP4WkMZtpc
1TCsV6vCb2Wv8c4=
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4Pxz8vrk+
V5mRQRPGP9ftyAQCUWeAnL9pim5avEAem3DJ/H9Age9JTIZuEty6qTNeQ5T/
TWLSefb//hmEgceYWNf8RwYfXJgyUAT+b2YSuIIuInH5G5oIE5NO7PpfCJH3
mWCHWd5FCP17P6/ZkZ0p8BaqaXs1mTx+owqtZmI6hiryL5KpGcp8DKVj4SJW
EMVHBZnWQ0VC2Fru3ZtdxMsU8w8q8iIE7B62+PMIM4/nWYvlXUZYAgBW6heg

          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4PxDMUmRi
6v38Hw7kmJmZmaTl9FadR+IDMbPUKwifq261HBtI8AmE3wlT9ARmxAF/JiDY
AOW9mcUP1M+7DMr11wOZp7wbxT5mZuuwyX9Q7WOaClOyoag4komJwfAZwpU/
TwMVnUDwPyUzM6Ui+WIbsnv+/2+UYWZ2REifEURy3/9jMYJA6xqArM1WVpZW
VqJAo/VPgCyzgjpFbs4+sMoOMF+4H6YTAEZ7x0A=
          "], {{0, 20}, {16, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 229, 39, 20, 210}, {255, 
          255, 255, 255, 255, 255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 
          255, 202, 1, 1, 164}, {255, 255, 255, 255, 255, 255, 81, 1, 37, 
          248}, {255, 255, 255, 255, 255, 201, 7, 1, 158, 255}, {255, 255, 
          255, 255, 255, 81, 1, 1, 170, 255}, {255, 255, 255, 255, 255, 65, 1,
           1, 170, 255}, {255, 255, 255, 255, 255, 65, 1, 38, 240, 255}, {255,
           255, 255, 255, 202, 13, 1, 47, 255, 255}, {255, 255, 255, 255, 189,
           1, 1, 147, 255, 255}, {255, 255, 255, 200, 48, 1, 40, 235, 255, 
          255}, {255, 255, 255, 155, 1, 1, 80, 255, 255, 255}, {255, 255, 240,
           43, 0, 11, 196, 255, 255, 255}, {255, 255, 155, 1, 1, 80, 255, 255,
           255, 255}, {255, 255, 45, 1, 1, 190, 255, 255, 255, 255}, {255, 
          202, 18, 1, 41, 230, 255, 255, 255, 255}, {255, 159, 1, 6, 148, 255,
           255, 255, 255, 255}, {250, 37, 1, 80, 255, 255, 255, 255, 255, 
          255}, {162, 1, 3, 205, 255, 255, 255, 255, 255, 255}, {162, 1, 146, 
          255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {10, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{10, 20},
        PlotRange->{{0, 10}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYH4//9JbbJM
TEwBjgxMTDrP/oNAIgszBDABMe8BoMglbmYkIea9QKE2IO0cDAJBwWbMzpcg
QhI3/kPA61Nf/kOEtkIEOl1d809+BDJmsjJv+/b///WgILBZK0CS/MzMPkvj
VaHGi+8DCokhbOTnYWbW/PX//5lwqJBjx+ebqczMsUBlZ6usFJmYOA6A7XBh
EjgDon98+/TpM8Tam6rMU/+jgSAMoeX8zDlgRrbPYYjIW2NmZkEwy5WZy7Xr
5J//F/2BNheDhaLA7vILAjqbmX0ZWOi8FCxwmNlroKa+m+oBEWIzQ1j1owMk
lLsQyAQAgibRYA==
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PxTc12Y6
8B8Z3DdgZs5HEaljZmZuQnD/vcpnYs6ejKSgkpmZSfkashkyzMyKlxD8n+06
zJzVyCreOzIza6DYcouJiUkNqr0udOKH//83MjNL7IAINAFt2PT/lDgz82aI
Em2gm5gktm8DUncgIkwgEWaNbUxMhq/BNjgwMKX+Z2BSA6opAKuIY2Zy+trE
xBwIFEn4BRLxYmba/DOeie9QCjOzE9DG/1eVmB2OxTM7bPp/NZ6JSWchUESR
iQHosjyg5K8EZmYONVU1XqA9zLpgS65VcYBsBfm//wHUI4vqQSLhkz+AeQAN
eOXX
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYB4JRMDU1TR
o0dv/kPAXk4mZmZmJmb5y1CB2RA+szSU///x4+6SYg1m5jP/kcEqJlkU/l5O
7uMoAmVMq1H4fWj8M4xWKPz/TPqfUPnMqAaaME9F4dcx+f5G5r8UZT6FoiCM
2Q+F38HMjMJ/qsCEamMwszMKfxUzx15k/ldfvgsAfwoKRw==
          "], {{0, 20}, {16, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4PwSsYmDM
+A5l/59QOIU1ud3cBsZ/Z83EtPhguDmM/38qi7mIoM9hGPejdvj/F8/gsv9v
MPX8/5KvW/AOyu9l2nlOVTteXOcRjN8h6vzi/wNZnccQ+5iY1J8D6cdiwWD+
EyZ1iGmLhF+B6emTIBpvM3b8Rwa3mZpR+Mc4L6LwQ/RRuCc5Fv6/Ou0XjLtb
M+bb/xKmU1DuMslaIPlhia73XpCS24r+3yCWuLOYtzW4ywQ/gGncbsrENGnj
TzAbAJn3/1A=
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 235, 
          49, 55}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 179, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 161, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
          20}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 86, 1, 
          20}, {255, 255, 255, 183, 172, 255, 255, 255, 255, 255, 86, 1, 
          77}, {255, 255, 238, 12, 37, 241, 255, 255, 255, 255, 86, 1, 159}, {
          255, 255, 201, 1, 93, 255, 255, 255, 255, 251, 54, 1, 208}, {255, 
          255, 141, 1, 176, 255, 255, 255, 255, 245, 1, 0, 208}, {255, 230, 
          34, 1, 246, 255, 255, 255, 255, 161, 1, 44, 250}, {255, 169, 1, 36, 
          249, 255, 255, 255, 236, 55, 1, 52, 255}, {232, 45, 7, 171, 255, 
          255, 255, 207, 52, 1, 1, 142, 255}, {179, 1, 20, 255, 255, 255, 184,
           7, 1, 1, 1, 142, 255}, {179, 1, 98, 255, 215, 61, 13, 37, 163, 47, 
          1, 219, 255}, {179, 1, 77, 138, 4, 1, 65, 227, 255, 57, 1, 237, 
          255}, {224, 33, 1, 1, 14, 148, 252, 255, 255, 57, 18, 241, 255}, {
          255, 216, 124, 155, 226, 255, 255, 255, 236, 30, 77, 255, 255}, {
          255, 255, 255, 255, 255, 255, 255, 255, 147, 1, 77, 255, 255}}, {{0,
           20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 47, 2, 
          191}, {255, 255, 255, 255, 255, 255, 255, 255, 210, 19, 3, 160}, {
          255, 255, 255, 255, 255, 255, 255, 255, 102, 3, 34, 255}, {160, 255,
           255, 255, 255, 255, 255, 217, 15, 3, 118, 255}, {244, 255, 255, 
          255, 255, 255, 255, 208, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 
          255, 252, 85, 2, 2, 180, 255}, {255, 255, 255, 255, 255, 255, 210, 
          3, 3, 62, 247, 255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 178, 
          255, 255}, {255, 255, 255, 255, 255, 255, 117, 3, 3, 210, 255, 
          255}, {255, 255, 255, 255, 255, 255, 64, 3, 3, 210, 255, 255}, {255,
           255, 255, 255, 255, 244, 0, 2, 71, 255, 255, 255}, {255, 255, 255, 
          255, 255, 139, 2, 3, 72, 255, 255, 255}, {255, 255, 255, 255, 255, 
          139, 2, 3, 155, 255, 255, 255}, {255, 255, 255, 255, 255, 45, 2, 3, 
          186, 255, 255, 255}, {255, 255, 255, 255, 255, 25, 2, 45, 249, 255, 
          255, 255}, {255, 255, 255, 255, 255, 24, 0, 48, 255, 255, 255, 
          255}, {255, 255, 255, 255, 195, 11, 2, 70, 255, 255, 255, 255}, {
          255, 255, 255, 255, 131, 3, 19, 230, 255, 255, 255, 255}, {255, 255,
           255, 229, 31, 3, 120, 255, 255, 255, 255, 255}, {255, 255, 255, 
          185, 3, 3, 192, 255, 255, 255, 255, 255}}, {{0, 20}, {12, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 234, 94, 32, 8, 131, 243, 255}, {255, 255,
           223, 33, 40, 161, 104, 1, 170, 255}, {255, 235, 40, 91, 229, 255, 
          254, 94, 83, 234}, {255, 57, 80, 241, 255, 255, 255, 118, 1, 203}, {
          200, 9, 233, 255, 255, 255, 203, 41, 15, 237}, {128, 85, 255, 255, 
          255, 190, 18, 16, 38, 255}, {128, 159, 255, 247, 106, 7, 166, 90, 
          142, 255}, {141, 43, 124, 26, 56, 199, 232, 11, 170, 255}, {249, 
          179, 151, 196, 255, 255, 159, 1, 193, 255}, {255, 255, 255, 255, 
          255, 255, 87, 64, 255, 255}, {255, 255, 255, 255, 255, 255, 3, 127, 
          255, 255}, {255, 255, 255, 255, 255, 176, 30, 240, 255, 255}, {255, 
          255, 255, 255, 245, 41, 104, 255, 255, 255}, {255, 255, 255, 255, 
          211, 27, 225, 255, 255, 255}, {255, 255, 255, 254, 70, 87, 255, 255,
           255, 255}, {255, 255, 255, 178, 13, 204, 255, 255, 255, 255}, {255,
           255, 255, 68, 52, 255, 255, 255, 255, 255}, {255, 255, 201, 13, 
          200, 255, 255, 255, 255, 255}, {255, 249, 35, 38, 255, 255, 255, 
          255, 255, 255}, {255, 247, 19, 142, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {10, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{10, 20},
        PlotRange->{{0, 10}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 233, 141, 19, 1, 2, 2, 99, 212, 255, 
          255}, {255, 255, 255, 255, 128, 3, 3, 2, 3, 3, 3, 3, 82, 234}, {255,
           255, 255, 255, 128, 3, 20, 128, 129, 110, 3, 3, 2, 139}, {255, 255,
           255, 255, 204, 66, 241, 255, 255, 128, 3, 3, 2, 157}, {255, 255, 
          255, 255, 255, 237, 255, 255, 255, 84, 3, 3, 2, 192}, {255, 255, 
          255, 255, 255, 255, 255, 247, 54, 2, 2, 2, 123, 255}, {255, 255, 
          255, 255, 255, 255, 255, 132, 3, 3, 3, 3, 255, 255}, {255, 255, 255,
           255, 255, 249, 233, 54, 3, 3, 8, 156, 255, 255}, {255, 255, 255, 
          255, 255, 191, 3, 2, 3, 43, 192, 255, 255, 255}, {255, 255, 255, 
          255, 237, 34, 3, 2, 3, 173, 255, 255, 255, 255}, {255, 255, 255, 
          255, 246, 68, 2, 0, 37, 159, 241, 255, 255, 255}, {255, 255, 255, 
          255, 255, 212, 52, 2, 3, 3, 44, 109, 255, 255}, {255, 255, 255, 255,
           255, 255, 246, 128, 129, 75, 3, 3, 39, 223}, {255, 255, 255, 255, 
          255, 255, 255, 255, 255, 248, 59, 3, 2, 122}, {255, 255, 255, 255, 
          255, 255, 255, 255, 255, 193, 16, 3, 2, 87}, {255, 255, 255, 255, 
          255, 255, 255, 247, 132, 54, 2, 2, 0, 192}, {127, 109, 126, 234, 
          212, 170, 170, 54, 3, 3, 3, 3, 16, 213}, {95, 3, 2, 18, 13, 3, 3, 2,
           3, 3, 8, 24, 149, 255}, {234, 127, 110, 18, 3, 3, 3, 2, 3, 88, 192,
           255, 255, 255}, {255, 255, 255, 144, 108, 82, 134, 108, 187, 234, 
          255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/6OCT4+mS/Gh
iNzMN2RiFjuCLGIpyszM1HYLSahRiIlZs+TxN4TIYnUmJoEmZIOOhQHNybuJ
LLRWg5nJ+iCKdZt5mJl9v6EIfWJk4kYxCWiWIZPTcRDjzDEgeAoWa2HmBgqt
irfiZGJmZlbYC5LlZG76f1MLxAdjvWf/f/sw8f2eLsXEyOHS13vzqxQjx9n/
J5mZe3yYmWVW7wOZM5GZKeT//yJm1wVMzK4PQCJf4/nBZjswh2sx+V0B2wtU
z/wMyGBgUufTBIXbSV+QmZ9Akr5AOYOwMFC4Wbvvg7j4sjzEDeGLkMLtTXdJ
cUnJdWSfAQBzOAzq
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 226, 125, 62, 26, 0, 
          64, 250, 255}, {255, 255, 255, 255, 255, 231, 159, 23, 2, 2, 2, 2, 
          2, 148, 255}, {255, 255, 255, 255, 246, 44, 2, 2, 2, 8, 25, 2, 2, 
          69, 255}, {255, 255, 255, 255, 205, 2, 2, 19, 125, 199, 231, 175, 
          25, 7, 194}, {255, 255, 255, 255, 125, 2, 70, 239, 255, 255, 255, 
          255, 208, 14, 77}, {255, 255, 255, 255, 32, 19, 226, 255, 255, 255, 
          255, 255, 255, 27, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 255, 
          255, 255, 255, 243, 25, 69}, {255, 255, 255, 255, 32, 64, 255, 255, 
          255, 255, 255, 229, 73, 7, 157}, {255, 255, 255, 255, 34, 12, 216, 
          249, 249, 232, 181, 37, 13, 67, 255}, {255, 255, 255, 255, 156, 2, 
          2, 2, 2, 2, 2, 2, 71, 205, 255}, {255, 255, 255, 255, 156, 2, 2, 2, 
          2, 2, 36, 155, 240, 255, 255}, {255, 255, 131, 111, 4, 2, 2, 2, 75, 
          146, 227, 255, 255, 255, 255}, {242, 90, 6, 2, 2, 2, 2, 2, 204, 255,
           255, 255, 255, 255, 255}, {218, 2, 2, 10, 130, 240, 150, 2, 106, 
          255, 255, 255, 255, 255, 255}, {218, 2, 95, 203, 255, 255, 251, 32, 
          70, 253, 255, 255, 255, 255, 255}, {218, 2, 123, 255, 255, 255, 255,
           150, 2, 156, 255, 255, 255, 255, 255}, {243, 47, 10, 155, 191, 255,
           255, 175, 2, 77, 255, 255, 255, 255, 255}, {255, 118, 2, 2, 4, 37, 
          37, 15, 2, 43, 255, 255, 255, 255, 255}, {255, 255, 111, 2, 2, 2, 2,
           2, 2, 43, 255, 255, 255, 255, 255}, {255, 255, 250, 179, 14, 2, 2, 
          2, 42, 172, 255, 255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJIShCIRYD4PxysvHnz
8fn/yKDrGZOSUrmMZQ1c5FiYfD0TMxAwyZd9hYrFgLjMECIOItSbwMTExJBe
XFxc5MvE1A8SOg9W8uQPiL2KmVkISFXLMDELeJ+AaAGKMf//eliemclnH8y2
WSAxkET/Z7gL5EBiOUxMjghnMjCB7JBjloWp2rMqholZLONzOydzL9Td0/mB
7nO98v9/AjPzjE/vnx4OCwM7aPVxoGwfkOFkwg/xgnA/xAtMIC8wMfkWGxcX
X4CY8tkLqCQ8ovzb/w8I29+smHniPyoAAMuJ0qs=
          "], {{0, 17}, {20, 0}}, {0,
           255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 17},
        PlotRange->{{0, 20}, {0, 17}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 221, 144, 69, 2, 2, 
          40, 228}, {255, 255, 255, 255, 255, 234, 93, 2, 3, 3, 3, 3, 3, 
          124}, {255, 255, 255, 255, 194, 61, 3, 15, 102, 193, 193, 3, 3, 
          124}, {255, 255, 247, 79, 7, 9, 121, 246, 255, 255, 252, 79, 3, 
          124}, {255, 242, 83, 3, 12, 118, 255, 255, 255, 255, 232, 3, 3, 
          124}, {247, 83, 3, 3, 133, 255, 255, 255, 255, 176, 52, 3, 3, 37}, {
          131, 3, 3, 119, 246, 255, 255, 255, 255, 103, 3, 3, 3, 115}, {56, 3,
           18, 237, 255, 255, 255, 255, 255, 94, 3, 3, 3, 142}, {13, 3, 64, 
          248, 255, 255, 255, 255, 172, 14, 3, 3, 30, 240}, {109, 3, 3, 132, 
          144, 144, 144, 144, 46, 3, 3, 3, 186, 255}, {187, 13, 2, 2, 2, 2, 2,
           0, 2, 2, 2, 9, 207, 255}, {255, 181, 69, 69, 69, 69, 69, 68, 23, 3,
           3, 87, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 241, 49, 3, 
          21, 240, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 154, 3, 3, 
          34, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 2, 3, 3, 
          158, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 216, 2, 3, 37, 
          248, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 92, 2, 3, 102, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 241, 29, 2, 3, 169, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 177, 3, 2, 23, 225, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 211, 17, 2, 117, 255,
           255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4Pwh8OOHN
xCBeevs/BLy7EKvCzMzMxMysshws8MYZxJHxqPEQZVYCi0QzM5uUXHoEZBUy
My8AUlc4mc2/QLTvZGY+ABLhy4Wa98uByRHMuAoV+H+BmbnsPzK4mcIscx5F
xJuZeS+KwFSgE+wPIAmc4WFgAgKvN3CRzexshoaGMkzCl+FCB0A67isyp/9H
BZeZ+W/9/1/+CiHynFnp2f91TGZfYAJfTJmC/v+fw81sUnzhwtOX/z9dsGPi
Pg6UOC4MdAqzkrq7CTCQAsFqF8ZBQ4yZOfMdVP+Hl11lZr5lZatAHACb9fwn

          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/yPA4T32jIwM
2+8gCa3mZwID27tQgZ8PLMWAfG4eViamfRChp14gFYp+n/83sjK1gYW++IB1
ZYHYXExMIH1v/EAifHufADkfOZkEgNRmkAhP+EGQqhvGYPN+gs3qgxjcC2Tu
+16vCqS8b/8EC10DWi5wtBykiHMq1EnnmZgk1v5nAImJwtwdwcRk/f//kyd3
ZWFi728KMjE9BjM3w8SmA7X4/EIRewp0h/+z/8hiWUCNQV//w8R4N///1GsG
VAUTAvlD2scFZNYzeMAdkYYEnGk3UmhuKwEJBXz8jwx+7fOX2PcczgUAs2f+
UQ==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxVjq0OwjAUhdtTBAkTCKgGCdi9ADzCajGQwOYIPwkhgJwF3YfY9CxoZofG
Dgv6sl8Yt7lNv96e09OdLqw5GGPrerJZk+1wtZrsVC2B0W4zm6ajVtLNpKmo
k82VHcQljiHStSzZ00/yLLCAKvUewKnyTbJDfrpojyiSQj5yNQeHLTkKPzN3
x/FZKE0jfdF+fK3uYRgqqKo7RRzx3wWEptf7xxya9up/bn81L4sjokCY1yKt
wIAo7rB+lGXsoeGnP0MYrtZjA8LPw2fZOBpume3sQEjnnsEH0Vzjtw==
          "], {{0, 
          20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 231, 150, 107, 75, 36, 28, 76, 163, 255}, {255,
           148, 17, 2, 2, 1, 20, 2, 2, 2, 215}, {82, 4, 21, 148, 232, 240, 
          244, 226, 2, 2, 180}, {121, 160, 251, 255, 255, 255, 255, 226, 2, 2,
           237}, {255, 255, 255, 255, 255, 255, 255, 100, 2, 24, 255}, {255, 
          255, 255, 255, 255, 255, 230, 10, 1, 181, 255}, {255, 255, 255, 255,
           255, 255, 94, 2, 26, 241, 255}, {255, 255, 255, 255, 255, 178, 4, 
          2, 143, 255, 255}, {255, 255, 255, 255, 255, 80, 2, 62, 241, 255, 
          255}, {255, 255, 255, 255, 166, 1, 2, 166, 255, 255, 255}, {255, 
          255, 255, 214, 10, 0, 74, 250, 255, 255, 255}, {255, 255, 247, 43, 
          2, 35, 221, 255, 255, 255, 255}, {255, 255, 117, 2, 6, 180, 255, 
          255, 255, 255, 255}, {255, 244, 14, 2, 112, 255, 255, 255, 255, 255,
           255}, {255, 85, 2, 51, 234, 255, 255, 255, 255, 255, 255}, {224, 
          14, 1, 129, 255, 255, 255, 255, 255, 255, 255}, {132, 2, 32, 244, 
          255, 255, 255, 255, 255, 255, 255}, {50, 2, 118, 255, 255, 255, 255,
           255, 255, 255, 255}, {1, 2, 223, 255, 255, 255, 255, 255, 255, 255,
           255}, {45, 59, 249, 255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 
          20}, {11, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{11, 20},
        PlotRange->{{0, 11}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 239, 26, 56, 239, 255, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 122, 1, 1, 181, 255, 255, 255,
           255, 255}, {255, 255, 255, 255, 197, 45, 1, 1, 122, 255, 255, 255, 
          255, 255}, {255, 255, 255, 255, 64, 1, 0, 1, 174, 255, 255, 255, 
          255, 255}, {255, 255, 255, 150, 2, 1, 1, 1, 208, 255, 255, 255, 255,
           255}, {255, 255, 240, 56, 1, 49, 102, 1, 208, 255, 255, 255, 255, 
          255}, {255, 255, 97, 1, 12, 190, 125, 1, 208, 255, 255, 255, 255, 
          255}, {255, 219, 10, 1, 128, 255, 125, 1, 190, 255, 255, 255, 255, 
          255}, {255, 115, 1, 30, 229, 255, 125, 1, 150, 255, 255, 255, 255, 
          255}, {255, 89, 1, 130, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
          255}, {255, 17, 10, 219, 255, 255, 125, 1, 122, 255, 255, 255, 255, 
          255}, {221, 9, 103, 255, 255, 236, 108, 1, 64, 94, 47, 47, 89, 
          245}, {185, 1, 80, 60, 52, 25, 1, 1, 1, 1, 1, 1, 19, 217}, {239, 22,
           1, 1, 0, 1, 1, 1, 0, 1, 12, 63, 200, 255}, {255, 167, 29, 22, 15, 
          22, 4, 17, 149, 195, 221, 255, 255, 255}, {255, 255, 255, 255, 233, 
          235, 23, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 207, 1, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 255,
           255, 241, 28, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 255, 
          255, 255, 255, 40, 40, 255, 255, 255, 255, 255, 255}, {255, 255, 
          255, 255, 255, 255, 154, 99, 255, 255, 255, 255, 255, 255}}, {{0, 
          20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJIShiIRYD4Pyp4ehPB
3n0JTD0qM4IL3eKRA9NdzOxrYGJpzIJg2pyZeRFMLAi/mAMWMTmo0GsvhJj0
5///P1Xl5sozM3Nu+vjv//8WZmbmqf/3czJDAVPJx/9lYDF3JhhggNL8/5mY
4eqgtCAeMYHEruAgzeDg8lSQmCpYaiXIIY+B+CRIbAEbkFwBD4yPdsx8J//X
sKuuRArAdGZmif//13xADtQPdjyX/6ODtSn/AXXe47M=
          "], {{0, 19}, {20, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 19},
        PlotRange->{{0, 20}, {0, 19}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 218, 92, 1, 1, 1, 0, 1, 32, 99, 136, 255, 
          255}, {255, 255, 246, 89, 22, 22, 60, 97, 13, 2, 2, 2, 85, 252}, {
          255, 255, 255, 255, 255, 255, 255, 255, 219, 177, 113, 2, 1, 148}, {
          255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 252, 109, 1, 
          29}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 157, 1,
           22}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 0,
           104}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 11, 
          51, 249}, {255, 255, 255, 255, 255, 255, 255, 255, 248, 109, 8, 33, 
          157, 255}, {255, 255, 255, 255, 255, 255, 224, 118, 34, 2, 24, 161, 
          255, 255}, {255, 255, 255, 255, 255, 239, 38, 1, 2, 2, 176, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 179, 156, 25, 1, 138, 255,
           255, 255}, {255, 255, 255, 255, 255, 255, 255, 242, 38, 2, 146, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 69, 2, 125, 249,
           255, 255, 255}, {255, 255, 255, 255, 255, 248, 140, 1, 28, 219, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 103, 2, 1, 194, 255, 
          255, 255, 255, 255}, {255, 255, 255, 250, 99, 1, 1, 141, 255, 255, 
          255, 255, 255, 255}, {176, 78, 255, 144, 2, 28, 194, 255, 255, 255, 
          255, 255, 255, 255}, {89, 2, 117, 14, 27, 212, 255, 255, 255, 255, 
          255, 255, 255, 255}, {21, 2, 1, 73, 242, 255, 255, 255, 255, 255, 
          255, 255, 255, 255}, {133, 2, 122, 224, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{213, 24, 0, 57, 158, 255, 255, 255, 255, 255, 255, 
          255}, {90, 1, 1, 1, 4, 77, 222, 255, 253, 192, 230, 255}, {54, 1, 1,
           36, 1, 1, 14, 186, 152, 1, 41, 243}, {54, 3, 159, 243, 163, 29, 1, 
          81, 12, 1, 58, 251}, {54, 10, 247, 255, 255, 121, 1, 1, 1, 1, 68, 
          255}, {54, 1, 137, 254, 255, 220, 34, 1, 1, 1, 137, 255}, {116, 1, 
          1, 189, 255, 194, 15, 1, 1, 28, 249, 255}, {245, 125, 1, 4, 88, 14, 
          1, 1, 86, 222, 255, 255}, {255, 251, 48, 1, 1, 1, 1, 91, 250, 255, 
          255, 255}, {255, 255, 219, 4, 1, 1, 1, 150, 255, 255, 255, 255}, {
          255, 253, 87, 1, 1, 1, 1, 20, 142, 255, 255, 255}, {255, 208, 1, 1, 
          1, 64, 26, 1, 2, 146, 254, 255}, {255, 124, 1, 1, 45, 246, 210, 57, 
          1, 1, 180, 255}, {255, 68, 1, 1, 176, 255, 255, 249, 77, 1, 68, 
          255}, {233, 3, 1, 46, 248, 255, 255, 255, 161, 1, 4, 234}, {245, 39,
           1, 73, 255, 255, 255, 226, 71, 1, 1, 214}, {255, 82, 1, 36, 186, 
          255, 179, 42, 1, 1, 12, 224}, {255, 198, 10, 1, 12, 50, 10, 1, 1, 
          10, 213, 255}, {255, 255, 182, 8, 1, 1, 1, 13, 136, 212, 255, 
          255}, {255, 255, 255, 207, 76, 1, 86, 211, 255, 255, 255, 255}}, {{
          0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{254, 146, 22, 2, 2, 145, 240, 176, 146, 192, 255, 255, 
          255, 255, 255}, {130, 3, 3, 3, 3, 2, 33, 13, 3, 111, 255, 255, 255, 
          255, 255}, {34, 3, 3, 3, 3, 2, 3, 3, 3, 95, 250, 255, 255, 255, 
          255}, {65, 3, 87, 3, 3, 2, 3, 3, 3, 2, 96, 214, 255, 255, 255}, {
          172, 112, 203, 44, 3, 2, 3, 3, 3, 2, 3, 122, 255, 255, 255}, {255, 
          255, 58, 3, 3, 33, 76, 24, 3, 2, 3, 8, 121, 255, 255}, {254, 156, 
          13, 3, 3, 130, 255, 177, 3, 2, 3, 3, 3, 255, 255}, {254, 3, 3, 3, 
          87, 255, 255, 239, 147, 2, 3, 3, 3, 171, 255}, {254, 2, 2, 18, 193, 
          255, 255, 255, 255, 145, 2, 2, 2, 110, 255}, {213, 3, 3, 40, 255, 
          255, 255, 255, 255, 146, 3, 3, 3, 17, 225}, {111, 3, 3, 143, 255, 
          255, 255, 255, 255, 224, 28, 3, 3, 2, 220}, {111, 3, 3, 101, 255, 
          255, 255, 255, 255, 255, 38, 3, 3, 2, 220}, {110, 2, 2, 23, 208, 
          255, 255, 255, 255, 255, 37, 2, 2, 110, 255}, {111, 3, 3, 3, 147, 
          255, 255, 255, 255, 161, 8, 3, 3, 111, 255}, {130, 3, 3, 3, 44, 234,
           255, 255, 255, 146, 3, 3, 3, 214, 255}, {254, 3, 3, 3, 3, 48, 235, 
          255, 255, 64, 3, 3, 3, 255, 255}, {254, 64, 2, 2, 2, 0, 2, 85, 2, 0,
           2, 2, 64, 255, 255}, {255, 240, 75, 3, 3, 2, 3, 3, 3, 2, 3, 14, 
          178, 255, 255}, {255, 255, 234, 75, 3, 2, 3, 3, 3, 2, 14, 153, 255, 
          255, 255}, {255, 255, 255, 239, 65, 2, 3, 3, 3, 64, 178, 255, 255, 
          255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYH4Pwx8yWJi
0vn0Hwm8s2NiZmZ+iSRyxpkZTWgdPzMzlwqy0EtuoIptcUhCX0yZmOwP/I9l
YnqBZLLLu///EareAE3mPwuUkWZ2+wlR4ww0eQOQ8ZyZuQOiaA7IZBBjMzPz
JbDICiYmpjKgDf//A+3oev58XmlpKVCRTmycSVwcyKlA9/JHl0IYMEIj9uz/
234gnp2MqikTs8zeS69Ahv16+fLli+/vPnYzMdf+RwUNDGwH0IQkmdz+Ywgt
RhdyZjJ9hib0JZt5F4QFAFZ6Aj0=
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 115, 1, 0, 54, 167, 255, 255, 255}, {255, 116, 2, 2,
           2, 4, 144, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 255}, {255, 
          116, 2, 2, 2, 2, 101, 255, 255}, {255, 116, 2, 2, 2, 2, 101, 255, 
          255}, {213, 20, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 
          101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 
          2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {205, 2, 
          2, 2, 2, 2, 101, 255, 255}, {205, 2, 2, 2, 2, 2, 101, 255, 255}, {
          242, 87, 2, 2, 2, 2, 91, 248, 255}, {255, 116, 2, 2, 2, 2, 2, 190, 
          255}, {255, 137, 6, 2, 2, 2, 2, 190, 255}, {255, 255, 25, 2, 2, 2, 
          2, 190, 255}, {255, 255, 63, 2, 2, 2, 2, 47, 255}, {255, 255, 189, 
          2, 2, 2, 2, 12, 174}, {255, 255, 251, 138, 4, 2, 2, 2, 43}, {255, 
          255, 255, 255, 116, 2, 2, 2, 117}}, {{0, 20}, {9, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{9, 20},
        PlotRange->{{0, 9}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYH4PwzoO075
BGF9gglZMzJK2zY2P/oNV/T/jhwjGBxACP3flWYBElL5jwz+btdjZGQ9hSz0
uxKk7CCSyAxHkIjGU7jAUS8WkEjqK4QaA4iFrUjaQOYosjKyXEII/Sl02f3+
qDOjEZJbwaAW1UYgOMWKLnRXiZGR/xaSwKc+WaAVkQiB+9OkGRkZGB0/Qri/
zs205wa5SqAHzL+2u4wF4kxZl5UggV4zHgifSSkcarClh20Eo2hGXeImuKkA
CKwLzw==
          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4PwhkMTKE
Xf2PALFMTEwc7u7bYPwvNXrMQCFWRcVTMKF1SbpcQKEFSLoamZiU/yDxZzAx
zUbiHhVhsn+H4H63YhJ7gyQdyMTUhsRdw87k8BuJy8skfhKht56diXkVQjYR
6JJlcN6vDl4mpjK4S76tZmLir0Q4bCITk8RZhN51PExMmxDcd/pMYhf/IviO
TBJnkJz1X5GpAZn7HwC5MPp7
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 244, 105, 1, 175, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 238, 114, 5, 18, 92, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 78, 2, 55, 211, 236, 255, 255,
           255, 255}, {255, 255, 255, 255, 229, 30, 2, 181, 255, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 132, 2, 55, 255, 255, 255, 255,
           255, 255, 255}, {255, 255, 255, 197, 1, 9, 181, 255, 255, 255, 255,
           255, 255, 255}, {255, 255, 219, 35, 2, 167, 255, 255, 255, 255, 
          255, 255, 255, 255}, {255, 255, 116, 2, 84, 242, 255, 255, 255, 255,
           255, 255, 255, 255}, {255, 212, 21, 19, 211, 255, 255, 255, 255, 
          255, 255, 255, 255, 255}, {255, 87, 1, 48, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 255}, {246, 21, 1, 171, 255, 255, 255, 252, 210,
           116, 158, 242, 255, 255}, {162, 2, 24, 255, 255, 255, 233, 136, 2, 
          2, 2, 43, 255, 255}, {130, 2, 108, 255, 255, 255, 108, 1, 14, 155, 
          66, 2, 138, 255}, {47, 2, 139, 255, 255, 255, 24, 9, 176, 255, 238, 
          115, 15, 221}, {47, 2, 139, 255, 255, 118, 4, 181, 255, 255, 255, 
          87, 1, 163}, {161, 1, 127, 255, 255, 46, 106, 242, 236, 238, 147, 1,
           97, 255}, {221, 16, 9, 175, 255, 47, 2, 42, 18, 26, 2, 23, 255, 
          255}, {255, 139, 0, 14, 70, 14, 2, 0, 2, 2, 2, 201, 255, 255}, {255,
           255, 137, 2, 2, 2, 2, 1, 2, 27, 189, 251, 255, 255}, {255, 255, 
          252, 232, 148, 75, 108, 117, 191, 239, 255, 255, 255, 255}}, {{0, 
          20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 141, 50, 255, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 255, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 188, 255, 
          255, 255}, {255, 255, 255, 255, 255, 255, 255, 119, 2, 249, 255, 
          255, 255}, {255, 68, 255, 255, 255, 255, 255, 118, 1, 176, 255, 255,
           255}, {218, 21, 255, 255, 255, 255, 255, 119, 2, 176, 255, 255, 
          255}, {176, 21, 255, 255, 255, 255, 255, 119, 2, 243, 255, 255, 
          255}, {176, 9, 219, 255, 255, 255, 255, 94, 2, 255, 255, 255, 
          255}, {176, 0, 157, 252, 255, 255, 255, 40, 1, 255, 255, 255, 
          255}, {188, 1, 2, 69, 161, 215, 215, 34, 2, 191, 215, 215, 215}, {
          255, 104, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 62}, {255, 253, 175, 92, 80,
           50, 2, 2, 2, 80, 104, 164, 247}, {255, 255, 255, 255, 255, 255, 
          209, 1, 56, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 137,
           2, 117, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 137, 2,
           158, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 90, 2, 
          158, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 59, 1, 212,
           255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 60, 11, 239, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 244, 29, 127, 255, 
          255, 255, 255, 255}, {255, 255, 255, 255, 255, 247, 38, 138, 255, 
          255, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxdjb0OgkAQhO/mLCysjKFVS6W9WqKVNdQWkKilAU0M0dKXoLflIaSGloeA
VuoVIf4sM9lN9ttMZuod7B2EEMd+vWz3vAwCN3R69bEKT1vv/RrVM6yHGuU2
ZOs5UeFrrQdQH+fFrPn4UaNYIE6gnCyr2jBFUER+SV+lhrCIaa+MjIFYYs1A
MYFZMnKBvPMM1LX6B6khDd6z6PY8JG68R8PkGRtjXpxDbRh4zqXVyXR7SCLi
gKCS3/EC/0YZjA==
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYH4PxisabNi
YmBiYur+DwWPKtiZmZmZgJjNCSLy0JCZGSrEbAkRsmNmFgiOunGjDiF0KdFt
JYjWBgot+o8MnvIyMwe+QxZ5WQTUfxnMXLsCTP3NZWLmTQMzd7p9AYvMA9qY
AVF/bBeYmgt0hM1nZIOmA11u9QNZZDLQ9TYoIoe4mJk5tsB4Z4F4tzUzMw/M
jZ+iFf//f6bAzMw3H8R9tmdPlD6z4P//9kB/9AKD4+REHbD3Bf9v5Qb5NihI
AxwSzFzatf+nMEMBUIhHrmEjKBwkISJc/IId26F2XJIAGdBxHO4mAAG17Cg=

          "], {{0, 20}, {19, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{19, 20},
        PlotRange->{{0, 19}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PzL4vp2L
sR7EeL4fzD/eZMvExDQHxFzG3Phgdo8uJ5DPFPQZKLBcgYmZk4mRiUmUiUnw
AlCgXwEkJ2VhOeUsE9NkoBnVLExMOlFrHgDlqpiYXv7/b8zExGn8CmzyKQEm
wy////Mzmd2B2q3LpAxU8v/i3j9QgdW8TNEorvugy8R9FkVkHiNjK4rAQyUm
pssoIhMYmer/Igv8UGZQeYWiJJOJYw6KwHsdJiUUgX8zmZiEbiGLfAZ6VfQh
sshCJibloyi6tjIxLYBzABtxC+E=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PwR8DWNg
ZIj8+R8B6plAoO4ZXOCGgFxJSRQrk/8/mMidOSDyupTsoX//UcBFaaY2VJH/
4UxKaCLPZGQ+oAnp8J5FF0HXhSnyXBZN5E8QUxSM/RRMhjJJXQfRW20MDWU9
X/1/4cbMlAnkfzBnAfuSk5uTicngOVCklwkBHA4DBR6oIYl8BRniiSTAZAMS
SYVyBD3qt2z5AxL5XAnkiuXl7YY7CgBkAP3P
          "], {{0, 20}, {18, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 96, 39, 99, 143, 196, 228, 232, 173, 107, 237, 255, 
          255, 255, 255}, {194, 7, 2, 1, 2, 2, 23, 26, 1, 2, 177, 255, 255, 
          255, 255}, {255, 119, 2, 20, 81, 56, 33, 63, 80, 126, 231, 255, 255,
           255, 255}, {255, 200, 2, 60, 255, 249, 243, 250, 255, 255, 255, 
          255, 255, 255, 255}, {255, 155, 2, 60, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 255, 255}, {255, 193, 1, 59, 227, 196, 143, 136, 
          209, 255, 255, 255, 255, 255, 255}, {255, 119, 2, 33, 38, 2, 2, 2, 
          10, 124, 205, 253, 255, 255, 255}, {255, 51, 2, 1, 2, 27, 96, 140, 
          62, 2, 2, 138, 255, 255, 255}, {255, 21, 2, 1, 126, 242, 255, 255, 
          250, 183, 14, 5, 186, 255, 255}, {255, 96, 2, 159, 246, 255, 255, 
          255, 255, 255, 184, 10, 25, 217, 255}, {255, 239, 157, 255, 255, 
          255, 255, 255, 255, 255, 255, 103, 1, 83, 246}, {255, 255, 255, 255,
           255, 255, 255, 255, 255, 255, 255, 188, 29, 1, 209}, {255, 255, 
          255, 255, 255, 255, 255, 255, 255, 255, 255, 225, 90, 1, 120}, {255,
           255, 255, 230, 249, 255, 255, 255, 255, 255, 255, 255, 120, 1, 
          120}, {255, 255, 217, 24, 51, 195, 255, 255, 255, 255, 255, 255, 82,
           1, 120}, {255, 255, 120, 0, 29, 195, 255, 255, 255, 255, 255, 255, 
          120, 0, 81}, {255, 255, 164, 1, 20, 138, 246, 255, 255, 255, 255, 
          229, 48, 1, 164}, {255, 255, 255, 100, 2, 2, 44, 154, 255, 255, 230,
           83, 2, 42, 243}, {255, 255, 255, 250, 183, 29, 2, 2, 20, 21, 15, 2,
           18, 202, 255}, {255, 255, 255, 255, 255, 237, 107, 25, 1, 2, 2, 55,
           197, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 233, 178, 131, 79, 0, 65, 149, 
          252, 255, 255}, {255, 255, 255, 255, 255, 121, 1, 1, 53, 91, 1, 1, 
          139, 255, 255}, {255, 255, 255, 255, 255, 222, 160, 229, 250, 253, 
          162, 1, 8, 235, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 252, 55, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 255, 255,
           255, 255, 254, 97, 1, 233, 255}, {255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 250, 1, 51, 249, 255}, {255, 255, 255, 255, 255,
           255, 255, 255, 255, 255, 250, 1, 129, 255, 255}, {255, 255, 255, 
          255, 255, 255, 255, 255, 255, 255, 137, 1, 245, 255, 255}, {255, 
          255, 255, 255, 255, 255, 255, 255, 255, 238, 6, 69, 251, 255, 
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 142, 4, 215, 
          255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 218, 11, 
          59, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 255, 236, 
          47, 22, 239, 255, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 
          253, 175, 13, 194, 255, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 168, 1, 121, 255, 255, 255, 255, 255, 255}, {255, 255, 
          255, 255, 255, 187, 11, 1, 93, 192, 255, 255, 255, 255, 255}, {255, 
          255, 250, 166, 82, 9, 1, 1, 1, 3, 58, 201, 253, 255, 255}, {255, 
          176, 52, 1, 1, 13, 94, 130, 130, 90, 1, 1, 35, 136, 249}, {232, 23, 
          1, 1, 50, 219, 255, 255, 255, 251, 205, 118, 31, 4, 107}, {205, 1, 
          3, 53, 235, 255, 255, 255, 255, 255, 255, 255, 255, 117, 190}, {240,
           29, 87, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/6OCP5cUmeaj
Cl3pZGZm9kUSuLQzmpOJmVlmNkLojC1QDVAsHqFLmQcoZF6mwzwZavI8RSYm
BiajV///ZzB1/QEJvQwFKtE1qH4GZM9h1v0MpI4ZMTGbFv2EaNnILPP+/7tF
8sxcJZ+gxn6zZe4AGgDUtw1u1WZm5rn/nzMxcTXChfabgizay8xfAxe6WczE
Pen/f0VmD7jQG2VmphYgLca8DGZ8rzKz7tx3QBYT8y6I0FQvZuakl2CmKRPI
uA8nSnmY9bpfQaTNmGXaL0xUATpID26uIzMkNGQ23IeLffADinHFb3qEHLS/
XnaVvUINbQCzLBlA
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 249, 149, 92, 40, 14, 99, 234, 
          255}, {255, 255, 255, 162, 38, 2, 1, 2, 2, 2, 80, 255}, {255, 255, 
          149, 7, 2, 2, 12, 39, 20, 2, 2, 255}, {255, 158, 6, 2, 4, 86, 216, 
          255, 199, 2, 2, 183}, {255, 27, 2, 2, 118, 255, 255, 255, 218, 2, 2,
           164}, {106, 0, 1, 96, 255, 255, 255, 255, 218, 1, 1, 163}, {74, 1, 
          2, 213, 255, 255, 255, 184, 17, 2, 2, 164}, {12, 1, 49, 250, 255, 
          255, 255, 97, 2, 2, 2, 83}, {2, 1, 14, 220, 255, 255, 223, 12, 2, 2,
           2, 59}, {54, 1, 2, 38, 113, 164, 118, 2, 2, 2, 2, 107}, {157, 0, 1,
           1, 1, 1, 0, 1, 1, 1, 27, 255}, {255, 153, 26, 2, 2, 2, 1, 2, 2, 6, 
          160, 255}, {255, 255, 234, 174, 128, 128, 1, 2, 2, 66, 255, 255}, {
          255, 255, 255, 255, 255, 215, 1, 2, 18, 205, 255, 255}, {255, 255, 
          255, 255, 255, 131, 1, 2, 71, 255, 255, 255}, {255, 255, 255, 255, 
          178, 1, 0, 37, 209, 255, 255, 255}, {255, 255, 255, 247, 83, 2, 1, 
          76, 255, 255, 255, 255}, {255, 255, 255, 140, 2, 2, 38, 233, 255, 
          255, 255, 255}, {255, 255, 255, 89, 2, 2, 120, 255, 255, 255, 255, 
          255}, {255, 255, 255, 70, 2, 100, 255, 255, 255, 255, 255, 255}}, {{
          0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 250, 128, 24, 61, 172, 255, 255, 255, 255,
           255, 255}, {255, 255, 220, 52, 2, 2, 18, 18, 56, 249, 255, 202, 
          202, 255}, {255, 255, 31, 2, 27, 132, 237, 166, 8, 201, 242, 42, 19,
           228}, {255, 164, 1, 13, 212, 255, 255, 205, 96, 255, 73, 2, 11, 
          222}, {255, 157, 1, 22, 255, 255, 255, 255, 255, 156, 7, 2, 135, 
          255}, {255, 217, 0, 9, 207, 255, 255, 255, 175, 1, 1, 122, 255, 
          255}, {255, 209, 1, 2, 29, 183, 160, 115, 23, 2, 2, 197, 255, 
          255}, {255, 187, 1, 2, 2, 2, 2, 1, 2, 2, 45, 215, 255, 255}, {255, 
          255, 236, 153, 44, 2, 2, 1, 28, 206, 246, 255, 255, 255}, {255, 255,
           255, 255, 80, 2, 2, 47, 224, 255, 255, 255, 255, 255}, {255, 255, 
          255, 159, 31, 1, 1, 59, 255, 255, 255, 255, 255, 255}, {255, 255, 
          250, 38, 2, 21, 7, 10, 177, 255, 255, 255, 255, 255}, {255, 255, 
          128, 2, 57, 249, 127, 1, 52, 255, 255, 255, 255, 255}, {255, 239, 9,
           2, 170, 255, 210, 1, 19, 243, 255, 255, 255, 255}, {255, 120, 1, 
          55, 237, 255, 255, 77, 2, 140, 255, 255, 255, 255}, {230, 24, 0, 
          179, 255, 255, 255, 99, 1, 80, 255, 255, 255, 255}, {215, 2, 1, 216,
           255, 255, 202, 16, 4, 169, 255, 255, 255, 255}, {243, 73, 1, 76, 
          176, 87, 20, 1, 22, 255, 255, 255, 255, 255}, {255, 172, 1, 2, 2, 2,
           2, 48, 185, 255, 255, 255, 255, 255}, {255, 255, 174, 17, 2, 55, 
          137, 232, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 251, 186, 19, 1, 37, 243, 255, 255, 
          255, 255}, {255, 255, 255, 255, 119, 3, 3, 2, 3, 234, 255, 255, 255,
           255}, {255, 255, 255, 203, 13, 3, 11, 19, 3, 137, 255, 255, 255, 
          255}, {255, 228, 129, 23, 3, 19, 144, 212, 3, 103, 255, 255, 255, 
          255}, {255, 149, 2, 3, 56, 189, 255, 212, 3, 68, 255, 255, 255, 
          255}, {244, 36, 1, 16, 238, 255, 255, 212, 2, 146, 255, 255, 237, 
          255}, {156, 3, 16, 187, 255, 255, 255, 226, 87, 241, 233, 127, 70, 
          255}, {86, 3, 53, 255, 255, 255, 255, 255, 255, 244, 88, 3, 5, 
          197}, {65, 3, 175, 255, 255, 255, 255, 244, 156, 44, 3, 3, 2, 
          166}, {73, 3, 210, 255, 255, 184, 149, 36, 3, 3, 3, 3, 2, 131}, {86,
           2, 18, 28, 2, 2, 2, 0, 2, 5, 78, 2, 0, 192}, {122, 3, 2, 3, 3, 3, 
          3, 2, 66, 189, 191, 3, 16, 213}, {249, 103, 23, 24, 33, 129, 129, 
          146, 250, 255, 95, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 3, 44, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 2, 61, 255}, {255, 255, 255, 255, 255, 255, 255, 
          255, 255, 255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 255,
           255, 255, 255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255, 
          255, 255, 255, 255, 86, 3, 149, 255}, {255, 255, 255, 255, 255, 255,
           255, 255, 255, 255, 129, 47, 193, 255}}, {{0, 20}, {14, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PzLYb8pU
9gFFpJuJmTkeRcQCKnJlugEQXPn/v4MdIlLOD6SZmSWu/jdgBousY2JiYAIC
Bp1SEIvj6n93ZmawGgjBPfc/WER/9q5dEJHA/2AR0Xf//zuBRUAskAjf1f/l
rGCRbWBXsTExeIeCjbc/AHGWK8zQlndQhz4TRhgKAWCXAkXc4L5jh+oyhAo8
VYS5makGIrIb7lxmD4hIHIbIHoRIEUTk15SyMiZm86Sysq6fEBEAKK+w+A==

          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 103, 0,
           221}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 168, 2, 2, 
          107}, {255, 255, 255, 255, 255, 255, 255, 255, 249, 47, 2, 2, 
          155}, {255, 255, 255, 255, 255, 255, 255, 255, 108, 2, 2, 2, 173}, {
          255, 255, 255, 255, 255, 255, 255, 246, 50, 2, 2, 74, 243}, {255, 
          255, 255, 255, 255, 255, 255, 186, 2, 2, 2, 218, 255}, {255, 255, 
          255, 255, 255, 255, 244, 94, 2, 2, 59, 242, 255}, {255, 255, 255, 
          255, 255, 255, 192, 2, 2, 2, 113, 255, 255}, {255, 255, 255, 255, 
          255, 255, 105, 2, 2, 59, 242, 255, 255}, {255, 255, 255, 255, 255, 
          183, 20, 2, 2, 173, 255, 255, 255}, {255, 255, 255, 255, 255, 75, 2,
           2, 92, 243, 255, 255, 255}, {255, 255, 255, 255, 215, 18, 2, 2, 
          200, 255, 255, 255, 255}, {255, 255, 255, 241, 80, 2, 2, 24, 217, 
          255, 255, 255, 255}, {255, 255, 255, 168, 2, 2, 23, 194, 255, 255, 
          255, 255, 255}, {255, 255, 177, 14, 2, 2, 110, 255, 255, 255, 255, 
          255, 255}, {255, 242, 58, 2, 2, 100, 247, 255, 255, 255, 255, 255, 
          255}, {244, 71, 2, 2, 22, 212, 255, 255, 255, 255, 255, 255, 255}, {
          230, 2, 2, 2, 51, 255, 255, 255, 255, 255, 255, 255, 255}, {230, 2, 
          2, 2, 109, 255, 255, 255, 255, 255, 255, 255, 255}, {242, 50, 20, 
          146, 253, 255, 255, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {13, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PwK8W3rP
eTcS//9Je0b//yggjlHqHYpAJhMjY+A3BP+PLQsjlzjjU4TIJEYGrc2V4m/h
AgdZGXkP/3evhwv8dmbkvfH//5dncJGpjKzbUKy5JcnYDKJ/nHoAtd+P0Rhk
bb8uo6jyTpDADCbm+P//uwyBDlLjM3v///9DXgagwCZeRvm0gx/NGBf+fx3I
yLn5/1s2xpyv//8vZWS7/H8XI+OU/6+tGIv//v//TIgx7P93YUbF7/9/RDJy
TTzqJcSotf3/AgbGpv/3dk9lBIPCJ///L2BkFFYRBnNZJCb/Blq9jZmRkQHE
1ys7BHXwYXdGucymixe/wnwAADVm82c=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 240, 54, 
          157}, {255, 167, 70, 212, 255, 255, 255, 255, 255, 156, 1, 66}, {
          253, 86, 1, 196, 255, 255, 255, 255, 255, 154, 1, 160}, {173, 1, 9, 
          206, 255, 255, 255, 255, 255, 48, 5, 188}, {173, 1, 50, 255, 255, 
          255, 255, 255, 235, 33, 28, 255}, {123, 1, 50, 255, 255, 255, 255, 
          255, 190, 1, 28, 255}, {86, 1, 19, 180, 230, 255, 255, 255, 87, 1, 
          28, 255}, {173, 1, 1, 1, 29, 59, 99, 66, 20, 1, 28, 255}, {248, 229,
           58, 17, 9, 1, 1, 1, 1, 1, 127, 255}, {255, 255, 255, 255, 210, 163,
           78, 50, 1, 1, 206, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 
          1, 1, 245, 255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 245,
           255}, {255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 173, 255}, {
          255, 255, 255, 255, 255, 255, 255, 233, 1, 1, 136, 255}, {255, 255, 
          255, 255, 255, 255, 255, 233, 1, 1, 147, 255}, {255, 255, 255, 255, 
          255, 255, 255, 233, 0, 1, 217, 255}, {255, 255, 255, 255, 255, 255, 
          255, 233, 1, 1, 136, 255}, {255, 255, 255, 255, 255, 255, 255, 235, 
          12, 1, 30, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 87, 1, 28,
           255}, {255, 255, 255, 255, 255, 255, 255, 255, 158, 63, 171, 
          255}}, {{0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4//+fptIF
27ZNjYnJ3LbtyX8QWMrEyAQEYIJXfTFQpBVJhJFJBKjsoQaQY7gi//DJRidG
JtazQEVPnZiY2FcDGRfFGZncwSb992VkdHryf7MoI4PgU4jI13AmJsdEViYm
VajA//8PZMEm236CCfx/oQgUYU1+DxcoVwNarHkQzn/ixAgEDBZwgbPqQCMU
4hktYQL3QYbWvtrIaPgTIvDbDOi8Od//b2BkuwcROQG0FOjej+JwXXmMjDH/
/3/JZGRYAxNhYtJsn2LHxKT9HSpSDQuIo3CrJMAigv1w1/y/PSHWJjbrGkIA
ABpT1l8=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJIShiIRYD4Pxr48+vB
fTjnbey9J4uK/eUZGWWhIn8XqTGCAAcvb9wGqKJsIJ8lqmLHI4QpvUChiL2o
BnsyMmZ8QbVsCSNf0fXZva5WCxFiOYym3ED7lPj5TsCE3vECjVPY9P3/DMZp
MLHfk+qWXPwGZHwRDUb3w///kuZ/0IUe8FiBxV7fRYjVMPaAqF26YnCh+9b8
z0A0B6MtTOisGGMXmOHOWA4V6uFizH4HZi1Tegqi7q0OZ1bb+xciu4yRNyEh
wZqdkTH7Ldy9OQEgUL7++1+4XQDmiiTm
          "], {{0, 19}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 19},
        PlotRange->{{0, 20}, {0, 19}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK//////7ChZP+
DA4T/v2Hg6nqTECgFW8dCRfaw8bEJK1z8ef/S2J3oUJ3BJiYzF+BmUGlULGj
TExcuyBMiyiomAITUyiEtYsZJsYAF5vDBBNjZOKqh7CamFx+Q1j6TOyH/wDp
s0FcTEw6Wu03geybvExMJg1HkgWBLpr7Npjd/CxQcAMrExiIpSwH8k54cdwC
Ur/W8TKxaNevhpj1V0XmCZCazcbUjPCqKtMaIOnCpPEBIbaXyQgs5oUQ+n+F
iQkspv4cLnRVjskUSC1gZ9KYvgcksH92iAyT4G4QswTkHFUgYGFiYrF/DNGw
r8jaCuxI7bzdSEb/u7ii+uLFT2A2AIfHD5s=
          "], {{0, 20}, {20, 0}}, {0, 
          255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxdUMENgzAMtFAfvFEX6CbXjgATgFS+lShSxcujebTgxJDaWHIUX+5inx/T
p58bIvq2evTj77ks4zbctHht63vKT3fNTjOdIUScfCgQIS3BwIXAoACUgFSJ
MjKHSGIXNsi35XLng/qnOyAXnODmNlWY9ECCCIo6ilxFXHaBigjMvdg/UiyY
LZhrv57TuV+XZOe12gEaG/GH
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "0"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYH4PzJ428Ik
jsx/acHE3IXgfq8XYvZZ8hfOvxnCzJxyByF/yZ6Ze9MPBP+EMIPAVCTjTosz
G+9G4l9xZBY5hcQHmif8ANl+e2YRFH4z0LxHtSu+wPireZmqgYYyFUL5X3SY
486LcvAzhcM8wMy8vp9jrj9cYCJz9H9Hl/86TOsh/LNcTFcPMe0qYcqEKljF
zHw1Wy2HmXkHVGAjC3NOMjMz8wy4KyqYmZmYOWI/wgV+9zk45FxAOBMAT2IB
fQ==
          "], {{0, 20}, {17, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{17, 20},
        PlotRange->{{0, 17}, {0, 20}}], "\[Rule]", "6"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PxTc7zRg
ZGRkYCwFsrd2iwKBABMESN965MDNhALmz0PlMym+WM0OYXGrqOSBaO3//1fW
KM0Agi3//3+AisDBSnOQSBFC4JUJSKDqL1zgmQ3YuJMIAVsQX67kK1zEESQg
eQFhyAqQM9kuwvnf81lAAlEIFWvBhi5DCCwDOzvjF1xgEQ9IwO4bQok9SEBi
H5LrV/CDvPMUSeR/HFBkI7LA//fNTB2fEVwAjULXMA==
          "], {{0, 20}, {18, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          239, 29, 214}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255, 229, 1, 57}, {255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
           255, 204, 1, 71}, {255, 255, 157, 249, 255, 255, 255, 255, 255, 
          255, 255, 83, 1, 123}, {255, 255, 25, 156, 255, 255, 255, 255, 255, 
          255, 234, 21, 1, 204}, {255, 246, 22, 86, 255, 255, 255, 255, 255, 
          255, 133, 1, 64, 250}, {255, 179, 1, 86, 255, 255, 255, 255, 255, 
          249, 57, 1, 27, 242}, {243, 42, 1, 140, 255, 255, 255, 255, 255, 90,
           1, 1, 81, 255}, {197, 1, 12, 211, 255, 255, 141, 62, 97, 10, 1, 1, 
          118, 255}, {36, 1, 1, 78, 89, 5, 1, 1, 1, 1, 1, 25, 253, 255}, {78, 
          1, 1, 1, 1, 1, 1, 85, 2, 1, 1, 107, 255, 255}, {239, 19, 8, 61, 61, 
          61, 177, 255, 119, 4, 61, 195, 255, 255}, {255, 228, 220, 255, 255, 
          255, 255, 252, 107, 3, 183, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 255, 182, 1, 1, 170, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 250, 96, 1, 73, 245, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 204, 1, 1, 215, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 204, 1, 1, 176, 255, 255, 255, 255}, {255, 255, 255, 255, 
          255, 255, 204, 1, 46, 245, 255, 255, 255, 255}, {255, 255, 255, 255,
           255, 255, 213, 9, 61, 255, 255, 255, 255, 255}, {255, 255, 255, 
          255, 255, 255, 255, 207, 139, 255, 255, 255, 255, 255}}, {{0, 20}, {
          14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 255, 235, 217, 128, 
          97, 0, 166}, {255, 255, 255, 255, 255, 255, 206, 139, 35, 2, 2, 2, 
          54, 225}, {255, 255, 255, 255, 253, 97, 13, 2, 2, 3, 49, 172, 245, 
          255}, {255, 255, 255, 255, 149, 2, 2, 2, 42, 140, 255, 255, 255, 
          255}, {255, 255, 255, 239, 41, 2, 19, 122, 251, 255, 255, 255, 255, 
          255}, {255, 255, 254, 151, 2, 2, 107, 255, 255, 255, 255, 255, 255, 
          255}, {255, 255, 244, 2, 2, 2, 142, 255, 255, 255, 255, 255, 255, 
          255}, {255, 255, 244, 2, 2, 2, 14, 60, 60, 131, 238, 255, 255, 
          255}, {255, 255, 144, 2, 2, 2, 2, 2, 2, 2, 18, 137, 249, 255}, {255,
           255, 207, 22, 20, 155, 163, 163, 109, 20, 2, 2, 92, 245}, {255, 
          255, 255, 222, 220, 255, 255, 255, 255, 219, 125, 2, 2, 212}, {255, 
          255, 255, 255, 255, 255, 255, 255, 255, 255, 157, 2, 2, 157}, {255, 
          255, 255, 255, 255, 255, 255, 255, 255, 255, 131, 2, 2, 129}, {255, 
          223, 161, 255, 255, 255, 255, 255, 255, 164, 11, 2, 2, 212}, {250, 
          63, 70, 255, 255, 255, 255, 255, 164, 5, 2, 2, 76, 253}, {137, 2, 
          121, 255, 255, 255, 255, 231, 13, 2, 2, 9, 195, 255}, {104, 2, 77, 
          255, 255, 204, 128, 29, 2, 2, 2, 162, 255, 255}, {163, 2, 2, 6, 6, 
          4, 2, 2, 2, 49, 183, 254, 255, 255}, {242, 77, 2, 2, 2, 2, 2, 57, 
          173, 229, 255, 255, 255, 255}, {255, 208, 68, 150, 110, 162, 218, 
          247, 255, 255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/0PAl23bmpjm
btsG5lzNz8+/9n91PAsLEwsQ5B0EikkDGfNUhVmgYkwSx///h7BYWIwLCwoT
QSzJg1CxnB3XQIbuMAdyC/+fUmRiYmLI2nYVYhcDkLf9/0EJsF6jfJDx04As
54f//z/s44Mar6YGZCm3gDXMKDCC2+v8Guri//lwsSkwoW3+IIuYwMRciG3T
wEp0ptSDFRcCRY6CTObUWPns/6870UAx4UP//6uBZMsghmwA+eja/2l8IH98
BYk88ZYA690GMvnU///3gWEFtoN3xn9/kPGK+fmOULew9P//vwIRTEAsF33n
F9CQNcJwsaTCa1AHH9qxozlnx44d23d8hYoAAHLzsmw=
          "], {{0, 20}, {20, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "8"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PyrYxFiK
JqLN6A5hLJv8F0wfZoOI/EiXgCoOZISIXGRkNHgOYrwSZWTMAtK/gxk1d4GV
+DMyil4H0lmMjLlggUMsjIy9QPouP6PgDbCIFyMj46b///9lMjJOBWr9+m8S
UMmUf///P2JkZL9zNdVD47ULUMkVoFJzRkZmM15GRo1NQAGJx0ARBUYwsGC3
Z2TkuwgUOMMN4kvlns3JZWSUAZkfDeSzLn38+/9JGUbGuSCRdYyM0V9BDKCV
pr9AjGcSoa9A9E1BRoZ6iLdvQag5jIySj1ACJoaR0es/mgj7AVSRHYwLoSwA
KOvxGQ==
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/4PApiVVDGZL
jv9HgDvevNy228SF5KLffYQKXVRiitkLpH/lyjJpQ4Q+KTEJ3YEwDzFx9/8C
Md4xCe2B6njGxMR0H8T4M8nvP1yMq+PXf1TQDTMPDr5LciicQRU6k8AkeApN
GS8TE3PImusoYoIC6+ZxcepUfPuJpvhpKh+Tz///b5+hSMxmEt3TrcWE7Pf/
R5mYlk3hY1qDLvZ/PpNQzVQ0sT+z+Jk4amBmPtRXyfkCpGcCvd6+eDZYrIYJ
oufvhzQfXg52QRDgdN4CN6Y5o5AJpHwZSCMARR8vTw==
          "], {{0, 20}, {20, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{61, 230, 255, 255, 255, 255}, {69, 52, 255, 255, 255, 
          255}, {197, 12, 255, 255, 255, 255}, {220, 43, 182, 255, 255, 
          255}, {93, 4, 156, 255, 255, 255}, {118, 0, 156, 255, 255, 255}, {
          247, 36, 62, 251, 255, 255}, {255, 67, 1, 178, 255, 255}, {255, 147,
           1, 100, 255, 255}, {255, 249, 1, 100, 255, 255}, {255, 253, 79, 
          100, 255, 255}, {255, 255, 99, 2, 233, 255}, {255, 255, 99, 1, 146, 
          255}, {255, 255, 99, 1, 133, 255}, {255, 255, 99, 1, 42, 255}, {255,
           255, 192, 1, 42, 255}, {255, 255, 202, 1, 14, 213}, {255, 255, 247,
           96, 1, 193}, {255, 255, 255, 232, 4, 127}, {255, 255, 255, 196, 2, 
          89}}, {{0, 20}, {6, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{6, 20},
        PlotRange->{{0, 6}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/yOBxwsKCmQY
ua+COQ+mVfvJysgKMYLBXpBQjz6Ew8ihx+3nVvIBKPSCD8iVYzSoW/UYbsxm
Rsa0Y5/f/kA2eg0j887/qOCHFKMImtD/B4yMy9HFpjMKn/qGIcbIqL8JVewK
2HV6NuXfkQS/ZVrwgoQjUU24frxcgZExHN2q+zGM3Ohi/8sZHWDMIxPBnvra
xMhYABW6oMrof3PnyiINRgaZd1CxPUAL2ZhB1vJXw7TekYQEHb/jXITRq2Pk
bBPq995Fsg0AGtgklQ==
          "], {{0, 20}, {20, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{20, 20},
        PlotRange->{{0, 20}, {0, 20}}], "\[Rule]", "5"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{172, 62, 53, 226, 255, 255}, {24, 1, 1, 56, 255, 255}, {
          24, 1, 1, 9, 255, 255}, {45, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255,
           255}, {188, 1, 1, 9, 255, 255}, {188, 1, 1, 9, 255, 255}, {188, 1, 
          1, 9, 255, 255}, {188, 1, 1, 4, 158, 255}, {188, 1, 1, 1, 100, 
          255}, {233, 67, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 
          98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100,
           255}, {255, 98, 1, 1, 100, 255}, {255, 98, 1, 1, 100, 255}, {255, 
          189, 4, 1, 100, 255}, {255, 255, 7, 1, 6, 145}, {255, 255, 7, 1, 1, 
          25}}, {{0, 20}, {6, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{6, 20},
        PlotRange->{{0, 6}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 173, 82, 2, 21, 103, 103, 143, 234, 
          255, 255}, {255, 255, 255, 92, 12, 2, 3, 205, 43, 2, 3, 52, 194, 
          255}, {255, 255, 193, 1, 22, 132, 255, 255, 214, 92, 32, 1, 2, 
          255}, {255, 255, 113, 2, 104, 255, 255, 255, 255, 255, 235, 83, 3, 
          173}, {255, 255, 72, 1, 104, 255, 255, 255, 255, 255, 255, 123, 2, 
          113}, {255, 255, 153, 2, 23, 214, 255, 255, 255, 255, 132, 2, 3, 
          235}, {255, 255, 255, 62, 2, 41, 224, 255, 173, 41, 2, 52, 235, 
          255}, {255, 255, 255, 204, 23, 2, 23, 52, 12, 2, 84, 235, 255, 
          255}, {255, 255, 255, 255, 214, 82, 2, 1, 2, 1, 104, 255, 255, 
          255}, {255, 255, 255, 255, 255, 245, 205, 2, 3, 2, 144, 255, 255, 
          255}, {255, 255, 255, 255, 255, 244, 123, 1, 2, 173, 255, 255, 255, 
          255}, {255, 255, 255, 255, 255, 163, 3, 2, 84, 255, 255, 255, 255, 
          255}, {255, 255, 255, 255, 193, 1, 2, 31, 235, 255, 255, 255, 255, 
          255}, {255, 255, 255, 234, 52, 2, 3, 215, 255, 255, 255, 255, 255, 
          255}, {255, 255, 234, 82, 2, 11, 174, 255, 255, 255, 255, 255, 255, 
          255}, {255, 255, 72, 2, 3, 93, 255, 255, 255, 255, 255, 255, 255, 
          255}, {255, 123, 2, 1, 63, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {255, 2, 3, 2, 185, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {92, 0, 2, 113, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {93, 2, 43, 235, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 111, 99, 0, 9, 61, 114, 241, 255}, {
          255, 255, 253, 137, 8, 22, 81, 120, 52, 4, 152, 255}, {255, 255, 
          167, 2, 139, 255, 255, 255, 255, 183, 207, 255}, {255, 223, 30, 139,
           253, 255, 255, 255, 255, 203, 21, 164}, {255, 158, 60, 255, 255, 
          255, 255, 255, 255, 43, 2, 195}, {194, 0, 179, 255, 255, 255, 255, 
          159, 31, 1, 1, 255}, {157, 51, 249, 255, 255, 247, 115, 70, 46, 2, 
          48, 255}, {187, 19, 228, 255, 212, 131, 139, 243, 109, 2, 100, 
          255}, {255, 153, 65, 142, 125, 250, 255, 255, 80, 2, 190, 255}, {
          255, 255, 255, 232, 255, 255, 255, 239, 20, 33, 241, 255}, {255, 
          255, 255, 255, 255, 255, 255, 137, 1, 63, 255, 255}, {255, 255, 255,
           255, 255, 255, 255, 137, 2, 146, 255, 255}, {255, 255, 255, 255, 
          255, 255, 255, 70, 27, 242, 255, 255}, {255, 255, 255, 255, 255, 
          255, 147, 5, 96, 255, 255, 255}, {255, 255, 255, 255, 255, 255, 99, 
          10, 207, 255, 255, 255}, {255, 255, 255, 255, 255, 194, 0, 81, 255, 
          255, 255, 255}, {255, 255, 255, 255, 255, 113, 6, 167, 255, 255, 
          255, 255}, {255, 255, 255, 255, 255, 60, 127, 255, 255, 255, 255, 
          255}, {255, 255, 255, 255, 203, 7, 157, 255, 255, 255, 255, 255}, {
          255, 255, 255, 255, 119, 40, 232, 255, 255, 255, 255, 255}}, {{0, 
          20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4Pwz8ml4b
xMBgsg3K/XO9XI4JDEx/gAU+NYI4HCIiIsxMa4H839NUQfya7UC2GtMBoEA7
SIH5drDqqUyf/78ECUjXPwPxP+aYM33+pg4UkN8LVvDBC8j+fAtIKO4EC7z3
BrIlvsYCiSdg/nEfkHk9/4FE3NcDBw6kGYOdk/cLJMJpxgQDq3/+/z+TCQGk
q0AOvueLEKmHeOn3lY7IVatBAq7f4d7+/84NKCB7DiHwwRUkcB4h8H8pUEAG
WeARB1BkM5LA/ywmJslJf5AEPhUyiV9G4gMA9TjU6w==
          "], {{0, 20}, {18, 
          0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 191, 175, 175, 175, 59, 48, 175, 247,
           255, 255, 255}, {255, 255, 255, 177, 20, 1, 1, 1, 1, 1, 1, 87, 178,
           255, 255}, {255, 255, 255, 161, 56, 1, 1, 1, 1, 1, 1, 1, 9, 215, 
          255}, {255, 255, 255, 255, 243, 83, 1, 1, 1, 1, 1, 1, 1, 115, 
          255}, {255, 255, 255, 255, 255, 240, 93, 45, 16, 1, 1, 1, 1, 36, 
          255}, {255, 255, 255, 255, 255, 255, 255, 255, 87, 1, 1, 1, 1, 36, 
          255}, {255, 255, 255, 255, 255, 255, 255, 184, 18, 1, 1, 1, 1, 54, 
          255}, {255, 255, 255, 255, 255, 255, 251, 98, 1, 1, 1, 1, 1, 212, 
          255}, {255, 255, 255, 255, 255, 251, 115, 1, 1, 1, 1, 39, 185, 243, 
          255}, {255, 255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 
          255}, {255, 255, 255, 255, 255, 148, 1, 1, 1, 1, 1, 54, 255, 255, 
          255}, {255, 255, 255, 220, 165, 5, 1, 1, 1, 1, 1, 54, 255, 255, 
          255}, {255, 255, 255, 131, 1, 1, 1, 1, 1, 1, 1, 157, 255, 255, 
          255}, {255, 255, 178, 13, 1, 1, 1, 1, 1, 15, 157, 252, 255, 255, 
          255}, {255, 181, 17, 1, 1, 1, 1, 1, 1, 34, 123, 123, 123, 140, 
          255}, {246, 98, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 255}, {193, 1, 
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20, 191}, {240, 87, 1, 1, 1, 1, 1, 
          1, 1, 1, 1, 41, 194, 194, 221}, {255, 114, 1, 1, 1, 1, 1, 1, 1, 28, 
          98, 130, 255, 255, 255}, {255, 211, 177, 92, 1, 1, 1, 1, 1, 193, 
          255, 255, 255, 255, 255}}, {{0, 20}, {15, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 20},
        PlotRange->{{0, 15}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4PxJoZLgG
ov6mzAFz7ygztYPoNiaBGyA6jFHsLJD6KcHIegJIv+JljARxI5gY80DSHkyM
W4HUfSYm8ZdA+oEok8oPIJ3GxLQLZGg0E1MdkD7IzCT3G6SbkUnjDZDey8iY
A9I9jZFxMojex8jEn3X881ctRpbd////+ATkA4G6JhMjS+neaSYHnukzwgAT
I5PK//9PSqW4gSww4qkHO/zR6tUKTEzOq1c9g3tNkNH8F5JPH7Iw2SH7fD4j
oy0+vgMj0zpkfgpTKJQFAPly1Wk=
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "4"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4Pxz87mRn
ULoD473pF2UCgi3/j24GAgstJRCPSeTUUQEmJODwfy8XiFZUUalbAaSD//+f
LCAQPuML0IQPTExsZxDGfzBnYpqN4P5/DFR+F4mfwcQU/hLBvS7EpPIVSTqL
iakOifvdjom5G4mfw8TEi8S9LMXEfxyJv5SJSfY/Kt8Lmd/MxLQMmS+DxldH
4y9lkrkGYQEAhdPnXw==
          "], {{0, 20}, {16, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{16, 20},
        PlotRange->{{0, 16}, {0, 20}}], "\[Rule]", "7"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4////v1MX
/kcBT32Yw///7w3bNfkNVKSPiVnUKkeUmZnJ8Q1cBMgD4+NggcN8DExMfLKZ
8UyMis9AAgdEmZk0Ey/8/xTMzGQNVhIGVL0aqFIPSPOvA4nwMDNv/Pb/vwPY
HJ4moIgB9xaQRBETExMjENtf+F+zDmK+KNS+BLg7bx4HglZmJo03/5HB141M
zMmoPvpvzxSOJhLJjC7ChC5yBi5yoOgwkPwxnYmR4yzM/6I1x45lAt0Tgggj
iAvDj0NFPkFFTIFsANCm7Mw=
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "3"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 41, 83, 255}, {255, 255, 2, 3, 255}, {255, 255,
           21, 2, 153}, {255, 255, 103, 3, 153}, {255, 255, 41, 2, 214}, {255,
           255, 2, 3, 255}, {255, 214, 1, 2, 255}, {255, 173, 2, 3, 255}, {
          255, 153, 1, 2, 255}, {255, 153, 2, 43, 255}, {255, 153, 1, 104, 
          255}, {255, 153, 2, 104, 255}, {255, 52, 1, 205, 255}, {234, 32, 22,
           225, 255}, {183, 2, 52, 255, 255}, {103, 3, 52, 255, 255}, {103, 2,
           152, 255, 255}, {22, 3, 235, 255, 255}, {0, 63, 255, 255, 255}, {2,
           144, 255, 255, 255}}, {{0, 20}, {5, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{5, 20},
        PlotRange->{{0, 5}, {0, 20}}], "\[Rule]", "1"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 255, 236, 192, 19, 10, 135,
           233}, {255, 255, 255, 255, 255, 234, 140, 34, 2, 2, 2, 2, 67}, {
          255, 255, 255, 250, 88, 32, 2, 1, 2, 41, 6, 2, 36}, {255, 255, 208, 
          20, 2, 2, 21, 148, 239, 92, 2, 2, 196}, {255, 218, 59, 2, 35, 91, 
          243, 255, 116, 2, 2, 111, 236}, {247, 82, 2, 5, 190, 255, 255, 255, 
          78, 45, 6, 81, 255}, {131, 2, 2, 167, 255, 255, 245, 229, 41, 2, 2, 
          62, 255}, {122, 2, 2, 233, 227, 128, 14, 1, 2, 2, 2, 167, 255}, {
          122, 2, 2, 62, 27, 2, 2, 140, 58, 2, 18, 232, 255}, {170, 2, 2, 2, 
          2, 35, 208, 240, 45, 2, 168, 255, 255}, {255, 230, 144, 144, 211, 
          255, 240, 48, 0, 57, 250, 255, 255}, {255, 255, 255, 255, 255, 234, 
          59, 0, 19, 189, 255, 255, 255}, {255, 255, 255, 255, 237, 109, 2, 1,
           159, 255, 255, 255, 255}, {255, 255, 255, 254, 96, 2, 2, 148, 251, 
          255, 255, 255, 255}, {255, 255, 255, 147, 2, 19, 153, 255, 255, 255,
           255, 255, 255}, {255, 255, 224, 15, 2, 118, 255, 255, 255, 255, 
          255, 255, 255}, {255, 204, 15, 2, 28, 221, 255, 255, 255, 255, 255, 
          255, 255}, {251, 117, 2, 28, 216, 255, 255, 255, 255, 255, 255, 255,
           255}, {150, 2, 2, 205, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}, {228, 64, 150, 252, 255, 255, 255, 255, 255, 255, 255, 255, 
          255}}, {{0, 20}, {13, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{13, 20},
        PlotRange->{{0, 13}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIhYD4PxB8neDN
yGi//9d/GLggzQQEjEyTYQLP1ZnkQ+fPF2JS/AQTSvR6DyTPijGthom8fQem
8hAiUJDH5I8hYoQhMgtDBM2cz2zoIpWMqnD228N5QGDCpPzs2U8Q/2enLBPE
F0DgnZRU+KuciUnAyEiWiVHOSJpfUjPx/Ekm3ujT/5+bMSU8+H/n9M2PIDv7
/v9/Zs6k+ghmLMh/zyyY1B7CLWJiynaXZlK/j3DGdJAVakgC/z9Va8nP/Y7s
VABtyAmB
          "], {{0, 20}, {18, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{18, 20},
        PlotRange->{{0, 18}, {0, 20}}], "\[Rule]", "2"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 219, 33, 2, 2, 0, 75, 148, 250, 255, 255}, {
          255, 219, 36, 3, 3, 3, 2, 3, 3, 120, 250, 255}, {255, 85, 3, 3, 28, 
          72, 71, 72, 53, 3, 118, 255}, {160, 2, 3, 28, 205, 255, 255, 255, 
          185, 3, 3, 212}, {139, 2, 3, 176, 255, 255, 255, 255, 248, 44, 3, 
          87}, {24, 0, 111, 255, 255, 255, 255, 255, 185, 2, 2, 34}, {25, 2, 
          163, 255, 255, 255, 255, 255, 185, 3, 3, 139}, {25, 2, 163, 255, 
          255, 255, 255, 255, 102, 3, 3, 139}, {120, 2, 53, 230, 255, 255, 
          246, 89, 15, 3, 3, 139}, {192, 2, 3, 19, 25, 25, 22, 3, 3, 3, 3, 
          192}, {255, 74, 2, 2, 2, 2, 0, 2, 2, 2, 2, 255}, {255, 246, 142, 49,
           49, 49, 111, 134, 3, 3, 24, 255}, {255, 255, 255, 255, 255, 255, 
          255, 177, 3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 255, 135, 
          3, 3, 118, 255}, {255, 255, 255, 255, 255, 255, 255, 208, 3, 3, 170,
           255}, {255, 255, 255, 255, 255, 255, 255, 93, 2, 2, 222, 255}, {
          255, 255, 255, 255, 255, 255, 255, 94, 3, 3, 118, 255}, {255, 255, 
          255, 255, 255, 255, 255, 126, 3, 3, 34, 255}, {255, 255, 255, 255, 
          255, 255, 255, 208, 3, 3, 98, 255}, {255, 255, 255, 255, 255, 255, 
          255, 250, 118, 3, 170, 255}}, {{0, 20}, {12, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{12, 20},
        PlotRange->{{0, 12}, {0, 20}}], "\[Rule]", "9"}], ",", 
      RowBox[{
       GraphicsBox[
        TagBox[
         RasterBox[{{255, 255, 255, 255, 255, 255, 59, 23, 231, 255, 255, 255,
           255, 255}, {255, 255, 255, 255, 255, 176, 11, 1, 171, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 255, 51, 2, 1, 149, 255, 255, 
          255, 255, 255}, {255, 255, 255, 255, 129, 4, 2, 71, 252, 255, 255, 
          255, 255, 255}, {255, 255, 255, 239, 20, 2, 2, 157, 255, 255, 255, 
          255, 255, 255}, {255, 255, 255, 152, 1, 1, 24, 217, 255, 255, 255, 
          255, 255, 255}, {255, 255, 227, 23, 2, 2, 144, 255, 255, 255, 255, 
          255, 255, 255}, {255, 255, 136, 2, 2, 45, 215, 255, 255, 255, 255, 
          255, 255, 255}, {255, 239, 39, 2, 2, 117, 255, 255, 255, 255, 255, 
          255, 255, 255}, {255, 157, 1, 2, 2, 236, 255, 255, 255, 255, 255, 
          255, 255, 255}, {255, 134, 0, 1, 103, 255, 255, 255, 227, 128, 46, 
          77, 121, 246}, {176, 11, 1, 19, 243, 255, 255, 242, 90, 2, 2, 2, 1, 
          133}, {119, 2, 1, 52, 255, 255, 194, 31, 2, 2, 2, 2, 1, 120}, {81, 
          2, 24, 224, 255, 181, 29, 1, 2, 2, 2, 2, 24, 186}, {119, 2, 1, 179, 
          255, 43, 2, 1, 2, 2, 2, 2, 84, 246}, {80, 1, 0, 84, 69, 1, 1, 0, 1, 
          1, 1, 122, 255, 255}, {166, 7, 1, 2, 2, 2, 2, 1, 2, 2, 51, 246, 255,
           255}, {255, 60, 1, 2, 2, 2, 2, 1, 2, 33, 243, 255, 255, 255}, {255,
           165, 116, 26, 14, 2, 2, 129, 21, 72, 208, 255, 255, 255}, {255, 
          255, 255, 232, 147, 10, 2, 84, 171, 255, 255, 255, 255, 255}}, {{0, 
          20}, {14, 0}}, {0, 255},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Byte", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        BaseStyle->"ImageGraphics",
        ImageSizeRaw->{14, 20},
        PlotRange->{{0, 14}, {0, 20}}], "\[Rule]", "6"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"digit", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/yOBPe6Mk/6/
nowkssOVi0nz1VEh5gS40CtDJqas5/8PMDFpw4Tm6DFxtD/4DxLrhgot5GLi
aAMxDjCxzgKLfFvFwsTbDmbmM8lBVGUwMRm8ALOuyDDNh2hkYWKaBpEtZIKI
zeFiYrr/Byx0S5wp4iuQPsjLxNb7Fyx0N5/J5COI4c/EVArR+DebiWkJ2HIB
JvXbYKE/k5iY3N8AGb8DmJjXg4V+AoUcP4BYnUxMlhCdrkxM9j/ALHYmpt0g
epEGK28uROg/I5PL9/9n05RZmYTSYX5nZBJakCLOxMRksu4/QgwMRGI+IkIy
gRkowid+DDm8/0+RUOi+gCLyHwCoIhdO
       "], {{0, 20}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 196, 106, 255}, {255, 144, 74, 255}, {252, 64, 74, 
       255}, {236, 2, 74, 255}, {204, 2, 74, 255}, {145, 1, 73, 255}, {237, 
       28, 74, 255}, {158, 2, 87, 255}, {146, 2, 164, 255}, {146, 2, 164, 
       255}, {145, 1, 163, 255}, {146, 2, 164, 255}, {146, 2, 164, 255}, {146,
        2, 126, 255}, {146, 2, 48, 248}, {145, 1, 0, 205}, {146, 2, 1, 237}, {
       191, 2, 64, 252}, {244, 40, 74, 255}, {255, 164, 74, 255}}, {{0, 20}, {
       4, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{4, 20},
     PlotRange->{{0, 4}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSK/0PAgYmZTEwM
TExMEz/8h4F8JmZmZjBOQIgJaWhUV2koMTP5wMUOHgRTt5DFoMALU+yVGabY
QqAdiahCB4SYmR0+oIqFAN2HKnIqhYmZbx6KULI4MxPfTBShPJBZm5BF3jsA
/eqALHK/R5GZyWkzso2vdIB+V3uIrGqaIVAoHFnkghjQUUxqUN6GSQcW1k2e
xAwCHGqqampAzMssyMEMFYOGJwgrayy+MFkHLjYZBIC2AwC1VQ28
       "], {{0, 20}, {20,
        0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 20},
     PlotRange->{{0, 20}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgSIBYD4PxB87aqq
qsxjlKiqegDiXhVjYmJiZAIBtVdA/jYgQ1VVTU2Nh4npNpD/bPXq1b9BChOZ
mI78R4D9FkxMO2GcG9uWiDIxOX8Dc+7ZGIqDjEu7D5E0g5if8g2qWBXC94Rp
7q2urv8Sx8RyDMn0/7cYGJv////97AeU/0aLSePF/36mpVD+SSamqf//JzHZ
Qbi//Jl4z4H4wlfA/H6w9P99TEzpIO56aSb1dyBTmZj41/+/VcDIxLcBJP6z
gomJT1WMiZG7EmpOOTgk2LbB3PFnHZONWfUuKA8AG3/Pww==
       "], {{0, 20}, {16, 
       0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{16, 20},
     PlotRange->{{0, 16}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 110, 92, 255, 255, 255, 255, 230, 255, 255}, {255, 75, 
       57, 255, 255, 255, 235, 42, 211, 255}, {236, 17, 130, 255, 255, 255, 
       232, 23, 170, 255}, {141, 1, 151, 255, 255, 255, 255, 56, 170, 255}, {
       141, 1, 204, 255, 255, 255, 255, 56, 170, 255}, {141, 39, 250, 255, 
       255, 255, 255, 56, 170, 255}, {141, 86, 255, 255, 255, 255, 255, 56, 
       170, 255}, {40, 86, 255, 255, 255, 255, 255, 56, 98, 250}, {23, 13, 37,
        37, 37, 97, 118, 9, 111, 252}, {159, 95, 95, 95, 95, 70, 0, 1, 170, 
       255}, {255, 255, 255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 
       255, 255, 255, 255, 255, 56, 170, 255}, {255, 255, 255, 255, 255, 255, 
       255, 56, 97, 255}, {255, 255, 255, 255, 255, 255, 255, 56, 76, 255}, {
       255, 255, 255, 255, 255, 255, 247, 46, 76, 255}, {255, 255, 255, 255, 
       255, 255, 233, 25, 76, 255}, {255, 255, 255, 255, 255, 255, 255, 123, 
       51, 248}, {255, 255, 255, 255, 255, 255, 255, 150, 1, 236}, {255, 255, 
       255, 255, 255, 255, 255, 196, 1, 111}, {255, 255, 255, 255, 255, 255, 
       255, 249, 32, 83}}, {{0, 20}, {10, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{10, 20},
     PlotRange->{{0, 10}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahJISgCIRYD4Pyr493Rd
8UQUkbdrkxkZGTwQArvi9EQYGRN2XfwFF9rCxyEaMu/2HyRtp4VikLlgIRH1
t2hC50QYHaKrURT+VGVklFVnmoIs9tvXd9/X//IK35AF/wLtv8Hh8BfNyP+r
mOdBWVdhQl9sOZ9AmWZ6INbP/1+iGBNg0hmMQgUtoRqWauz5L+BWprEzgkD8
bhSHrAeCG/+QRACjvgpb
       "], {{0, 16}, {20, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{20, 16},
     PlotRange->{{0, 20}, {0, 16}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 255, 255, 232, 173, 54, 80, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 251, 108, 1, 19, 198, 255, 255, 
       255, 255}, {255, 255, 255, 255, 255, 148, 2, 20, 198, 255, 255, 255, 
       255, 255}, {255, 255, 255, 255, 197, 18, 18, 202, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 247, 50, 2, 175, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 255, 40, 1, 101, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 115, 8, 2, 184, 255, 255, 255, 255, 255, 255, 
       255, 255}, {255, 255, 1, 2, 125, 249, 255, 255, 255, 255, 255, 255, 
       255, 255}, {248, 103, 1, 13, 219, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {215, 2, 1, 134, 255, 255, 255, 255, 255, 255, 255, 255, 
       255, 255}, {193, 1, 14, 225, 255, 255, 255, 255, 255, 255, 185, 61, 
       158, 246}, {73, 2, 68, 255, 255, 255, 255, 255, 253, 137, 5, 2, 1, 
       141}, {21, 2, 157, 255, 255, 255, 255, 206, 88, 2, 2, 2, 72, 243}, {21,
        2, 195, 255, 255, 233, 140, 9, 2, 2, 2, 2, 172, 255}, {59, 2, 37, 142,
        195, 74, 2, 1, 2, 2, 55, 175, 255, 255}, {224, 37, 0, 1, 1, 1, 1, 0, 
       59, 187, 255, 255, 255, 255}, {255, 240, 92, 2, 2, 13, 134, 216, 249, 
       255, 255, 255, 255, 255}, {255, 255, 99, 2, 27, 212, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 28, 212, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}, {255, 255, 1, 194, 255, 255, 255, 255, 255, 
       255, 255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxlj80NwjAMhdMoB+5wpYgxSE50hCIl51aCK1KphDpEB6lhjnQPOohxlKY/
qZ8cKfYXv/hcPvMHZ4y9dnTkxftaVUVzE3TJmvpeutaBck+J+BsQre2gg6ru
wCKFVNqkJy68DDGScadk1NEgiNBXqvaUNbp3z1tKIErjKiRR/bLgmERtGDXM
BHi/eVIbXNPRzE+ZpMOUWZPnxs2alVuYFv0b/HbLuES/GqmI8/u1y9Lw5eIT
HP8ZfOyd
       "], {{0, 20}, {19, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{19, 20},
     PlotRange->{{0, 19}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 252, 207, 207, 207, 226, 255, 255, 255, 189, 
       10, 68}, {255, 245, 130, 53, 1, 1, 1, 22, 174, 255, 255, 73, 1, 68}, {
       243, 68, 0, 1, 24, 125, 120, 23, 19, 220, 209, 3, 1, 83}, {95, 1, 1, 
       123, 231, 255, 255, 228, 188, 238, 43, 1, 1, 172}, {67, 1, 121, 252, 
       255, 255, 255, 255, 250, 114, 2, 1, 84, 248}, {67, 1, 177, 255, 255, 
       255, 255, 255, 183, 1, 1, 85, 247, 255}, {13, 1, 171, 255, 255, 255, 
       255, 208, 58, 1, 22, 216, 255, 255}, {67, 1, 56, 221, 255, 255, 242, 
       75, 1, 1, 204, 255, 255, 255}, {190, 54, 1, 26, 170, 247, 73, 1, 1, 
       121, 252, 255, 255, 255}, {255, 193, 38, 1, 1, 1, 1, 1, 64, 255, 255, 
       255, 255, 255}, {255, 255, 240, 148, 1, 1, 1, 1, 189, 255, 255, 255, 
       255, 255}, {255, 255, 255, 222, 1, 1, 1, 1, 20, 145, 252, 255, 255, 
       255}, {255, 255, 229, 46, 1, 2, 153, 76, 1, 1, 203, 255, 255, 255}, {
       255, 238, 117, 1, 1, 159, 255, 249, 17, 1, 38, 255, 255, 255}, {255, 
       93, 1, 1, 78, 243, 255, 255, 109, 1, 32, 255, 255, 255}, {171, 2, 1, 
       23, 246, 255, 255, 255, 109, 1, 32, 255, 255, 255}, {67, 1, 20, 198, 
       255, 255, 241, 146, 36, 1, 129, 255, 255, 255}, {67, 1, 41, 140, 140, 
       137, 29, 1, 1, 45, 246, 255, 255, 255}, {91, 1, 1, 1, 1, 1, 1, 23, 118,
        232, 255, 255, 255, 255}, {239, 60, 1, 1, 1, 3, 126, 226, 255, 255, 
       255, 255, 255, 255}}, {{0, 20}, {14, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{14, 20},
     PlotRange->{{0, 14}, {0, 20}}], ",", 
    GraphicsBox[
     TagBox[
      RasterBox[{{255, 255, 255, 255, 210, 82, 0, 1, 0, 11, 190, 255, 255}, {
       255, 255, 255, 173, 3, 16, 123, 165, 114, 1, 58, 255, 255}, {255, 255, 
       191, 13, 16, 166, 255, 255, 166, 1, 82, 255, 255}, {255, 215, 14, 1, 
       187, 255, 255, 244, 69, 1, 114, 255, 255}, {255, 117, 1, 16, 233, 255, 
       255, 252, 45, 1, 17, 104, 194}, {238, 14, 1, 186, 255, 255, 255, 255, 
       176, 1, 1, 1, 26}, {185, 1, 35, 244, 255, 255, 255, 227, 84, 1, 1, 1, 
       97}, {185, 1, 109, 255, 255, 255, 123, 16, 1, 53, 31, 1, 123}, {185, 1,
        62, 207, 207, 87, 6, 9, 102, 248, 57, 1, 191}, {221, 10, 1, 1, 1, 1, 
       82, 208, 255, 249, 47, 5, 201}, {255, 141, 5, 1, 23, 115, 235, 255, 
       255, 211, 1, 23, 255}, {255, 255, 191, 170, 233, 255, 255, 255, 255, 
       68, 1, 105, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 250, 46, 1, 
       195, 255}, {255, 255, 255, 255, 255, 255, 255, 255, 220, 1, 13, 221, 
       255}, {255, 255, 255, 255, 255, 255, 255, 255, 176, 1, 27, 255, 255}, {
       255, 255, 255, 255, 255, 255, 255, 255, 48, 1, 68, 255, 255}, {255, 
       255, 255, 255, 255, 255, 255, 255, 48, 1, 199, 255, 255}, {255, 255, 
       255, 255, 255, 255, 255, 224, 15, 1, 199, 255, 255}, {255, 255, 255, 
       255, 255, 255, 255, 129, 1, 24, 238, 255, 255}, {255, 255, 255, 255, 
       255, 255, 255, 188, 1, 146, 255, 255, 255}}, {{0, 20}, {13, 0}}, {0, 
       255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> None],
      
      Selectable->False],
     BaseStyle->"ImageGraphics",
     ImageSizeRaw->{13, 20},
     PlotRange->{{0, 13}, {0, 20}}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6627996710747347`*^9, 3.6627996873829403`*^9}},
 CellID->481840482],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "1", ",", "4", ",", "7", 
   ",", "8", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.663574442271957*^9}]
}, Open  ]],

Cell["\<\
This course will not explore these capabilities or further compare the \
Wolfram Language to other scripting languages. However it is useful to \
understand from the outset of learning a language what it is useful for and \
how it differs from other languages.\
\>", "Text",
 CellChangeTimes->{{3.662799003602046*^9, 3.662799047400137*^9}, {
  3.6627997779723454`*^9, 3.6627998045148087`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Five Things You Need to Know", "Title",
 CellChangeTimes->{{3.655538778786396*^9, 3.655538780380795*^9}, {
   3.6555391064935503`*^9, 3.655539108237183*^9}, {3.655547734410591*^9, 
   3.655547753465281*^9}, {3.655551896796501*^9, 3.655551914673752*^9}, 
   3.66408560176597*^9}],

Cell[TextData[{
 "To use the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " environment there are five things you need to know:"
}], "Text",
 CellChangeTimes->{{3.655548503434332*^9, 3.655548527251725*^9}, {
  3.655549496172131*^9, 3.655549496671089*^9}}],

Cell[CellGroupData[{

Cell["Cells", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.65553878605378*^9}}],

Cell[TextData[{
 "Content in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebooks is arranged is ",
 StyleBox["Cells - ",
  FontSlant->"Italic"],
 "the ",
 StyleBox["cell brackets",
  FontSlant->"Italic"],
 " to the right of content are used to select cells and ",
 StyleBox["cell groups",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6555490620792723`*^9, 3.655549171994112*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnW2UHNV55wc7yfpkvbsnZ3P2+37ZnCRo/LIfN4kl4XyIYzTg3Q/YkpwY
m4GN7XhMnJgB77GRcMKgXVsDiT0iRoNjBhtG2IwwDMSMMCNAI1AL1AI1SG1N
g6fBamUaT+ug5qhlP1vVXXXrVtWt7ro93a0e8fudc21UU1113+re539fnvtf
r/7Cx4bfNTAw8Dfvcf7nY5/68obrr//U6P/8DecfG0e/dM3V73b+4x4nLDn/
4V4UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgJv/r1r+X5osijx0UeeaUR
3P92r7l/a4d/+7d/k1deeYVAIBAIBAKBQCAQCISOBldvXiy89qbIfc+ckclH
3lDB/ffeXONv7eDm0UMPPUQgEAgEAoFAIBAIBEJHg6s31xpPPbMkY//vYCi4
vFwSuXf+l3LnA6+q4P7N1ePu39qB+XECgUAgEAgEAoFAIHQjXAzz47oed7W3
HlarxwEAAAAAAAAgIGl+HD0OAAAAAAAA0BvQ4wAAAAAAAAC9Bz0OAAAAAAAA
0HvQ4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ
4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ4wAA
AAAAAAC9Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9p9/0+K+qFXn7dFHO/Lwob71R
lLOnS/L2mar8qndRAAAAAAAAAOg6faHHzyzJL348IYc/e5ns/+h/SQwHPvsX
kp3YJUuZrJw9U+typBq8+dAN8vRVH5ZnP/sxOeD8/8n8mbbuAQAAAAAAANC5
oHq8tiSv3TXSVIM31edf2S6vZX4m57sUPZfl710eeufLR99s6x4AAAAAAAAA
nQulx986dI8caFOHR8Mzk893PoIey9/bnEKPt74HAAAAAAAAQKf3erwqv7hr
c0d0uB8OoscBAAAAAABgjdFbPV6V18YuTdTV8x/9U3nxvr2yvFiUc9Wq/KpW
k/Oef7eVYwfktfvG5fBnP4AeBwAAAAAAgDVPL/X48g8+kajFX/zxQTmX8jnn
f1mQpftuVuvdWa8OAAAAAAAAa41e6fFfvfYj85z4x78ip0+36ZGttiyvO7r8
+NOvrT6CCaDHAQAAAAAAoBv0Ro+vyMm/+fdxLf65O+StVaegu6DHAQAAAAAA
oBv0Qo+fP35XXItf/pdSWgPHdKPHAQAAAAAAoBv0Qo//Yuf6mB5//uGTHYh9
Os6emJfj41+UZ6/+gDx91YflwFUflKev/pi8MP5dKf283PS3ndXjNVnJzMiL
27fKgas/7IWPyeHtN8nxH++TldOVDqQWAAAAAAAA1gLd1+NL8uJVvxuZG/+S
rHQk9i2oFuT4Vza2PC/tuV2PJfqS65Qe/9XpQ5L91O+0jMtT/+dOOVPrcD4A
AAAAAABA39F1PX72OXk2ojmfuf3pzkS+GaVn5JDFGebzn/tn4172zujxZTl+
dWst3hir+F9rYh0/AAAAAAAArI5u6/Hzx78X05zHDp7uUOyTWJQjCXr32a9c
Ly985ZPmuWnDOEEn9PivTt5njsuXPllfQx/V46fR4wAAAAAAABc93dbj5176
VkyHvny0u4LzzR9eY1iT/pC8VdVuqi5JYeyKsBb+6J/K65Ghgk7o8Td/cE1E
c/+llH4Z/P38L5fkFz/eWV9H4MaB+XEAAAAAAICLnwujx7vof/zsS3I4qsWn
nk+4uSqFm/5d6N6Dk8+G7uiMHv9ERI//lZgl97K8/qO97B8HAAAAAAB4B9D9
9erxs866OT8e1f+u9n2zmb59/RF5Wr//M/8c8u3WCT1+3jAmMf+5/yvLv4w9
CgAAAAAAAN4h9MKfW9Sv2sGpFzsTeQNn9n05tjb89WNZOZ3JSCkass71fbeG
7//E10Nz153x55a8nz17/1PydtdyAwAAAAAAAPqV7uvxF2J63J2D7pYGPf29
y1P5MU/r37xT552dO35/03eezLzWpRwBAAAAAACAfqT754/XZGns0pgGzee6
s2Y9qo2t9XjEn1qn9LjLuZMPxs5+C60baHIOOgAAAAAAAFxcdF+Pi7x95Btx
3fvpf+zKHHlUG7vnir/587y8eSKXKiyfeFXON3neavR4ndqSFHYOJY8H3PLD
0PsBAAAAAADg4qQXejxp/3Sy3/P2iWrjp275144+b9V63OPtxXnJ/tV/NGry
5x8+uao4AwAAAAAAQP/TGz0ucvbArUbt+dzkE6uYD67Jm/t2yvO7HlPPOHck
6sv8v8vSG+3Hu1t6XMX/sbH4HPknurN2AAAAAAAAAPqHXunxpH3kjbXrX5HS
z232k1dlZWFaDn/qd+Jr303+4z53h5xN8dSzR+6Xo5HxgU7o8bcy98tr2deT
37v/q019ygEAAAAAAMDFR+/0uMuivHjV7ybunX72ljvkF8delXOG88LPnynL
yrF5Obl7VA5E9XbkzPDStz8U1/wf/xt5fdE0b12Tt07My8tf2Wjc194JPX76
rj9p+Gvb8V1ZfqMS+/1b+z6PHgcAAAAAAHiH0Vs97lB5QQ6n8HP+9NUfk2c/
64SrPyxPt7jX9dkW8kt+9qXEdzz92f8tx3bfLsd33ybZ7dfFtX3kWZ3Q49G/
H/jSTXLyX/fL8rGMFO4aMaxX/7q81cEsBwAAAAAAgP6j53rcpXpCjv3Vf2qp
ydOG+U/8c+ycsHMv3dPmszo/P75seSZ65sFXOpzhAAAAAAAA0G9cED1epyZv
7t8th676z+3r8I/+qbw49ZicOWNY4C7ufvC7Ws6tR593/OBroWd0Qo+feezL
qePw1C0/5AxyAAAAAACAdwAXTo/71OStY/NyfPyLciCFNn/66r+Q7O676/vM
U/llry7J0n03N332gS9dL/knDsvbBlm//INPhO49notv7E5zz7k3jhj3vqux
gI//peSfetk++wAAAAAAAGBNcuH1eBjXb9tbP8/LmydyKqws5uWt0yU5VzXP
g6ejJud+uSRnfv6qCmdPl+X8ah7ZdjxKcmYxSOOZ03EfbwAAAAAAAHBx0296
HAAAAAAAAOCdAHocAAAAAAAAoPegxwEAAAAAAAB6D3ocAAAAAAAAoPegxwEA
AAAAAAB6D3ocAAAAAAAAoPegxwEAAAAAAAB6D3ocAAAAAAAAoPegxwEAAAAA
AAC6z1PPLNV1th5c0OMAAAAAAAAAvQc9DgAAAAAAANB70OMAAAAAAAAAvQc9
DgAAAAAAANB70OMAAAAAAAAAvQc9DgAAAAAAANB70OMAAAAAAAAAvQc9DgAA
AAAAANB70OMAAAAAAAAAvQc9DgAAAAAAANB70OMAAAAAAAAAvQc9DgAAAAAA
ANB70OMAAAAAAAAAvQc9DgAAAAAAANB7THp8x/gh9DgAAAAAAABAF2F+HAAA
AAAAAKD3oMcBAAAAAAAAeg96HAAAAAAAAKD3oMcBAAAAAAAAeg96HAAAAAAA
AKD3oMcBAAAAAAAAeg96HAAAAAAAAKD3oMcBAAAAAAAAeg96HAAAAAAAAKB7
PPXMUl1n68EFPQ4AAAAAAADQO9Dja4tapSTZ+VmZmpyUiYkJJ0zKzHxGStUL
HbP+p1zMSzablULp7S6+ZUXyuazkcjnnXXmppIlXwbm3fn+uC+VYk2I+V093
vqvp7i9K+UZ+FsvnL3RU+pvasuSdupHNFaRvmpBex6kf8wAi+O1YijbyApRn
pXhEZqd3e32yEyanZT77qhPrDlE9JTknTbl8MXim6Vof0Zv+9gKx2vKoLNXv
XQttTt0+ce2HYhpr5h1Ov/YlnYhXv6bNiU1u/kGZ9PTQ1PR+KfVjg5gA8+Nr
kOqiTI99RgYGBhLD6N37U+m/TlM8cJdsvva7vX+3kydTI5tl8uiZFDevyMRg
I58uve3Z7sVp+acyqJXJTKGFHnTu36Ddv+3gm+2/u7ok0zf/kazf/oT+Ahnz
031LF9N9oTCm+aSMXnJJPc3rbn/+QsWs+1jVfzOVQ99o1L13b5SFPjG3VJze
9b6exKkf8wAinH1OtZNjLdrInpZn+ZiMD38ouV9+/3Uyl2//+/TJ7f6zxvPe
c53kasnXLhRxG2BFxnvR314gVlse5QNfV23cfF+3OctBOXbJfihm7pOh37hM
5kqdHTvvul1q6H/7tS/pRLzaekYHbJQWL5DpayJtbp/lvQ3o8TXA2ZdkxNMX
fhjcuFVGRoZlaH2kLl7/UE/HyitH/qnx3g/f2WM97ujrDY00jx9Oo2F7Yx+o
NmvAj1uzdqgmszf8XqgdmWv3Wzt3XGnQzXe/GFxfeU6GLvG0/r7X23x4n5KU
Zm1MpJXtvnaxrf9m1Pf7m1dKpk/6sF7HqV9tKNBw9PgW71tvVd97VZ6VY/eF
xlJdbbVlZFS2jY7I0GD4estx2aZUZeYLv9941ie/781Nma5dGMw2wIpMDjXS
v+miGxNdfXlkv/2Rxr0fuEWK3Y9w+5x9QX13o3tf6/jjCw9+rpEPv/VJyXaw
EnffLjX3v/3Yn7p0RI9bp60zNkozqif+Jdz+Dm+STdd9/4LMS3YC9Hi/syJT
m4O+fd21d0o2sm6odORHqs10w0RTDdhZ1Dd6Ze/1uN/fp/3Wi5l5mZmZlYV8
9zRadvdVIT0e0okRQm2J1zcX2n3x0sNKg+rlXz32HdVWTRcusnWDCWmW2ilZ
mJuV2dl5KfbXwqoOYl//TfSj/dDzOFUWZW7WrS8HpbyG1rm9o7DQ470oz9ri
j0LroNbf+ECkralK5v6vBW37lauZpzsp2zx9v2nX802uXRjMNsDFrMdXWx5O
3vg2XY/nT2zRbZTpn3XafqjJ3A1/3BX7sft2qbn/7cf+tE4H2sR29HgnbJRU
cVr1mGd/gB7vb8oHtPnW65LHXWsnftCi769JuViUQqHghKJUUn6TlVLjN8Vi
yfib8qFgHLKcFLdKyXuv85xSykaqVpGiF9dS2fSbZZnowrfeKr3NqcrUNQPy
Lm1uZP1tTyXc24i/fu+l1z0Q65tr1bKXD26cyol9d+nJv1fjn/NaQeTvv1qt
oct7cSx59aDUIoGVckmVgU1e+HlYKkdqq1OmpWLjedE/hW5bZZpbx6+U8jtw
vplS8M2U7SuE9s709apW0dKf+L2kqf81L7+T06r3sVn3737eF90yap3edHG1
u79dm8avr24ep4l7b59bVXWp6OZtpfVAUaPOJNRRr30056H9u1q3t6a4ufWk
lGpu1roPqDrxKfr10Pn3uZfS6/FWcV91eS6reZ/6mOuu5PVWczf/cdM2KlUb
q+1pGvfX+5iuedh+k6vFbANoenxXY0y6Wi6pOtO6DWzDZkiiXpeK6Z5V76Na
3GtZHjHOBesdR/a4c841753N+0U9juZv376/atUXtjt/nc52WJIx7zu6dLvJ
TgrbrKnyxiOdXbqa78Tc/4b6rnq6q6oPbt2utu6vU9O0f4iTpj23T9vqbPQ0
5VP25/2dOF0Ma9vQ4/1MLVgD9a73yWzThU3Ovdf8gQwMbpThG++WQi24np35
Znhdnfe8+H7zhp50/z65kJVpf+xSCyO7nvL0UXje3jgWUF2UyRsuj92z7opb
ZKEYHmutHvPGYa/9rmQPfC8e341flHnvN2rONxImmu5RcfeZ/IFnP72orqVP
bwq09dMqJKyXUloyNJf+ivp7rXREJkbieefadeN7jwZxcuwAfz26Hi69/iEn
dcF6+HVb75C52W/F8nXk3vj8fXHhfhneEHmmU1+27TkcHy/w54mc9nB6fk7G
hi4Np+n2Rj+7MPnl0HySG8YefTX8rI6kuarqZXSeopCYrqPRVEnWyavQmlN/
fOXa2yXbcoC5vXrlpt+0F3XdFTfKfMGw5qFJ/S88eVc8j9xv/t6Dof5W9bFO
Ho9N3BqrH5tv/L4UDclNG9d27k/S49UTPwrip9mHRae92GIqq607JJNiT6Jq
e5xn6u9b7XMbCV+q+/2I1n2/TZvN6+X6L963ukOmbv14qNymcm806rXz32NT
k6H1UAPXPdBoY9p4V5r2Vqece1hGot/Q+6+XycmvNf77PdeF7XaLPqDBssyO
/3Ws3o5s+4L6dyvbrqvlKZoN6LU5zVoD/Vud0OJt08aWtbWm/n4m07X6Xs2b
P2Eo+2tl5mg35qea2QCBHt/g2COTN3/U2AbGbH/r+tKEBJ877vcVa8OT7nXe
G60bqcsjgdrSD9U3umFkNPwtO3VgfN/PIvd768Auu0XmnXqjt+uNb8G+v0rb
F6rxpNA8c03md2p55bQ/fjmmrdcLO/88Xm/cNXzeHHzStzp8295Efd2gtV1q
23dFadb/6v3pxPTucNl67eqcYZ1i2v66ZboT+odSQpto057bpK09G92ifM6+
IMPR93uhe3vVuw96vI85+1JQ51LtEYtZ+DJ7c1gLDA4Ohuvv1jslKN4VNZ7V
LIzsOSn6+Hco+Ppz5bnw9+K0E4ORPXVTOc0Phv+tNwu/fb3ka8n3NrfTgrQF
6+ds0psCbf30lpHNKs5x3y4n47pdb6tO/SS2L3Fw0BynpLxYX98jv6R8uenh
XZFrU/mgf8ju/nS4vmwYCtn3m24PzwUVH/9q63JLCvqYe6fSfO64mnvQ9wpE
03VJ5DsY1cYG5m/9o6b3+vUwGft6VVt8OJ7+aP04eLpp+v36n2mRVqXfkp7l
vDv8Td8hehdgE9d27tf1uD/m7WrxQe33U56+qByJ9PuDG8PPbllW5vd14rlO
pZbxiK0Ta3+1byCxDayPxb6ZWKcuvemJzr2rSRqr+hosUz2J5KFtH9DYgxtN
Q3I97315NuKo+j23XFLYRtVqNdQz27ax2W97e6C0/Uzxa9WQDrnEeebQhnWh
93R+vXEzGyDhb5EwfO8r2uNs60uzqD0Xs9dD5f3em4I5C8N7Q3nn1iNNBKYr
j2RKhj4z+q3qYzem++vB0/62/VX6vjBoU9Yrnzs1mbtV09KO/ejnY/p6nVA3
vL3NajzNC0NbNoXLrj7unljwTe1S277IRLP+N227mtMSYNNfJ5Nsc7j9g7lP
tWvPbdLWno1uUT6aX4NoSKP5+xX0eB+j+eLatCt5H3IS+jj+wGU3yYK377xW
PiET3lxxvU9UuiDSlm29w9urXpPiIW0ORRsrLfnr6R2bvVirSbVWq98/q9lV
I9o8fOg5H9yh7PzQ9+uO8e09Wl+vU6ssydTIn2jfs/et1ZZUXzG2/3Xn37UW
89im/Wz26W2a377PVKdfmZ5/sNFeGNbR5O65WrV1Y2NfiLR72viuO1Y+97Lq
eyrFAzLq2yf6OqzlZ1Rch+990ckKtxzC192g+x5wfRENqjxttJGhMc3LbpGM
8lOwHMzx1m2AYL5gQe+b3XFTL74h/VTP2x3qefn7/65raa7pe8q9djm0l0P7
DqpLP5UR7dmVer58J1QfcupwpRXJ3PP5lP2Kbb0Kr38NxsRrkn/8W0E+6nZV
Qv13517Ue99/fTCeXA1/R9v2m7X9tr0vN76jyP2jj76h6oJdXO3TFlsXt6jN
i7tzKJpNvuDboh+4yalfvt5YkYXdQVmNWeg3f+6gE89V7YETttz+RLBvr3pK
ZrT5b78uxdrA6f2SmbtHRm/b6+RZtE7tkPlMRqbGbpCZl8+s/l2t2tuI3nfn
8Px6Elr/ofLQvg8I7c1yvpm894PCgbtCbYmNHu9kedaxHiMPY9/Gajpb7Wcy
XFt5RtkKY/uCscXSkcDn3Pou+TE12wDx+ur3PaHyd37TaNPt60syYZ/LbpvT
eFa4vBt1OzyfOnrvYVWmZT3v1HrqlOXRhFCfWe+PGvWx5KRT1XOtboXmkutz
zQelkD8kM48elTct+yubvlCvU9v2/7KeTn1+Z/2ND6kyast28NPltP3uHH6t
2oh7xr9+5R1S8JNTOxV6zkKL/WnmOtlGP5tEQv8b7U/9drXen2rtpO9n1ra/
TqZ5/xBvE23bc/u02dvoduXjFmlR27M453xHfh1aq6DH+xjNh429T5SqzPh9
UmSNSoMl5X8k8PGpfdOGMztUO6mtwTb6zdDmOk3xrmrfta+Z9G89NGZej1bQ
LwS2mO4rIt15Z031eMr0NiOj9S+58jFlt4V8jWlpGdq1T2b9vtm3M9x1OF65
XHNvfF4+5/uLU3aMO6YY9LGTLwdzIJVDWvsZ9Tl5Nhjraex309pCt72Lvvhc
YIcG++OC/UGxuYvlIJ3R+VVld/t6vINpVvsAlNZfDnznGL4DdUaN18arMX7T
uoZfv5ByD6tdvdJtJJMvIH1+JPCRb67/87695KQ1vp9Ki5e3fk//7uK+B7U2
wrm/2kZc20mbipOTd3OZR4J65PS5M6E5Ps0Odmy38HYexxYY3iIjo7cb113r
xG2VzjxXr0uxObNfx/dDh8si0gZG6lR0L+dq3pWmvdXt7fh6Ia0d8PPQug/Q
9mYZvpniI0E9sdfjnSnPOlqfHC+jVrTRxobW+7ySeE2f6xrfH94HNOvn66p8
yiXTyp+bqb4Gmsv7TRs2Q3J8groaa3POvaDqtjsPoc9ZmNbBqbFzv+9JWR7J
rIS+laiuzPh+11WfuRLqYycjdd+uv7LrC1Weu74PSqXQWTDDu57VtFU7tkMt
wR99sK+wrsf1NGnatZXPYlOdbK+fTcLc/zZtw0PtauM3tv11mviYvrdom2jd
nreRNlsbfVW2Qr/5z2sT9Hgfsyo9vqytNTL7FCs+8rcR7RJ8P+tC5zk3yN//
+ZCOcDGdK6Gf+eVqzmwmIwsLXshkJfPIP6i/+2uj9L0psTWAmv8Tsx5Pd95Z
Mz2eNr1pnu+2nTVtXaO+Flrtx3JtzmowRrnuxsciY4eeT6Z8TrJZJ88W5mVm
aqdq8/R9i8pWjfSxSsca1lWG8/t8fR+4XyYD1z0kxdKi5PN5L7i+j44o3ysq
v7U1Q9H80+2cqP20EB2D6GCalZ3nP1vzs2P8hlz/Za5fp3IllP9V15dIsSC5
XNaJS0bm5x6UcX9ve0tfnnb1So1PJPqlC3z3rjfU3aD+a3aRky9z9Tz0v70F
yTjpUGPi3rpKvR6Y3q3WYXrr0Gzj2k7aEte6HY3rJXVukFcuW0Zvk+m5w1Is
p98PbOrTO/HcMDWplF3/NDlZcOvSaLDPN6aR62chRN+jtS8tfTJbvCtle2ta
76hT1sbB3Dy07wMC3WGcxz2bdiysy+Wp6UbbdZHttLHG9T6Ga27+6PtPB7du
l9nMq6qe1GopfHsVAx+AfnD/3cqPVqvzzi69Ptq3af2D1363YzMkodZCJNVV
p48plcpSqWpnlDlhOles+4/yy8T1qZXz3+vputTlkYRWj02aQ+kkbazav7+x
L8VMqv7Ksi9UYxHu97L5DwP9Fhm/a8t2CPmjD48D5/Qzatz1AJOPSsF3btZy
jrWBqU62188m0cK/utFGCPrnRtnb99dp4mPqH6Jtom17bp+25DxKYlW2Anoc
uo22Xt16rZm2ri6pbanG6rLuE9U0Rv2dWBtn1ONp9pkMhNPV/Lsyfded1eNp
05vIuXh+++PJ/vv0Od1rXL+qZ4M11yPanoG5ibjvs2jQxyfV/jFt/ji0Zs+w
3l71ee+9qT4WrvreFEHNmWlnoUTtEF3Hhdd+BXZ3YF90Ks3xZ+t9yGyxte1d
yf9ERiM+6WLBMP4cxq5e6fsXzD5Cm9dd0zfRMnh79VT+JPjPjfbbtnFtJ22J
/gEMYxtSOWb0xeCGwaFrZTLiG8mEse3pwHPrj1l8UsaGN6X6nvSyyMTKIu6v
uiPvStneJn/P5jy07wMCW8vsazl9e9/N8gz7Z0sx56Pph3ba2Ph6H/M1l+Lj
34w/6/3XyUy21VpXl5NqDCZWPi3O72p5/rihvkbblXZsBjNBH+COcTdF67Nb
Bm+vlE15mFB9ZoLfN1VHvH65WR9bz0eL/squL6yFxir0EF1P0069buqPvrYo
44Z+zPXlVkp7LpChTrbXzybRQo+3asPrz7fvr9PEp9X35raJtu25fdqS8yiJ
VdkK6HHoOtr4WUh3mCl4891DW2+UufxLyv5oS48bftNUeyfp8Y1bZXh42By2
bJLRPa+Ef3Oh9HjK9Cahn0c75u31UW1efb68FqyZ9PYHVLX15I0119XQmrB6
WW4ZltFtYzI+OS2T2t8CH5LaOoiQHRv4jIu3z5pW99aKqfkjp903ldXIyIiM
OmHYiY+/fzf5LJQm++m08f6Rva91Ns36s73xDX1tfKv2uho5U3jgfVfI8Mio
jI3tkumZ3cHfLNaOpalXhQej++nTPK+1Ht+S9N05YWjr9rCNlqTHD4XtZtu4
tpO2UPvh1Meh9Zo9ZzxLaEWy7j7rBC06sre5P8bktmeVz434JfJtYbd9Hru5
yZx1izbQWKe69K6YHk+oJ9G+xL4POBn4ibipC3rce8ZqyrOO1saMtlrTqs2b
XnP3i221sbH1PgnXfGrlYzJl8BNe37/ZjJVnEsdDU/tfSNLjzdrAtutLEkHf
0FJTafMdG4aulZHY+0acMhl1wrBcs72xV9q2PKKo9lDtEQyj5vajfYNhPbpt
f2XTF4b2Knl1Vj3P9YWn3dlOvW7tj74mufl74r7aL9thzLcopjrZXj+bRDvn
jzfX42n66zTxSfO92bbn9mlLzqMkVmUroMehB6jvJtEW9Qn6oca+pIqqu+2s
V7fW45pGUTZ8E/+z1UpFKtrZr6vR4+nWDXZXjys/49rYs+pzHM1b1Oxlvxyz
u4M2sT7euBLMl6//4gOxseCCv85ZX6Ot7WkIfG5JaF1lvC0MtLp/9pvat1Yf
O4hTLeYlk8lKvhiMCqm199H8abKfTh/vn3LHIDqYZn3/kb+nPLSnP5qw0iEZ
Hx2VbY79Ml94O7jXsRGmonNKvw7SZJrzDmNXr1qtGde1imm9elD/TWsPolSl
UgnW5rdat6ZsrZTr26NxbSdtoXVxrvGl+TqIrk2oVStSctfUKv9lFSnkDsik
rklafL+mtmf1zw3bWmN7D0tJPwfcqU/DTdaE2+nx7r1L3d/Cftb7ksb6Y9s+
QF+vbuivfh2cJdmOHu9EPWlEU6uLLfy56eOM7hkW9m2stu9F7WeKXytmHpHJ
iQmZ0veNV0/J7E6btFXVWb/R0Op4R5MNYK3H27AZjGj7WGN+EZzcykzvlNFt
22TC9RWlleXEy6b54qrkMxnJ5vJeHqQrj2ao/cKmMV3dZ7S35ljdr50p5mPb
X9n0hfr8tesD0W1za8f+MWhjNP9i7dgORn/01UWZnZqUiYk9oX3jpWMPK/8y
abWd0S5tq59Nwmx/2upx2/46TXzSfW927bl92sLX0tjoq7IV0OPQC/RzoBxb
NJMwSZ73x5bUt635DTWuL9HGP9W47ir0uObHQ58rNrUzVc3fypZ7Vz8/Ppzq
PLLu6nE1rq2t/1Hac3CjbPDzWtlwwRnV/toH3f/aTHQQeCXQoPpaCbV+MrKn
R/f1HmvbDFpdH5uM3a/N8wyovYCms1AaNNtPp97jjct2Ms2qD9HquxoTMehN
ZS/X86gS+DBxbKEo6cfF6hG3qlf6GtjNhrVmuh+TwA4y1f9a4LvJ3Rccm0iI
+JmLnEvSWK+go53L59Vb27i2kzZTW6DKNmT3BvFbb3j2vDZe1GxtUfx9nXiu
pi8N669LT2r+FQ5HfFq2oce79S7TPuZNUb2saWX/efZ9gFZ3Df2V7nvdXo93
pp54MQ/abbfOJsyRF7T9zu6eWre+Wrex2hm7aj9T7NpKsIbO0G7Z+iRtB5MN
YKsP2rEZzCwn9kt6Hq9z63BtMbDvDWvg57TxlBl3jD1VeTRD82lt8Fmo9zGN
8eQgLXFfmyvW/VX6vjCi11RdjfcHLva2Q2Cb6j5hdB8CMVtA9z9ro8e1Otle
P5uE2f60a8Pt++s08Un1vVm25/ZpS86jJDplK6xl0OP9j9621s+mmdonhVJZ
qu6Yf/6QTGjnIujzsyH/2pdp57xUFmVSO+8s6N9WocfddnLuqJTqzl+qMq2d
ITKsnb9Tzv8k0Fiaf9HV6HH3DMxcoSiVpoOI3dTj2r4Cfc5En9cbiOhHbQ7Z
t6Hdsy/8NlL3X1opaGd+RWxuNS/v9oXueQ/ejzLavGa0mTf5zQid+bnVP2ek
JsXMfUF56WOp+lkoEZu02X66uYjt28k0m+zqkM/O7Y+psZAF7SyYhi1WC2wS
p+9bUOeyrDj3fjnIm8T1dTq29Spyzsee4MydwpPaOR+huWFz/dfXH9T9k+e9
76W2LHM7g3Ov1t8e8dvghQl/XWt1MXQmYmCf2MbVPm3mtmAl8A2sbExt34U7
R7QQ+K9y51RUvf1kfG7JWB6aP+7VPzfsczij6lMtdn6Xb2u3r8e7966gva0F
53W4fcZteyTv9EHF/JMyqq8p1fPQsg8o6/3VFTvqZyDV81w7dyqNPd6d8gwI
ne1Ub7celYLT77l7xcuFIzJ5w+Wh/Fhos401rfeJX6uFdOOYtg++VjkmY5sG
UvZh7WO2Aez0QTv1xYxW1s69s4VGvlWLB4LzvJRuDJ/ZPu6dE+ee+aefEej7
M0hXHk1YCdsD62/014NVJXv/14K64c+Frzxn8FntY99fpe8Lk89Tz2o+Ymc8
O9PadtDmgty1MFXfx4Ku3a8Mzjt0yWvjW2l8dZvrZDv9bBLm/te2Dbftr9PE
J933Ztuer06Pp7PRO2UrrF3Q42uBZZnSbONmYdujul+a8HmRbhjcsC78myvv
1PY8BWOuqfW4fsa5/l2c+mlYi7rvHgz/Wx/zbb5u1qzHJyJ7i5qvMTKlzT69
RnQ/+KFxvVPKr2g9fpqm1HVosObauV/Po8GNMhQtr4HwWH4+6kvlg+7+Kt23
bdzXppozCWl1x667+b+FyytWt4L1kM18bS4k7qczzal3Ks1J5wmEz6INrVVw
g+c3x0WNI3hhw9BQfE+laQ4ghn29qi0+HNIcbr5Gv5fxg6fD70io//M7PxK6
fsngYDgN2tp/kx+l6P3rvhjWKbZxtb0/sS2IrBXKGvxAuXHfEHl29IygxPLQ
3teJ52b0cVSvPoXyIdIutGoDm9WpTr/LuO9v5YVEn1/696GeZ9kHuCg/jQn3
x+JkoFvlqZPVNEyzvJjJ69rBro31/cHo6wVM10L+rb02bsvQ+tC1pHn8TmC2
ASrp2sBV1hcT+tlvjW8hnBejmp8AfZ7Q2FZetkOtnU5bHon5lOCzLlQHnP4o
Z9Aapj7Hvr9K2xeuhPy/hJLltMH+O4I+2a5em/zoNcb0XX/3A5E0bQnHMe3+
8QS71L6fTcLc/7bThtv0103jY/u9Wbbn9mmztdE7aCusUdDjawXPv0WCL82h
L+6SbMnUIdQkO/PNuG3m1PPRXY9G1ucFa/FM60XUuZ4hf93LMh2dD1Bi/YRM
jFwej+/7rpCJR18Ony/lj7Ea255gbkz3aVs+dl94vLnpt15VYxpB2tpJr4Gl
pL3aWr/m7jXQHqKe7Z5tpJ+pXDoUHp/08mtq4eXgrHJ9Dr78XDDuX4+ru18q
GAcw7aGbvaExRhPf77Yc3nPohXVXuP4Bw2PSxcc9WyC2F83p8701WDF/2No5
SqE59U6kOenZdU7JtObTyg9btu+RYijuNcnocwv+t3Xj9yV35Eeqrk3mWo3P
t1mvykdkfPhDxvyfzcW1QrP6n3/8WzHbtpGWXZLTNoSq7+7KO2RWn6Pxwsjd
+81zhpZxtbm/WVugzoobCHwTFBfuj/v9ccPGa2XmaGuNlfS+1T7X/f7nvv3X
hvZvq0xnfubYYd78h+/fUY+HwX+t35aYNckq3pWyvW2wLDNjXwjsbaf9Gr59
j8x8+9Pq+aFzeSz6AK80ZOGer8Xs+ZGJKRnzzlxqtRexe+UZppx7WEZM/fG7
N9b7VrMv6PRtrDpb+spgvY/pmovrZ3ubdiaVXv6T+5ufD7Z6TDZAyjbQO0cx
+INtfTFTPqLNzerfwsH4uETFKcdYvXDtI6ft0z8Nm/IwofTz9Q9JaemnoT3R
fj8T2jft339Zkp+4dvqrNH1hcP50/Dx17XxwdUZ64zdp67VLZnd4PEv3gTI/
ebPRt+BmN3/SLGDx4pNol9r2XQmY+t+07WrULkvbXyfTvH9Ijlf69rydtNnZ
6P6PbGwFrx1Jtaah/0GPrz3qZ00qfytFKbfycdL4lZSKBe980ZKk+okFrr+c
crls9LdSq5SUb5hisZy6T035Zqk4+VFO5fNi7VD2y6qUJr9qUi6VpFSupFpv
2fpxlfpZpu773Wf2im6nuVouad9M0xstv63Oosez1Orw36b1v6a++Xpami8W
a/yikjKP2oqr/f02VJxnF7vw7FU/txq0113/nrr2LsdOnpqU6dmDygbXa1Or
fcrWfYDTBjXqbl6KfV5PKqWid161Rf/WpTa2quVzL9tul2Y2gPWzOmIzaDZP
ij7FLcf6Ox37KEVT2QH89jld25xIG/1V6r7QFot6XXPiXXL68Iox7UHZraY8
mtXJzvRFnbQ/7fvr9llde25He3nUTVuhX0GPAwAAQCLaOQixOTN9nbFhfwwA
APQRtOd9CXocAAAAklkK+XnYcO12mZyelolt14TWFLbeywEAABcW2vN+BD0O
AAAAzagt/TS+J1cLYV+iAADQr9Ce9x/ocQAAAGhNVfILczI5MS7j426YkJm5
w1K8CHzbAgC8s6A97yfQ4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9
Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9Bz0OAAAAAAAA0HvQ4wAAAAAAAAC9Bz0O
AAAAAAAA0HvQ4wAQpybFfE6y2ZyUqhc6Ll2mtiy5bFayuYJc7Ek1US7knXLO
SqFcbXpt7dOHdbp6ql73cvmiE7sm1wAAAOCiBT0ONhQP3CWbr/2uVN5h737H
cfY52TAwIANOGDv4ZqqfrNXyqRz6Rj2dA+/eKAu9inx1UaZGNsvk0TM9emES
KzI+2CjnS297tsm1i4A26nS3ye3+s0bde891kqslXwMAAICLF/Q4pKVy5J8a
duKH7+y55rqQ735H4miXLZdcUs/z8cOttctaLh8V99+8UjI9ifyKTGwYSJ23
3Y7L5FAjLptuf77JtYsAyzrdfaoy84Xfb9S9T37fW5thugYAAAAXM+hxSIvS
LVdeQD1+Ad79jqRdPb4Gy+dC6HFf7154XYgev3CclG3eOoRNu55vcg0AAAAu
ZtDja4datSzFYkEKhYKUWuzrrFWcewuNe4uldCKjUio27i+WpGJYJ1k+FMyB
lpPfLCUvjoVC0fgcQ2S9uBaddJnjmu7dZqoVP9+KTl6UpZoiTo28MMW/jfR1
gmrFeW8jTiWnPFu9tlYpeXFMWf7O8+t55LyjXrXOvWSlXdKUTzt10hTPTudD
az1uW+Y1KXvfUsH5luJf6rJMrEKP27UDrdLfhh63LIMk2v8uk9uoaDxXU6fN
zyumq781P4+a3Lv8U7V+ftxfP2+6lgL920rdJnntbjx+Wv0teHnXDep5lOab
cuJT7EF8AAAALhDo8f6nVjok48ObGppBC4Nbt8tC8e3IvUecez8Uu3fdFTfK
fEHfq1qVqWsaf5tcyMr0DX8c+83Irqc8W3tFpjYPxP4+cGV4r3Dhybtk6JLI
Pe96n4zeezCkSarH/qXxt2u/K9kD31P2pwobvyjzKl3p3m2ilLlPhjesi//W
CcO3PxH6vR+ndVt3yNStHw/Ffyp3xip9yQRp2Xz3i7G/5u65Op622pJM3fyJ
eBrevVG27Tkc10LVRZm84XJD+d8SqysNlmV2/K9jaRrZ9gX17+bapXX5pK+T
TehiPjTT43ZlXpPMg9803r/Nu7967DvG+jiRYh+5TTuQPv0Wety2DBJI/13a
tFE6q63TEZy8nB77TDwvnbYiW66lu9fJ90zpfOjWsua3YK6UfK0p5WMyMRIp
Z6cez+RPy8LOP2+0NbsabU1t6WEZdP9+2S0yv3B/qJ76+VF02uMtg/FyGdm1
L9Le1mTWK49Lr38oVgb5+z/f+O1lO6To/+LEDxrX3n+dTE7vDLf7TvmM7/tZ
LHlJ8Rm+ba/1uCwAAEC/gh7vc5afCdv3jt0yGLG9FjzDpLb4cMzGGYzYMRMH
T3sPXlFzdM3CyJ6TotvnoaDtFc7s/nTob5cMDobvve4Bda/SP83Cb18v+Zqk
ereJ0pPfiMVnMGLXDWmaODFOTh7OFs9bpS+ZIM9N847Zb39Epa1RpMsyGdG6
GyLvbZSP//jnZNib/1PlPxhOiz+20MDdqxrRdgbbt5Ueb1Y+dnUyie7mQ5Ie
ty3zjKd/grwM37/+9mcT61lLfWjRDtilP60etyyDBOy+S5s2yqcTdVojmpfu
8/RnvfcmKdQS7nXyeUgfd9DLSNzv/arG9Q/cIoUm1xI59dNQnYjVTz9/9r7W
yPvHv2rOw7r2Py8L/rv98h0aCqfV0d3BGNSSjA0G9TqMq9V/r/Ebbf9K4cG/
i707+o1MaOWixm39erFlU5P4AAAArF3Q4/3Mikxfo9lVdz/r2TY1yT0Y2FaN
+Y9l5SPKDcH8XU3yj38rsGOSdO7WOyRbrCsoKR7S5qw1e6p0wLOlP3yHFGs1
qdYahmht6YfBc95/fTDnWV2SqZE/UX/btr+hu0KaxLFZx/Yera9XrFXC948f
DjRT0rvNnJJxPy9+65Mylw9svNKRH6k1q/ra6licpvdLZu4eGb1tr5yxTF+z
8my2DljZ4v5Yg7Z2deTew8r2rBYPyIivMT74j14aHBtY0yEjd+9X5RYqzw/u
EP9zLh/4Rqj8894PCgfuCtm9abSLuXxs62QCXc4Hkx63rdMh7eDcv+DdXysf
kW1aXcxU6w9X9XNs/+vOv2st5pZt2gHb9KfU41ZlkITtd2nfRnWyTrvaXs93
t/5WvHgt7P58pJ0KrxMZ1fKofOQ+Fdf1259Sz1b3X/eAV/6ma0kEergeh30/
a9xfOxVbRzCVb6yHWNDHi9w1G3sOSiF/SGYePSqvP/n3wd+u2CFZ/0A453l6
fZ962VtboY0PjcXavSBuejs3f7MWrw/cJBnvHaVDWtloPuzU+NaVd0jBv6in
zz0PgUlyAAC4CECP9zFnn1M2T2DH+dRk2rfdXPvVXws4YPYDpM+NbNvnaADd
1jWcq6NsIW0eOslnl7KzHBs7fl6U9h5vDbOufYfvfSVye2Dn6Tazlb+wsy+o
eSp/bkgnv/uq2LP0OG2+Oxwn2/QlY6fHdY037uo2jeLj35QtwyMy7mvcUz9R
Nr/p2VUtfY210bXAj7Oh/IuPBPWlXX9uNes6aaa7+WDW47ZlrtY2uHONEY1Q
W/yBlpdnQr/Xx5wSsWgHKtbpT6fHrcogMR2236VtG9XpOv2d5Pp77gVVJsN7
TgbrzAfM6wTUXpQP39EYazh3XEa8vFDtjelaAoUHP9fk2zkpo75Wd+pvtl4o
2loDR4tPhtK/pHzIuTo5NjZ2Lig3Px/UN+PUd3f9UAhHq6tz5ZRWXw6NxUS/
qYVb/zwyTuSOhfxBoMf1OGljZRNpvh8AAIA+Bz3evygb2LGfpgvnY393fTW5
/s9cU0XNCzn20bxxziDw27u+bmMHtu667U/E7lb7/0x6PLRWXJsDdee8slnJ
LGRkoR4WJJPNBHaYtwYzZMtF69a5l5RNatTjbZynVatW6v6JctkFmZnaKcN+
fExpi+W1ffqSsZwfP/tCaD3q4MatMjY5LZnc67G5s4qmB4Z27ZNsxo+jEzJO
nB/5B/X30UdfFd0+X286Y9p592rPO7Ovkwl0NR9Mety2zIN5TdNe2oY/uJJU
lMMyO//qNu1AO/Ug1fy4RRmkpfV3adtGdbZOL9z6R6pemM6ld+NeKpWdctXO
KHPCdK5Y95OWz+frwfVBlvPz3RtrUHu5tXEh0zUz2joDX9+HCM7TU2MbWtov
vSmcl/pYZHyuu/G8aH3I+WMn743r98ohg1ZfCcaUTGMNVa1P8Oe81Tu8ur9t
8lEp+I7fWq4pAQAAWDugx/sXZSf561yboOZfEmzHuE2l/dswd1n154Za6vGE
/cOm4NpalVb+rM1axV6Pr8j81K0yZNg7qoIpbbG8tk9fszhZ6XGH3P2fN7/L
sU+Ht9+r1uOm2pM/oGuVQAtfGptzTS6HJEzlY18nk+lePpjqo22ZVwK/ALvi
fvo6lrcp2gH79Kf355a2DFqlPf13adtGdbJOB9p+3Y2PNb/13EuxPebN0ubK
zZK/Plz7NkzXzFELtK15z36QTr+OV08E6xuiWj/r697fvj62piD6vEZ90Nbx
G85IN2l15ccwwU+dGlv5wC3K/5vUFmXc8B26vtxKiHEAALiIQI/3LyE7vIWt
q3zltKPHDVrIpK/S6PEtw8MynBCGtm6vr53svh5fUX6Z9TC4YUhGxsZD+1Rj
aYvFyT59zeJlq8frcSsekanxG8waxrN5Qzps49bEOA5v2SSje9z5KW1N603d
0eP2dbLFO7qSD631eOsyr2i6sct6vEXlt0+/3XlnacqgWbrtvkvbNqqTdTpY
X92ybmr6eMPQtTISy+8RGRkZdcKwXLP9oXpc1Vp7zY+B6ZoR7Rz1kX3/Fv+7
Nj7gr2VX36JBcwftjmmuvZG+LWq9ulu/nXwO/Tt0c+D3T9PqeX9szqkjRYmi
+X+Lte81yc3fE6yd8IPmtx0AAGCtgx7vX9S6v3e9T2YM61QrJx6WbY6dNzax
R156Nljvl7Q2eDRhvbq1Hg/tkw7mkaLrIAOqUqkE5xSvSo+nOOcspEm27pBM
oRQ627ig9nKm0+O26UtmpaluU/NK2n7YSrkkhaLmC7xUkIXZ3SH71M0nva7E
9gD4sXTiqK+ZDtb2GrTLr48rm9tu//h343mauk4m0c18MOtxuzLX7r/+MUM9
WJG5iZtldNuYTB8M+25Ic86ZVTvw9Les60E6PZ6+DBLTYf1d2rZRHazTmh+L
mI8L91y76Z1OeW6TCXfPvKbHJ16Ol49bV/KZjGRzeSlHfGm6c+9+HYpfS0DT
46b6o7S3Vl+UP4TrHojPZ2ta2VRlCtq6iEnXn5t+Rno0H7U195tVG+f6GPTW
85t8/mnpqX8/1UWZnZqUCac+6/vGS8celuHBdHUNAABgLYEe72M0m9C0H3LO
t3EcO+pn2rnGmw1aT/ed1dgjuAo97vrDVndqtlZ9v2AsEWGfTKudHw+920xz
HXgqWANp8ucWi5N9+pLRfCrF9hlr8fLyvPjI36o4xebdl/9V2b1uPtUWf6T+
bdKQVc031Za6vtDSZVgHrfupttLjWvlUreukme7mg6ns7ctc+a52nhGrc6d+
rN45+ugbod8PpzgjzKYdeNU6/en0uE0ZJGH/Xdq2UZ2s08H8eCzPNc25ztX9
tcVgXMlUPv7crxNm3P3Uul87v/xN15II+fd7IhJt7Qw0NRcepGXz3fHvMOP7
IjSdc6DFa+A/fL0+J63Gh2Jt5bJM+j7YQnms+YI3vEP3+z6ZOxPygTAT/fa0
tKPHAQDgYgE93s9UZUY/b2ePf4ZOVXIPBn6ZGnsrI2dL7QnO2yk8qZ0t5egH
399u23rctYXmjkqp7MVG25voPl+dY1RblrmdH1d/88+pXZUej7zbhG7PDd/9
vNK9tcpi6OyewPdw8zjZpi8ZTS+4GvTRl+txq5ZPyJR+RpHvX11774Ybv6/5
Mjols7cG722cZ1QN/Gy76b79CW8uztEh+Z8Ea4G1M5DLh7T5SveMI+8HJe18
Jms9Hiof2zppptv5YCp72zLXfagPXHaLOsupWjoiY5uC+hZbD7/1TskVilJp
OiFq0w7Ypj+lf3WrMjBj/13at1Gdq9PaHmknr2YLjXSFzndTYy/V0Fln4/te
9dK1JDNa3vh72vVzBya988NM15rFTa8Pw7v2SbFUkuzj3wqlceCT323UkxVd
w8bn0/VyWX/jA2r+ulo6JKPa9+uPmVW0PJ447J3359Tz8eEPBe/Wx1y0+XT/
HY393zXJ3q+dSe6f8aaNd7i+1XW/BHnNH6GfltrST2RkyxbZcsW1Mp3D3zoA
AKw90ON9zqmfhvwau2sQ9XN09b25tcWHw/aYe29kn+f4QX8eMpirTa3HNbst
ql/md34k9LdLBgfD92p7X3X90+wsqZAeb/LuGNp+x3oY3ChDQ+vDv/dsRt+3
UPM42aWvGbotmxiuTDh/ecDda7shfK9jc6upxmhdce+PlH90fmze9yGdcH86
7ZJcPnZ1Monu5kNS2duWeeh853oc14X+HfgkWwmNU9Q1Sqs9yhbtgF36Te2A
+ZpVGRiL0fa7tG+j6uXWoTpd1TSyGzZE4jq6N5jH1n2jG+vKZTvU2uuCv9ZA
m8M3XWuGq0E3RPMtEmJnk5nWbjQKJryv36lbQ0OXhp41dHuw/j809lTP38H4
+zW/bEltXqhcPnCTtrbI9VcfvnfD0BbZoN+v7R/X2x7mzAEAYC2CHl8DVI6F
5x58G+WLuyRXjkyslY8Y7113xY0ym9NtlaqywUxridXZu6Hzvpdl+obLzRrA
If/4t2I6oG7L3RiOpzq/yahhA39A4bNlm787Fv/8T2Qk6gPICVu275H8iWCe
0Pd3FIpTgj2cNn2tyD/yzZgtve7aO2XhwF0Nm17fI19dlOlt1xjt2bqf4VjC
T8jEyOXx+993hUx48/FhqrJwz9fC2s4JIxNTMrb5DxvlkGKPc9PySV0nm9DF
fFDr6g3z9LZlnjOUrasvx5136pSP3Rd6bks9Xk+TRTuQOv0ram5X1+jxa22U
gSkJVt9lO21UPaIdqtNu1b0vPIZQz8Otnh+ASHxyD8f9jjnadvTu/aH4ZXd/
WsW73ORaS+r1YVNQD7Zul+mpW1W6xw42vi3lt/2yZn7iTsnM2GfiZbvxWpla
eDV2d+7Br4bvc+r4xNzLkvX2mut74JVfjA/ukHzxULC+QH1L35di7FNakfnJ
m2NlWK8L7voM7TsN+Y7nPHIAAFiDoMfXDlXXn1KhUA/N1muH7y22vNeW+rnB
5XLIJ5b2VykVC+rd5eYLcTv87jjuGcH1uLjnP3ckKp1KX9V5jh+3FBa4k+7g
/rAfLGMsK0FdKTrPbxnLWsVLV16Kq6gvzcqnI3Wy2/lgfoplmTtl672zHscm
z61Uys7z0vgC1J5u0Q50Jv3RCNiVgYnOf5cGOlSnG9+ql4el1nlY6XLayvkD
Mj09I/PZ+JhA8cHPKX1sngtvgZNnxaL/jbZY8FMte/WqWR3X1v0rX3JVKXrn
sqf6loqF7tcVAACACwh6HAAAYG2Q2fk/Gvr2vTdJQbteO/VM4HstxTkUvSE4
G83kSw4AAADQ4wAAAGsFdZZ3fT35VhmbmJDxyD6CyZTr8bvOqZ9oZ6P1SZwA
AAD6DPQ4AADAWuFU6FyxaBh79GcXOoKKyqGvq330ba2fBwAAeAeAHgcAAFhb
lApHZG5mWqampuphdv6olDrrKmT1VJYks7AgmUyuT9bPAwAAXHieemaprrP1
4OJq7vueOSOTj7yhAnocAAAAAAAAoLu4mvve+V/KnQ+8qsI9+5bR4wAAAAAA
AABdZLEcX6/uh0X2fQEAAAAAAAB0hdqvfi3PvBrX4u41928AAAAAAAAA0D1c
7X3ufCOgwwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AMDl/wPrkpDT
    "], {{0, 164}, {996, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{683.56184375, Automatic},
  ImageSizeRaw->{996, 164},
  PlotRange->{{0, 996}, {0, 164}}]], "Input"],

Cell["\<\
When a new notebook is opened there is a flashing horizontal cursor \
indicating the cursor placement, if you type then content will be entered \
into a new cell.\
\>", "Text",
 CellChangeTimes->{{3.6555491961828957`*^9, 3.655549242004808*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt2L1qg2AYxXFpO/QOOvdSmktIryCBdg2kgZJL6dWoi1+To+Dq5iKCTspb
j1No42uSNl36/8ETos97yHIQzON6s3y9cRzn7X74WK7en7bb1f75brhY7Hcv
69vhy8MwH8PopgEAAADwr3ieZ9q2te6nKKe967onjV45fnNO/V3mb+erMAx/
1DHlARs6hmsLguBbx9SrqTmknPKAzbGOHZp7jtExzFFHmqaZ3Ns6phwdw5wk
SUxVVZN7W8eUUx6wybLMFEVxUVY55QGbuq5NHMcXZZVTHrDp+358FuV5flZO
55VTHrBRR7quG/uSpqkpy3K8nqK9zum8ztExnEP9iaLI+L4//rd6bLTXOQAA
AAAAgGv4BNNEHi0=
    "], {{0, 23}, {153, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{153, 23},
  PlotRange->{{0, 153}, {0, 23}}]], "Input"],

Cell[TextData[{
 "Cells have different ",
 StyleBox["styles",
  FontSlant->"Italic"],
 ". By default, new cells are ",
 StyleBox["Input Cells",
  FontSlant->"Italic"],
 " - where Wolfram Language code is written. As an example, type Hello World"
}], "Text",
 CellChangeTimes->{{3.655549276199471*^9, 3.655549330434297*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3d9PU2ccx/EOd7F/YH/Arm39F1r3B7SLu5MrDeVSjdvE7ga5YppI9AJZ
gtGERMOyBYMhM1lYSPhhS+WHLQ0FrQooEsmoWsyKPeu+e855Ts9poVIq6HR7
v5IDp89z+vRp7z75Ps85Xxw9fqi5wePxfPOZ+nPoSMvBkyePRL7+VL34MvJt
+Og+dfK5Or5TJ2ajAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMC/IBZ/KoND
C3L2/HjF8d4Yr+Rae0La2lMSOXNfMvk6+z8UO5zn8vgDibSm1HUJudCXfb9z
BAAAAPCfs7SUk4udk9b/knoy3WzfXWnwj4pfHY2taWk7Ni7eYFT2+8bk4tif
tQfIPxO/b0Q+8Y6IxxeX2Hqd/TtgLC5JKKDmGByV/aEZSRuqcXFBgmqOTttu
s+IO55nojFnXWNcdvCekOgAAAAC7tTnX1ZPpJjpvOxmlIXhHQv5h53XzwKuy
K4uSy25Irmp2KkpUZR0zC01WzUK1+kVy6wV1GFX78nP33Bzli0nSbMyUt5WN
axh6rFoZzyjI6uprqfzE2vO0rK+oPKk+tzEjuW0uAwAAAICdKs91da29zKvr
g8Mqx4zJLbPolH1i1au8Z5ZFx6KiJAbSTg3LynqXlrfUpxLd22ehN/WvzixK
uCxHeg+nJPb0ry3vN+uJZn9k4A8Z7E7I2YGsJOw2XU80JNqbEK+3bJ4dj+15
FmWwPS5esx7Z8kiSU4+sTGZ9nvqe5bnuTfPMzi1JpGlcvIG4nDh1R2dJMh0A
AACAPVTKdfXtpyvIlcM6U4WOJSVi55XQ5TWr937flPXaf2xebg09lq5W3e/7
YaVilLfJdPm5jJu/rHWfUXft46bQmJ+Zs/rO9c5Zuc1zYFq6zsf1mHmz3hhz
3tvWMSONQf2dGo4/UrnLkMHOuPNZ5hFouqPHaXxYkctqzTOgcp1THwyR6QAA
AADsrRcvN94605m1Oq9dMwtdWrP6uuy+feGknO2YlbZTOtOYmSpdVuB6m0xX
ymEnbrjJaLBdrwX9fqhyL5+xuODW4AJR59xzYEImn2fluE+vy/x9tfSGNadN
740znO95oTS2Ycjm1Z7V5mm2WfP86YX1Op95qPMgmQ4AAADAO1BfptNZx8wx
SSvgrEmjz6zTPVfnG9Jl17u+6ngg/X0L8rM6rvWobHd5pSLPzPbEy8bYqlp/
KdNFfnPzW7RDtzXf2JSW8s+seem890KGz4+46x9Vfgvb+W3Eqe+9lNO+8vud
FPX3VBkwvc2vsd08z40VdMP6irUW1azxfai38QQAAADw8aon0y2Pzjs1r+bL
T6S/e1pnpcCE/JJ6LRN2jcofTsnNoRX5tXfOWtdo3vMxp3LSRO+sRNpTEg6O
2msokxJpTUts9W+RGv2r42mnPtjWo7Jix6RzH5SRzRv2jOduLU715admK/a0
DbfbNbzglFwfWJC2plG731xbuSH9ndPOmsnGlqT1PIKRxdK+ve3nuTyUdNZ1
Xuh9KKeDbl3zuvqNAAAAAGAv1ZPpEj3uPjNv+K7KNO79SvSaSEOGu908pNc+
xuVq3LwnZkGuNA1X9tnH1XljB/0imaH5ivuveALTcjNVrfplyDVzrPADXR/M
Z63aXGnfn1lT7LczYenwt9yXjFmjs9dhbp7Dj6lSMa7WPIsS7XF/A/PZD84+
QHs9JgAAAADslXfyzHGjINnshmTf8LyB3dHPSchmC7sfKq/nmVsv7n6sqmMX
tuzBAwAAAIC99E4yHQAAAADgvSDTAQAAAMDHY/T2EyvHlR8AAAAAAAAAAAAA
AAAAAAAAAAAAAPwf/QP7RvO1
    "], {{0, 21}, {885, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{885, 21},
  PlotRange->{{0, 885}, {0, 21}}]], "Input"],

Cell[TextData[{
 "This input will be interpreted as the multiplication of two symbols: ",
 StyleBox["hello",
  FontSlant->"Italic"],
 "\[Cross]",
 StyleBox["world",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.655549363520246*^9, 3.65554936724378*^9}, {
  3.655549428874465*^9, 3.6555494729534063`*^9}}],

Cell["The style of a cell can be modified in a number of ways:", "Text",
 CellChangeTimes->{{3.655549508761909*^9, 3.655549523937924*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Right-click the cell bracket and select ",
 StyleBox["Style",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.655549576860983*^9, 3.65554959295059*^9}}],

Cell["\<\
Select the cell bracket and select Format\[Rule]Style from the menubar\
\>", "Item",
 CellChangeTimes->{{3.655549576860983*^9, 3.65554962923405*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvfdzG+e653nmzv6wM3/A1s7WzNbeqt2qnZrjO7M7t2b2zr2KFs+RZCvY
lqXrY9PXx5bkrHAkK1nBtmRbOVOBilSmAkUFixRzAnMCE0iCBAiQRCBA0Zaz
dexn+3kb3WyAAMHQYkPC91P1tYkObwei1R++b79v/+2by19c+je/+93vVv3P
0n9e/PPaaX/5y5/Xv/Q/SR+mr1+95M1/Lf2Q9q9+97u10jI88ZdffiHOzz//
HJSffvqJfvjhB/rmm2+or6+Penp6yG63U0dHB1mtVmpvb1fT1tYWlNbW1rCx
WCxh09LSMqY0NzcjT2jG+juP9B2K9J0L/W5qv7f8PebvM3+v+fvN33P+vvP3
nr//odeEcq0oefToUVD++te/Dsmvv/4aNr/99tuIAwAAAIyGUK/je5ridQMD
A9Td3U0Oh4P8fj99//33YjqCPE3h7zV/v/l7zt93/t7zdOVagN8BAAB4kgh1
Om19ndPppN7eXnr48KG43/H9z+fzIchTFf5e8/ebv+f8fefvvbb+LprjTYTf
AQAAACNF63U//vijyHfffUder1fUY3z99deG33sRZKLC33f+3vP3n68D5ZoI
53ejdTz4HQAAgIkg1Ou4roLrL7jugu9v/AxSPKctN1O009ls1jHF6P1HRh/+
3vP3n68Dvh5C/W48dXjwOwAAAI8b5b6leB0/e8R1F52dndTf3y/uc/Gc+jNJ
5Fv3Fg00VdM333xN3zz8hr799hv67jvpvv/1N+Q/fIi+lc7T99I9/kfpHv2D
dH///rvvpPP4nXA7o/cfGX34e8/ff74OlGdMtdeJkX4HAAAARENxOiXcDvXg
wQPRp9Dj8ZDb7Y6eBjP1Jh8h59tvkuMPk0X4Z57G80ZUhiYuWx31mvaQ8+Z8
6kr5WxH+mafxvNGWV9NVT1urD1LC/Vfof0/7OxH+mafxvGjrP9y+nvx3Lgu3
G7hxk9x799I3/Q9o4EwKuWfOIv9Xd+k76Z7en5VFfQX59N1PP0r+961wu9Hu
69jjpC5n7wRu7+kNf+/5+8/XAV8P2utjuDq88fod6u4AAADogbavIIfvZVxv
weNHuFyu6MnLIccHS+nb55+l3xbNpd/eWChH+pmn8TxeZkRlSeltuU/OW4vo
4Y3/lX7N/D+JCp4R4Z95Gs/jZUZa3t3WLJqd9S/0v2T9J/oPJf+N/q/qSSL8
M0/jebxMpPWb79+lrq4uamiop6+/lnzuwkXq/nf/nroTX6e+VavpG5uN3O++
S30ffkhd//4/UM+Na/Twl5/p4TffCLcbWqaDKjJvkcniCJneQ9U56ZRZMcLz
HpLa65to/gtrqcIefn71lU205lLlmMp21F6jeS9sp2pH9GWbTBl08uBu2r37
IF28VUwdY9heLIS//3wdfCfqYL8P6iMOvwMAABDLhHod1zdxv0EeM4z7DA6b
+jrhbo8WPEe/vfkn+u3PrwRHmsbzeBleNlp5PR01wt1++epviYr/C1Hhfw6O
NI3n8TK8bLTyqmy1wt3+XeF/pf9YN53+Y62Ummfl8M/SNJ7Hy/Cy4cqoOXmQ
bBveJV99CT0Y6Kf+S5eob+588s9/kbrmziXXiWRyT/on8s5+jrpnzyZvRTl9
/duv9PUP31FnZ3uYMm10dv58OmnqGDL9ojR9fkpp9PPOx3ZhFb2fUqF+bim6
Qp/vuUSN3dLnrkr6XCrrYvngNspDlh9NbJWXhTeabMMv15ixn+bzMWw+JPnd
JvnnL26RbQzbNDr8/efrgK+H4fwuWhvtcH6HtlkAAACPA8XpFK/j58e5vyCP
E8t9CIaL8+ghub4uyOv+OZBBv+NleNmo5RXtFHVzqtcVSP/P/zs5Bf9F9TtR
fyctG628Tyr2ibo51euqp9F/rJouh38O+B0vw8tGKmdg0zLyHDxAPWvXUt/y
5eR6aQG53v+APCtWUO//+1/J85e/UK/keV2LFpJj1V/IuXc3OW7dpI6OtjDl
ddD59+bSmdL2IdMvfzSHPrpQFvW4OBXnVtF7ZyMsazPRR/Pm0fmKTnVa6XDL
R4gy3puj6iLNm7+GSjuGW17af+m45u2+S7bAtNqv9or1ioddLzbD33++Dvh6
UPxuJHV40fwOdXcAAAAeN6Fex+N68T2N3x3AfQWHi2Ppn+V22IDHlSdMoZf+
zb8R4Z9Vv5OW4WWjlpc2T26HVbwuT/p/7jNy8v6z6ne8DC8brbwZmf8s2l4V
r/u/K6cGRfE7XoaXDVdGw71bZLPZyH7qJPUs+4D6XD3Us/gtalu6mPpaLWT/
dDP1tVnIOemfqHP3DvI2NVDXc7PJfvI4WdstYcq00rl359JpU9uQ6ZdXz6HV
50ulnzvp9v5VtC35HCVJ0+ZJnjZ3/hZKM1nEvLSdb4tpSq5WdZC1PJXe3Xyd
rJ1ltE0zb97mK2SVyjelrKR3z5Sq26vPuUSrA8vMnf8F3S4f3NfO+mzaKe2j
WP+9XXT18mGxfZN1uPPdSaav0ii/tkOd1lXJTvgeFQ27XmyGv/98HfD1MFa/
i9Q+q5ffAQAAAOHge5bidRzuG8jjQDQ1NYnnzIZNwiT52bpAfR073dTf/U6E
f1br76RleNlo5dnP/h/y83XsdlxXp3idEp4mvO8ZsWy08v7DjWfEs3WiDbZq
uux0FVPksNtVyW204vk7adlwZVQe30c/LXuN3D02cm7/gjoXvUxdz04j+/o1
5Fz+IVn+x38j25aN1P3aq9Q8/3nq/OB96r5yiXzff0utrS1hymyjlHfm0Kli
y5DpF1c9T6vOlcg/f/wczZ07lw6lF1J1RQGdkj7PmZ9MZmnZltoKurFnKc3d
l0bFpRXUZO2itqIzNOeF89TWZaXq3AvyujeyqKLCTDZpneKzK+id0yViW22m
82L+jouZVFFdSjcOfSw+3zXbqctWTjukn+euPkxZxRVUcPekmDdn3mYqbovy
fRCRtl9RTRXF9+iQdDxzt12llqjrxF74+8/XAV8PyrWhXCux4ncAAABAOLT1
dRwen5/HgWhsbBTv2Rwuw7ndi2HcLlp5o3W7aOWN1u0ilfNw/RJyZd6kjtde
Iftbf6aWF+eSo6OdHDu/pI45s8mWfp16zbVk/f/+npr/OJ2akvaTu98n3G5o
ea10VnK7k0VtQ6ZfYLdLKVZ/nns4S53fWXaO5s5bTfmt8mfTmZX0zqlidX5r
yWnJ/c5RK3/uLKGPJR87axrcRtGZFeryOUeX0Jx3z1F9Zye1t3dSZ3OhWP5Y
TpMoZ+68dymneXDfqtK+kNxuExVJ225vrKKioiIymUxSiqiovJ46tcfRWkir
2A0D+TglN3j+ExL+/vN1wNeDcm2E+p3ieHr4HeruAAAA6IXidVw/weFxH3gM
iIaGBtEWOVy6lrwR3CY7Y7JwugX/9t+Kn7Vtsrxs1PJuzB1xmywvG628ZzMW
jbhNlpcNV0bdnTTxPnnr0reo7e//H+p4YQ61TP4HapQ8run9t6m7rYWa5s2i
ln/679T67FRqk1L1t/8bNR05INxuaJkWuvD287Tnq9oh0y+vfI7+IrmdWEb9
WZ5vKT5Hc+auoiKL/Jld7e2T2vmn6XnJ7Sz8ua2QNsyZQ2eLmtX5g8s3ibLn
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
9lGdNl5nHOF+mpPKxTJiuWntNBq7i9QOq3gd3wPM3T9KXuehT7fn0+HrTXSj
qF3yow7y+r+mAU17JoIgsRV+5oDrnJV3vnB9nlKHF+p34dpnAQAjQ1tnx21K
/PcV1xtwHQWQqU4qVV3lb+ZW0bwpRernpXe/0yz5Kz188BM9DOtQv1KZ5Dzs
RDVhnSjafKKH3/4i5VHYeT+2tg/61DPl1MATO7TTNOVK/3aKsqK53qNfqK/v
ZwreYvT9FHzrlrxS2u6rHfQwymYURuJ1fA+od3xPlyoe0KHrjfRVRq3h9ysE
QUYf5Vlvbqvl+jv4HQD6oa2z4zpzrj/nNqKvvvrK6F2LHX58SDvmFkk+Y6IM
roR60CPqr37/SS/JevQrme9a1Dot4XxHeofUV5lPDO9Ekeb3NTpoicYnf/+n
Jip3/XXI+ly/yPPX3/VTzgkz7bj7gMyBaXL94iMqu2Km3/9es597uwP7+Svl
fFlJv+f6ybV2aqi1CzcT25OOU+t3kfbzQauT1i+uoN9PraQVa6pkpxyH24V6
Hbfd8PPYNbaHlFLkousFrYbfnxAEGXu4PoGfL+Vn8PjaDtc+C7cDYPQobsfX
GLfH8jMS7Hb8fBFQ+IVO/0l2q3nLGmh9wFvmnewXc61pteLzlGVtlJHfTUe3
yPOf2e4OKmUsbvdja8egh4n24LLBNtEQefyxsVXM23mlVfjb7/6ujo7uqZTL
/JHrH8vVdT/d20ivzpWP6W+W2yX/ekQ5SZXqtjhTF1fJ5bxqC/KzaPs5VfI7
tb5w3ujdLlydneJ13H5T2f6AkrM6qdnmMfzehCDI2MPP3fE9iOvu+NpW/G64
ujsAQHS4PVaps+P2WH4Olp/v5jEggMKg23Hd3e8DdWjzjvSLeUcD8/71kgba
sbeFPl0juw27lUVT4TUWt1N8bMXNQUPK+VJuI96QH/ys3yNH12Cd3NQy9eff
/V011Qw8oOXPyO21uX3KCv3qNPnZuUfqce5XyubxCUawnzxN7Gfq1+Lzjx02
2QtH6HbR6uy4vYbbbfjv+7JWHyV91UIe34Dh9yYEQcaRga/FfYf71vK1PVzb
LOruABg52jo7bo9lt+N+fLdv3zZ612II2XnYZxqE6PTTq89wvd2A9PNPdDRQ
/zV/byfdSuuia1IunpMc76Q7yGtazlVqyhhKuPmK263PGvS4sr3ytKU3Q6zp
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
dI677EKpnOpxlqPE4+ohu91JDwJjR3tddnH+8svNj+38ODoslB1yXu5nF5C9
98n//oUL3A4A/YHbASOJRbcrzr5PeSVV1ON2ie112TqoMOe+dI/Npd4nvA6l
vaFCOo588vb3G7YPQedYcic+x0q8Pv/4y76fSbUWfdzOXJYrna8i8mneoeb3
+ah/FO8JGU3s7Y3C5XILSsnR46J+6ffU3dVBBdn8/cuijm634d8hvQO3A0B/
4HbASGLV7QpC6mV6bC3intvSKbfFeVwOMhXkBupV7lNNw+D7V5trSqm0poFq
K4rE/Mz7udI92UWdFrNaD1NSUUt9Gr/i8krV8jKprMosfILr2bKk8lttg22A
vr5eca+vbmyLui/aNEn7pZTPdU+mmibyeXuoMCub6pubVX+wu7ziPJirytT9
zc0vCaq3HMsxRjvHSqIdc7/fSw3VlWr9Y25+Edl73INla9yO97Oksilo2xXS
uSqvk8/RcGUNni85pdL54vXL83Opsd2ulhf9PDVSg+bcV5lb1HpAbfr7veK8
3M8pDXJJ5fhzpfXzSmrEZ4e1UdpWWdBylvpyyQkr1GnDfS/Guz7cDoDYBm4H
jCR23S64vdLRbhb3ZavkL+xDOdxOllNI7Z2dZK6V7+2KazUGfCe/pII6O9sD
dX6y/1jardRQVykvH2g39Lodog2O293aO23UZK4R8/k+zvd7bmPUehDfl+V9
cUfdl2BnslNJXpa0H3lksVjI7uwlr6tL8ijFxaqprc1Kbp+PqopzxDbqmyxk
bbdQnuRL2nrL0R5juHOcX14f9ncQ7Zjry/JF2fXNbWSXts3Ol3m/SHhkqNuZ
ywsov8wcZtvytOHKCj5fbdQlnS9t+fxM3EjPE9fD2bvsVG0qlP9GsA19Xo9/
F/eHaZfmY8m8Xyzcy95mHlKf2KCZH+17Md714XYAxDZwO2Aksep22YVlZLfb
yWazkaWpXvjP/exicc9vqTWJdk23f7D9UHtflO/nhWqdlVrnZ+sRnwcG+oP8
Qi4vJ6i9t7O5WtSVdLm9gfmFajsq+8j9nDLRLhhtX0KPr6m6WMxT2hS9btnt
iioa1WXc3dYhz74py5XVWzTOMvJjDD3HpQEXDM59UWc4eE7CH7Ob2281fSW6
OxrVdUfqdoo3DldWuPOlLX8050k5Du6LUSStX1zdOOS88LrsduY2e9jvZkdz
rahX5e+EvX14N4v2vRjv+nA7AGIbuB0wklh0u3DewfUuvZ7gupji0lJxzXDy
xDrZ5JDuu3wPzCmuCblny54Wzi/C3TPdPZ2indDcblcdotXWS36/m/JF/Yl1
RPsSenyh21J9on3QJ+Q6HWl/Xd6g82JiVysb3OfRHGN4fy6nrq4u4dByuqjP
3x/kl+GOmevLOtssVC39m1VWZqL83GzZecbgdsOVFe58acsf6XnKLqwasv1w
zhvud6GN1nejuVm078V414fbARDbwO2AkcSi22nbC9kruJ4lO79CfUZKvu/d
p+q6OqqtrRUxm81Smsjt8w/xCcV7lLqgkbgd98dU6nAUXyiuaabeLotadzOS
fRmx27WFul1WeGcJ7PNojzHcOQ5t9w5dJtwxc31gRX52wDvKqU461nLRzjmM
25Wbh5TL+xWtrJG53ejO03DnRanzqzC3qtP6+rxS5N+jqLvM1ta7FQb1ieHv
QrCbRf5ejHd9uB0AsQ3cDhhJrLqd9t5rb5X7Byj+w+103F6l7SfAnqCMQzZa
71HK07Z/KXVCyjrcv5Xv69x3ITu/UvXMaPsyFrfrsVnE8TZaHeo0n69XPH9l
qm2ZELeLdMzqM2mafrDO9sH6s3Bul51fFXQcuYFn+aKVpazP+xCuTXYs52m4
8zLomvlq+3ydeB4wm9o724X3mSTX1X4/ujR1aOx+yu822vdivOvD7QCIbeB2
wEieBLfjaSU58jP2XM+htJfml1RSr8dD3V1W0RciK69c+MdovUcpL7eonHpc
brIFxjfj8tTn4jR9HrQeFm1fxuJ2g+3SOdRuc4ox3uQ+vFlBzjNetxPPNHbJ
zzTabPL/ez2Dz76FO2buL5oj+plUUo9bOldWZSy48PV2zTUm4TDN7TbyuHuo
skTuO8Fj+0Uri9fvbKkVfSWa2zvJ2+cPKn8s5ylaH+EeW6v4fXL/DR4fucfZ
oRnrLlstl5fjaabKenJ7PdTSIPe/uZ9TIn630b4X410fbgdAbAO3A0YSi25n
CnPv7e5sCfQTlJ/54vFl70d4Hq9hBN4Tug0uL0tTXp7kedq+FfxcWHVJXlCd
jnbdSPsSmsbqYrVdT943uY9u6PP7Pm8vmfJzNM8cZpO1a7Bv51iOcag7Dj92
caRjtrU2qmOWsLe1tPG5ywrbl4L9rUQzTnJReRUVS9tW+o4MV5bil/LYMBni
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
6A/cDhgJ3A5B4jtwOwD0B24HjARuhyDxHbgdAPoDtwNGEotu19VuIavDFXU5
Hgfu0tZE+uOSPWSPME5wY26yGCP4fmNX9O02ZtOalXvI3Osjr6NKvGN2+5Vy
3Y/vcZatjd8l/Z4yb9H19HS6l1UonVPviNflsQWv7t5IZ7Nqxeea28dp056b
4r0cRnoIon/gdgDoD9wOGEmsuR2/B+wzyXvm77gzomX3vzaDJk1ZRRaPT/hI
+qGtdOJerbpM0Zl14v0O16qiv4+1vSBZfq+s5EDulkzxnrH3juSO+5h8vY20
d/1mKmiR/VLPsiOlqfCC2MbkkOy9bhrx72HHzGm0aOdd8Tlj7xtR37WBPJmB
2wGgP3A7YCSx6HY7X5pOb+4f/TvQ2e3YR14Zw7qcSO+JHW+8rirxHrGk/LYJ
uVe7WzOE102asoRy6jrENEd7Fe1YMlf43UWTddS/h9B38SJPT+B2AOgP3A4Y
Say7XdGpLbT+ZDpdPbAsUPeUQF+cvqc6RnHKFnpt7WlyOCvpQ8nrlGUSJEe7
VtVJtqo0enH2cqruln3NXpdNm5csUpf78PNTZPX6xTyt2/k8jbR61kvCg3if
ji57hWZJnxcsWCDy+uuv04KX14hyuW24OO0U/Utg+9NmvkIHA/VjHWWpQfVn
Lyw/TF299WrZynFX3jtN/6xZ/8y9KnWerSpV2tZKuiptQynrT8t3UbUtfLv1
za2J4tjutwS/s8zbXUWJ0rpvBOrilO0q7+199qV36U5Ze9jfA9zu6Q3cDgD9
gdsBI4l1t8s5/I7sHQtW0PW76bRNciz+nJTTIubLzvEF2dxWunPhpHCXhMRN
dOnSVeE+7SUn1HZWn6dezOfn765kZtL5g5tEWcq2tG7ndZSLuraTha2iPrAo
/TKdvXBBlHvp3D6x3qQpH1CTxxdoy51Ms5btpKy8DMkd5fqxFMndXK3ldPbY
DuFkiRv30PX0YnJ0lapl83arbm4Xy/9xyWZKv3udNr42Q3zed7dOs1+yf+0/
d1Xd75nLUsgf8vxbf79DnL8/LDka9tm4Ab+f/H55em1guy8s+1zar8u0XFpP
dsJeuF0cBW4HgP7A7YCRPAluJxzK5xOffb5Gel/jY1rn4PqzfdK6byXlqOVp
fa2/z0mmvCKydPvU+Vc2zKbpC3aL9YPcrrs8yL+0Kb74iXCimzXyM3w9HfVU
UlKrupTPVy/qwpR1uU12oXC9Tvmzpuz+fhttnjlN8rSjqjexn+2S/G76ywc0
+yWtXzhYz3dn+wLhtKHPvynnT3sOwoW3u03a7uw1Keo0Prfcx4PXhdvFT+B2
AOgP3A4YSay7XahT8Px9EeaHe1Yv9Bk6j+RhF4/to03rVtLbb79NL0p+Mxq3
sxTInrX1emXQ9GbTPTq6ZzutWbGCFicuFMuobhdSlvYz1w+y971/Mi+oPNlp
l4g+u+GeA+T54VxLOQev7P9q2POsbJfr6VZK52KFtN/Ll/9Z7Df7HtwufgK3
A0B/4HbASJ5Et4s0P5rbOc13As+rJdCGLZ/TkeRkWsP1YyN0O3dHgZg2Z+Ol
oLZQpS/usy+9Sdv3HKSkXatH7XZ/OVUUdB5yk9+hyVNeF8/zhXO7SK7F54Dr
/KbO+iTsuDBup52cvX3qdvkZuyPJRygpKUkkWTonp1IL4HZxFLgdAPoDtwNG
8jS6XaQ2WXWMk+5BR0panDAit/P720Xb6fQFXwY5k+pSs79Q99HbG97lwrXJ
+nwttDLgi0qZ3LZ84sM/ht0vZZnhXMt0Yb1wy8OB5/WUuFuzhdtyP2Jlu3O3
pgctY7c0kqWjB24XR4HbAaA/cDtgJE+G230xKrebNmsZ3c4pJru7P4zbTaY1
By5TVV05ndi2WHyekbhHPLcWye3Yta6KvqeT6dOUe1RVVkIlJSWUX1RBDr+H
LqyeJfpnnL+XSxVFGWp/XdXtHCZR1tJtx8hUZ6FeR3BfisITK8Tyy3edo/Kq
EnW/Pr5UKuaP1u24j+/KQN+LT07dIHOjmXLSTqltsNxXImi7uy+TWXK6S7vk
vsgfSdsdbNuF2z3tgdsBoD9wO2Akseh2+0L6UsxIPBjxeTuer/Q54M9V6QfV
cUKS8ltkL5K8S/Sl6HfQhYA3TQ70pz2w8VW1/PaS8+qyyngh7F9K3VzoOMBK
/1uvzRToYypPX3vkNG2QPivuxts9vUneLo//a3VUqGXzfO6Hm3bgo6CyPzl9
X+2boT0G5TwVJId/3k6Jr7uetgb66yqRxzixqMuE2+7mQ+lBnqw8ByjOc6Ae
0WgXQfQN3A4A/YHbASOJNbebiPil43C5XEPGDxlvPB6XVK5vzOsP+L3iHHv9
+u1Xr9NONptNSu+w2+Xzoed2kScncDsA9AduB4wkHt0OQZDBwO0A0B+4HTAS
uB2CxHfgdgDoD9wOGAncDkHiO3A7APQHbgeMBG6HIPEduB0A+gO3A0YCt0OQ
+A7cDgD9gdsBI4HbIUh8B24HgP7A7YCRwO0QJL4DtwNAf+B2wEhi2e14bN32
xkayOlxRl+1pyaeNKzZRQUtXxLKu7t5IyXdqw2yjhVy+B9TXayeLxRIUu9Nt
+L1X33PqpzpTNt28dpPS72ZQdXPnqNavuX2cNu25KcZV7mrMpjUr95C5d+iY
fuHOpTZO99B33SLGBG4HgP7A7YCRxLLbdZSfF+9K+MOSk1HHGVbeJ6a86yE0
/J6FHTOn0aKd94OmO+tviPXut3ooY+8bYd49MZmWfn7xqXgfA7+rYoPm/RlK
Xlp7POgducOFzxG/W0O8o015P6/mfRnqctsXhD2XSg7ktBh+PhA5cDsA9Adu
B4wklt1OeYcrv2+r1DbUH7SxBzwwkttx/Zz2PbRKylM3SK6ynqx+v3iv1tRZ
n1BTV5d4l0NHexOlBN6xujO92vB78HjC7z3bGfC6vdeLxDso+tx2untqi5i2
aGf6iMrRvlc23Htu1e25nWS1WsnudFLZzT1iucy6VnJK55WnuzxPvis/LYHb
AaA/cDtgJLHqdr7eevHO1TUHjoj/f3ypNGi+vS6D3gm4yrMLVtCpY9uC3M7X
20JHNinvjk2gg9fv0BevzQhyO26fPPPhH2nOxqvis9Zb1P3wNdJiqQxlvf5+
G13atVqtf3pr3UFqCrRJ8j5/tOBVOp2WRqtmThPzX1h+mKwuG53a+Kr6DtqD
101q+f19weX989ItVNoqtwMXp2yhhMTPyOIbbPO0FF6ghCmvU0Frz7D7Ehpb
dapYZkNK8ZB5Z1fPoklTVqnb6WrJp7WJz6vnbve5LLXedKRup02Hsly3N+jc
F6edon8JnKdpM18JOi88P/fcLvXdwEs2H6VUyUP/tPyY2Da7eu7l/TRP867c
tGLLsPuBwO0AmCjgdsBIYtXtzBl7hVcU2h10ZcNsmr7gS9EOyPPcrfnyPX3K
Ijp24QId3LZY9Rt2O25/3S95HH/+aFcyXTy9T3WEdw8Mtsmyt73PdXJ364K8
xatp//V2l9NCaZn3jmQJnzgiuSCXs/ngGancnaJcZd+8DnlZnr9812k6G/BN
TsJra+l6+mVaIfZLbsfk/UxanCDmrzlwhm6lHgsc1+vCl2R3mkwXTVbVdy6w
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
XCX9Sbk3xGI722Q7464vrrXotmM/NJluw5DSN59K9/qR0F+r/fJSTq0u95e2
T73z0T61Txnd7873Nq9f2+8PXypU+7Yv9z6J5E3EdmQimmhsZ5vsZO+EpJrH
huX4vsJ/tWyH43rXDm5mz+aTV7IgX2U0mQ/t848gVMkjfrumBnKvxLB99yXV
aOqSn+0xl5Ihu8hsmFsS2c5dzsvusgvs+M1hJ6H8Xgmc2LOJfU6818fKG1Ij
1HnlyylpjNcc5w2GjKIiiNXkJD947gYU58SrrMlyp7N56LWwNTwOahurpXfW
+yrrzg53wq20i2z/0BMJUFLeCtbBDpdt2H75u5xn10b73ZNyitVrsyU8m12D
ueE6+b0nXbvM0lK4rsmtjnzq7+cqSZZobIe/tU6ovFYNQ2PTLvvYrO1sLB77
BN7/CTHyvRWV3crKH2r6VHVjLXyr9Kn0xgHD+9353nbUv0uq/y5kKL/9tkVn
s3293fv+/puSAkPEdmQimmhsx5+32c2jPuwns521p0h+Pt8fVMvHFA7K7xqF
xedT0N7YAkPTjnG828e3OZhJPad7VuFstjM0FPbu3cv00dbfwp3ucfYeO7ll
g/ROuK6O6y0uTkK89C7auCOZbcM53TXrvoIBzVwUP29+1zj7jAyK43U7Yu+o
+2jHC5+NPYK2tocqX9rtj9i7izMWzlHtZKw3rh5vtE1bp9H1rrwQor4fm28e
Yu/G5jHH3HNj+hFiO8EkGtuhfuqukNlK0YYt2yE2pUgdL5fvrb3QM+vwqyg7
s535XTyeHYJYqU/9KixF7VM4pn8m9NdwLEN+9ni7t1n90jNCe+925J9mbbk3
MOX13vf335QUGCK2IxPRRGM7a2+pOhblaT8t2/Fn9M7QL+DQoUNMXynzMKn1
Mu/NS1yUn5YIMUcj4bPPPoPt0ntDx3YSv3RNu/fdQzbD83373XfwnaKTx2Lh
fv9TNtaI75gv0xtdjlmzLoyt5TWa03U+L/qCJ360UR1PRDkf96S9Cq4nXIBo
6TvuD92pYyzbtDzmqWUuo22ubKf3W2S+hUp5voaBefmYcr2J7cSRiGwnt8sG
A33tkJ+ZqPoSrN/6DQzZ7VB8NlQeP4+IYH02UuqbfBy71tLI+tQfM9w/Z7zd
28USJzrfu5PK8wWP8Xbv+/tvSgoMEduRiWiisR0+r3dq5mW0Qn+zKasVZu0v
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
MGC3q+f/Uirfl1Tj9/uFtHwitiMT0YjtSKTAl4hsJ7fLBgN97ZCfmQi/U+ZV
12/9BoYk3vGV7cosjjE/ZLaTUj3IRzhHGqlw43uhX0BiWgH0DE+x/ZD7dirj
hpFHI+HQoUMQEfF7ti/ynlx3ENQPz7ttu7YtrE4N2xkdz3mSs5vz8TjWl/jR
RmK7N0zEdmQiGrEdiRT4EpHtXi68dGrjAlRdOyzzWu+EIdvhWJcz2+EcKi9f
XJyEixp+Qp+3mqJ0+Dpslzo+GFfeo7Id+thdM12D1NRUJpPJBBlFZpXNzK/F
dsHQPDana1ucht2M2C6O2O6NE7EdmYhGbEciBb5EYzvOZelNw/rtjSa2Pbt9
1HAd7K2orbAx5JKO7eLu9qnljjUatWB7NgoPuy3qnCmuzT0mcd+W8AyYWZDX
6b5/tlx3/omhfhgae8bWcWDdiT845nNt1k6IP30e6vvltRrVlz+BNetPwpR0
LVm5hu3GOnPZ8dr5YG3b8DOx3dshYjsyEY3YjkQKfInGdrZpOc4vstuNovtg
6e+H+tIMZb3CV2xOlvus7TmSDJ193VCQJK8n3RSa4LKWIrmwDnraq+Agm9eV
10Pw49+NvgoDYyNgrshg/m6cnZpvHmLlEZcKwSIxXUF8uLrWAsfYzrG1FWvh
SkkddEl1R7HPwdBhlVmzq/hbVn4ppxQsI9M6tsP513PK2owbpQ3Q1VKtrtWo
H37GjteuC8HPxHZvpojtyEQ0YjsSKfAlGtuhMK8Ej13ChWtG+bgYztFWJB/W
lZ2P3q0Zt8tlrJWZk6ipIxjyGh8bHo/69Og1GFJi56GvX6lT+cmUcpW17NOP
4GzY+47ydbug2Dygtt820q6w5FrYFXeP8WqownasfLIbvsW1tOrxe6H0wZB6
PM4vbwq9Qv52b7iI7chENGI7EinwJSLbcc1MTbBzWq0zhuX2+VmYmpryGCP4
5YKNPX9sC677YBl+v1k38ZB5udGx/PxYvvCKMYqxXa9zPCmwRWxHJqKJynav
k4dyuTU9YoFqqR3l5ZXQ1N63pDj1vRU3ICahbEVi2+O4RcHZUNgclgATik/Q
yv09pqC/f5Bi9AsqkdmORHqTRWxHJqKJyHavm4dyuSTP+YS7tGP91iiwTPuW
v1z2x45V/bFfR/aZfrh87CSYB+U5LZzjSdqzCdas+1qdh1opVV4Ikf3aNb7n
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
vCk0QWU7HqPlUk4pWEam/c4IpMCUO7b7/51Lb/k=
     "], {{0, 430}, {631, 0}}, {0, 
     255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{266.7421875, Automatic},
   ImageSizeRaw->{631, 430},
   PlotRange->{{0, 631}, {0, 430}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQd8FEee932f2+D17t0999xz73uf5117veHOYW9vvckmimyybRAO2ODF
gAk2IgeRc5IIygKBQEhCAiEhgQISyjnnnOMoBySCbUz4v1XVYbpnemZ6kmYk
qj6fH2g6VOoK36r+V/VvVmy0Xf2P//AP/7D1Z+gf2+X2U7dsWb5r0Y/Rj2m7
tq1a8SP0RzFSIroGHyyq7gNp9UKxASrSoEIJabqWVw1Wn4R6paV2r5Sk/JMr
aT+LX3j1jVJZOl+1iyt//7ShiejnkmpktF5F3HGN9+m431jJDl+3NNd1Wj+p
qKiotKoWq0csDddqbU9rNauEqAdKarB6iTT70aen2PvU/FPtz/sRozKi3Eu5
13hZmk8p91LupdxLRUVFpbco91LupdxrgCzNp5R7KfdS7qWioqLSW5R7KfdS
7jVAluZTyr2Ueyn3UlFRUektyr0881oP9+ohWfeZlnstXmatQpbmU8q9enMr
5V4qKioqKiwZzMtIS7+oiXtrelnWlcG9Nfoyb58G5uXiqsK9rLRxryH8q41j
MesmxseC/V4n2OUcBbmV3VbNvQVVneB59ABM/2A9nAgpsbo+NT6pAMLj1JVU
2AnZ2Skw/Y1xsOxUErn2mvsp+GhjAGRWdpkhLprZMT6pEMVJXfH57ZLXF1S2
wLENm2GTRzr5HeZ7Gl55wxZcomu0hmMKZeeVQVh8teCYFbRHOoTLoN7sqjdz
mph9Tci8urhXKs8SY1PgrFsAOLoFgdeNTEjXo04k3LkJCz86AsG5bcNQr3oh
NTUHXElcA8DdLwHiCzrNXqZ0pSnM9xSqkwtRnay2ePnnlJNfKdkWhidVGeVv
QWUzao82gf3lNLPEW7WdtiZJ5Wl8vsJk5WikCudLWEyJKF24nNyJyYWYrCbR
telZpRAWVwIZle1wZLUt/Gb+MYivMKwOp8ZFwuKPtsCF+BozpKtHIG3Xaekb
EX/GJ+dDTHaT2rmCskaIiMmHjLJO7cxLuAsxwMbNYO+TbgTzCuOqLo4Vz+1e
Dq++Po5o9/USEX/mVzTDzgUzyLlfvrEY/DJbdc/VIt2Nigen88FwObyUPxbp
50j8eeVP+yGxvNO03Ctb6oxbiBg3MCAMnL3C4EZGCzmWXZoL094YD68i/XZN
kFVxb0FlI6x4ezz8CrWZqlpzpQDSY2/Af6G/J++MJNe7bbGFX/73PkgysM7J
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
91Wy9os5dg3VC26tGrdP2SaPeNF7Ke56JfeO0WjfmxIXCdPfHsv7t3TTYTLv
QdKT1UruuR14Ubl/zAxm/L6eXTPJvXPE7TxX13j+nbcH/FOY/UeuOB3hj+P6
sPXALp6jTT4npKW94+amlW3QZ6L3Jrd83fk+gEvDtQz92gY17q1VCtePgioU
x+ko/95UtxHj4p2eHMvWV3YefZsL4QxufHqHzC0t5NuHLHQ9176aai95vt3Z
8zmfR6r5R8Jm3z/jPhu3+2e2rhGlaeLS03z7ir/DxK3F5rjj0NUcyWfDCZet
Pez+mPp8C0Eu9xbqsCFYcnMQhJ+2GOwdhNm7mLlZbr8HVe71lsG9wnBXR93n
9zDD87wed4ZQmE/46zfHPGTPP0PHGkzKvVjhqI6/q1IWyT5lOcqyr+3ZYXYW
lkfVemVK3QlVjgNF9VSw1xH3LlMY/rVzjvz+NLhv+Wr9GhH34vQvO+DC94lY
n+y+wfOhVJqE4ajWyezsDFg27z0NZV18DvfLq05FmzyvuDU/akL9u5IRmbk4
VU7Ba4BEbdBON9IGCbmXs7lVrfd4X4XlqB/k8kubX1Ltl2pbQL6totKu4O9E
cPyk+rzNad8rbA+lzutKq759zjX3o3y5tWP9UD0mlT8fbw/gw4hSqd+vvr0M
XCL1e38mV3j++ZM3xonW0WHh/ctwOt8/HC+6nuSHjXQdwuLWPHJpEdZjXG92
e1wmaeP2ScPt1BeidmoxnAxR9inc/mpk/RrbLyn3QdRjT2RN3x9W+VaatrLI
zfHuFMSdaWOZNXD4m6yHruK5ayU/T9kbyefbK28uhMWLFjD7mCF/fo/Kzq28
dp5ttXJvbZ9G7tWpGhWxx3NKWyAjv0XyHlnfMlb1VyC8525qfi0kZjdCLipX
0tfps/YKPfciFN+idp3vzXSVhdyiJkjKroWk/Ga1c4XlHZCJzlv73uS4XqQX
NEF6UbvBfmjjXn2UWYziUdii931mkR7pLyhr1pqHmfhcgR7vk7RKeg8nfWwC
dAl/M+3Nva3w5h7T+akqvLbtzT2t8OttpvFP33zEfSf3bYMkLd9dNe2zM0y4
jiax36OJz1ZvazTex7VBZeI2iJ9fDGLmf4yt/0LhNhH7J/WeIhe1u/icNbeJ
OL/SC+XlBdf+a0qPPn5JCbcrmSjPVJ+fNUqftJqiz+Hyh5QnDfkjXXflfIfX
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
JrFtA1m7y//NsLFwPwecrtgL+0jZPRqYq7kc3NP17JWi3EsddSPXWZ57ZfRD
kjI2nOGI+3Dkg672e+RIr/7QROyr33yaIdyr/VlJc+8Q4l7Uh3f1I+7t0cK9
+u2fLfebEhVpQfx+vQGx+VBQUAA+zofJMbxurRHFURb3ouu3aNhDhfn+Id43
YheEJ+dAyBUnMtc7deVFskc2x70TZm2Bm7E5UNd+n8whYz+nLjkMsXlVkBTl
z+7b4AkKlDYp7pU9TyqLecRlVSRDOdMQyeBHg+M0DMxrDPfi5xtR0AixPseY
tcjEvpf5TuV2nxQoK4gn6zKdE+v4558b6sashUPXXw6JgMCrweCH5O13B6q6
hjTEiXIvddSNVmcU96q1UcPFvBIcoldYpmBeU3KvEXlgBbxqLOua2n5Qbj8q
e05NMt/lcK/u5yePe7uGlXuxSlNCyX69yu9WTINlOzyhuIXbzyGIX8Mm5l52
XVtvJ1xBrMutu1fdQ4Vb17adfGeA2c9i7qqToj0w8DfuprB7ubggjsFhFMVf
h3nsng1Yc1c58GsuVfcmkf1MTVVmTcG0ejLpqOdeQZ3t6KiH3Qtn8/YMdh7x
/LnbHnuYMkHGUsdRORrk63gUKmvjJ05XF/7uCior0vGi3EsddaPVmZR7RVxh
rdxrBubV2F6bgXuNYExrkjX0q8Zxr66+Ud7zlMu9dU3tiHubEffWsdwbY5Z1
bcLxAP5eRW19G1Fj2wAIv8cmV5r2UOHse/E+Uh2dPSidfeL8U4m3+HkMoet7
oaVzUHcZ0/VMrbDsmqKcWzv36sW+ovoyBFXV9VBZ16P2DJvrm6G0soXZu06i
PEulU3O4lHupo260OvNx7yPTsZ5JudeQe7X4J7ftNDQfDOiXrVIqabF0v6p2
vb7sq7N/VL9Hyh99uLeqFvfrdZCDuPeWXtyrX72SzgPxd4gNHi+wCj+9BMZO
PiLYE0RDHt5TiZPM5yuLew0ox5bmXL3LuBXyrjHcq3f7qFqmZYdLuZc66kar
s9x8r4b2yyzcayb/9G0/pfzSp/0fSdLRT1m6b5W8Xm/u1dY3yitzxnCvyd8l
aOUidi27CZgX501lfjpEpVRrqCsyn5eG56zrmeo7prQ025qFe60g7rIZ1Bju
NViUe6mjbrQ6q+Befdo5vVhVX7/09NcE7adVsOhwywr6Vo3X68Nyup6pjLww
L/fKfya65wK5PZx0XGsmRjHq2euIi6XZz1zcqPFZWUG85cRfZz3So/yYmn0p
91JH3ch1xnBvbaNCXQ1YbTqkUErKj0aF+BqtYv1sVJHs+2X6rxp3lfjWaUqH
arxE0pJ+Y2SytJtJbH4Nl6TySOs9DZolToeO5yojL/C3CDlV17Uitm0hfFtR
3QRlVQ1QUl4LhaVVkFdUAdl5xZCemQ9xiWlwNTDYpOM9ecz7UOv4wJzzcubg
Xksz37BwoxUzr6w0yCxTenG0XqLcSx11o81ZlHtNwW+SbGlmHtTCUPqxr4w8
GC2sq6Lh5F7V5yLrHlnsa2Hu1YcRDOFenifUuVff+X2r4l4j/bQWyc4/4XO2
gnjrlRZtZdYUeSNLlHupo240OePsHCTGwnJtDvVsr3X3pwbaDBjCCYL75bW7
ZrZvMIJ3LCVrnXsSSRMP8ungbLS1PFsd+WDMfg6mKgu634UzzKtv2kzFvCOZ
e82VXoPbh2FMu0nyysD2w6TtKy/KvdRRNxrc8HOvEW22GfpTvXlBj75J3P6a
0abXCjh2VHLvvUc6bFlVyrac56sP93YK9+8dRu6VzAsDuNfE5dwolhoG9jMP
a5lPFq9bcvJQW3m14LOg3EsddSPXDTv36tvGDBf3agvLQOYdtvbYCjjWYNYy
U/9pzPMQXaODeznpNbbTk3ubhpN72XR3dygg+W4chIRFQfjdXKhquy+bS+pK
kmHzJlfIV2jfX1eT6ko1328q7h2usmTNsnTdk5V/KmUrPzEUNq+ygzX2bpBR
08Xf21pTAg72O2Dpqt0QEFeh5k99eS44Hz8O6zZuh+0HPOBOfqNReUe5lzrq
Rq4bru8Uy2UcWX35CO4vzBInK+BYYznLWvpbyWv04l79npkuO4fW4eJeQXrL
koNgqg3+npVYvsm1WvOH868iyYd8TzaF+16wntJ2v8HPV6XtKLh7FXadvgXt
Aw8N8nPY6raZZem6p7MeCupbY1EE+c7a+3a7YMnMmTBu0n6o6h1CdaYJtuLv
Vc9eBZvW/52U1cB8Be9XTW4Y/32/rzZuIN+2xn873ioxON8o91JH3ch1puVe
iX7VgPZVa38+wvsIs8VLI5tZXtbKu3pJWxoNsWGRwb3tw8W9gnR29tTBesQE
kxYdhIyqTnKsoaoQNs7CnLESCjoHdeYV+V4w4tb01gGD6pau+w2qd4L2A/+O
PrMEJs5xNhn3Wrx9MiJ8i9ctbfER1LPKpCuEdVtRPWmrTCDfGc5AZaS9vQDm
oTJ7q6wX1aNe2In+do6vI371oH7LeeU8Una571d3KCpgNbpmwpxTgu+m6CfK
vdRRN3Kdcdwro181QTtoaZmrfTd53KyAcWXJxHlqDTLIdlsb93YPA/dKlKH2
5lzCEKs8skTH6wqTwdPrJpQpBqE2NwxmzNkDBQolAycFHIP5Gy5Da/8DqMTc
OmkphKfEw3LMy8i/mR/tgOjCdj7Mrj4F+DruIufw/NxHq45CalUf8Yu7/2Zc
OCxm5+Zmf7EPUqq6+Pji+Oz+6gt2LnoufH3MD6q6hsi5hIv7YLt3AtwNPM3P
Va89FggNKG8xB13es5w/PgPFb7t3OrmvviIdti615f086ZcEXSwX4zQvQGm4
cMmJzIVP+sgFGvvuK5+/tXDvCGVfOW1adVoAme896RsPaYmhMHXiXPCJzITk
u9fRM5kLAXH5EB7oQsrL+fRm4lfPwBDEXvcDr/ACURj+uxbozb3CeFHupY66
kevMyr1GtqkW60PM2BdYc9zMoheCebEMW7Moyb29crlXYh8JPZlXtTx1Ix7d
yXEf4ouyui619GIuxXNtqc33+GPRrqthIuIIjnvHs7y69uhl8Pe/BHPxb8Sy
2HYBs6eL3XxyfrOjP9y+fZ2w9rhJ3xCWJtzL3n/wXDAEINbE76ZtEGu2IP87
OyvgMxxH5N/V6ATwcTlMwvvCKZHEJcZtPcuuH8OFmxHgfnQz+T1rTwh09g1C
NuLpLUvmkDnA8/5BEJHeCO0NuWBL4rASvK6HgsPer8k9m65kC9LMsPKuU55w
KSiDZ+I+HXk7rMxrRPiWr0MS8RC0HT19vXDDaTdhX0mxz+ebU2GknKjVNVSv
OrsGICfhOilPC47cllU3KPdSR93octbMvartodx221q58oVj3hdExjzLngEV
7u0zhntlfrtCR5mqyI0mDMhxhM2sxXDQLZSfT+W4N0ONe51F3LsDMSPnf2tF
AmGNjehYTT5jb7k/MJ+/vzozFLHvxxCc28pzr2NkFX9/wmV7ws34XXV3dyek
JGRBWesQf//VXQvIHCwOn3Avuja1QRm/KPYYfi+Of8d7bRDZOSRc3E6YN7t9
gL8n+NBiGDd5J5T1DPJpupTcoF4GRgn3Wqpt0RoHDe+M2lsKSHlJbbnH/53S
dE9j+rv7e+EA++5hHDu+yWq5Z3AdodxLHXUj15mbew1tC7n15MFhUXD7bi5U
tml+H6XLLzy/FHDqMFy8W2Z0+59z+zLsOh1pkF0g5d3RKaO5l1V3vym5V/89
BEVpQnWmuDAXfC95wBLEC5j5Js4+KGBA3dwbXNzF5w+2a9iF/FnqlEjsd/F8
ckxVv2R+Mtw7F+Lr+vm4VaUHMDa/rI2moq4SfM+5wy77HbBytR18gPzmuFcY
F87P6vQgZm1eerNafPHvwMMryfm/b9gGdhu3w3rkLzdnnNDYz6RJwM28WA6j
3Gu6uiOVv5y6uxSQlZoPdyOvETuHi5GZEM/+fSEyDZJSS6C2Xb2vwPYOpbkF
kJCSzrw/mDgdJsw+BpU9Q7LYVzXelHupo27kOmvkXtX15NwY/UpyLduGDUCw
qwN43imT5R9e63AM9YsLHWKNbvsjzqyCcZMdRLZ9pmIjfF2nohocdx6B+IoO
i/Mclemere0nSyE2Md203GuG/VRIenrFY7pexAzhHnsYls1XSHIvnmNV5d6o
ih4+f7r6OuGoCvfGa+He8QLGxeLXuqFjDcUxbPswF3bsdwRXLx9ityDkXu5v
zk+Oey9p4N5L2z8lYR5zPQ8u7heIPJG/2KYZz3NLpZlIwGSUe42vP5LXcHO8
TcXwpQYbh3ECjbX5BtKbtO8lkh/uRq49l9yssf/SFmfKvdRRN3KdtXGv1Hry
+qpC2MCuJ8/vHCTci/vQj1l7Pl3C3Hvcdjax/9Pad8ho+7n+Ut/5Xrl9THt7
MbF1dElqtEgfRKW/5PDE2InTiDZv3wMVNU3DxL368wzHrOcTxe/zKxOu8NzI
M6Bg7tN72wc8a3J+HL9VzuePojmX2Piu8kgia8Tw+VORVcpy31AAJw6chpjS
DhFjSnFvZZIPY18sCN9l5TyRnQOxFRbsPZHiv19kk8yMX4/w41funuIe5T1d
zc1QVNkuyBcJ7uWkYr9uMfY14F5L1x/ZZRPv54CYNrtJaduQiv9uwmWLsXNQ
IDZehnjWOY7Zz6GjswKWobK2RGXOozT+CsO9CQ0G9V2Ue6mjbuS64eXeb3W2
bZrWk9cWJoOH103Irc6Ftex7VzzfMxW1d/7ZxeDw1SJY7xkvuifUeRtZY97U
281zL9cnZUT5w0J2HnnSog0QmtnEx7eztQbOs2thsJbZu0IBa0uI+8dJi45D
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
XfdflqO1awAFaUn4askqwlbHWJzDeG8ZG3e2dMMJZNe0k/InbH3ZtsdsTJSB
ySJM/MGGmOCV2H8zFa2EdxNvHGPrR5Kb+fhf6rN8lFuPjo5mPm8DjSF2hXup
73bnxTikZmThxeu3TInJhSxG2ZH2KGve+mWdyXgz69x702Q8j2G+q1XkXF+i
pqkJDy7uZ+snk1sw927hPPdussK99sb3m/fRgnv58f1PUNk2yp/r/JBj9znl
3SXLgxB5N44xLf9cd4R7FZ7g3jn2lbg3wNjNXdlhPZvf/104XkBdJz8wr8S9
kkk2vy3QuJdquKsSO40xvZyWbjyBgm4Nv09XVYbJ2Levdt9Aw8g0K6Oxqsu2
xZpwL40Xfh151qTNM9F5gliIDj7vwUJjroaUckOeMsriP4hwaqjR/yzGvZbj
2gwsX0VY0qH2iJqy7xpjjAVxwGZ1qa+Vy+80x1KW5/p7fDmfJ4GP3xVwb0nc
Icv4XjPu3XO/ht+fvkcIfbi2xveb99E8vndufD95t1l6g/ns/c+znuXeg4dP
oEc2YrHdNvcaxoV5jnv/7SD3Suzrc35zVQ4yn81YACeP6dp1sT220WU29QPz
StwrmWTz2/zLvbafvXK5CrJBOQZpXtl3pmxpYNkPUKqmMGEyl4Vt6fWzhCWm
oNKbH9/QJ9aeasbh9niJ9M8//GV6rirtrMi5eof57I3vd/d+CEy5yUii3PuB
cO87A/eqPc29HLt4/9w+J/mUdYVykns9xYTOXZ+/BTIrc7dPfmBeiXslk2x+
m3vc686z0kWu9CpbusFefufeQGc+f/c1UK6D6TURPp91038T7v3oI+519Dfx
P1MGugKdeb3Fhub8aj1fmgj32uJwR/vla+YVtCtxr2SSzV/zPPc68tx0gS3e
icgr/OJiXYl7bcjf/QyU62B5LQKVeyfVKlQUliA1Iw9Zhc2QKRyfD4LOe3H0
cDRala76/T0rGsNEc3VffNHqlfbnPfO6G+9gzrwmEjLv34Z1R5lXpG/N5ek4
vOcA9py6i5p+LV8u7+/EtRMnsGXXGSQV9Zr0Uz7QhuTkN3jxOhMpRtH1rBrr
c7qZXue/LSRxr2SSzV/zPvd6SGLc63EW9gD3flbsKzGv49chELlX/PfprnjN
xomax6cnVAw5dI7cfLJVgvnUfKnWwiScjshkYyrpuqK3FMsI9+6+X229nhiz
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
yj3eNWVfnuH8xb4ce1uRGPfKqpKYL/fqs2JUlaZh6ZchiM+uRVn+C7b8vLAZ
mUmRjHEfVI+xdtSTYzi2ejWW7Xxk0r5Gq0BJSR06yW/mDO9K3CuZZPPf/MG9
NtnXCWZwh4t4NvIQ99rz67nbrtXz8De/epF7A4V9vcnTvuFex38Xmu/5FGPR
EFxLKEH3kNaiPc6fK4xjyI/eg0Vrb85xrzE2Yt+lJ0h6Hs9YmrIwraPR9OIn
sr50QzjSi2vx+PoBtu+R5GZyDfS4vGYNNt0uM+HeK+uDybZSxrWF944beTcE
Ec9e4z5hWLq+6kAC8wHTOAvKrL9eSkBpdTkOrQ9i6yWDU8xfG7V/HVs/HZmE
Z49vYxlZXhx608C2w41YT3l38UbEpRYh8d4Ztm/QmddQacaRnvgU3xNWXbbl
PBKS0lA/rENv1ROy/wZUjk2T+g2kPuHdxT8i9kUOYq+fZGy7+ngylNMfoBxr
NpQT/fT7Q6SmPmPtfUH2r2MMZpt9TRjYBebVmciD/GszxsJS1njSFvtO6nV4
dfs0Y98vbGjf9XSMk78h2oZi1OALPvskFyn3LhA+pvuEIOxiAnrV71xiXol7
JZNsfpu3udfb+QjcZV+7sQNeYB1P8JdY330hX3OvO7+xN+4nn3Gvi/O1uePr
Nejf6G3KR6ggrndx0Pc4fzcdMu17E+6tteDeSBPuPUH9s8ZyRW8pixk+TLap
xlsZB0cUyPjypsoa1HQoeMbdJsK9hm0Gfy9l3tyeST6uoTzpEmPfzC4NKhP/
YH5ayrmUyeiYpsKCOvQp32GgOZ1x7M38QZ7ZZEZOflY/hpKHxxnz5vdN8eVp
d44haGsE+nSz5DeaxY31a7D9bgXvc+2tTmTcW0O4tyTuGFsuGdTz5ZVJFxnn
ZnSpoZQbuPfbCxl8eV95PL4g2141TzjMvRy7us68nmFfW3EJrvKuIzEPinHC
s4s2ooLGOXDLozMW9WnZdzwTb8T1+wm4dvYwW18YdA69kyLs60C/JO6VTLL5
az7jXi8yhEfY15whfcg+bp3vPOFep3NQeOA39lbb3uBeyneMCwKAe6lovEFH
WxMS4u9jizFW4cvg8+gi/eolXLuAcG/N+Cx/XDHufdMx5yuenFLiDGln250y
wqH9LIaY7rN262HcfPAGDTKtCOOac28pz72Lgm+YjGsbITxLuTe2fBgDjel8
DMO2g+cRn1qJQcLslGF7q5PY9vVbDmF/2HGmvcaYhsjiQSSf/w6LN0RCPvVB
NH53cmoSlwn3brtdIsq9yec3k/p3SP33fPlw81vGvQ/Kh3juvZnfy5crhhsI
ty1HDCl3hnk9JxG2czLe1Vsy512tRoHaymbkZ6ew2Ia47FoU8cuVKKvswIDy
vQX3/nPRTlQLuLji+WXGvjHlY6bn7GC/JO6VTLL5az7hXh8whMfY15pmvdNv
t8/Xx9zrKvuK1vfyb+zvdh3iXsEYLo57J6f8xb1G5tWb5sfVz7xH1v2zBpZt
UYr6ewvuHrTg3txenYB7Nbhs5F62PqlEzstEHNq1jfDqSsasVzI6yPnrCOMG
YdPtIp5pJ/Vqto3jXm5c2wS5Ttw+o+1ZrI0HhHsNMbqteBR1C1uNMQ40z1hx
3yTPvYcu3kPk3TijnuA+UXGnCk+PfW3GvR+d4t5Hx9ZZcO9Ie54J94bQ5YpR
VkY5VkG2feso93qceW2wbwCJ/m0oR9ux3U6MwxeMcffxjEu591uy7Zu/ck3a
Uyja2fY/XjW71B+JeyWTbP6aO9w7NKqyq+Ex2xryoOwdy5PyZL/dPtdR38qR
393kHrDWhpd/X3+365BGlRgaMWhwWIGBoQnjnIHj6OkfRVfvENq7+9HS0YeG
lk7U1LeiuLwGSS9SzXIeuJ7DwTJ2dyViy0ZMt5c+Y9vja8ZF8zU8Pv4NlmyM
MuHeK5k9fLlqvInFNuy5Xw6VYhxNTX18/l3N5CDC16xm8bly/SQifgzGEsKe
XL4GlbwFoYRVd98RxDkQjq0am5nL6ZsVxXj2dbMCo/3kevUqeX/tQGMW78+V
1b9kyw8q5Hz5JGHtzs5ByCc/oCD2IGPkGtI2x60NOQn4MyKVjU3juNdanEN+
9H6y/DM/xo2qJSuSce/r5ok57iWMy8UeKMabsfZLI/d6jWvnPwP3lD1lTFs3
ahrboBhtFCwb2JjL50DzO1z6Ngj/XHwSndpZvq3O4qdGf++wcZtz5y5xr2SS
zV/zKvf6gR0/S+4dC2z2tajv4DX01W/0yXCvVfa1z7s8n050sDFnlGvvvyxD
a1c/CtKeM2ZdsOQounXvMNiSwbj2+xMxqGnrQGLkcba+bGu0xbi2WykVaKgp
wT4WKxHCfMCs/qKVCDoeh47BMZRkJmA5jUkQxDFQ3+21Z3loqC/HKcLBCwXc
y41rW7B4H7KrW5H7+j5jWeqnpWPTsmh+X7J+/U01ZISBE64fZeuPq8dYLodz
hLFpDO/DnFq0tzci3OgTpjG9Yz0lbJzbktBjyKpuQX7qI7K+HEu3xrFxaRz3
fhl0BGlFdRhUvTPhXs63uzj0FKuf9eoeW1+65T5h+vdQEsYN+TLQuTcwOZhy
L43RzWoZQeGTS/hi0RZUs/he6rtdjuNPytHVUszGsd0pnctjxjHu8p1XkVPe
iOyMBLYPY+hxLvbBuXMuKyvDwMAAFAoFtFotpqen8e7dO3z8+BH/+c9/8L//
+7/4v//7PxP2pZJMMsn8b16Lc3DgG7LXYwCclY9iMvx2fh4U64uT8Q1+6aMX
rqlHf08rcQ4awpdqO3EO7nGvdf8wnW+Nyz/GieZeKOhS83EP6ZFnTMouhP8k
8Pe+Ytz8MOGeoI1NeFZqGMemnyb175zh4xuodpx4iG71LONajbyHZ12qnRce
4ARh0z33qnguXhp6Grcv7OPjeJdt+Qv1wzPMf6tW9ODPX0L5MjrG7VpKHe/f
VY614yRpny9fvAXJ5f28f7azMpXPuUAVsusqy9vAldel32csTMsiSwcM3Lvo
R9SMTjOW7ShNZWy7wKh1B26jncZCkzLleBu+F+Feym2PqkcDgHG9xcLuM7RK
NYTT3wbx8Qz77xXzbWfePU22LWdatP4y2iZmTeoWG/ObcVq4Zj/yOlRWmNf+
eUrcK5lk89e8wr0OMEWgsaGr463Mj/W5cK9d/g2QvnrjGovzq2v3jij36ue4
V+EV7nVs7gi5XMn8zoMjetFyjUaPUbmG5d211oZeP8PilFVczLCgr3od4Xql
jrD9rOjcE0pSNjo+KVrGzU2h0UxDrpzLvSCUoUwH5bRwPtq5WF2FcpKU62Ee
w8vibqdnDeXqGdFyezl0dVOzUKqnIFfoncyvMN/kCOt6zoc8OfUOfbIh9A5O
WhxnbHAUnT1jUE99EK2r1erI39AEkZrs89GBPlqXxL2SSTZ/zePc6wBDuMMi
XuEXB87BmfY/F+Y1OWfBtfN3Xzz9W/ibe8ed4V5R9nWNe70iG/OwOSvn50vw
91xpnyL3ijGsp7jZcT/ypEDOtStxr2SSfW7mUe51gB08yXqutGGTWZxkF2/z
1nzi3kCXp6693fvH2XYd5N4Rwr0DhHt7CPc2E+7Ncop7hewbKMzrHvdKzBto
cocjPce8zrOvxL2SSfa5mVvc6yGecIfz3D6Ggz5rv/TNiWNJcvw6efQedeNb
wWfFvR5kXue5V2LewJfnmNdx9v1o0Y7EvZJJ9ulbQHGvg7HBHmMYB+OT3WFR
iXl9x7yOXjOPvouI5SZ2ph1r3DvpBvfajHUIBOb1la9X4l2facpBeYR97TPv
nFxrwxHu7e/vx8TEBDQaDaampjA7O4sPHz7g3//+N5/LTMi+VJJJJpn/LZC5
11Xm+VS4198sOZ/k7LULFO4VnbfCXX9vwHOvN5n3c+HZD3bke96ddEVWedMT
zCvOvs7UlbhXMsk+PQso7nWCWzzGnAHKvf7myPkoZ6+b+TWf1Kggk390/vdy
I9aBzbP2KXOvg8wrZFfXuNf3Plzfcqyr8j7zusS7DsrcX+w6W/9tkItcLnGv
ZJJ9OuZt7nWGP8y3y4cHkZOZh+y8EmQX1aNnfNZtLmovS8DCpduQ261xi1us
HWNkcAT98im32Nff/Pg5ibvmGu0IwoODsGDpMTTIZ23+Pi0VGTiy9yD2nr6H
2sFJ/r6ZGOjC9VMnsXXPWSSX9okw7gc0VBTg6vkrOHvuPE6ci8LL/BYop/9m
7Kvjn8uOcS+tY67A5l5XxqMFFvP6llkd16RdORe/GgjMG3AS+IEl7pVMsvlr
3uBet1mE8EFu/GV8uWSVhWLze5xqq60oGWduvYWaPIPpetmzP7GQtPOiWSXO
vTZ4x9456memcI60/fX1Ipe515fMZ35tPldpCfOeIMy7eO1BHNwaQt6LjqFN
9d7yviQa7cxh98/XYWewhXLysnOQEU7V6sdxbPEq0sYeHA7bYbjHWufusclp
Le6GbWbbqb7d+COWG5eXbb2FPs17cN9gtaQ9NeFelWDeCke5l+dfF7lXTf6+
u/uGrWpU/cFp7jX0yTXm9XoMr8u863/WdZh5pzgJfagf5uSsf9iPzNtYkoqw
X37DrvAoVPWp+e1jfe24cvw4fth5CokF3SZ1OmvL8DQxDUkv0k30NDEPPapZ
l/pRWloKmUwGuVwOtVoNvV5vMlcxN7ZNyL5Ukkkmmf/Nk9zrKQ6pe3OVMe43
h2LQNq5nHDzY24wjG9ay7Ym1cofbKri9FYtDokzYzua3amvlDpwr5d6rpI87
IssteCnQmNfatfncxDHvwmWn0al9T55p47hAfkNr7NtX8Yyx7gRhLkV/GeHW
zahVzEKlbsNX5N7M7JmCjtwHp8hyVOkw/9tWGN+3tlx6jdHpj0b/7yzSIsMN
268VkXrWuVcsf68t7rXOvrY5NfvqjybztJnrVsmQU9wrZF61oh/XT15AcY8q
MJjXAe4NRM51mHmn7Esnqo/Wx6D5kXmHWt/inwuXI+S3U/h+1Sr8Y9Hv6NGS
vz3tKA4vXIGFq3/Bwd+2sn2SGif4ermR+9k2S21A+ci0xL2SSfaZmTvc6x0O
GUAY4YClG69imPw/O1f2P+S52Y4fl6zG6rAkTJJneNnjczgRX4aiF7d4f/Bv
V15gjHIFYYqnv+/kt68mbHMivhZDzTn4V0g4GhSGb9mTOhUSb9I5Vw2+t417
LqOqf5rnlbL4ywiPz0NKVLjRV7cOF56WQEGeu/a4d6g5E+s3nURKehLv29t8
KAoNo9M89xS+iGG8xPx+Gw/hTfUIX/fbTb8jtyKbnLPhHEK2/4lq0jfhMevz
krDBWE7rZ9aP82W6aRWek3PjrsEmcm60vrVrQ+uM9NXi7O7txrJ1OBqRxq6n
8HwePYnECvobbYrmy+ajKPP+Tn6vxWv/QqeAcXn2JSxszr79tSnst7qWWIrq
igzyu67D07x6VBS9YsvJJa3IehHN9okj72eGGIoBHCTri8hxqG9Y+K4zOa3H
la0hWLB0P5rVsx7lXr0L3Dup1rA52obkGlRn3GXzC+e0jWJ0RMG2T2g+Osm9
c5yqVLYjZNEKRJaNBDTzBjLnOsS8DvCuff41i60NgNiG7tInjHXHdO8x3lPM
uLVqbBoTE80IJhyb1jEJjW4S4YSBbxcOmNTVaj/w/2r1U7i3L4S0dQIdyhmX
+lJSUsK4d3x8HCqVCjqdziSXGRfrIGRfKskkk8z/Fmjcq5a3YR1hhIjcfhPm
5ZR5fTcWLj2OTvL/V+G9Q4TNVhN9h0fpubh/+RjjtbW/p0E7/R6NJdk4xr5b
70Jc0mvk1I5BVpNA9tmMavks88tF7VrHGOVoVDLSXj1lDLqA7F9rjPEsuBfG
ypduPIGXOXk4H7aDHSO6dNgu98oII3FsGZGYiafRF1lbq8JeQEuYgPoO6fq+
K89RXlvJ+7PLhmdM6h4jfXuReJ+x5kLCRxyLNWfcNvrFb+JVZhoOsPrrkNen
Z2x79+DXrPxoRBKysl6x68rqk//rxa6NerTZwNBLt+HhqwI8NDJz0ImXzCcs
7NOZiAd48rqOvH/MT18xx7z0XijsVluUD3dXsvcNcyam98zrqLN8vII17Y/I
ZD5heg+pFG0IJdvOpXaIjmvryI9jdTLaFV7mXufUX5PMuLd2YsZke13uc4Qa
/b9LN4Qho26Mba9OiSDnsRUZLUq2rtVrcPvANnx1MB4tla+xjDDvAqPWHYyD
nJynX7g3EHnXqu/VUibM6ibv2paHxpV5SL2Vz5mf9vLTIlSUpGLJwmA8zqpB
aV4KFpPlhIImZDy/w/aJqRy12s5go8FvfDGt3eW+SNwrmWTz13zLvf9jdx+O
rZ5UyU14lxNj3aXbCbe+n1sefc+X57Ft21CnMIyBK314yORbvqH9zagjXDvY
msl443JaJ88hir4y5ps9nNDIcy8d69Shf2/w3ekH8CspN49lsMW99Fy49jOu
bcGikAj2rbsy6RzzH5cSzmV+xkk5iosa0K/+wNe9+raLb3+oNYdtO0/4ifpy
/woOYkzKsxzp28+k/Kf71WTfTLbvuRetfPlAfQbWLd2M1GaF6LUpe3yCXZsy
Y3+oqlOusHbe9kwKzmfUD6zK3QPut0XfCZ6c+I69Ixg43vAexJWr5c3sHYGW
U1/414eS+GskZFbKs1+R61lF4xy4ZfMxcbP/wWBTJvueEE/9v2bxNJRNe2uS
2H34oHzYBvdqCPdOEO4dIdzbTbi30Ovc20f7Rbl3fJbf1pRxi/Hu12E38DIj
FftDg8l6CHJ7ddBo+rGXlC1aexmj+g9oeHWZMe5jcl7yvlY8irnN2Pf7M1F4
kVEPJeVNXzGv3XiGwOddC+b1iZzhQWf3d07Ul/vi1imLeIV/mOnXa2nMJyzW
homvV+Oar5equLgYfX19jHvpM5E+G4Vj2+hzU+JeySQLTPMd9wr51fp+HNs9
qRXn3uLHJ3nuLbj7K+G2aChm/s2XD9S+MYkBLri7l7EdF5cg5F4Z+2a9DgX9
M4LvziqcJ6yzLdIQv5xP6i8i9TnfHfX3RYjE8FrnXsOxuPYpR3PtDTZn8v7T
HYcu4Gl6NYZ1H03qChmUxoBwzE394huMbBZ26iQOHj6BA4d+5f2zhvrrUNg/
Y/Vam1+bFxd+YLELwhiOUePvEVc5amhT8E7hSdmPc/Yc9wqlJrxK3wVMuFdk
m7CfNDamvqYVhXkvWWzDo7x6lPDL1aio6cKQ5iPPvQpZJZYT7o2tFOdeWc2r
ecG9k1NKnA9agzXhL/h9NLp+/ERYd8e9KoOPuIGcy6KVOHI9Et8Txt1yLdck
zmE95eAauW/8vA6NWQts3vU957rCvu6wsmuaGKOxDRtQNjYNOVkOossj0+Rv
5yMvsXqy+jRxX6/eKA9yL43xFbIvlWSSSeZ/CzTupcxBee6QMd5UWHdq9h1i
D/6LsBqN/f2bce/STXfNuPe1gJttc28f497NzN8qHHd/hbCrNe61NnbNUe4V
tkf3GetvR/zdO9hujHGgXFnar+frCtlLqx9msc9C7qUxvXcfPkb0/UdMDx4+
w8PXdTz3ljrBvfHh31pcz7HOIhZLwnOv8Xw+V+5VyTvxk50Yh4UsVmY/HyvD
xTlsuVEsGudQ+vRPdh+WDE55nHvdYV8h99L2lGOthFtXEq4NwcGT9D0rHPvD
9jL/L8/CZL+8e8cZ+36x5CS6JmfnuFfewuJ7Kd8HAu/6hXnnFe/aYllP+okd
l1o9gZqKJuRmJbPYhgdZNSjglytQUtEOmeKdCf9yDEz9xbd/Wmvq69WLyEHu
7e3txdjYGHsm0rmKhWPbuFgHIftSSSaZZP4333Ov7f0oO97aGmLkP1Nmk1W+
YQy29UYJuJiHhUsPoE37gW+/KumcCS/m3N6Dhcsu8eOvhOzW3/iaMUpEYf/c
t2t5M4vx3RNT4VXupaw5Tq5jm2wutpSOueNih7mYAmEcsbK/ksX4Hklo5Bk4
5GKeSR+GZQPoGdazMWhfmsVJq0fbcO18BAq7NaLXxnA9d6ORPDe469mWc49d
89RWtSj36rVTUOj/dnjdHvP6Oq8Fx7hCH7Yt7mX5HAjT0hy/wtgGdt/wywY2
5vI5zMWRb0Zut97kXCeGahkTL9kYgWH9ezvxvU5yr5s+X457a8ZMuXdJaBii
Yx8h6u5DppjYp4h7Wcvn6a19dQULGPf+gUFyTu5xryd594OJ/BWrML9411s+
Yuf9xfLhNmwViWsw139/uQ+VZr5fqp7KF6z8QlqXdeZ1kH0l7pVMsvlrgca9
VAP89//NeETe5zu6ZUhPjGLb6DgsLp63KOYkY7JlG39HTlUL2Sea7bNydzwf
j8nlRLuemIu2QR3PbtQXR2Ma/qLj9pesw/30atRWlWK/cb2gXy/g1AjeP+tJ
7qXcSft2M7UWA+SaPr95nPdVz40hW4cY0reKimwWu0vfBzgeM8TjrsKBiDTC
zwN8/aMpLeR5rGU5Cej6ndRK1NWWGsfNEZ4bfSd6bTjfLruetR3ISY1l68u3
xTEfsDn30jjZKDY2bj9h5Vm76wHLveQavKjugYwwZQdRa322ha9dyL2UX3Pa
x1CccIXNgcLymCk6Gb+eSKhCT3spe3eKKp/LYzbaWWjM6bEOEYkFqG/vRW56
EqtD372e1Yw7kMfMNe51lX1p3PECAfeqJ4dwgPBs8F+5EM6RMdTbj25y/9Bl
RU8plpN9toefZbG8u++VW3CvY3EOnvDpijOvv1hXjA91U+95TXpE/uZdM361
yZaG/bTWpKf6yKur5An+e+E+1AxPQz5qjG2gy8MNgmXCxgtW4FbBgKGekXnV
uklc+z4I/73oBNrVM3ybrrJvUVERenp6MDo6CoVCweauEI5t42IdhOxLJZlk
kvnf3OLe2f9YygPcy/iiuQBbg4NM5qxYse0i6gbn8ngV3gtjsb4nw34y5nVY
jXV7bpiMv1cPNuM3YzsbbhTzMar8N2h5J/6gbMZ/n96F1/UjPK/QYyzfFsvH
AujtxPdGmHMvjYcVcG+JcSwZbU+r6sP53RsF57gON142CJh5HW7evTFXTtp6
I8hTRrnyTdRZk2t09m4e31etwqx9Uv9FxaDVa0N/n66KTMKBq/nr+c2haHQq
PrIy4flw5xtN/ZjG3Lf21h1hXt9zb6fhfcJM9P1KLJ6Dzut2lr0bGe6Xgw9K
+X5nxfzOb1+y8So6VO9NzmuY8PAuQd2FSwzzXLyqGmZs6nz+XnNWtJHLVzSf
r438YyLcS1XyMJz5cn+7kYoWwruJ148Z4nmTmgkraHBlfTC+WPIn8/PmRx9g
49pSGhUG7h1rZNz784XHqGgdhsbquDZPsa6H4xpcYF1x3vUU4wYwB+s/2GZK
Pce1RpmwrpgM3PsPwreZTcPIf3yRLP+IylHKwG34ZsFyHH1cjo6mIgSR5VvF
A6bMXPrc4OtN7TLZLpQz3FtYWIju7m6MjIzwc7YJY3w5n6+Qfakkk0wy/5vH
udchBnZMdL6KsVEle973j+gtyml8Kh2HRX27Wu00FGrrsaz2eEs1OUsYY4rl
F/MGf9niuklybAU5tnD+CM632qgmzDxlWW7SNlc+JV6upbEGpNx2zrG5+Oup
2Y9QT74jdWbhaFy2u9fEn/N3mJ6//T7T+Yb7B0cgG9Fb9F0+Qtl0wuQ+Mj8n
+YQKMnJPD45O8f5Ye9wrPl+bGDO6x77C/hi4d6sJ9+qmZ/DqzhnGvpxOR+Vi
grAAF99Afde0L2q1DGFrVmPxhkiMEA7W6tWIO/srY+Evllxj2wKeeR1i2/ei
8i3fikhvRc4ysd6GbO7rIPM6KIViECe/WYN/EK6l2hddxDNretRpfvvCf11C
y/gsX6Ymz61bO9bii9V/olsza5V7RWWFewsKCtDV1YXh4WF+7gphrAPn8zVn
X8kkk8z/5lXu9RD/WlPO7a0m8anu8pa32MuVtnvL4pjfUexbu/eYz568cz3m
G/c6K1vtOMK949a4d/ZvSzkY9+CwrLSj081ArtRDqbN2TA/manCLeV3kXjd4
1y/cK8K3WisyZWAXWFdEYpxqjX1dYV5OGnLf9fQOoLtfY1E20j+C9q4xck+a
xke4rSlLUe7t7OzE0NAQn8PXHvdSSSaZZP43n3CvA+zrCu/0t9Yiv2rA49xl
2Rf3+M8VrlONy5Cd14AxnafnQ3OUcT3HvZ7gRO/L/nm6wry2zseSez9acK/C
y9xrzddrj3tFfcluc68I+0rM6zDzWuNc2/zrPOPa412xGIU5uc68zskZtnWg
nhn35ufni3IvF+PLxToI2ZdKMskk87/5m3v9xTzOcYr7DOjd83OHZQOLe/3D
vObX0DPnYu98TLn3bw9wr/vj3FxhXkvudZV5A4B7HY7bDRDudYF3TdnX28xr
zpO+4l5bLOs+L+fl5aGjowMDAwP82DYa60CfkdTny7Ev9fty/EslmWSS+d+8
zr1OMpEvWceX3Os5NvMnG37Kcvx39STH24pzUNvlXif9s1b8vKLc6wTzeo17
fcm8To1V+zSY1zQewZvM62/u9byv+O3bt2hqamJj2/r7+1mcL81pRse4Ud8v
F+9Ln5nUB0xZmEoyySTzv3mNe51gjkBjX+tM5E/u9TdzS7J1z7jKvULe5LiX
xldqRLl3gnDvCOHebsK9hQ7nZbAV2/Dpcq+VvGUu5GNwhnvnD/O+t+A97/Du
fJR97n327Bnz+ZaVlaG6uhr19fVobGxES0sL2tramC+YjnujXExFc55RSSaZ
ZP433+Uxc5wj/MkxluXeHePlmPzN3JJs3TPuxGyYMCfhPp1V7tVYcq+AN+3l
anCYe53kXa9xrwd4V+9x3g0M5tVOeYJ5Lbk34KULHPZ1JZ+DNK5NMskCw9zh
Xk/xqmfiPD0Tg2q9XYl7JZkq4LjXBvuKcq9Yfbe51x3m/dsN5v0gKl9x7/xj
3sDjXo1AFrxrQ1brucXMtrk3MzOT+Xcp+8pkMja+jcb5Ugamz0ga60Bz+gpj
Hagkk0wy/5snuddV9nV/jJPnxl5Zb1fiXv8q8M573nKvFd6dv9zrK+b1Ivfa
zLPrDeYNHO7V2JLONdljZVFJ3CuZZJ+FBTL3Otaet5jQN7lsXeuL/5nP9wrM
c3f3nc0x7p10nHut8K8r3Dvc3Yn09Fy8SS9AUXUv5FMf7XCvbaYd66nGybC/
UNyjsr6fxLw2cvG+m5/ca4MxneXd+qI3OPDzPuw8FokKch9x20d62nDp6DF8
99NJPMvvsuDfwa5m3L16Gb/+dhRHT19DSlG7W+ybkZGBhoYGlsusr6+PPRPp
3G00pxnN7UCfkzT2Qci+VJJJJpn/zR3uHRpTiWrYSVlrx7F21SJyvg/W27Im
V4/hiX758tiBoMA9d3f/BoZGlbwGRxQYGJ4gkkM2OI7e/lF09w6ho3sArR0y
NLZ0oba+DSXltUh+kWqXX3mOtTJezRrzGuZkO24yJxvT4l+Q36N2mXt7y5+y
udoelA97iHn9H9/gNvc6wLyeGcPmB/61FZtgLgd8uwPNmfjvL5Yh+NeT2Lxi
Jf5r4Vl0qem74QjCyPYvVu7E/l+3sH0S6+V8vd56Qz2qH/YdwRrj8r4HleLH
4vn7o1VR7qVj2ej4td7eXpbPTJjTgfP5CtmXSjLJJPO/eZp77bOLc/zgO+51
hnl9zWCfM/f6+53DtgKdey1ymFmJTxDuX5H4J+Pc788+RZd8mnFwc2UW1pNt
Xyw5RVjjnUg7f9vl3sH6l1a417MxvZ7jXtv5yj4N5vUC+9qLx3VRncXxjHVH
tO8w2lWE/14QioqRKYyPNzGWfdOmhYqw5TGyHJHfz9dLv76T7ZvZpmHrSo0c
F7cHk7YOoXli2voxbXBvWloaamtr0d7ezucyE/p8Kftyfl+Of6kkk0wy/5tv
xrX5OhbB0+35O9bB33EW/pS/r719BWScg7lP1k5+Mm5/tbofewjfLg6NwAhh
GOE+HXlxjIcf14yz9aGeGpz+ZRtj2YWLQnDkxhtS5/0c57YW45f1Qax8cehx
xMZcs+De2uwErP9yORYQLVl/AOk1I24zr/vca5933eJeB3nXt9zrBhM7GGvr
Ku9y6i5PZH7ai/GFKCt6g0VfBONhZjWKc5LZ8rO8RqQl3Gb73KsYMeHef666
hfHJ9/y2/Hv7CQv/gIqhKRvHtM69qampjHtpzjIuxlfo86VxvubsSyWZZJL5
39zKY+Z3bpG499OXv6+9fXmfe50Y1+bG2DQq5VgrQgjb3syXiZZrdO8N+w03
Mf/vgsVbEPsiD3HXTxH2XYHVx1OgJOcw0VdN2lnByu8mvsStC/sY8/LcO/03
GtNuMt5dd+AaXqS9xm/friHrwcjp1nqGe73Iu+LM+85jrBs4zGuFfz3Ess6I
+nKTb57kYxasac+VVOYT5urVpkey7Sdj89E1NI6a0gx8TdaXH06CQsDCVtlX
hH8p99bU1KC1tZWP8aU+X258G/X5mrMvlWSSSeZ/8y73epsZvdF2oLFv4HOf
f84/cK6B/7j3bzO5zrucequTDT7dinGb+5U8DCdMuxElg1Os3/T4VUmXGNdm
dGlI+XFWnt83xft2Cx/+buTeIcJMEzi3ehVWH0vmWVat7cMOwsHboytc5l3n
fL3Oca5t7n0nItd5NzC518C+vmRdaxofacKaBaEopXEO3LIV3y3l5Wvbg035
mOyf36Vz4FgfRfX69WtUVVWhubmZxTrQOSmEPl/KvtTvK+RfKskkk8z/5j3u
9QUz+qttXzJYYDOf9xX43Evlfe61nK9NPI7WPe4daM42iWWwpuTz32HxhkjI
pz7w3DvSnMX7c83LqWRVScy/S7lXOdpsjG8IxoHw49h/8Bh+O7CblQtZ2Fnm
te/rdY91HWdeIr1Qgcu8GmfkZ95VKuWoKmtETmYSi22IyaxGPr9cgeKyNvTJ
Z/n91ZMzSPjjJ8a6ByOSUV7bipzUp8zfS+N7G8ZmXOLeV69eobKyks1VzMX4
Cn2+NM7XnH2pJJNMMv+bd7jXF6zoCw4NBPadH9znPQXK+ds+rm+4V064d5hw
bxfh3gKvcK9S3sriFw49bbQo002/x8iwAvLJD3h07GsL7h1tz+e517yccmtv
1XML7qUxvVEP4nAnOpbp/oN4xL6odol37XOvv5jXNf51jl/fQTTPmc66NPYk
yr3+Y9/xoVZssRPjQPVfC/ayuF01qTM20oR1ZFvIn9lsXW1sq7s6he0bUdTv
wLEtuffly5eoqKhgucy4WAfq86XsS32+lH2p31fIv1SSSSaZ/83z3OsrTgxE
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
s+BVV/lXbcG6nwfzqgnnqs2498qVK4iLi2N+X5rTjM7f9urVK7x58wZpaWnI
yMhAZmYm3r59i6ysLF6SSSaZ/y1wuNdQT8b8toQLysdMeaEskW1/Ujdhg3sN
2wrvhbE4hkbFHLu2Zd9ljJLaqmLrmdd3sZhetq1zivl5fyTLq4ODsHxbrAkz
m3PvjsgK0XMYaHzD+iiMSZgbp1cxx71sTNMc9wr9vTm39xL+voyxaYO/UK2c
QHPzAB/3oNWP4ERwMFaHJbFteu00FPq5vuq1UzbX548c5V5X+de1tlg+h6X7
0Ujjtbk4B3LPqeUtfJyDWt7FYrKjTXLbWY9z8Dz32s5jNjiixLcbfsRvB4+L
cu9Q/xD6xnTOM67D3OulXGbuztMWqOPZ3GJeo8y51wH+VdtkXf9wb13hG+z/
aR9+PhqJ8m4Vv324uw0XjxzD5p9O4mlel0U9WVM9bl25jD37juLIuQfIaxh1
mnuFos8/+hykz0P6XKTPR/qcpM9L+tykz0/6HKXPU/pc5Z6xkkkmmf8t0LhX
reD8ad8h5lUF2roHUZiezNhw4dLjgjgH69w71lnEeHbZxrPIqW1HTuoDti7k
WVmlYVw+9fH2kGfc1OwsG+/2pTEWV4x56Li1qxtCrHKvblqNCxtCWKxDTHoN
6qrKcICt0zFzeoe4t+7NNcZF1xPz0Dao52OGg088QuewHKVZSWwMH+0DjQWJ
YuPgDjDGp+cQtTXEwGUi6/5nWW9yr6Mc6x5DU+6l3wNy28dQknDFEFOuoAzc
xfz2JxOq0dtexn7T6ApXufeD57hXZK62Yyf+wBdfrsDG77Zb7Ds5pccfi1Yg
5KqteTE8y70t+Yk4dSMdyinr81bozCTGvG5z75R38vX619dLmVco2+yrdop3
fcu8/U2Z+K9/LkPQ3pPYtHwl/t+Cs+hUzWBCNYKDZPs/V+zEb3u3sH0S6uR8
vcbseLaNauN3P/HL0QWDhn20AjnAvBL3SibZ/DZf5XNwlHupRror8UtwkMl3
Y5rPoLBba2SHNywHggX3CrZ1VWQwxuS+RX9zKAqdirn8DJSvqX932418flt9
6m0Tn7D5uVDujbDBvQb/bhf+JCw69717N97Uj5gck8thxXHvBqMfm60PtuA3
YzzzhhslLMYjI+p3k2vx06l4Fk/M5Y9YuOwMOrXvmT+axm1Qlhdb9z/L+ot7
Pec71mpH8LsxBx1V2INSviw7Zu53WrrxGnkmW84nONT8lv9uQeuIca+j49oc
5t6ZOebNzitlzEtVVtkgyr2X1wdh6+1Sn3Fv3s0f8GXQbavca868BhlieW0z
r3PcO8kpUHy9bo1ns8a972zE6Dor38YbdBTFM9Yd1rzDSGcRYddQlA9NYWy0
Cav/sQyvW7VQqrU4SpZv5vWzOuPyXvxEGPf/+2IvymRTUNFto33YR7n5i3C0
KqZNudeEfcWZV+JeySSb3+Zr7rXOvpaMMTFB54SQY2h02iV+obl51ZOUHWZE
2/cme6nJ80WhnsYkn2fXvWNNTRnaU2h9PTezxLzmovfVwOAI+kf0c9u4e3aE
ziU8QX53yxxmYsewzr3vXORe63G74wod1q7bwJj3r0s3Rfcx597SRxdx/FEO
ku8cw4JFK4hC8Fd8EeSUNUl5ycPfSXkJCpJvGstX4NdLyRjRv2flAw3pWBl0
Bi0Tszz3lj2/hK8OPMYo+f8k/vQOLPhyOdPK1atw/GGVA8z70SRvgyd8vZMm
8hzzOsW9OnF5lnnn5B7zeoZ7VXbE70v+3+sqTcR/Eaa98KgQpQVvsPAfwYhN
r0ZhVjJbfpLTiDdPb+P/kX2iy0agInVGB5rwFVnfe7+WrXOqy4xh+8UUjVhy
r1biXskk+5QtkLnXMxzkG/Zyxp8d2Nznb84MhH44vq/1+98x2ebeGY9xr47o
3IXrjHm/+mYT5Eq9Q9ybH32Asezi0ON4kZWDcwe2sfXI4kGT8gWLNyIuNQt3
Lx5m60Fn3kBDzqW3Kokw7UZUjs7wvt68yF34Mug6xnXTqC/MxJEfgkidn/Eg
4QWyqocd9vUKGdcd7rVgXg9wrzu+XY9xr03m5eQr5p2ra491TSRgVYVai+fX
TzJetaVdl1IxpH5nk3ubcozca+RjS+61zrwS90om2fw2X8zXNvPOHvd6kwV9
x7yO5auQ+Dcw5dx1txbb7iz72udevdPcm5NfhkdPklmsBMezJRX1fHxDflGl
VT4W494vFh9B++QsW1dPyrCHcK0JFy/egsrhGb4POcZtNeMzPPfWWHDvbcip
T5isFz84YIhz0FvGOXiUe/UOMq8L3Oup/Ly+4F61hXzDvSpezjOvuUaHmrDq
n6EoHpqaWx6YsthvXDGAPZSH//kD0upH2ba+jgb8YGTkP5Ob+H1N2VfiXskk
+1TNO9xrnQtd515XOdD7rPn/t3f/T1GcdxzA/6f0h2S0iFisqKRVwOoYQJIM
xo5W/IJgahgD2BHR8qUirUCCJLbVJJyIQMAooUWkyrcA8uXAA06448CFCyGY
Hz999rndvdvvu7e7t3fM85l5j7e73N7eycBrHj77POrvT8P1rDEh/lX5vOx9
DYqXSLnXB645L3KvG8YmXiL3jiD3yt13tgE7diZj39LzS9PbHp8f9qe9h/ed
v1Ck2AshdG9bZTZsTSrn+hqWqGUoVThOZ6L7DrLuDrjVPavJvcJt+9wbfo9D
1JnXcvdqt6+u8V0V87565YauR8+h2RHobahydEMr97gLOh4NwovZH3nPGe7+
Bh3njwm/szcZ/1v5cEr0GsS9pEht7ood95rpGuLe2EmkPgtt548F996s+5Ib
2/2qsQVK/1qFH/929z50nkXD7hUej0utkHRvnci9Act+W3lcs3ul7Su1PoVG
977m+5dn3jDvZ7PKvJEZ6zXa52uyeZXGeJ2D3DitUt56+yPoFIz9umdc0HTH
AbWfN0JT5ySMPGuVdS/nX+JeUqQ2ZUXCvaE21OYbq+1krn31uVfv9djtzmhJ
9HwWZrs3dJ3iZSX3TtP3zCH3DiD3tijNM7YBBZ9extaN274LtsQl4seNTd8q
mjfo3iTN7g30QfwR+r1+7vW7Ggq4nl7OvXMU59ja08kQl1LOObf56ofoHIXg
Qu9ZfR4zreZVca9ort7w5y+LFfPKu9ca+xp1rjBDHZ9h0/7Hye9tmHH2hjwO
2Li0dTIwPuxxQ8nRdDhe2sY7V/2FLNz7INUbEcw6ukbiXlKkNltFyr32m8k6
++ozr55rsvtzI5GLkn3Nd+8SHqd1TjP9vQOjyL3K85jRvb3Zx3K4cd+Tpz9G
+9+E6d5SWfe2V+Uy9719DM1dz+CbW+V4rDfhg1pYoNbB+dyB52o4mFsF3f2D
0FB2Bm/HH67g3PvkziW873J9M/RPLKrY1zz3SptXv33NtK495jVjbge+gc1w
rpR7f4V829g7DS03i7BbO3F/7wC+dy3nZicM9HZAIu3e9knuebcLs/DY7vHS
u/C0bxRqr5zG22lFD1ReM+BeKfsS95IiFbsVifva7E847tX3PvS7V+267P7M
SJSi1O8QjnspZn7d5RXaloL12sJwL53ZV0uQkfURpBxIh8npeca9yval3Vsa
4l56PDc+vVq2v5e9r+0cM88DnT0flsAQM2/ZMuWHxrLz3FxlcfvPQuHZTN54
78LE/+DYzkR8fD+9XoaG9dmsd682A5vtXUPuDcu7Vth3zRTniu5Rm3NC7t6d
XD/D0fKH3LGv0fcYu//t5GJ45loN9jh43FB27ii8RfdAMDmU1wDjHj8soONs
lNwrtC9xLylSsVvR6F7X1Az6/S7O7OLPYZ7TiHsj5VDi3VgLJUq47n2DY7Z7
g3kjEeVxXwqdRyrC12L7exeQTb3eZXAvUJJrVHg96D3MehTXZNO8JrHiOhVW
uFfewFFhXkPWNd++Hh8bc91LZ2FxFYZHnPDD2KLo2NSYC/qHZsG9GHztUNfO
uBZgZHwOxl1LvP3CKNmXDXEvKVKxW4bcS6/JIIxBK9JrkBUy65UJU/ZYvO6r
9phhX2JTEn6E9g3sF3/PpB3MgEff94j2s+aNFvdSvEjbN9TAzdcOwzvbirh1
KtTWZjNs3hD3qtvXCvfy/WureWXXobDPvUHzit0rPaZqXZRsqxbiXlKkNm9Z
617tZmT7BCjk3pLUPZBy6R64XnlhesaDM4l+58/7jJjTTPcS/5IEo8W9W+J+
g3M27xOYmJrj9kebe/n+VXfveF83tHZNBF/bSvdSesyr7F5j5rXGvcbHeNVc
apF7fcHIuVd5TDW6zKvFvsS9pEjFbhlz7y+ChGff0PvCWPdmVXSJ5kmg4/PM
QP21S7CDGQNOzbwIHaM+7lyzkwNwIfsIM0b8Lpy55oDZlZ85j/S23YbUbYno
WCJsT8uBpt45DddL7Eui/P9NyX493710EhL3QPXNeuzbyLhXaF9l8wYid24N
Mc2865LeNepes8yr6N4Im9ecNdjCs660eZXda4V9zbCuon1DQtxLilTslrnu
/UW3e4WuZd17pOKJpHv/eW4fNm3BZ/fx3OWp6PGW7X+GF+hnk3emH29v3XYQ
ah2P4XZ1Af7a3Z84YMm/AX33yrB3f5dzFe42NcKJ1N1oOxnaxl9ruGb73Sv1
eURT7Lepfe6V/3qxe9mk/iED2r/7b4Tda7F5zXYvxcageSmzzGu+e62Zr8Fu
86q71yz/WuFdtesj7iVFKnbL9D4HRfeqW452b1n6Xvg1smt6ZjbOexkZkHSg
AIYW/DDc1wc9wx7u+c4nX2DndrvXoLMuHz/umPRzx+9V5sHuzHIY9c1BYdIu
2JV3h7se32snvI8cnHWjW5NxV8l4L4muKLuXnleXzuncC7iPxzz3ytlXa6LA
vZRcwnev2eaVda8NY70Rc6+ic6Xda9SYdnmXuJcUqc1ZRty7iowrjB4LSo0Z
0u69gtybkHYK/nK5jEkJXCz5AsZ8dJ/fEnQ47kLRxUL406l8OJSWAlvjM+Ep
cu+/iw5D/IHrMI9+dwv94XUPMv0NyXDyfD56bh6cyDmGx39DLaxkXuJeEn1R
d++2hCQoq/wHvk89Otxr0Lyr+s0rXI9N3rxa3Ssx1muKezXOY2aDea10r4eN
Zu9qH+sN17+6zrdIZ53JT8rReD3EvaRIxW6Z6l5sQ+W/f6v9rZztc3j/hrjP
4fWKF4rRMbp34UhOMVy9Xg/FeR9w7m04t0/CvQF3sO6le3qv19TB327U4vy9
5hbUfPUUtLpXbN/I+mlzWlvb+4vNXgp5957IyYPRcZcFfQ5G7GvUveuB6PZu
6HoURtwrY15N7jVhjWKbzGuWez3C6LKuee5lveqRiJJP+c9fV4l+/7Ih7iVF
KnbLkHsFHpRzr+asKd/XtugegneReYuaxjhXDD8o59z7sOYU95g1x/O22/Bp
2T2Y8k3CSeTePcVtPGO9nHDCi5fq/b1899ppws1iX31907HbRyx27+9TDkFr
eyc+bs19bQL7rjDRad7ZqUlodrTA/ZaHcL+9B0ZmqKBr1aJzjJe/Bpv6mK+u
/gaLzGvEvdK+9YdtXqPuNce6xnocgmOz/IjMq2ZU3viulvwE80y02pe4lxSp
2K2oce8a414/cm+ajHvnRyANuXdndik87vkB2hz1gXkbGOu6x7/H8zxsT8uH
lp4h6HB8jrYTISGzDrz+Deisy8N9DSeuNcIg8u6XV3Px9pl/9as6TPUerjUm
EbOh3Z6zyrvi96j9Prpo/FyC7o3fkQSVVTXYMuxxXe59ybh3ELm3VcK9ojnE
2Gzwo+Ld5ZUf4UFtMbf+WiAJONWtw5rdu0xR8HXFZahuGdbpXmX79rU1QP6V
Rpin52dQMO9SaCLhXsPm9Uvb1yz3StyPpr1XVyWLwmgcm1XrOwg72t07j6PP
vuG69//P8WUt
     "], {{0, 208}, {702, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{403.375, Automatic},
   ImageSizeRaw->{702, 208},
   PlotRange->{{0, 702}, {0, 208}}]}]], "Input",
 CellChangeTimes->{3.655549678942071*^9}],

Cell[TextData[{
 "Selecting the style ",
 StyleBox["Title",
  FontSlant->"Italic"],
 " will format your input according to the stylesheet\[CloseCurlyQuote]s \
definition of ",
 StyleBox["Title.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.655549750295136*^9, 3.655549790472487*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 52}, {247, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{219.67578125, Automatic},
  ImageSizeRaw->{247, 52},
  PlotRange->{{0, 247}, {0, 52}}]], "Input"],

Cell[TextData[{
 "Notice that as the cursor moves around a notebook it changes state - a \
vertical cursor indicates the cursor is within a cell and clicking will \
select the contents of that cell. A horizontal cursor indicates that you are \
between cells, clicking will provide the ",
 StyleBox["cell insertion bar",
  FontSlant->"Italic"],
 " (or I-beam) which will allow the creation of a new cell."
}], "Text",
 CellChangeTimes->{{3.655550042173123*^9, 3.655550144010147*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shift+Enter to Evaluate", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.655538789194545*^9}, {
  3.655549265541201*^9, 3.655549269072694*^9}}],

Cell["\<\
Shift+Enter is used to evaluate an input cell, to demonstrate this type Hello \
World into a new cell and hit Shift+Enter. There are three things to note:\
\>", "Text",
 CellChangeTimes->{{3.6555498217920303`*^9, 3.655549865172728*^9}, {
  3.65555015281138*^9, 3.655550168682427*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Muw7sWWQOnuYQLR2066P82jp5mskq9geXQNp7z3kOVJxxhFa/EkFtYYwiGvr
KhF6OeWXK+hCu5Ha6wpp/Vz2/Vcfkd5NiNrIbDaT1cfAqq0hi1J+nuVTuwbc
b7WS1VfmNEgnPvzvQtvvK9VIY8DWNrpQnCu066K8G25+Wllegcd/rWRWOF8g
P2Xac/8PpfxmV9haHQAAAAAgnnDVzbHSzLZ7OqGVNxZ1UL/FSk3lJeL74ZZR
xfRW3Wl6dnM7084t9OoLxdRqecC2jlNrXR0tZsd9qZH0ts1ynza8cpCqAw8L
K52F9k1Loaf2tzq2tOz4n5SaKetQG+lPf0lPcl1tt2U5VV6xC2btF361pq/9
5pYSWjbNmffkxZmkVxi8tfLjmUblKrc6+wPaVtZL9OgmzWI6+oJZ8lNXuMHL
T7O9jAV8/JilffWzo1TNyiOnWZR3S5WfVsNl2rRoqjhm1rLPJJ+f3QnNDAAA
AICkQ9bNsdLMDbn76aWdbe7b9vJtHdR05BQdrJc0cAP/fK2TtszPoedm7aFj
Oj0tmnuB+vlOazcdzPhOaO3d9fIYtZV2LcgLUTMP0r5ZTP+9kE4niouZnaBN
c5mGzrwm9hrPrRI6cduZRjLbrGTQHhHj0k9lXnHLJSTNfL9EaNxpq/eT3mgi
Y8tlWj+T+fJ3K6jFYwjY1nacUv7mRaozNjjjIkau08yfvChiNVry3xR+bjpa
Q0aTifQVe0Tekz+vksrR3kLV+e9LWvknr9OJ6joq3reR9lXeCexn33lJizM9
f4E9r5zYMV/K50VoZgAAAAAkJwODozHTzGXpu2l7vfuYsrWhjF78pJ602Ycc
48by5/66s/TaV81inNmhmQUP6MArOSwvWTNbJM3c20EbFhykxUvyJGOf1xYa
Anhl18xMj6atTxNz4F59UtbMfHw2RYzPrs/Opk2bNtG27I0060ds2z9sdovl
DUUz63NnU8p//ojcPBwsF/p0m6bfPYORq/QU87GgcANNm7WYZj35NGXnbhTa
2czKkM3HfT+qcjvEULiEUv72LYf+tmq3K+rxQH62cz3u4Wf1xn9HbAYAAAAA
ko54WDejdttuSitxDzzoPHWUXvqqXejk7R6a2aLjmrldQTNbaZeSZrY8oP6e
QepxsX4Rz+GPQSk2I8cZo6DnsRkZ18Q+oUWf+YiKS4vpxIkTzIqptLSULtTd
cYsZtgbQzEr7dew8ntqba+NpQjN7Dpr3Sb7wseSau+zY30ljvW99x2qD7ePz
Az9z18xijJxpZr1DM0vxHf7CvpX8rNv6vyjlp39x81P4Ds0MAAAAgCQmVpq5
p/o0PftCMTXJctBioLWzJO2r3bufXsvrFptPrtoj9LOFjzPv7FCvmXs76MOZ
OfTSK3skY5+XHgowzmxro/VP/IhSVn8v9J/NaqLidf+NUlb8ILSlGAv+mxfp
hL5HJDcbm+lE9gc0l6W32tMbjSZqOb1K6EoRY2EwktmuU/3tF/EWPKY4p4yM
VhtZTc10aOm/itgJvZewtY95//hpEb9saz4ojpVjSOq2Pi/2Haq+Q1ablYwN
RVIMBysHj3U2mZgP5z4V48WePgby06zd7fDTIOI+vpZiNX71EbXE6+J5AAAA
AABhErt1Mx5Qbe5REYv80oKD4n85doLPD+Qa96X5e+yxyqNkbauW5gjW6b00
84H5Uhr5e6jxzC35f3bMh3uVacJDC51z6LLreYaDVLx1gWObsBeWU0HdXXG8
Y7zXw+Rx4kD7DZe/kdbtkO2XK6i0Rbkg+r3/l1KePWgf2+0SWn992V373kEq
9fBz2upvqZ1r2pGrUjyJDx/U+KnPX+vcbl+bz1WzAwAAAAAkG7Fen9lmGaKe
e4PU7zlGabV6x1LYxll6vm7GWeq0+oizsPbSlpDXzVCJ1UwmE19rLhpv8bCR
2WQS+YeflVmMKSutIxc2ch1EPmcAAAAAgLgj1po5aKzdlPVxHi12WZ/ZZSed
DGN9ZgAAAAAAAJRIOM0MAAAAAABAlKm61OVz3YxQ9wEAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEhedPomVaa1m6/t
nhY4z2a7qTu/+zHNIZ4zNAt0Dl91EJxPzaSmTm7duhVkXsp1NRH1Fq36Vlv3
0SlrM6ltq9DaT33bxVM7BfJnYtontHZR95vy1f6Bf1/x0l6RaudgyhLs7zO6
9eXdduHkp9xvvPtDpOpfTb2qK7+asnj37Wj6H9hv+Bwrnz3ThOurmr4cbP/1
9C1YP/yf2/2c93sHYAlk/DcXax9gaL9kMrQJLBRLpn6TiGWBz7BYmGnQAksg
47+5WPsAQ/slk6FNYKFYMvWbRCwLfIbFwizDVlgCGf/NxdoHGNovmQxtAgvF
kqnfJGJZ4DMsFmYdHYclkPHfXKx9gKH9ksnQJrBQLJn6TSKWBT7DYmGj4zZY
Ahn/zcXaBxjaL5kMbQILxZKp3yRiWaLlc/qeImHx5PO3331PLy9Ko+nzVoVk
/FieR6zbLBlszPYAFkXrNfXTdZ2Oqi5dFna25JzD5G18P0+nJj/+m4t1mR4n
Q/vFn6FNYKEY+k2UyzI2Jv4fHByk3t5eh5nNZrf9ceUzsy/zShyfD5y6RDMW
fyrMV5pY+Cxr3xVrN9Paz7OCMn6MfHys+1lS2DgsWtZnGqDSsvPU0dElPnNz
HeOXt/H9PB3/HChP8ZuLg7I9Dob2iz9Dm8DQbyJv4ZZlfHxcaOPGxkY6ffo0
ffPNNw47e/YsNTU10dDQkEgXLz7L9vvlX9Azryxl/28Wxj8/O3eZ2M6/y59j
6TPXu4veTw95TWF+rNDMcdDXYml97Hn4xo2bdPHiJaqqukhaXT3dN/YGmY8N
FiXj7dHR0akqLU/H0wdKJ/3mYl+2x8HQfvFnaBNYKIZ+E72y2Gw2GhgYENqY
a+SCggIqLy+nyspK8f/hw4fFdv6d62aePtY+uxrXw1wXy1pZ/l/+LOnpL2Lq
c+Q0c+z7WqyMa+XCwkI6duyYl9VpNOzZeSzmPkbdLPfp4vlzVHDiHF1pNrls
76N6XQPVNzQJa2y7T8PB5Dtyh3LWfkWnmwfD8u/ipcs0aLaoSsvT8fSB0qn6
zbF6qde1Ud+IS/73Wulaw10/9TBEJbsyKfNcW9jlbyw5SBnFbeqP6dfSktkr
6FBDePU9Nt5Lh9LeolUnWyLSvx6X9uvTFtCUOVlUbwm/zsK1lvPf0qrtF2gw
3trEw9T08eGe21SwK5s+3l1BBhV1HHY7oN/Efb+JVwu1LFz/Dg8PU2lpqdDF
FRUVdPfuXTGe/PDhQxGP0dHR4dh/+fJlsS0SujlS9f/ysk0ObSybq17mxtPE
sp49NfMz3D8VBs0sGdfLSlrZ1Wpra2PuZ1TNcouW/G4epT6/gua//TZNZp9X
2e9hfXUHxHdXS523U/21nWm4GeyYjGsmP+mGaN8bb1Bm/bDPNPy6OzQ8ouqc
kbxO99XtEmW+2O/cduWr12jSjP103+dx/ZTzh3k0ZfsNleX3bdd2LqLUL6+p
P6b/FmWs/opK2nzXpS8bvplHk97Mt98r+6kwazNlVqgbTwpkj0v79TWU0Kp1
R6hlxE+64Rs0+/k0uuYvTQTsyq6lrJx5PssZqzbxNDV9/BorSyqrs33n9GRQ
Uceu7eDer9UZ+k189pv6gs9pxvINom6nrs6l8+ePis+pszfS+XvS2BZ/Bpsq
7mfvUPpJvXSs+SatmpfG7m9viL7Qx9rqdNYn0v3M5dhIWDiauaGhQehhrotH
R0fpwYMHQi/zffwzNx63UVRURPn5+dTT0yPp6Rj5zC3tq2M05/1t9L9fXyn0
8bz1+2nhXw7Sor9+I/6XjX/n6bhu5mn5Z37sRPuMcebQrae3T2ji48ePk8Fg
oPr6eodOrq6uFs908vizwXA3YH6xnoMYqg11VlP6xiOkH5G+5y//I036qIyG
2OdebZ7Q0jUWaV9v81npGrXxslseAzcLacbstZSx5a/iOjRjxX7S9IzSqPm6
SJ/J7h08ne70HvGdp1l54BINsGtXbtpbDj2+5NtGRR/5nBILu07zzxUXKmnx
4sVexrcLX9h1mqcPVG41826l8qeRZsS5TXdoFU2aU0C9/HvPTcpYLj1nTHln
J9XwMrMyZbNngOm7b6gov+c5h6h8f4a45k9hdZi9YRlNZ/dgvq9bV0Lz//CG
OHbOl2eoi6dn94KVs1fQkrVSvWdXa2kNuzfkNxipaMsymrKuTDoHT8fuIdlX
TDTEfU5bbr9frKV8nUm031T5mWj6RqrpH6LCDR/QmpMt1Hz2a0qdk0V60Qek
9pp/4Br73Mt0tf2+8/w6lo/RZz0+Lu030FREs+dlkc4yQPlrl9GctV+JNuO/
IT7+KLWDvZ5Ze+ytH/RZj71tVbTyjbele3/eYfrTvC2sXeTfWhqtZG3Iy1bT
f58d/xdHnlwn8OM1+951ljOO2iTYPq7LS3dcH2av+4EMjjpm+5iGmvrOF7TS
3oZLdleI8srtcPW6Z7/21eboN4nQb/i9KZVd03ott2kNq49Jc/ZT+0gf5af9
kaYfaKTeugOibOWdA9R9s0iUq7znASt7gficr+ukrnt9VPHVYpr03ilRRl3+
xzTpT6cUrsWhWajrOfDx5LKyMhF/wceXuT7m/7e0tLhpZq6RXdPF0mdu2wvK
xTw/eTx55/ELPtN+mnPSEasxfeHH4tiJ9jlSmjkS9Z5odl2rdWhmro85165d
o4sXL4rP/BlO1syXVPzuE900p7+jzKzNkvayX+sdmrnfma5m51J2rTpE3S7H
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
5ofJHt9yuoG1ga96ZL7xdvrDFipiv7v0P75h1zTeZarJeVccr+exozzuxp7O
Wc74apOg+7i9jFO2e9elWxld2so1jXu/9tXm6Dfx3m80zN/ZB/RSvbB71hTx
7D5OQ7dP0ZTZucLfoTuV4u8TUvz6Fqq6O0qjfVdp+vQNpB925tVe7pzbzscC
dKJO+kW7ptuvnZqcRTTpvVLWZ/j17wdxH6zxcX0Ltiy+jMeG8jmAXI+4bud6
2mKxCOOfQ80/Gj67zgHkWvjN9ftp8V+/UbRX0rYLzew6B3CifeZ69z/+9DHt
3JcbtF7mx/BjJc0c2TZIBLvT0enQzCaTiYxGoyN+mT/H8Xj777//Xny/dasp
5v5Gz/qpcMsHzmsIu67urZE0MZ87IW+X9/Frv2cesmae8cc3HHNSipoGxL1j
jkPD9bidZ/q6U0KXj45Z6Kx9Lot8X/S061oda68Ole3aIdIHSqfmNyfNHUnz
uHe+79CZ3doiUT55Hk32RYOoz70u987A5XcxpmNz1y511GE6e0YRemLMSpqi
Hc52+MMGKu8Ycsl/QDre87v5hriHpK4+49AFusKtjnxWMl0il2WoVYoh5W1c
ZXIpg72P7BV/g95COvneY7wh7slyXksO1Ej3l8e4/SRdkubQPjMO1Hts523c
Thn29WkyeL4+6nGoo5bSly8T7bFy7Yce2sdZpt6bpxzPM3PWbqYp9ucj13LG
U5sE3cfHJL3krpllfedSRntbZesG3NK492tfbY5+E/f9JggbUqXprTRgtvo+
jj0PuV7PPNNGoyz8vX9cc3DdzPUzX4M5kvUS7fqX15rzXJvZdb05niaWPru+
y0+2/bnfBvU+bZ7HRLRLvBlfd5m/v0TEXrB+Ko8pyybHbvA4ouGRwL8Xa4Kb
hV2v7xl7qT+EY3uuS2M51ew53MquOxZ/52HXon52/Qkq/z4TnSsto3Z2Deaf
uQ1bRx0mb+P7eTr+OVCe/DcXmbqzUr/Jf5mDLb/FVx2KYy3h+zzMfB6OTL/h
/gTK63Frv/DrsZ+Ob/mEVu6qoE62ve74587fl68yJNhvKup9PIJtjn4TP/0m
3i3csnR1dYm4Zq6buS7hf+/ma2c0NzeLdwDKJm9zNT4OHQufZfN8p4mrVpY/
87jmWNfzF9t3i3dhy2PGsl5e8tGGgO/P5sfGuo/F0syWITp/vsLn2swlJSXU
1z8Qcz/j3fpvnaLZ7+wkrc9rc/hm7O0jzXUtVbLnHG5nzp51mLyN7+fp1OSX
TNfpRDC0X3DWVn2Uprv8fWdbSRPaBIZ+E+cWibL09vaK+Awe2+z67uxAxv8+
Hiufucma2fvd2Zvp/y3PcLw7O17qmWtg17HjWPedRDH+bKxn9V9WXk6nThWJ
+X7nSkupnj3f8TV1VOc1CkskE7+5OPADhvZLFkObwEKxZOo3kSwLnwvI51ep
Nb7eRix9/jKvxO07X7eZm780saxnPmbs0Mtx0HceNxuxjsESyPhvLtY+wNB+
yWRoE1golkz9JhHLEi2f0/cUCYtXn3P2fiPiMWJd/4+r8fhoWOKY9Jwaez9g
aL9kMbQJLBRLpn6TiGWBzzAYLJDhN5fYhvaLP0ObwEKxZOo3iVgW+AyLhY3A
EsrE33biwA8Y2i9ZDG0CC8WSqd8kYlngMywmFgfxITD1lohxZzC0Xzwb2gQW
iiVTv0nEssBnWCzs7r37sAQy8d7HOPADhvZLFkObwEKxZOo3iVgW+AyLVRsC
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIP74/wyeoiQ=
    "], {{0, 151}, {
    717, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{717, 151},
  PlotRange->{{0, 717}, {0, 151}}]], "Text",
 CellChangeTimes->{3.6555505771557837`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Output is ",
 StyleBox["printed",
  FontSlant->"Italic"],
 " in a new cell - which is grouped together with the Input Cell. Both these \
input and output cells are grouped together with the Title Cell above."
}], "ItemNumbered",
 CellChangeTimes->{{3.655550264267335*^9, 3.655550353042264*^9}}],

Cell["\<\
The input and output cells are labelled In[1] and Out[1] - it is important to \
understand that the labelling is temporal and not spatial.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.655550264267335*^9, 3.655550426130355*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Suggestions Bar",
  FontSlant->"Italic"],
 " is displayed underneath output cells and suggests a number of operations \
that may be performed on the ouput"
}], "ItemNumbered",
 CellChangeTimes->{{3.655550264267335*^9, 3.655550508739127*^9}}]
}, Open  ]],

Cell[TextData[{
 "Shift+Enter is how all code evaluated, it is the most important keyboard \
shortcut to remember in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.6555505923361807`*^9, 3.655550628584095*^9}}],

Cell["\<\
It is recommended that different styled cells are used to write prose, to \
include comments in code chunks the syntax is (*these are comments*)\
\>", "Text",
 CellChangeTimes->{{3.655550631305449*^9, 3.655550683261052*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
fU/IWnX572yUqujA5XtlvdKSVyv+Xvy763SqtIt2fSDvv/fjmz65RKKVpaZW
j64V8R+VnhgInRiX6prEvk8PNwk9nHLfVdr1eY2cp8THx6u0YzduraMnl8ll
uufVDqZn3VS8s0Y7F7f7n78s5/Nku4/eDeXn/Uwva+PZy/21cnMx0z/7zpNP
pDLTg9aaJurtuib0VlF9N7VZrdSrCB9H6R5fTaRYmWNKaSJFKzPLKSyiPEWf
VQrNPSb/3s7+Lii3kL2+hgqUv8vauHeSZ39lC/W2XZP13TeK7hptlDVgRi5V
Wu3Mz7OUxf/efZx6TQ1jSkyvZTItWUiW5jayln2rjI/L8SLjXVcoh2lGrVxM
O2YL/zOofng0hO8hUH3n5ysoprKiPOU831AbK5yj7JD2d1FxEeWouvZYFV0t
OqT5k5ct+5edlyfyyzhjp/qg+1tC1ttg/WkvDV1AhayOPHE0EpXpdbCwXJIf
E0O0GaPXbqW2vi4qzuD+NFGfo46sDt86kzrOieeGtkSdIwAAACChGRmdglYW
eLQyH1teqIzxLv/TkNi3S9n3wxds9MnWRtr4hqwVuVa1ew2PRqKVVX279pjn
Hl+8WY4JebvUN1bafcPhGTO+v1L7nHLfFbIMO+nVe+X4jBJ1+pt7SNsmxx67
tXJ+qebtdpP+128jP/k24ecRZTyxtV3W2X5aWYktPukbfzGtxFfoLc/qGT8d
bj4ra6mSFpoWMQNeQpVp5Wyh8WrFn+pv92WOCXZgnaIXM6igqIiKi4u18ciM
M+3ExxftRZnKOTMoOyePCgoKqLz+ppKXrG255itixxYXF2r+FbdNGDemDzPU
W3+JCnKyKSuLmXLubK/Y6pnei/K24gZF683QNC9eSN+D01vzrZK2Sds27rjE
fDhOXVKPHAvDtKJdDdqd8Wxrm+gUzx85l29Sn+Vboad7Z5ju5xr1AHvWmQm+
vy1kvU0repfp9mlPG3rqZZo9V8l6vMg+JGJQPPM6g7cZj/PJM+hP6QeqfOI8
ppV61/+OAQAAAJgFWpkja0iuD23iljpET97Lx5WH2ecp2qWMzz66tY0K8hyU
y+zQAaaZ99700YmNB2q88vDHaL+qlVPPeHRx5VZ52+pjunFFqU/4JevoEbrw
ebknDoLp4hcUXVyujUeP0lv3es/T+14uJ9PW9iC1EczPTy8qSmTspohJ4WPS
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
5kPxB2J8WO9jKD9d1r2anz0ivuNPckzGT9+h1kRdBA8AAAAAYJbM/ToYM3Tl
4FERa/z48wfE/2qMBJ/3x7Xt46sylFjkKZI6quS5fxa7n1bOWiWnUf+ONF65
NefftXluTzEteOgFz9y4tDqe4Sid+vJ5bZuwR1+jXEuvOF4b39WZOi4can9P
5dfyOhyq/WQdlbQaF8S+7/9SysMHlLHcbqHxPzzXq+wdpRKdnw+8/Q05uJad
vCzHjQTwwYyf9pwNnu3KGnveWh0AAAAAYL4Rr/WV3WPjNHBzlIb1Y5KS5B8z
4Z5m6fk6GGeoSwoQTyEN0taI18EwieQip5OvGReLt2+4yeV0ivxnn5VLjCEb
rQc3a9Q6iH7OAAAAAAAJR9K8i0S6RTvey6Y1Xusre+2k47NYXxkAAAAAAAAj
kkYrAwAAAAAAEGMqLnUHXAcj0n0q0MoAAAAAAAAYA60MAAAAAACAMdDKAAAA
AAAAGAOtDAAAAAAAgDHQygAAAAAAABgDrQwAAAAAAIAx0MoAAAAAAAAYw7Wy
zd4c0KyKBdqut2B5ydaimJm0+mNaIjxnZBbqHIHqIDyfWshMnVy/fj3MvIzr
ai7qLVb1bbbuY1PWFjLbVpG1n/m2S6R2CuXP3LRPZO1i7jsVqP1Df78Spb2i
1c7hlCXc72ds68u/7WaTn3G/8e8P0ap/M/VqrvxmyuLft2Ppf2i/4XO8fNan
ma2vZvpyuP1X71u4fgQ/t+85uVbuGxyBJbjx71q8fYCh/eaToU1gkdh86jfJ
WBb4DIuHca3sHB2DJbjx71q8fYCh/eaToU1gkdh86jfJWBb4DIuHca08NiHB
Etz4dy3ePsDQfvPJ0CawSGw+9ZtkLAt8hsXDuFaWpqZhCW78uxZvH2Bov/lk
aBNYJDaf+k0ylgU+w+JhXCtPTbthCW78uxZvH2Bov/lkaBNYJDaf+k0yliVW
Pm/KKBSWSD5/8+139MvVqbTk2dcjMn4szyPebTYfjGvl2+4ZWJRt0DlM12w2
qrhUKezM2WLN1G18P09nJj/+XYt3me4mQ/slnqFNYJEY+k2My3L7tvh/dHSU
BgcHNXO5XD77E8pnZl9kn9U+Z524REvXfCAsUJp4+Kxq3nUbPqMNn+4Iy/gx
6vHx7mfzwYRWnp6BRdGGnCNUcq6MOju7xWdu3mP56ja+n6fjn0PlKb5rCVC2
u8HQfolnaBMY+k30bbZlmZ6eFpq4qamJTp48SV9//bVmZ86coebmZhofHxfp
EsVn1f71tc/poSdeZf9/Jox/fvjJtWI7/1v9HE+fuc5d/camiNcE5scKrZwA
fS2eNsSeg+vrG+jixUtUUXGRrLY66usfDCsPWSu7YVE03g6dnV2m0vJ0PH2o
dPJ3Lf5luxsM7Zd4hjaBRWLoN7Eri9vtppGREaGJuTbOzc2l0tJSKi8vF/8f
PnxYbOd/c73M08fbZ2/jOpjrYVUjq/+rn2Ud/XlcfY6eVo5/X4uXcY2cn59P
eXl5fmaprWXPzLdN5ZOUWnmsjy6WFVNuQTHVtDi9tg9Rna2R6hqbhTV19NFE
OPlO3qD0DV/RyZbRWfl38VIljbrGTKXl6Xj6UOlMfddYvdTZOmho0iv/m+10
tbE3SD2M09k922l7ccesy9909gBtOdVh/phhK72yYh0dapxdfd+eHqRDqS/S
68dbo9K/7pb2G7Lm0qKVO6hubPZ1NltrLfuGXt95gUYTrU10ZqaPTwy0Ue6e
NHpv73nqMVHHs24H9JuE7zeJapGWheveiYkJKikpEXr4/Pnz1NvbK8aPv//+
exF30dnZqe2vrKwU26Khl6NV/79c+4mmiVXz1snceJp41rNeKz/E/TNh0Mqy
cZ1spJG97cqVK6bySjqtPHadXvmXZ2nhI+to1Usv0b3s8+vKvWvIkiX+9raF
z+42f01n2m0pO2bLVWeQdOO0/5lnaHvdRMA0/Ho7PjFp6pzRvD4PWfaIMl8c
9myr+erXtGBpJvUFPG6Y0n/1LC3aWW+y/IHt6u7VtPCLq+aPGb5OW97+is52
BK7LQDbRkE0LnstR7pHDlL/jM9p+3tz4USi7W9pvqPEsvb7xCLVOBkk3UU8r
Hkmlq8HSRMFq9rzKypkdsJzxahO9menjV1lZFrI6219spx4TdezdDr792pyh
3yRmv6nL/ZSWvrZZ1O3itw9SWdlR8Xnhio+p7KY8lsWfvRaL+9nLtOm4XT7W
1UCvP5vK7m/PiL4wxNrq5I735fuZ17HRsNlo5cbGRqGDuR6empqimZkZoZP5
Pv6ZG4/PKCwspJycHBoYGJB1dJx85pb6VR6tfGMb/e+n1wtd/OyHmfTCHw7Q
6j9+Lf5Xjf/N03G9zNPyz/zYufYZ48qR28DgkNDCx44do56eHqqrq9P0cVVV
lXiWU8ebe3p6Q+aXbOtgjHdV0aaPj5B9Uv4757Xf0IJ3ztE4+zxozRYaunpM
3jfYcka+Nn1c6ZPHSEM+LV2xgbZs/aO4/ixdl0m1A1M05bom0m9n9wyeznYy
Q/zN06zPukQj7Jp1MPVFTYe/8k2ToY98rsgYuz7zz+cvlNOaNWv8jG8XvrDr
M08fqtxm5tHK5U+l2knPNtuh12nBylwa5H8PNNCW1+Tni0Uv76ZqXmZWpjSm
/ZfsrTdRfv05x6k0c4u41i9idZi2eS0tYfdeMWfUdpZW/eoZcezKL05TN0/P
7gHrV6yjVzbI9Z5WZaV32T0hp7GfCreupUUbz8nn4OnYvSOtxknj3OfU15T7
xAbKsTlF+y1Wn4WWfEzVw+OUv/lNevd4K7Wc+RMtXLmD7KIPyO21Kusq+zzI
9LRyv3lkI8unP2A93i3tN9JcSCue3UG2sRHK2bCWVm74SrQZ/w7x8Ua5HZR6
Zu2xr240YD0OdlTQ+mdeku/52Yfpt89uZe2iftdSaT1rQ1626uE+dvwftDy5
PuDH1+7/naecCdQm4fZxW/Ym7fqwYmMR9Wh1zPYx7bT45c9pvdKGr+w9L8qr
tsPla/p+HajN0W+Sod/we9NCdk0bHGujd1l9LFiZSY7JIcpJ/Q0tyWqiQUuW
KFtp1wjdaigU5SodmGFlzxWfc2xd1H1ziM5/tYYW/P6EKKMt5z1a8NsTBtfi
yCzS9Rn4+PG5c+dEnAUfT+a6mP/f2trqo5W5NvZOF0+fue3MLRXz99Tx493H
LgRM+0H6cS0mY8kL74lj59rnaGnlaNR7stk1q1XTylwXc65evUoXL14Un/mz
m6qVL5n43iebVlat9uS3tH3HZ7LmUq7xmlYe9qSr3v0qu0Ydoltex/J04pq7
7hCdYc/6K9lnobe97hm3lDHqV7LOU2lBhvz5eBvZq0+Kce1VO7+jikZjvVV+
8RK5xie0v/XXaPXazG141CXShyqvWa3F/Xx3xxFKyzwsbL0yNjHI7lX83rhw
XQ7Vtthou9h+TOh/o3umcfkdvudT0+w9TYXZ22R9wPNxXhb5rGL3WZutlFbx
7ezewPNfqdwr03JLqNZRq53PUfqldr8fsWZp943azPfEbwPVHc20j91jRFsO
tFHOnveFnjh4tpa6J0dEGRbxc/eek/uEfUIrz6aL/aIf8PMW2pqpcM8b8rnG
jOvxrmk/5ftSMczq7yVZ6+wrK6MtPO+lmaxeh6iCHbuYtcWW3PNku3k7QD0O
0XaulVh75FeU0bvcT7a9Ytjru8Y02sGTl+h6razrcmo7qILpSvn8oTVP3Nok
zD5+q6WKtjNdupDp6sLqFrql1TEv4xty+7K6zNnxpujjZ27OaO1w/ka7rl8P
BWhz9JtE7zdT0zfE834ha1+um9N+xcftR+V70o5X6ZVTbXSQ1de7F4eV9OO0
j6XZVOMkO9PDi764Km+flH9HXbxxv2jXLRteFHV8K+T5zVmkGo7HKRcUFIgx
Yz6mzLfx8eXs7Gwxz49raW78M9/G0/Ex5nj6rBrXvEtWv6/N6+Njxh7brv3/
2G//KNLwtLPRybPxOZwYDGhlX+P90TvWor29XdTJnTt3xHMb77/qvsLCkyHz
S06tPEWFO/5AK1+SxxvXH5XHd420Mr8/6a+l+vFn+XrLNJjXPUPV2PJx7Dqm
ajH1ulc3EdA/fr0dHRv32aZeo72vzdycI6NR11qLn1lHSxXj41TinjlsFTp1
8dvplJZ9mDbxMQ92j7IrOlN/zwxcfu+6/Z3XdVtOw/PR9MXWg+z6/rXQEQt+
XySeRVaK/OV7hs94lvI7cFqjk2r576ra2Mkw1bL7aE7ut8Jn+f7vpvGGTPHb
q5pGK4P6OauV1UeWuD/ze7LQCys+pu3sfrN9qzy+ldNi3IZ3S/t5vi9qHvL3
SH5WkbXI1EQ9LeVpxJjloHE9Wq/Iv+HXyO060uD5Huq/a/y722KrpvyC4+J4
eczQnOaJR5uE3cdZOhvrv4v2+l+T1DKOePV9HvfgncanXwdsc/SbRO83U/3l
tGjJDnLwz5NttEqtF3Z94s8H+xoHaPsjz3pp5W4x9pzfdZsKmR5+96IyDqM8
k6WdvUhnmJVWW6iCPS+Mhzq/SYtUww0PD2taeXJSHre/ceOGGD/m2ri4uFjT
ztyiuSZytLSyvM7FZ172ubYGBrflL38ka+VZjinPxmeMK0dup0+f9tHKPO5C
pb6+3mffdydOhMxPaOXb7uQxZw/ZGnu1v6vT5fGKWhe7vl5Trq8uNb087rHg
WXbP8MpDn852kOnpFUwrjyr3jFqnyHfBilzlOHbP+A27Z+ypF3lu/1eWxjYa
0MfyCnZ9do37bT9/vtxvm3N4VKQPVW7xXQuRxr/8rGz8XsLL4ZTvmau+yGO6
8zjl5Jcwu0SOCVZHrGxLeNlMld+Td6A0g1dkHbHp0HE6yM9VeIryS+004pW/
yMPn7ynxm+VS5t+mf32G1p+9KfLkv1fyMm3JzKN3vdpy8FqWOPeI2s5qGdjf
9mObaOEzu2nf52towcYL2v6F69JZmZlP+cwfVv7aXv82upvaTzuf07f+PNuV
NtJ8ClCPrfL9fEut/J0Yb/Ac75OX0jZCY+44Qts3vylrHqeieTR/E6dNwu7j
yjE8Dlhflz5lHFWeG1lbeafx6dcB2xz9JtH7zeCVvex5/wyN879vnKEFS3ZT
N//sahBx3NUuOUZjJY8P4+3FyifG5G/foo8eeZnyO28rebWJceV9jaOiPc7s
TqODyvVzpL+HutU2Z+3p6B1Rjpmi7s4e5do4+7IYGZ+nx9e/4Gtf9PX1adu5
nuDz/I4cOSI0Mv/MNTQfY47kPNH0mZvQyUz7qnP3RAxGgLRqDIaPXp5jn6Om
laNU98lkNZcv++lkPp6sji9zvczjM/j+0rKykPnJWnk6aWzwijyPZcvZZrrV
20RpfKxx6X52jZlWrq8v077SWqquqqDtSmzxprIe3zyuyeMwK3cWk72xnNYz
bSbGMUevKveMIbpVLp9nOztPi6VQ/r31aAc7flhc95d+UUIOp2ToY3l5hZgn
YqY8fN0/nj5UOvm7FqJuRPlfY/cQz7ba/f+u3Etu0pZHnqVFH5fQrYkxqs7d
Rs+xzyNKeZbsqWP3NzPl9+R9q/xPclucaSR71VExlrWC59N3SXx+92Qzjbu6
6ODmD+jdghaf/EUeur+7lXOK32FFGQbEc8lC5ufgRJfc1kIr836QKcqab+1h
9yOvMvB8ey5o8Zbbq+W8S7cy3bxkB9lYmzmqCui5l3eTzWVcj3dL+3nO51t/
Pn44lTiWk42sDQLVI/ONt9OvtlIh+95t+s0zipbxL1N1+u/E8XYeG8rja5R0
nnImVpuE3ceVMi7a6V+XPmX0aivvNL79OlCbo98ker+pZf6uyLLL9cLuWYvE
M/s0jbedoEUrDgp/x2+Ui98j5Pj0rVTRO0VTQ5dpyZLNZJ/w5OUo9cxZ52MA
NlEnw6JdNynXztr01bTg9yWsz/DrX5G4D1YHuL6FW5ZAxmM/+dw+rkO8t3Md
PTY2Jox/jjT/WPjsPbePa+DnPsykNX/82tCeSN0ptLL33L659pnr3H/77Xu0
e//BsHUyP4YfK2vl6LZBMtiNzi5NKzudTurv79fik/nzG4+n/+6778Tf1683
h8wv2bQyv0bkb33Tc+1g19N91bIW5nMi1O3qPn7N1+ehauWlv3lGm2tS2Dwi
7hkrNe024HOeJRtPCD0+dXuMzihzVNT7od6uWW2snTpNtmenSB8qnZnvmjwn
JFV3z3xD05e3rIWifOr8mLSLPaI+93ndM0OX38uYfj244VWtDjexZxOhI25L
VFu4y9MOv9pMpZ3jXvmPyMfr/3bVi3vHwrdPa3rAlv+lls96pkfUsoy3yzGi
vI0rnF5lUPrIPvFb81ayqfec/npxL1bzeiWrWr6v3MXtJ+uRVE3zLM2q023n
beygLcp6M1t4vgHqcbzzCm16ba1oj/Ub3tJpHk+ZBhtOaM8xKzd8RouU5yLv
ciZSm4Tdx2/LOslXK6u6zquMSlul2UZ80vj260Btjn6T8P0mDBs3peUlGnFJ
gY9jz0He1zN92liUhb+nj2sNrpe5buZrKEezXmJd/+qacfq1lb3XjeNp4umz
97v3VMs8+E1Y773mecxFuySa8XWT+XtHRIwF66fqGLJqaowGjxeamAz9feFa
WeL5JpmNsev0zf5BGo7g2IFr8thNFXvultj1ZizYedg1aJhdd8LKf8hJxSXn
yMGuvfwztwlpSjN1G9/P0/HPofLk37Xo1J1Ew87gZQ63/GOB6lAcOzZ7nyeY
zxPR6Tfcn1B53W3tN/t6HKZjW9+n9XvOUxfbbjn2qef7FagMSfadinkfj2Kb
o98kTr9JdJttWbq7u0XcMtfLXI/w37X5WhgtLS3inX2qqdu8jY87x8Nn1fTv
IvHWyOpnHrcc73r+fOde8c5qdYxY1cmvvLM55Huu+bHx7mPxNNfYOJWVnQ+4
tvLZs2dpaHjEVF7JqpVnY8PXT9CKl3eTNeA1efbWPzhEtdesVM6ea7idPnNG
M3Ub38/TmclvPl2fk8HQfuFZR9VRWuL1e862s81oExj6TYJbNMoyODgo4jB4
7LL3O65DGf8dPF4+c1O1sv87rj+j//faFu0d14lSz1z7eo8Vx7vvJIvxZ2I7
q/9zpaV04kShmMdXXFJCdey5jq+RYzYfoZWnpmEJbuK7lgB+wNB+88XQJrBI
bD71m2iWhc/x4/OmzBpfPyOePn+Rfdbnb77uMrdgaeJZz3yMWNPJCdB37jbj
WnlSug1LcOPftXj7AEP7zSdDm8AisfnUb5KxLLHyeVNGobBE9Tl939ci7iLe
9X+3mjyufBuW4CY/l8bfDxjab74Y2gQWic2nfpOMZYHPsHgYtHJyGL5ryW1o
v8QztAksEptP/SYZywKfYfEwEYPB/ocltonfcBLADxjab74Y2gQWic2nfpOM
ZYHPsHgY4pWTw5IxrgyG9ktkQ5vAIrH51G+SsSzwGRYP41q592YfLMFNvJ8x
AfyAof3mi6FNYJHYfOo3yVgW+AyLh3GtDAAAAAAAAPAHWhkAAAAAAABjoJUB
AAAAAAAwBloZAAAAAAAAY6CVAQAAAAAAMAZaGQAAAAAAAGOglQEAAAAAADCG
a+X/D8jzt70=
    "], {{0, 152}, {715, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{715, 152},
  PlotRange->{{0, 715}, {0, 152}}]], "Input"]], "Text",
 CellChangeTimes->{3.655550571328644*^9}],

Cell["\<\
Cell groups can be collapsed and opened by double-clicking on cell brackets.\
\>", "Text",
 CellChangeTimes->{{3.655551717500675*^9, 3.655551736738843*^9}}],

Cell["\<\
Note that it is often useful to suppress the output of a cell through the use \
of a semi-colon:\
\>", "Text",
 CellChangeTimes->{{3.663576012177758*^9, 3.6635760312005777`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.663576034343135*^9, 3.663576041382311*^9}, {
  3.663576654860182*^9, 3.663576662013376*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["CamelCase", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.6555387924792967`*^9}, 
   3.655550521449564*^9}],

Cell["\<\
There are over 5000 symbols defined in the Wolfram Language, all of these are \
written in CamelCase. All built-in symbols start with a capital letter and \
each sub-word does as well, this allows for easy function discovery and \
auto-completion.\
\>", "Text",
 CellChangeTimes->{{3.655550694488031*^9, 3.6555507642855177`*^9}, {
  3.655550797124761*^9, 3.655550810309524*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
3Lhx48aNGzduT5L9D36U5bI=
    "], {{0, 76}, {164, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{164, 76},
  PlotRange->{{0, 164}, {0, 76}}]], "Input"],

Cell["\<\
All charting functions can be discovered using the following syntax:\
\>", "Text",
 CellChangeTimes->{{3.6555508500701027`*^9, 3.655550863164989*^9}}],

Cell[BoxData[
 RowBox[{"?", "*Chart*"}]], "Input",
 CellChangeTimes->{{3.655550877875248*^9, 3.655550883279397*^9}}],

Cell["\<\
It is highly recommended that all user-defined symbols are written in \
bowingCamelCase so as to distinguish between built-in and user-defined \
symbils.\
\>", "Text",
 CellChangeTimes->{{3.655550887419873*^9, 3.6555509336466846`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Command Completion", "Section",
 CellChangeTimes->{{3.655538785366765*^9, 3.655538797834478*^9}, {
  3.6555485462307653`*^9, 3.655548550785726*^9}}],

Cell[TextData[{
 "Symbols that are blue are unknown to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (they have no ",
 StyleBox["definition",
  FontSlant->"Italic"],
 "), both user-defined and built-in symbols with definitions are coloured \
black:"
}], "Text",
 CellChangeTimes->{{3.655550945009966*^9, 3.65555101392898*^9}, {
  3.655551189445448*^9, 3.6555511908845243`*^9}}],

Cell[BoxData["BarChart"], "Input",
 CellChangeTimes->{{3.655551016164378*^9, 3.655551017194928*^9}}],

Cell["\<\
When a symbol name is complete the following shortcuts can be used to obtain \
a template for the function: \[CommandKey]+\[ShiftKey]+K (Mac) and \
\[ControlKey]+\[ShiftKey]+K (Windows)\
\>", "Text",
 CellChangeTimes->{{3.6555511927571087`*^9, 3.655551304132338*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
KFCgQIECBQoUKFCgQOFFDf8/Ywxigw==
    "], {{0, 248}, {417, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{232.1796875, Automatic},
  ImageSizeRaw->{417, 248},
  PlotRange->{{0, 417}, {0, 248}}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["F1 for Help", "Section",
 CellChangeTimes->{{3.655548901110567*^9, 3.655548904585969*^9}}],

Cell["\<\
The Wolfram Documentation uses the literate programming paradigm provided by \
the notebook interface to provide an amazing wealth of examples and \
documentation for most built in symbols.\
\>", "Text",
 CellChangeTimes->{{3.655551421044325*^9, 3.655551453670739*^9}, {
  3.655551650101161*^9, 3.655551667271708*^9}}],

Cell["\<\
To obtain the documentation page for a symbol, simply select the symbol and \
press F1.\
\>", "Text",
 CellChangeTimes->{{3.655551669327256*^9, 3.6555516899487677`*^9}}],

Cell["\<\
Documentation pages are laid out as follows, the important sections are \
highlighted below.\
\>", "Text",
 CellChangeTimes->{{3.6635746979449377`*^9, 3.663574701633748*^9}, {
  3.663574748515276*^9, 3.6635747670540743`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnXt0E+ed9x12T9v33dN3zyZp/9qz+6btvm3SE3eT7Hk3aZtuHNi+TdMT
59JcuiFkE4qhTUhMNiQxLSRxIRsHCBhIbAPG3GxTCwMywcLY5mIbLC4yWIBF
bMmWLyLYtRUsLgLb5Pc+zzMz0mg0I98tYL7fcz5gaWae60j6zm9+M3PHy68/
mTIpISHhv77B/nnypbeT3njjpbSn/pq9eDjtzRkv/xX7o4Utr2HwNysqKig/
P598Ph8dO3YMAAAAAAAAU/Fp8r307gN3EARBEARBEASZTefOnaPl9/8tLbjn
m/FuCgRBEARBEARNuOCHIQiCIAiCIDOL++E1b86jrI8+jndTIAiCIAiCIGjC
xf2wcj0dBEEQBEEQBJlN8MMQBEEQBEGQmQU/DEEQBEEQBJlZ8MMQBEEQBEGQ
mQU/DEEQBEEQBJlZ8MMQBEEQBEGQmQU/DEEQBEEQBJlZ8MMQBEEQpNYAXezt
pd6LF9lfE1nteWpwNFDvhFZ6HWkC+t/ZWE/Ng1Ygzf/Fi1fGZP4vdn5ODc2B
MSgJGk9NtB8eGBigvr6BIe5jbF22/kCf8doDfX3SOmI96e8YlUv1x1pnFApe
5J+fviGsKbeDtzfUN/5eH41T08ZMQfb7cDE4lD6OrKzwuMSaywGxbTDGfjE0
SWOuX4/8fTjqOiAIupHUVlNAr6WkUIqKjQe/GONafJT1WgrNmLmS2tRfMReO
i/ocF8e4uolW8HNaGDGGb9PGCtfgv/tD7P+V1r2UlXuAhj9MF2gjK3+t09ib
NrP5f0sz/wtzK6hnkMZfPJ3D5nMd9eosa1gznWbknhx2a69LBU+x8Xmb6i8a
vDfI3DdunUcz3v5sBHM3/ppIPxxsO0A5ORtom3UbFWzYQBWuHvG+tyKfyjyX
5LUu0P7cAmoMEvV1nqCCnBzK2bCHzjLbFGzZQxv2NIcL7PNRWVERFRVtYOXm
UtE2Vm5RpVhXT92nytl6OVRQ5iS+Snt1vtiuUUxMkPZvkOqNUF8bFa0uoW7+
94BPtMfVK61fzdfn2/axMSzIpYJtVrKytuRuq6Ev5cnnfasI9U1S+35WL+vj
tm1FrL17qJ01xives9A2tn2B9WjEZ2qg+5hod3X7FVUZeZRTeJSkrrK25LJx
qmzVGXQ3bVhXqbPv8fazbUpOh/ZTaX5yaL/3SvS8XGyjsgLWNjbGvN0bWPsd
nVdE+QUbw99LkXNJ1NuwU4yxRz2uhmW1iPEtkt8v2lVH2ukY6HXTLratWIeN
1YbtR9k6fJ9h7ZbH56JnD+VY6tjYsD7y/eeAPC5s/jaw1xXeS6p5sEhtKCil
drmyvi8bqCiX7U9WKxVtYP9XnpHH+YL+PgJB0M2h7lrxG754Zx31sGPu3p6z
VFOcQfM3ja2XuXg6P+y16/zhBXpeY4Ty+9qorS2av1ycgGN81o/5rG+ZNid1
nm2m/QXpoq/FjZcG3W4o/b/y+WaaMevPdCX2anpbUjE7DtnYoO+Hz+5bppr/
K3Sxt5Pq962XPLqe0VVp4KKPGhu7dD1/89b/otc2nRl2a/UU13nlGtQPx577
RjYWM1K3D+qH49HPCfXD3M9Wdkh/u23Ci3FF+WGV5+CepcLbH95e7YcVDbQI
TzZ41LJPeFiPvKJ3/5+ZJ2NeqPSMWKbvdQboCPNdji/Zn7IvLXPxz1IbFazb
I3zrKWs2WV3hz1e3o5j1s1WnbxR6T+lTxHvt18TfRzZwzxb+pHsq/kzWih1U
II+XWL92B/ORG6i2k7Xw7EHRrg0H9P1wwTqd4+gvTwgvbt1QFPKqQW8V5bIx
yN0o+edw2/uolvnCI53qNvdJ8VlRfqWBHw5SLTteKStj7a/rCm0Xsyw2j7Hs
5tmqPMqN8P0Dof7k8OOWoI+2sWMu5RhHeP6cQmofkOZF6/eVeTi1ba085uy4
iHnh+i/DNfBlUp/ghyHoZpbkU9+mRs1P7kDoHFI3lWf9MRw33HQw9N3X07BH
+ACxbOYiqmkz8n4DtH/xb+m1LUfo8IZXaMai3WFfF+E1zlNN4Uehul5btIXO
imZcIUfx8tD7b2XbdGOXLRU5tGLFiijq/NdGNUZDkuhHChWG/G83ZaWofajB
OKr7f8VDWW/NUPV/EzXyPAf2fuZrct/feo3eWrJbbGs4/gPnqFRVF6fQpTM3
A620mC2bvy3atw709tBFUfVnNF+ujyjy9ZXWMlq4QvktHKCG0k8i6nxri1Iu
W1a+JryM9atZLjAiNv0668PZq1Ftieu8cg3BD8ea+6H64Xj0c+Ljw8y3MT8k
+bdm4WZi+WH1MkM/rPFkxooue7+3U/iz+i97qbZA3+t0HimmbfU91OnYTbWn
DpN1TxMFzx1gPrpJlFnBfKlLVfnFz3dSrtxOPT8sxaVzKJfHdC1Hhf/j8eGC
/afJc2of5TJf1xn6fjtHVua7L7K1KnIt5JW9vGd/Bbm8J6iooJR2Fe2i+lPl
VFRpNDbRfpgfC1SfvUa99dtF38SqbHyL2Jx4KtbTrsYAna3+s9T2Pub9c7bL
bQrSWa+X2tvPUm9wIKr8iP6eP04F27mHbwvHkGOV1ddCRTyey/xoLv+/0B4d
H/6yQcR4c9iYW8uqyftl+CjobK3kd3ed6gnPd8E2OsLmrWhXGVm3HSAHO7ZQ
4vWheeDl5eTSqS+l/mwItU9S94mtzIM3E/wwBN3kunBa8lQzF9DawhKqOVxP
bZ3hb8+a5b+lFOZ5RKjwSiut5V6uop19TVcJD1PeKP3mt1UzLzRzSWQuRKiO
4yIfo/Qs+9u3k233Gh1WYo8qX9FjXyXyKZqZEbty8RzVlJSI43wRw2RlO872
0pXeVtrIPOOM7KPR9Vxtpc0aL5FV2jDGA2YgOUa4sZ7Hvq9Qm12Kh5e2Sf7O
cBzVvmqgm+odDdTZe5H130clC1k/l1QJz8DHl+cmNHZ20tnO3pjjf/jT6TTj
db5uL/V2ntb4cpXOH2XzEjs2zY+XeFy6V+e18rfw5mzu+HHV/sYuusjmrpz1
d64cH+6s/ljMq/D27Del5tNX2TFRJeuu3Afm4weuXKTGGivtb9bx7fGcV64h
xoeN5n6ofjge/eR+eEdRycTFh/c0SS/6mM9jHoT7SI+I0ylHyHLegjxYQ/fD
YU/WfaqKrMz/lJWV0S7rLjoVikVG+2ERH/QdoNyiSiorKNL1OjxfocBaQ9XW
MuaTztP+bZV0ZH8xVTRdktrLfO2R7vAxS5+qnUbx4V2u8yTlr0rviXP328po
G88XqOsJrRts2ytyTMoqyoQP3CXHoT37d5Gnb4BOFWVTzp5WCvr2DuNYwU+7
uA9k/Snj22+0i9i6FL9vJernORalVFsme0d2fL0tp5C8A9K8Ve/aJfIaRL80
MV11f88e2cJ863Z2vLVD+M567jcHK2tIxzV99GVnO5068hkrd7scM+Fv83bv
UeWa8PkuIm/wSypjdVjVHl9pq/z92eutopx1NRSU29eu+h07y3xz0dEvCH4Y
gm5+DTCPWVNaTFmLF4byiOdvOs48ikfED1PmL6GsrExGlvjd53mhzbsypPPs
7L3MzCzKyvyj8Ll6ebBn93wovFpDz0W62HNa5FoutLVIC1W+olfOqViYtYXK
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
sNpH1NbA0dd1n/c8WsarXMGlg5SROp9cquf2iedWp9smZl8AAAAAQAgz++Hs
xATKGI/nqw2jDZmsDZn10vM4xj0OeclGSX/1U6obdXzYQ9nMx2cc846qnEBL
FbnkZ+o5l/09JXxUMaK2Bo6+Swn3Lhnz53METiyghP/1weDPox4JV8spcdJd
Ef1zLPsXSszcP777AAAAAACiuCH98KX9lJb8FKV/+FsRQ0yY9FPKtu2g/Hf+
PfQ6v17yue6i30vviffvogzrPqkM2YsqfjjYuI6mJv6EsmuPE89jEM9AVrab
Op9ccpzSVfoeJSnv/+jXZGuJfrZcsDErvA5jasZG/Rgj9+RJCfRw6muUfIu8
7keFsq/zkPWdfw23gdVllfsknrHM2mS1fEhTk35AKXn7osruP7ebMp7/p1C/
09aVUj/zmLyetIzZlCiXm27ZFx7TpHCbE1n5TjmPQ1vfc79/SlqPjVci86x5
9Zo48aVy8Tzlys528dq56WWamlkqLTtvo5SHZ5KTjaeLzU1afo0Yr0S5nUmJ
d0r9idVWDYETH1DCX/+S0lJ/LrXra0+TTY5dx5p/S+qTlGFZT9nvPEF3//Ms
0abIctV+2GCfkMtJzfgDTb3lFrEsed7a0Hz3t+8Mjysbr+THXyfn5WayvP4d
aZyTfiLqdrCynPz52Gx52n/I8/b4W2wOpGdSB05vopQkVT9sx6LGwVn6MRuD
uVTVyba5WkOZqfPJMepcnLZxKhcAAAC4frgx/bDklZLfX0vuzpNkz/2N8Akp
WYXk7awjyzvMM0xZIXxl1+md5GiqowDzIL5D/y3Ws3a0h2OzDS3U37hCvJ9m
rRHl+0r/kxK+MUvyg2w92zt3UMILucxjbhTrWZjX6r/cJHyCtSE6Z6D/3AGq
OlZL/t5mCjA/xH1SijXavyh+mHsrO2uj70Se8H5pFSeI+xBX1XbWPxcFWV32
3MdEm7xfyf6PrZeUupBsFUVkbzilKddOqazOpPSN5Ot1kffEZkpnHi0QGrcs
cnWcZP7uZeEjnfyc/VUn2av2kK+niYLnD1Pef7B2zdwkYtZR9R0tpfRJt7Dx
2ks++ZnSkfU3iLFNKWH9uOakNO4TmUf18LIOpYZyEBzL/p4SP7KFxjhxHmtv
BxuHnmbVHOu0VTOOSvsyLLvIx+bf+t4/UsLfvE2+QeY/O1k6dsq0FFBlxS7q
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
pFnPbqTJD0rLedz7SfZ6cdkZ/TG41iA8TZfuson1O67Sjynt/Uzy9kmvnZZP
yMm8eH/jOkpNL4wYy9h9aCMnLyt1LlV1fiHidZmp88nR0xa3/dvO/E/Vdeh/
RjzmN8i4x3PsY3ne63V/AAAAEF/i5Yedq9fT7b/aTus3lNOKRYXCV/5up+wd
+5qoeredXF43BXpOUeaj2TRllSrmevlz8R7f5k8768nfeYqqK4+R/5qbPmL+
+I2ypsj6LodjuoofzqlmdbH1Lcw/3yfHjsVy7xHaXV1Hvp4W8rv2inW3en2h
5UGfnZ5gddx2VwHtdbvJ5zpCex0u0aa9uw9Q5qtS3Ltkdw2VlFSR3d2sPwYx
/XCj8bJxINi+iRIn3UVVPKZ2biMlsL8P89h0dzE99D9mkYet41g2mdKrPh+0
D/3nD1JGYgIlZe4XyzPZ35n1brFMt4xx5nr1P0MZc7E/Hn2bHkq3jWrcDcu5
ScfevvxNw/jw9bo/AAAAiC9x9cOPbqUc5odzVpXQtAeZx/xZCbX2nSW/cz/N
ejAyhvuk2g9/1ULZD3Lfq4m9XjtD6cyr/qHaY1hvwLmTbv3hZ6H4m3NlLt0X
ym/oIEfhdpFvoa57hSp+LMWn19LeTv3fVJ4vcd8q5+BjEMMPd51eRzNmZsaO
EY4l3H8z/7Si/hBZ3vl3SvjrX0o+rT2XUj6ySutcjs5bMeqD/0AqJXzzXdH+
yvfnirinYRnjzHXrf4Yy5hx2bNjVozmmGu64G5Vzk469K3c6pVnKda9HuG73
BwAAAHElbn5Y6xu7D4o8g8MByetOWXqYeSce0+2gyvlZbN1oP7zC6dWU20J5
z2bTbb+tirqeRnkd5H74ZzZdPxx075H8b/UZaf2rJ2nOndwPt4bLEn44zzC3
1yH6NZT8YWM/XPnhZHpo3pYxugeGh7wNVeRqqjMuj7clKYESk35BebXVlJfM
fFptGWVOfZ3c/PjkRDY99PUXo/ts1IfzW+nurz1N9hPrKC2zQrxnWMZQ2jcK
jP3PeNY7+jGXxvEgZT7/AGUe0x73DX3cY5ZzU479WfKVz6GEyQtCuShDaxMA
AAAzExc/3Och2/zV9O0F1eTrbCKf10klKzczP8x8ZsBDmczrvrjmKPkDTeTc
bRPx2imLqqmL++O+FuryHRdx4Dd21rO/G0PX0nG6qndI1+atOkS+Hg+1uuw0
79FwToR791a69YfbyR3g67eRdW6WaIe/L+yH1zsaKdB5ikqWbhav/7DzlIg1
BVl5Ptd+0Z6tTlavt1H27OG+OZaspm/N3kc+5utbHTWUPn0jFUT59rOD50vM
XBi1zHsgh/KrakOvfUfzKN9WHXrtP7GZ8mx7IzxG8PQSSkhIoIQpK2Lev6Pq
PbbOE7liTCz/kSDO31tb5Jzt7kJ66Amd7Y36wM/XM6+XwPyvct7fqIyhtm8k
fecY+Z/xrHdMxlzgoezkp6S48UjHPUY5N+PYi3ozZku5Jzplwg8DAADQIx5+
WORKaK5pu+3OTbTeLuX9ukq2R7w/59WN0j0iVp3QvR7utl/ticgtcO+2Riy/
d3YpOTt9Irb7hJIL8dYR8jftDq0j8pOZD81/dU14u+kWmvXLbDlnwkP507Oj
6n5yQ2RuRNBbHa6Dlzt7Jzl7fNHjMITr6SKWyefXEyYvkfvqIUtygjg/rlx3
5/gw8rUYy9zHhPfIVuWS6sF9gq1D8gk8zzfNFo5xe4teppTN+4bVB9vr36W0
itODljGk9o2w70q/9PzPeNY7FmMuOF9Cj01eFJ03M4xxj1XOzTj2seodbBkA
AADzct0+j+NyC/l7WkZ+PpXHkTs9oevohkMw4CF/YDTX5vP7srVRv8752hCy
59XNEWZ+Z/nU+aH7WoT71MT6o33dZvyaeQp+Hj7sKYzp7wtv1385su+OZf9C
CVNX6MQjDfrQXUwz5uRGxP50yxhG+4bdd6Xe5W9G32tgPOsdozHnBA69TcmZ
5UPfd3TG3bCcm3HsZaren2F4fwndNgEAADA9160fvtnh57aTf0GZm9dQVUP0
Pdmcub+hxMffInvHaJ7H4SFLil7e6Pj0IXh6BSU//GtKZl7eHetYYCLad9VB
NssnlMraEx0PHM9xGYOyr/EcoJNU+c6/U57e81iGOu4xy7kJx57Va/nwcUp4
fFH0sVvMNgEAADA78MPxI9BxiJz1leTt1Pe8/o4jE34/htH0ob/7AFktFvIN
yQuPM8wLulm7+DVbY/Xcwwnj6n5KveUWSl2n85y14Yz7EMq5ucbeQ74Wgzpv
5P0BAADAuAM/DAAAAAAAzAz8MAAAAAAAMDPwwwAAAAAAwMzADwMAAAAAADMD
PwwAAAAAAMwM/DAAAAAAADAz5vXDbeQ99hm5e0bz3I3Rt8FdO4FtuNpAjqo9
4tnU8R//sWtrf/dBqqqtHZ97il1yUJUtn2wVN8i4Dcb5w2Qf4lj5TmwjmzWf
HC1jf6/gQHsFOXTuu83hz420N41xndf9vj+y74Jx3fcBAMBEmNYPX2ukjEmT
KL32c/O04XyJeE5uVe9oy/KQLWM2WZtiP494MBzvJVDCPJv4270jjTKs9hG1
NXD0dd3n9o6aqzWUdsstoh0JX3ua7CMYt2DjOkpL3zj4s9gmiKGOlXfH76V+
M5Izt4v9NG0M91Mx9+k2/WUfGi8b8biP2b4/Tozwu0A9n+Lvv3l77D8HAABg
Aszsh7MTEyhjvJ7dNsQ2ZLI2ZNZLz+MY9xjPJRsl/dVPqW7UMTIPZbPf7oxj
3lGVE2ipIleL5Kmdy/6eEj6qGFFbA0ffpYR7l4z5cxb6Ty+ihG/MIu8oygie
WEAJ/+uD6+YZEEHeJ9ae2P7cIz4bKdZj8us28jVUkrd37M5juD69l+5Wz7cK
/mzvxMz90usR7qtR4z5m+/44McLvgoDcTz6f/ecPk7P+OGLFAAAwAm5IP3xp
P6UlP0XpH/5WimFN+ill23ZQ/jv/HnqdXy/5XHdROM6VMOkuyrDuk8qQf38U
P8zjSVMTf0LZtceJ//47it4Ibzd1PrnkuJKr9D1KUt7/0a/J1hL9bLlgY1Z4
HcbUjI36MRvuyZMS6OHU1yj5Fnndjwrl33APWd/513AbWF1WuU/i+bysTVbL
hzQ16QeUkrcvquz+c7sp4/l/CvU7jT+jjHkCXk9axmxKlMtNt+wLj2lSuM2J
rHynfO5WW99zv39KWo+NVyLzGHn1mjjxpXLxXNzKznbx2rnpZZqaWSotO2+j
lIdnkpONp4vNTVp+jRivRLmdSYl3Sv2J1VYNgRMfUMJf/5LSUn8eiuXa5Nh1
rPm3pD5JGZb1lP3OE3T3P88SbQqVe5WNR6KmTdecZFH2MXmuArHmio1paqL0
XlLS9+mhmdkUEGPD+n9ZPVbya7FfT6N822pKe/4BupuvP8p9kdN1aGVo/xJM
XiK3W79sd9HL0j6Q9BO6+0fTqK63iSxpUym/wR0at9SMP9BUOXaePG9taP/m
+136Y+G6MmxKzJ/VtemVcF18TDLLddvr/PRhSmBjkqqUM3UhuS/zfrxLDz2x
JPws5msNlMfGKaPqeNT3Q/S4x96fuo5mh8dItf9E7WunN1FKkmp/sh0j+7Lk
8P6t7OM/kvZ/vo8np/6R0uS+JKUupqryj0N1JSljF/O7gH0G24tDfeL7ev6x
U/K+H/bD/HP0/Jzc0LEO79NUZZsfPUJ5tdpxGuLnlM3b1IxPyfLpq+KYIq/+
dIzvJjaOyTMpPeKz2DLoMsPPlt5n4vwBypxxv2rdrVHHm67Sjynt/Uzyysc/
Tssn4jPWz77nU9MLxecq2HuSugyeDQoAMB83ph+WftuS319L7s6TZM/9jfhe
TMkqJG9nHfteZd+TU1aI78iu0zvJ0VRHgcvN5Dv032I9a0d7OB7T0MK+I1eI
99OsNaJ8X+l/irig8INsPds7d1DCC7nst36jWM/Cfiv7LzeRk33nWhuifzf7
zx2gqmO15O9tpkD7TuEbwrE2FfJvIPchdtZG34k88VudVnGCuH9wVW1n/XNR
kNVlz30sFKsU/k/8ti4kW0UR2RtOacq1i+f0JqVvJF+vi7wnNlM6+90NhMYt
i1wdJ5kXeln8tgovdtVJ9qo95OtpouD5w5T3H6xdMzeJWFNUfUdLKX3SLWy8
9pJP75nSzKfwsU0pOSF+50TOAfvt8/CyDqWGzu86lv09JX5kC41x4jzW3g42
Dj3NqjnWaatmHJX2ZVh2kY/Nv/W9fxTnjX2DzH92snTslGkpoMqKXdSliR26
S38nynHKbbK9ztZnfkP4l0sHxRhM3WqPOVfqMrwdLtGvROajQrkX6tdyn7kX
tNiKqLK2mppHuS+SvF46Ow7ws33BycfxnkXCaxju56xvfM6k+a2joPrYUdln
H3+LqhqOk/foSlF+Nj8muuYQ26Uyn8n3m2DjJrE/W5jn6Sr/nRhra/1x5mcc
ZGFj+ZBBfFj4Yba/WGprqau9gtK5p5tXLPwbH5+M2lPheWdlOnRyIPTG3XB/
at8kjaVyDM23/fqL5NbGkuX+pVhqWP887PO6mfLYd0bwxBLhjat6vpDbf684
XxFQ+sL9K+9L8zZK4Z8FVrat/ijbPlsaO/k4w/C7QP48T82yUqCvmdzl74jt
bMzHqv2wOE+ixP7bc8Pzfv4k2z8+pPTN+0b0ORV9YGWlLl/DPidF5OpsHPS7
KeKzyMrpGmSZ4WdL5zNhe0f6buKe1s/2j7yswqjzHUE2p/xzJfJj+GeA/X2Y
z3V3MT30P2aRh413PvuOS604Hf/fMwDAdcGN6ofV5z7FOWD+26a8ln8j+Hdr
f/cBynt/hojxKXGhTNXv+gvvS/GizFrFU3rE96SIN7JlqWmzpTgV+97+8nyJ
iMclPv865TEP5ewwyJ9l3rJy3TxKTvoBJSpxKr1YmOYcKafqvQTJI7K//af/
TBkpP2dl3BmKC3HfFBjkHHx/c5b4/q/TekftOeOrpeK15M2Ypyv/mFKTfxyu
b/ISKS9RW18o18RjOEeu3CT2+1ZMAX6swX7LeOz5o2OnyPHhP1CiPBb8vLhy
ztyp+nvwtkYi2qfOl2C/eQmyx4w1/5mD9CGo8ho8TsW9zC3JL1Ba2gzGbOl3
Oj32XEWUoeqX2g+HXit9Ds3b6PdFd9FzEWMTas8147L92vnV+OHIfdYTyjvi
5xFEvDj1NUpLTRHjJDxZbT1ZWF2hHAi9+VYRkS/Bx/ZAaujz7JC9Jvfb+cnh
z0rMuRtkf3Jtek46nuZjINr+c8nfavc17h+TpHho5ro1ZK8/Hv48sPeTsg+y
v2vE8W+GnAcc2RcP5Yn19kWNXazvguDpJcL3h/YLvq6caxzhh1V/e3c8O4S8
mOF/TkNzEuu7yeCzaLTs8LkDxp+tqM+E1B5xzmv5crLV7tXvo7wPr6g/JMWd
WfvEfLLjhJSPrNJcPP/U9ZtPDgCYcG5kP6x4Cm2cKPS7IMdzEudlkbvDRf1y
PET5/clLDp+7TcmT/Sp/n//mzVtL3vZD5GqoIlfTIfJ1uqTl3QfJtjmD0lKk
c34pW+2a9rVRJY9f/HMqVTXVse/+Nt3fE6UurSer4tvy33g5ZpW2eYeITfZ3
l4T6HND+1muQxkOOh8QYN/VrH4+JsW3ya6tFvNevijVF1Rf67Ta+nk7E3L/+
ImXM+B6l2k6Qn8cHH39LnPPNbpB+89XjIvmG8iG1Nbq/C0IxT2mOCqX+n489
/+p8Gf1xVPth+Xy7pZy8LdJ+4W46Ql08lh1rruTc5ihfpszN1fIoPxzq46j3
RTlWOVnlh5X84Vhla8dGxw/rLVP2OwvzIN4mVl7DIXK31LH9qUn2i+H45GD5
w+plXQdmha8BZB5KHL9uel/UVdn5hf7cGYy73v4k4p//M5UcLUfI3SC129ty
Uv94k+1Ddtsqykh7XvrumJkr1vMfelvs7/mf/iZ0biKqL4pvziyPMa7R3wVR
n2fZD2fE8MNi3ofgh4f7ORUM9t2k/iye2xLph3WWHT4X47Ol+7lvI/ehzZSd
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
iftWOQcfgxh+uOv0OpoxMzMixu0/9DYlfP1Fcvfxbe2UcsstlN/UIr3/jVnk
FWU6hefMbmDtveagNLaO+PtSucjnza53S31e9i+UkG6T29FIVZteoYTJi0bs
j8erbcHGLEpOlOLIqZaaCf9suHKnU5qlXDevHX4YAAAAuHmI1/OanVrf2H1Q
5BkcDkhed8rSw+QXMd0OqpyfxdaN9sMrnF5NuS2U92w23fbbqqjroJTXQe6H
f2bT9cNB9x7J/1afkda/epLm3Mn9cGu4LOGH8wxzex2iX0PJHzb2w5UfTqaH
5m0J94HHi5kvTMosl9p5eonwmT7+fpLm/a89TR6+TXtu6G930a8o4ZvvSnXJ
XlR9rVugeRM9ZOiHPeRtqCJXU53+PTnGrW0esmZ8JHnp5iyxTnT7BmnbKPGV
z2HHCQvI2xe9DH4YAAAAuHmIix/u85Bt/mr69oJq8nU2kc/rpJKVm5kfZj4z
4KFM5nVfXHOU/IEmcu62iXjtlEXV1MX9cV8LdfmOizjwGzvr2d+NoWvpOF3V
O6Rr81YdIl+Ph1pddpr3aDgnwr17K936w+3kDvD128g6N0u0w98X9sPrHY0U
6DxFJUs3i9d/2HlKxAiDrDyfa79oz1Ynq9fbKHv2cN8cS1bTt2bvIx/z9a2O
GkqfvpEKonz72cHzJWYuDC/jOQjMc6ZVfc48eqmIl056P4ts1kIRc804xsq/
Wk5J7P2EqQvJYt1BJ4qeZX/Pp7zNFiln4Yls4Rltz7N1Jt1FeZYCciu5AJes
9Ng9C3T9sPCxvNwpK/Tv/zFubWujoHLMcb6Q+fUlUfUP2jYZ74Ecyq+qDb32
Hc2jfFt16LX/xGbKs+2N8tT2jNl02OC4B34Y/H/23j4qqjtP9033veveu9Zd
965775z/zroznZeZM33WmsyZOWcmSXefdSedmTZ9JsZ0x3RLko4dMWk7LbSm
gxOSYKLBbgwkFCiIiEWiEBUUNIgiKBhBFAUjJS9K8aIUhIqFVAmV7GCRee7e
v/1S78WLGIT9fNb6rFD79bd3VeSpL9+9N6WU0oXjXORh0SsRck3bn31/Nz48
q/b9dn5SHjR97epd6j0itl6MeD3cnz1RHdRb0F11KGj+3yccge2LQVHb/Zne
C7HunLhPrr6M6E+Ws13x6h3+9eJLsep/5Gk9Ez0ojs8L2/fPPwrujZCu1vv3
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
rwcI2K/Izc9nqxmeUkopnSXNkIcpvSPeDc90oZRSSultyzxM6cwd/SLCdXGU
UkopnVcyD1NKKaWUUjPLPEwppZRSSs0s8zCllFJKKTWzzMOUUkoppdTMMg9T
SimllFIzyzxMKaWUUkrNLPMwpZRSSik1s8zDlFJKKaXUzDIPU0oppZRSM8s8
TCmllFJKzSzzMKWUUkopNbPMw5RSSiml1MwyD1NKKaWUUjPLPEwppZRSSs0s
8zCllFJKKTWzzMOUUkoppdTMMg9TSimllFIzG5iHu+0XKaWUUkopNZWsD1NK
KaWUUjPLPEwppZRSSs1sUB4mhBBCCCHEZDAPE0IIIYQQM8M8TAghhBBCzAzz
MCGEEEIIMTPMw4QQQgghxMwwDxNCCCGEEDPDPEwIIYQQQswM8zAhhBBCCDEz
zMOEEEIIIcTMMA8TQgghhBAzwzxMCCGEEELMDPMwIYQQQggxM4F5eHBwkFJK
KaWUUlMZmIclSaKUUkoppdRUMg9TSimllFIzyzxMKaWUUkrNLPMwpZRSSik1
s8zDlFJKKaXUzDIPU0oppZRSM8s8TCmllFJKzSzzMKWUUkopNbPMw5RSSiml
1MzOSR52tyE3ORkbNmwwTMvMRVmtDe5pbMfV1Yr2obEp7m8tNmw7JrbfW5uP
5LXJKKizz+m5d185Io9jLXKPRRvHGNpr92DD2lVYunSp7K+xIbccXe7p7msM
Xa3t2rl1oyr3Hax9Yxvap70dSimllNKF55zk4eunsfT++3F/BO/7bRFck25j
DPU7fi+WT2twTmF/n+Jhednv/fV7GJJfn/ngKbHuTyxNc3ruXY1bYoxjDFXv
PBb5HP3lM6jo8k5tP2M9yH3hz41jl6TPkfnwfbj/gUdQ75r7zx+llFJK6Vw7
0zx84MABse6M9jtyGsuVXPeDP6DqzBnU11Yh9/WfG3kv8+xk23Ujd9G9Ytnc
Fs/k+xvrR21FGSrqOzAmv27OeV6s+/Rc5eExtaY9dnF71HG4tXmKD71qRWtv
L1pP5GORNu3eX1in8L1BPddLteXV+vAYWms/QVlFLRxjc//5o5RSSimda2ea
hzMyMmCxWHDq1CncvHlzevvV8vC9v8gL6I8YQ9nr/1XNf29UitwquS4ic9W/
GLlw1eZyUeNs3ZPor5c+8Ag2lHdAcl9BQfIL/umPPIPMcpu6bfdFbFi+FMs3
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
eeNu9I7N/XlRdaMq9x2sfWMb2t1zPRZKKaWUUnonnJM8fP00lt5/P+6P5AOP
oNY19+dF9TpyF92L+x54HPV3ekyjbrhHZ3F73lneHqWUUkrpAnVO8vDIaSyX
s+99P/gDKurPoL6+XrMWtfU2uO+C86J6HQVLv4f7/vIZnLmjefgqii0WnB74
0ph27fRubK/s8C8zehVVH22BRV7OYtmOU5evB23De60BW3OOYVh/ffUkLFll
GJrzc0gppZRSenc7kzxcWlqKjIyMqCrzY25Dy8P3/sKKsUjzP/8Uqx55HIsW
PYPcBqc87XPkrnpafv0Q1u6+BMl9BQXJL/hryo88g8xym1jXffFjLH34caxK
tmDD8n8U8+975g1UnalFmv768VdR2+sRy7fuWYeH5fWTMzOxatG9Yv5Pfp2F
VpF/w/Ow48zHWP7wfep25Om5x/yZtas235inuPRVi7ad2PbW7YCl7KL22g1b
TZHIvTuPXzGWsR3IhCX/GIZGvbjWXC7P34VerzJPfm2rVnNy/vGA7xJeNBVn
4qPG/jn/jFFKKaWU3s3OJA8PDQ3h/fffj5iFlenK/Jjb0PKw0huxfPlyv0uX
IlnJu/IyzTteUjPnI68g7Z1fiZ/v/U9von1MQtWa/6hmzmdeRdqGNXhYWU7r
aXCd32Lk0QeWr8JyLeMKl/4Wq5aqmVjJ4i5lPzlPGfMflpdfquXZe3+ah6GQ
POy+Umz0dKxKXmv0fGQqmb3/iDGOtIJdSFv1L+p2XiyJnPl1vWpt+NS1MfHa
3fYJLNvLcHBnJrYf0/OwFwOXbbB/4RWvvY56USMWPc3uNmy3WHH4YAEyc44H
1dZH7cfk5UowcBd8ziillFJK71Zn2i9RW1sbMQ8r0yddX8/DEfyJpUlb7jp2
/eYfjOlKzizrUvPgUG8X6uX9tPYOobf5E6ySM6yeWfU8fO8P34NDXnZMe33f
D95El7Ldi9sD8q6Sh59X97ux2hjbKm1/tUOuoDx8RsvOP9lcLXJn1yfrtcxb
BFfbx0ZWTs7cjaqqCpRVncWQeyzmuXB3HYEl6xC+0Kd51WPsrd6GrZVXQpZ3
49Q+rWfCqCdrGbnnGDKzqkN6TRzYF5C1KaWUUkppuDPNw2NjY9ixY0dQFlZe
K9MnXV/vl/hplppZ5XX8Bix3ZbuRh7/34kFjuqPxw+C6r9a7EJSHXykR2dB4
/Ys8UQ/292rkafVhNQ+/sO2Ctn03dr3w52rdt74nKA/ry4b6vR9mydnajYo/
/Sps3nI5O8eqD7svy3k451hYz/TlqrwIediLoWvX0N5UITJxYM5VcnV4Hnaj
ZqsFB9tvzPnnjFJKKaX0bvV2rqfr6OgIysPK6ymtG5JJIy/3OQq0XKor+hKk
K0jW6rAF9X1iuUzlHhAhefhpLd8aefinsfPwTzaeVPf71SWsjVYf/kCtDy+1
nITL7UZv81EU7NqL2jN2uF0OtJ6pxd6yOjSfkaf/6eWgnB7tXCh5ODzHhuZh
L66129A77DVe1223oPjcoH87zMOUUkoppTPydu8voV9bN+k1dIEG9EssWrQo
wIdEv7Coxer9w4+/iYIP9Gz5ojyvBxseUNdNLijH3rSXjT6Fsl6vPw9rfReB
eXgoYN+heVjk3OTNSNauuVP7LYL7h11ar4XyOm3XLiQ//Rfi9UObTxv7UXJ0
ZlkVKgreMXqeu2KcC7VfotK4L4RucB4exSk5/1o+Pify7ujAeWy1WFCjXRMo
thMpV3v1+1awX4JSSimlNJq3m4eVa+eUv91Peg1doDH6h5Ws2XDB34tb0KJk
vs+Ru/QvjD6Izw68HbT8quU/ET+v2n1JzqVqZl26Tc3Dbr1fWLt+LloeXr52
LRbp2/zBH1Dbq9Ri9Tz8olHjbT3wx6DxPv1qkej5kKQxnNnztrimzhjbI79G
WYsz9rkY7cR2+fw1D30dNN1eUxDUL+EdahXZ1qJZXHMJowHLj/YcC+u7UK+7
s8LO+xBTSimllEZ1Nu4/7HA4vv2xu11yBnfFvnfDFNTzcK7I3e6pbXPMJfK/
K+K1cm645HnKdqY6hvaDW7D1WGivcGTd7uEpP2fDdvADbD/WPWefLUoppZTS
+eCcPI/jLvLMBz8WeTitYZI67p1U3DNtK2zDs7jNL86zNkwppZRSOgXNnocd
Zz5Bbm4B6gN6cedC99A1DBjXy92+3uEBXBtyz/n5pZRSSim92zV7HqaUUkop
peaWeZhSSimllJpZ5mFKKaWUUmpmmYcppZRSSqmZZR6mlFJKKaVmlnmYUkop
pZSa2cA8PDg4SCmllFJKqakMzMOEEEIIIYSYDeZhQgghhBBiZpiHCSGEEEKI
mWEeJoQQQgghZoZ5mBBCCCGEmBnmYUIIIYQQYmaYhwkhhBBCiJlhHiaEEEII
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
w4QQQgghxMwwDxNCCCGEEDPDPEwIIYQQQswM8zAhhBBCCDEzzMNmxwev14tY
tzQmhBBCCFnImDkP689pCzQuLh7ZBy+FPSPj28eHjurdqNae56Y/+6Po0pez
tgdvewUSAo49tfRC1OPu2PdqxHOVsr0Gnijr6AQ/q2+SMfXVo6SmW11Pe66e
/pzpOWFcghTjRskTksT7KBNCCCHznPmeh8vLy+F2u2e0rrf9I+MZxanZ2UhP
fQ1xWtab62ds2LX8ae1Un+HmqCtASkoG6vpm65luYyiKXyyOvbylA+Xv/lI8
47klyvM19DweL48hWz5X2empiI9Tz1VS6eWYe9LP86S59labyOcrCtXtSf2n
kJ6SAmvN1Zkc4CwwhD0WC865vsG4s0k8o9p49nRhg3gGoPP0R7Ds75ij8RFC
CCFkNpjveTgjI0Pkk8bGRoyPT69Sp+e0xb/fb9RFO3a+oua+ws8gdVUg4dlE
pOdlI0nOfsvWH4JX1G13IiE+Tl0uMQMNfWrNVupVl7fKGT09YZmaFbccwbC2
bd9wK7KTVqgZPH4dKm031PVC9/OHVCwLrFcf6UZfdS4SEtajWsvDjqZ9SNDy
aPz6Qti1HCs5ziJd30dcHJIySuGMWPT1oVrJwPJyKdl5SFWy8ZJE2KL0TRjP
pg6Ipr6QnBvt+ELz8HDrASRp5085vtTCk/J5HUNl6ovGuBMyjuJG/wmkJCSI
41d30I/y7Le0HC4f25aDxrHZD29G3MpNKK/cLTK12G7xZ+r76htCpbxenPbd
Jz5hk/y9YvI6+8CpAlgOtoufXS375Ax8HNfk/18GBq7h2sAI1CeRXEep8vmT
MzMhhBBC5icLIQ/rFhQUoLu7e8rrGnn42ffR4RyGw34W2QlPqDn2YE9A/Vh1
WcancNSmGTXlBD37yT/XOSeCl09IMvLqiu2fyXvrR7o2Lyk1FfHaz9Wh6yn7
eeu9oNep8lg6dqs53Xrppr/PY8lKpKa+ph7DSx/CI2fKkgS15ptdVIK8FHV8
8cWR67ee+rSA/cShKEZNXM/DKXkHUVddjcry3UgR9WWlPtwzpeMTeVirAYvj
ylbzvzgu2+coT/ml/xzI3z2+aN0VkKPHUJ70hJaXE+XvI+q+Fyd+LPo19PMj
9p+y2vi5Uv7+0Hf4DfU8pBaixPquut5T78MZ68MxodaGG523xMvLFVuRU3EB
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
Ss59IdazH96MuJXrkWeV5yvjeXYdypuaUJS6Wh1f4hZ0eNX9V6b/DvFJGcjL
fkubl4Emp/q84dA87Gjah4Q47TvD+kLYtYORHGeRnrTCOM6kjFI4p/Ac5IFT
BbAcbIfynONy+X3LP34F4xNetFZshaXwjFYXvo5S5T2VMzMhhBBCyJ1mIeRh
3YKCAnR3R+pRiExwHtZ6JKQuJAXk4Zady9XMmLAeKQnL1LruwR6jBqy8Ts3O
RpKWGa22z1Ge8ktjm8vWH4qch5V8mZCEpCTVBDnbltuVHoV+ZOvbzcsW2fbJ
JSvRMDyB4bOZ6nblrJstZ1kloy9+aiuc8OdYJSen6DlVW1Yf9wrRjzGGogSt
X0PebpI2b/FT78OB4Dwsde0xlktNfU1d7qUP5SSrH0McsotKkJei7i++OFI9
PIAJtTbc6Lwlv5Bw7bIdI9qj31zNxbDkHje+a1yry4Nl76Upv5eEEEIIITNl
IeVh3an2UOh5OKX0NMrfVTNsekmJ2j+s5OFbV8TPSi23ZVhewXVGzcqil0KC
w96Mhpar8Hj6UaLVhEVd9Ss1K6+OmA/9eThUvSYr9VZo9WjV9JpBdbrHiY6W
Btj6bmC4rx6pSgZfkogWb2CO/Rr4d33cK9GkhHEt167W8rBan5bnebTxaP3M
Ss9wYB7u2P2Kuv+TA2K5SnGO4lDtGEZRvJqHU60H0dBQh7qmbngnqQ9LV4/B
knUYQZ0Y41dRmqP2TJS3jxqTJ66flafthTP6o5IJIYQQQmaFhZiHFbdu3Yrh
4eGY6+p5eHVxD+A+HpRBRR4eO2/UgIPqyKKWOoYG67tB6/jz8EWtfzjS9XF6
Hk1E07AEn0+CJKkGxsnyeC0zy8v16RM97chLWR08Hnm+TeThV4yf9X2otVwY
PdGBediYJ2PXrqFTM7CWh23XURlQ5w4078JN2I9ZwqZn18Tuf5Z6jgXVgAUT
XvkzOICWo7tE/h3Q8+94D/ItObBLETZECCGEEDKLLMQ8fODAAYyMjEy6rpGH
tdzasu13/syr1IBv9SJd+XnJ22hyDGPY0YrK8krUNXViUFt32fr9cEg+2Ha+
EiEPx6gPK9k1StbzhdSHk0rV7ej7SCm9JGdnF6zxiyfJw1oPdFA+9++/Rdt/
XfqL4XlY/lnfX3pNJzweJ2x11aisa0CfxyufCzvqquvQ1FQHa3pgL0V0lDyc
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
/3V1gXl49JKxzqrN+1Bb9RGW6/lbzs7texL919Ft2GDMu/fFIl5TRymllFI6
D73dPKxcO2exWCa/hi7E3jMfY5WWJY367a834ozRg9uPXa//POiauw3ltinM
8+s6v0W7j8Wb6Aqd17jFuK6u5fPgfglX6ydYpdWBdZN3NmBMrDuG+oB7Wyg+
/WoResfm/r2klFJKKaXTdzbuP+xwOGa8rkvO0UqWdrkj9x0r/RDKfHeEvBlr
3mwYe/tuMXaXa/J+aUoppZRSevc6Z89rppRSSiml9C6QeZhSSimllJpZ5mFK
KaWUUmpmmYcppZRSSqmZZR6mlFJKKaVmlnmYUkoppZSaWeZhSimllFJqZpmH
KaWUUkqpmQ3Mw4ODg5RSSimllJrKwDxMCCGEEEKI2WAeJoQQQgghZoZ5mBBC
CCGEmBnmYUIIIYQQYmaYhwkhhBBCiJlhHiaEEEIIIWaGeZgQQgghhJgZ5mFC
CCGEEGJmmIcJIYQQQoiZYR4mhBBCCCFmhnmYEEIIIYSYGeZhQgghhBBiZpiH
CSGEEEKImWEeJoQQQgghZoZ5mBBCCCGEmBnmYUIIIYQQYmaYhwkhhBBCiJmZ
F3nYdwujYxJGpYm5HgmZDL5Xt8EEJOXcjd2Cbxa36pPU90S6C94TnySpY5nN
A7wLUN+32TuuhXqe5h2z/e8Z/32cQ+7Mv69k4TCnedg3hKykA1gVfwCfXPna
mNxdUYMXEg5gbe5lSPLrlq0f4j/89Xb8X//fpxiZZJPXL3Vgf1kLattG7+jQ
72q087o26ZDf9cewvcyOkVn4h2DwwkVsTNiHf36iAI898RFeWHcM+88Ni3m2
/N3ivfq/nzyN2XwHIr2vvpF+5P2xEi/EF+Ox/75THsvHWPunM+gc+UbMl7o/
E58t/zmoxHs7zqP+8h36bEQ57x/XDUztXIzZ8dj3t+PPvr8LZ8dmb1gtW4vE
e/JY7jXxOuy8yL7xx5Oo+mx4VvYX/fMhIe+JPDGW9M++nJV9CXxe1B9ulT8f
bejW3vtZZdL3VULWf98ujuvvP+if8mZNcZ7WVcr/7lzGden2Nz8X/7bP5N8z
33UHCv94CD+X39O/l/25/P/ae7suY1D6dv99nFWk6/hkRxVekI/nMe2YlH8z
aq/c3udTOVefyOP+RP5/aRY+IjJjqN9bh1XL5HOv/E5Ytk/8Tmj5XM4XY713
5N/X2T8GMlfMaR6WP58/+776eyQ74N99/d+M/2exmn+v1Z7GG3KW2bjj8qSf
t878Qu13/+d3dOh3NQHnNcy3O27ru7FtT2nE7erfVWz5e9X37tnTs/pvQ6T3
dfTCiYhj0X/XjF76NPI5kP35B92zXyOIcd7/LPGzyX//SUPIkz/nb7zdgO5Z
PHmdH+1Rj1nLw7HOy/a2ryfZWmxifz4kFC7L0/Yzi2ff1y9+z4l/R2ZzuzqT
vq//f3vn/xzFeef5f8E2zm9Xt+ske7fY+cW6ukpyVzipk3eTVOHUWiFbkLuV
k8V7mU0R7423IIt8JWy5CmGwsGENlox8lmQjBBLCCBkkbAaDJDMIRoKRQBIM
wgPMyB7hFszIbjIj1+ee5+nvM93zTRKS6Per6lMwmul+nufzPP087/70p7uT
5GNagc9RdSe/ymuXbvPTwz/xUWSWu1+Iud08n+WjNFPhQSpx8MG2/m/u6/w4
Z8i3yOvQppLt12e169SoMhc99NO58Mcd2qEeN7b1lMepnOvhx5spMIfOn9s2
gIVkQfWwOj7T531t/dZ0TWzgPG2tOUE7WsbFeEtJX9Demk4qW72XGTv/29BN
HYNxivT2sfNX9XhYeYCtT93UdU3Zb2zoAlXwOCI/v2Xb7GgPW8buSPdpdk65
V5z3VrGyqjYz/b3rkvhNpPesqscvUXBgiLay/3eFvib/vk/I+8eDVC7qsZc8
G05Ql3a+rGkbHnfzBZSy17RTQ99tksIh2rp+v4hnVqltmi+/7uznHrxDe9fX
W3RrKjpKVesPitgqr3v5Hw9TXafmkySdZus7j4F1DX1J/iM9TKN9SqGbl/T1
dNkaHwVjsriuG+z+WD930ef7p45S28GTzDeN9OyaDtYPis4qptzPfPb9Gh+9
IPokIiWVPjx4SCn7iQ4aSRm6j8cDusL3SIpGaG9lgz5Hvnr8zrz5fRvTRXJi
kjo2f6DXwZ+YyT5mUjE2rk+wsX6Owtwh2hiq7qXA6E1q29VFOzpj4qfS6GUR
W9Ti4lUtV03rdYK6mB+Ffzd8RN7V9bZ6mK8LPZISL9bW8PKWCeLXFfMa2+n1
iuUaH4bOe7VzhPZublPiopvOUUQcpjnKtR0fPvrgtRZj3Vt7mKqq5/Z8Ine/
JsnfcpLNGZ9ST1ibx2YoyOqnxKma2LxymNoGp5SvZu2nYo6j++wnNs+l5Gnq
eadNH2t6TE6OUVvNhyJ+qrSrV7+mw5FCY7RDve4j5mM+756ynwPy8QP/bVvv
NVs/crLN/dp8Zo7nOh97CapV+42Pi4b+2ySnkhRj7eF60qKHHeZHSn3F6vkR
edj+xfq2dj9VsPkgpPrObi1qPnDacd2bC/S4w/J3qUPbb2qa/I2d5KkPF92n
MbbNjrWN+vio2Nytx7yyrde26zHzX/jIIX18e3bzaxIzJEuT1La5gUrNepj1
TXP3RaoS+2+mre2RvHxvN+/tPHzFsQ1g6bFY9PDTf+wWmpebtn5rc5B2vVes
FUwzVKjblLCxXLZS+e2j1df1uLLZeNw51vux/vk7bA7T14TqMREjDHcfsT2n
1DSeVr71XH+Stmp1X82v19fpx0SAHz/ZYrTFxuSSd+nLL78UdjeZJf/M5Fdv
0yXyMz3uVedLb7uip+Jnj2f6kM8j4nvjeq1ubC78+OTH+v+7YullKppUm+8z
4kNPHCUuFYopd++/Z/rffD1BGh2jjvZ+qlDHTakaAzfrvoB+fewOVWnXtqtD
8+b3ujFlLZB6j5r0wHReY0a/nmczhnicQxo4pfvGU3mYytT9iDmf6bBjlXts
+yAjPsy233n8Cvn2dRnnDVFe70TBY1vUS+1b5/Fh6LyMutVHcpfrMD7+7RfW
v+V9PXTO+tWolzIuZ+jEZuW8a9lTTJ+wc1+tbg3sWJ+9n4o7ju6nn3YO/ln8
STtH1fWwKdb4NNOuXlVLiPmB+3XA5tpFljmgYD+k+THX3J+uh7Mee4mr+nHh
7Uy/TjAjcsFzzY98HyXqHMA1mV6f58+ruYOZfvjX/9uUdX6cbb+ar8OVML1d
tesMdfVHjfPvIvvUP3E9Yx7hfh7PsV7br8eSfsw88ht/Rixf3DthGp/p1jyW
yul7u3nvv1T7bduQV9ZKvscVuG8sFj1sO0eo48oyJ5nnHKb1QuEpioSuk1/N
mwqomrhs97hWiH7OXlqt6CRNHyvrrDFnPrlBuaatHf/p5fPfb2saoLaWfvKz
ySsekygcnqSRoVtMUxjzqpiLtLax4755MM402wU9JuRtiVBcukHeFQXMXbwl
131UV1cn7JNrWbbJ4ldPkxqPZuf3vO7hUIQCZy/odVE0k7Ee8/OU5vYANbdc
ou4d6nnJ4+0i/mqHOf4RlGQKdR+zrodFlMtjOZn9auB/fbeljQ3Dim/s9TD7
vXZ+lec10GL8XraBnd9VHrSMZb6+5jNm9Pqa9uepOUNtTPO39UV0H5Vtv0Th
2F3yN7bqa3jMNGe/1DlhaW+ufAlebpt6HOU1ti31um2ctzqOD6N/+TiMy3ep
VY3Xa2tY1nKdxsekMSds688/f3Lu+tWol6inmgcuPp+MUiwaodq16rka64O5
8FNRx9F99BOf98x5A+W7r4qfhA4qY3XZUx1sDo1TeOC87qu6wTv6XLzshfPq
vSIJOtH0GY0kHOaAPP1g78f8537ls5z92LNc77SPceScH5lujvH2hL+g4MA1
at7cYhpnzmtRtvlx9v16iypW2KwnrI8b2DiaTZ9qWpm3Tzk1zLVeO/nAiM1r
5zqZ7TCvyVMUj4bIY8nXzO57p3kvsw1z7H9w31gsevil9rAYh9y0a5G2c5Ip
Pmw+LrcdV0ai9ltt7TfPiXpORuqGft2kJ5a2lpGhF9LL53OocR1E1uuZbhna
RjbKNObKZEa5Od1VxLrkbblKI6PXqauxU68fLz/k89nmuaWvI+Y8logaS7Fc
+0wjI98uTeMVU659vxrEo2z+GgrR3soPjHlTtupho75GGU/mmUs92/OQZc8c
JX/sWypozJj08LLHD1BQr6ixXmSUw8azr/e02ma2jWzvO3N8uKHvFpv7L9OO
deo1mSeOUiTveprrlc/4MPevoheCltyoHOU6jQ9LXDL/dWUu+9V8LDvltWt6
ePZ+KvI4uo9+Msf1eO6wphPsruEZfWzE+HhuQTp2c0D+frAfb/nO/drvsx17
5ninXf3NbXCaH1Oxq7qmN1v2tSj7/OjYXQXpMZkC3f0iN6XU5G+ef9c7iz7V
/G3EJnKt187rsX5u86fLDk0w5i0lf9i6BufyvdO8l9mG/IAeXnwsFj1sPp9O
v0Zl+SxPU4Rp5oDvItXt4ve7WvNi9XlBP0dM6MeJp0WJl1FUyZcU65FkHEf8
fFTkC/s+zjInqlUf9euaonk4LSaUI9anXEs05tZ816aZ6QiNDI8Ii97N8/qu
NqfEgvq6wXM9dmg+qR+3XINKX0fMdUuF/MZ6s93IkZLZPFK16bzt9UWrH6aL
Ktc8Jszn/hGm4wJh43cxn1VnWOLDorIzNHLkmN4GT0t+Z/PF+P3VzghFopMU
iU0bXxc5ZqzxbWM88z6Iq89Si0sSBfqjlFDv5xHaOKb57n2Tj61+0eb1kUYj
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
+n6ugu7Q3vX1lthYuFfVBk1XFX0sT1At+1xR3Ush2dgHj201HOmnirV7qXRl
M+08PmEpI+f3Zi0gx6it5kMqW9nIfttI5Zt6aUSNzYSPHNLXN8/uUYrJMyRL
k9S2uYFKzXqYldfcfZGq1PK2tkfUnc+Qf98n5P3jQSpfvZfKmHk2nKCuMXVt
NLUvMHqT2nZ10c7OKPlM73MvWXuYqrT2z0df2GgQf8tJqtr8KfWElTU5JX1B
e2s6Rf3LeHx8Qzd1DH7lWE9N7z69fZTiskzB7o/1323r/0b/3hwfjg1dUPur
UcTgd7SHFX2YitEO9R31vN8qNnfPmXa83/4os9FksYHztLXmBO1oGRdtivSe
VY6BXeeoi5VbvrqRnl3TQV3XTLHTLGNW02h8THaF75EUGiOvGmN95PnzJNsd
A1KE3tvcpviejV9P9TkKJZS2Pyhj0c73wv9O405lpPs0eXhZaw9SFeunqs28
by6J3+T0ta0elsWcUK72Xdnao9Q1HL8/vgYAACBYLHrY23SJ/L4AedVrid72
mPhJ4K0PlLXkGfXasRo70q/tmvaRbnV8vcnze10LyLfIq/7+aX59X9VdDz9x
lMKmtYy/3z49jinzfM8s5TWP8fU7QVu1/bM1tXSFFidVy7eJmZcwDaldY9Xj
qvle207epS+//FLY3WSWfNSsGsS4xiu+Y3q0Qv1tCdNKZSuVc5hHq8cc66lr
kPovlF0mRqnEVF66Ho71Gnr5OyveNXzBykjZ+CjfPItF5w8bTZY+5rXP6SbG
JB9SWcesSaM9foCCQkLOUOs6pV7LXhjM1MPyDfLYjOFHHm+nEVl+cMai3blI
tnHHvg93H7HtC62vcvo6Qw8n6bAaAxDlmPy+s18q3tcAAAAKYrHo4XTzNCmx
sYy4YcbabcRju7g4kCeoStWY4npovt+r+wsdbFXWnac6yB+OU3jgvH69sm7w
DtWqa1lZfSR7m5a/S82DUxSPhnRtoa3t8ZhE4fAkjQzdIt8+Y33dmabfPTVn
qK29n9r6bhNJV3UNuK0/L+WnVOe6j+rq6oR9ci3L9dkcGsSyhieMuvDzmFB4
iiKh6+TnMS2Hemr9WLKmg7bVdFOZ2gfcTx3Rb9P6Wdb9XFqt5M1oOkXrJ2ng
lP77WN7eWHz+sNNk6WNezyV56igFJZlC3cd0X/hzjtk/W67heyq7qULVy+Iz
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
Ln3v+z92aE+uOsBgMBgMBoPBirUF0cNSHz3H9eJ/+1fqOnOGenp6yHekkZ7j
mpD9/W9f68uxjxjVr/pL+u5f/ZrO5NTDU7qW3B0oLLaaSCjbN5X/R7H9GzZa
9Myu/6XrX+/b3XRlfJx8jX/S/+bZP5JHWQm66Oug9iM+upkovA4wGAwGg8Fg
sOKtGD3c2tpKr7/+uqPx77PuQ9XDj/39/6OE6e+X9vxPofl+9eZZ5W+TF+gN
z98Y2vK1QzQhfpuuhxN0pmUz/UyLzX7/x/Rc1X6hLS/ue8GI2bK/v3LoMin5
B3+iH6l//+Gvq6jHlIdw87MGWqVq8595vPp+M7XoNXpF/Z3n/QHLd2d2/Qut
YtvWn7yqtG3fBvrRj36kls990E8bf/ZD+tWLB2iStaf9ld/Tqt9W6fHkXHW4
eaZZP3/gftjdfVkv+4rvHf07bqtefJMu5jxvgMFgMBgMBnOnFaOHJyYmqKam
xlYL87/z77PuQ4sP//gP1NTeTu0tLdS0u1rPoXju/SHiWnOLpgefe5G8q36o
aL+Kj5iGturhic9eV777/s9p45ZXdC24sfNzutj4T5YcBi/b93ktpvvjX9NG
b7me23Cea9Frh3WdzHWoWVdm6GE174PXQ89zSEyJ9k9OTtHUFLOEkrN8ftff
KbFvTetLyraP/aKWafwY7V71F8Z+ctRhamyvru89G726397g+SA3joptuS+2
1DfRFvV84rHfHbCce8BgMBgMBoPBFCs2X8Ln89nqYf73nNuretgu53bj290i
Bjx57t8VHfefXxKxzcSNU4qG/qvfMQ08adHDUxM36eKZHuq5eIUmbl6g+v/z
NybtqWhnRUveZp/HaKOWp+y/RTx3t+X3/1X/XtPKf1t1XKlrfJi8TnpY0/W8
Tmpc98z2/2Fpz1/+9x00Kcv6fvXYt6qlH/v7WhEfNrcnVx3OaNr6teM0xb6/
0lGpat4PaHK4WdfKG994n7q6jlB7l58mpoq5lxAGg8FgMBjswbdi9XAikaA9
e/ZYtDD/nEjkobu0fIlfbKWL41eo/eVn9fhuyyUlb0HTwxn3qIl76Kx6WJ44
R1s8v8r47a8y9DDTs7FTjvfylb9rxI4fe+lTtb5Zcnc1Xc+0Z/v4tPjbuO8d
2vjKFnrFW6bsR+jdTD2s6/1fOOthpzqcN+Usp2vvCfbbI9X/kPHdc0w7Iz4M
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
w+k=
    "], {{0, 735}, {708, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{450.984375, Automatic},
  ImageSizeRaw->{708, 735},
  PlotRange->{{0, 708}, {0, 735}}]], "Input"],

Cell["Details and Options", "Item",
 CellChangeTimes->{{3.663574772241871*^9, 3.6635747826442842`*^9}}],

Cell["\<\
Provides information about what the function has been designed for, \
underlying methods and often warning about what a function is not suitable \
for.\
\>", "Text",
 CellChangeTimes->{{3.663574772241871*^9, 3.663574789307179*^9}, {
  3.66357493548186*^9, 3.663574964575066*^9}}],

Cell["Basic Examples", "Item",
 CellChangeTimes->{{3.663574896526252*^9, 3.663574900110425*^9}}],

Cell["Often trivial examples of what a function can be used for.", "Text",
 CellChangeTimes->{{3.6635749685250673`*^9, 3.6635749805842524`*^9}, {
  3.663575012313146*^9, 3.663575015785411*^9}}],

Cell["Options", "Item",
 CellChangeTimes->{{3.6635750329667053`*^9, 3.6635750340427217`*^9}}],

Cell["\<\
Lists some of the Options available to a function, this is not an exhaustive \
list but does typically cover the most useful or frequently used Options for \
the function. Note that the automcomplete menu within a function may give \
more Options, this is accessible by pressing \[ControlKey]+K or \
\[CommandKey]+K within the scope of the function:\
\>", "Text",
 CellChangeTimes->{{3.6635750329667053`*^9, 3.663575051521944*^9}, {
  3.66357512262543*^9, 3.663575201234857*^9}, {3.6635752722036457`*^9, 
  3.663575331052463*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Hyq75JP+6AcoPUm5XluFZx4sdQXRjnhvZ/Q9gdhSWCvLqwszsWpBkDy+7uur
/W/bWoxJos6jG4vcyuqx5p4xHn2OmhmLSh+8H0LI8EHxA4Nt4+LVFq9eoOh8
Pbpv9nh4guqG5kH3ST9A6Um+8gOtndVYNX40AqYYcKLuMr5OXyvjc8DUBNRp
5zQbt3j1A80132DdayEYp3mI2W9/hJPNoqy5Gp9tfUvWGbfwXezK2IOPdueg
plWtV3lglSxbk3UezY0nsWpyAEbfOxM5jd2ivAlfvP8qJo0fpXmTYKz6pETW
O5n6JiZNnoyQBUswe/I4Wb54Wz6atfHUlWZi8YxH5VgmifLRgaEICQ7DZyYr
WhtPY8tbsx1+RxlrRfPQf18S8kPGF37gq5OX+lwjcPcCClnGi4Puk36A0pOU
67Wlo8sHNGHzjLukHzBebULx/vWqH5iZhFrtnNqieHW9oPBqbz3rafxem9tP
fzUKy19ScwgBU2Jx8tg6rzmHQ1e7Xdr7/aYvcOjATvxOxH4l7sty0e4bIpZP
f+09ZOZmIVqMTfEKR691oXzfKkd7019a4lqvNhfTtX5efPNtWSb7FXUzqy4i
Wnge5dyY1C/wF+FVxrm9R0KI71H8wGDbSMs76xHzdxWYUNPUhqoGz9zBR0cr
Bt0nn0dE6Um+9gPu8fuNg5cc53jzA7VFifLYxLePaMda8OGL/yzj8Z6qDjSc
P4AgpfzPR1BrbUHt1RaP9lz7O6+Vt+No6ga8OGcGps+YoeYeRExXvUSL5l1i
0SDOLY5/UvUKoqxW8yCP2sdzPkPWnbbJiKYz6VoOIxjRGzYiZsOfHDmNg1e6
h/w7k5AfKr7wA8k55V5zA8pagbJm4H5cue9gsH3253nF58+fpx+ghoWU69XS
YfMBFhljRz0Wgd25h7A74yCKqlpczjGXqOsFsd/0Hr+sxd9pG487jmX8caw8
tr1cnNd0TM7XJ24s6W3Hqv6s19qbvikLGWvV/YrPblLbOZe9Rv4e9NoHOFCQ
h82LH5Yxv8DaO1ZlXm8W5xYlPuMos4/n0RVfqn2UpTrGZ+9v1H1hiE3Zhs1b
FTZg5Z/34IJPPkNCiDcUPzDYNrzlBw4Yq6UfUPIE3vIDg+2T/z8jSk9Srtfm
dtugaTy3X87jR4+fi9Xv70FFi1N5Qzk+WL8RK7W1gGmvvg3D2o3IPt+C5su5
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
    "], {{0, 91}, {516, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{516, 91},
  PlotRange->{{0, 516}, {0, 91}}]], "Input"],

Cell["Applications", "Item",
 CellChangeTimes->{{3.663575343968775*^9, 3.663575345673785*^9}}],

Cell["\<\
This section often provides a range of examples of the function being used to \
solve real problems, with textual explanations of the code underneath.\
\>", "Text",
 CellChangeTimes->{{3.663575343968775*^9, 3.6635753538225603`*^9}, {
  3.663575851726911*^9, 3.663575878557293*^9}}],

Cell["See Also", "Item",
 CellChangeTimes->{{3.663575884150082*^9, 3.663575886296567*^9}}],

Cell["\<\
Shows related functions, particularly useful when trying to find an \
analytical or data manipulation function.\
\>", "Text",
 CellChangeTimes->{{3.663575884150082*^9, 3.663575911216687*^9}}],

Cell["Related Guides", "Item",
 CellChangeTimes->{{3.663575914852416*^9, 3.663575916740458*^9}}],

Cell["\<\
The related guides section is incredibly useful for finding documentation on \
how to solve a particular type of problem.\
\>", "Text",
 CellChangeTimes->{{3.663575917978094*^9, 3.663575961470996*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Entering Data into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Title",
 CellChangeTimes->{{3.655538816966523*^9, 3.655538840895505*^9}, {
   3.655539111459609*^9, 3.655539113941196*^9}, {3.655539338441272*^9, 
   3.655539340139387*^9}, {3.6555517822260933`*^9, 3.655551786712582*^9}, {
   3.659168369647717*^9, 3.659168379727459*^9}, 3.664085608579515*^9}],

Cell[TextData[{
 "Data is primarily entered into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " using Lists, these are denoted with curly braces:"
}], "Text",
 CellChangeTimes->{{3.655551792866411*^9, 3.655551820812173*^9}, {
  3.655551852553419*^9, 3.655551861291546*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]], "Input",
 CellChangeTimes->{{3.655551864220578*^9, 3.655551869088372*^9}}],

Cell["\<\
Variables are assigned in the Wolfram Language using the function Set, which \
has the following shorthand. To suppress the output of an input cell use \
CompoundExpression, which has the shorthand ;\
\>", "Text",
 CellChangeTimes->{{3.65555193325988*^9, 3.6555519887910223`*^9}, {
  3.655552156546164*^9, 3.6555521843106422`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myList1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myList2", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6555519902811728`*^9, 3.655551995823853*^9}, {
  3.655552185693655*^9, 3.6555521871237383`*^9}, {3.655552553772695*^9, 
  3.655552572030966*^9}}],

Cell["\<\
Lists can store any content, including mixtures of different types and can be \
arbitrarily deep.\
\>", "Text",
 CellChangeTimes->{{3.655552007263999*^9, 3.655552039541033*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summarising and Tallying Data", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, 3.65916834383781*^9, {3.659168382677369*^9, 
   3.659168384620981*^9}, 3.6591776404527903`*^9, 3.664085610975754*^9}],

Cell["\<\
Summarising data in the Wolfram Language can be achieved using a variety of \
functions and visualisations, it is common to create a simple frequency table \
of your data which can be achieved using the Tally function.\
\>", "Text",
 CellChangeTimes->{{3.659168825062529*^9, 3.659168920341165*^9}}],

Cell[BoxData[{
 RowBox[{"departments", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"", ",", 
    "\"\<IT Services\>\"", ",", "\"\<Physics\>\"", ",", "\"\<Zoology\>\"", 
    ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"", ",", 
    "\"\<Physics\>\""}], "}"}]}], "\n", 
 RowBox[{"monthsAtOx", "=", 
  RowBox[{"{", 
   RowBox[{"5", ",", 
    RowBox[{"12", "*", "3"}], ",", 
    RowBox[{"3", "*", "12"}], ",", 
    RowBox[{"6", "*", "12"}], ",", 
    RowBox[{"7", "*", "12"}], ",", 
    RowBox[{"10", "*", "12"}], ",", "3", ",", "8", ",", "10"}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.655552126028328*^9, 3.6555521454869204`*^9}, {
   3.655552668043029*^9, 3.655552674893113*^9}, 3.6555527881212587`*^9}],

Cell["\<\
The Tally function allows for the tallying of unique elements in a List:\
\>", "Text",
 CellChangeTimes->{{3.655552887263421*^9, 3.655552923006331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"departmentsTally", "=", 
  RowBox[{"Tally", "[", "departments", "]"}]}]], "Input",
 CellChangeTimes->{{3.655552924685961*^9, 3.655552933077327*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Physics\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"English\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chemistry\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IT Services\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Zoology\"\>", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.655552933644333*^9, 3.659173410350021*^9}]
}, Open  ]],

Cell[TextData[{
 "To use this frequency table to make a visualisation it is necessary to \
first extract the appropriate past of the ",
 StyleBox["List.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.6591689802278433`*^9, 3.6591690034137363`*^9}}],

Cell[CellGroupData[{

Cell["Extracting Parts from Lists", "Section",
 CellChangeTimes->{{3.655553138572678*^9, 3.655553139619234*^9}, 
   3.659177389332884*^9}],

Cell[TextData[{
 "In the Wolfram Language the ",
 StyleBox["n-th",
  FontSlant->"Italic"],
 " element of a list is the ",
 StyleBox["n-th",
  FontSlant->"Italic"],
 " element of a list, and can be extracted using the function Part:"
}], "Text",
 CellChangeTimes->{{3.6555531422630043`*^9, 3.655553174888493*^9}}],

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"departments", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553042611*^9, 3.655553060733569*^9}, {
  3.655553245827072*^9, 3.655553247946261*^9}}],

Cell["This is more typically written in shorthand:", "Text",
 CellChangeTimes->{{3.655553186466704*^9, 3.655553193846209*^9}}],

Cell[BoxData[
 RowBox[{"departments", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553042611*^9, 3.655553068217494*^9}, 
   3.655553249701075*^9},
 FormatType->"InputForm"],

Cell["\<\
It is often convenient to extract elements by negative index:\
\>", "Text",
 CellChangeTimes->{{3.655553204635379*^9, 3.655553219271543*^9}}],

Cell[BoxData[
 RowBox[{"departments", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553220941392*^9, 3.655553250825769*^9}}],

Cell["\<\
Nested lists may be difficult to interpret by eye, it can therefore be useful \
to use MatrixForm to visualise the data as a matrix:\
\>", "Text",
 CellChangeTimes->{{3.655553658055339*^9, 3.655553723162159*^9}}],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "departmentsTally", "]"}]], "Input",
 CellChangeTimes->{{3.6555537240423803`*^9, 3.655553728948572*^9}}],

Cell[TextData[{
 "When using Part it is useful to remember that the Wolfram Language is (at \
least in general) ",
 StyleBox["row orientated",
  FontSlant->"Italic"],
 " - so to extract the second column of the third element of ",
 StyleBox["departmentsTally",
  FontSlant->"Italic"],
 " the following would be evaluated:"
}], "Text",
 CellChangeTimes->{{3.6555532624739933`*^9, 3.655553338918837*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"departmentsTally", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553341088389*^9, 3.6555533482459*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.655553348719719*^9}]
}, Open  ]],

Cell[TextData[{
 "To extract the entirety of the second column it is therefore necessary to \
use the operator ",
 StyleBox["All",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.655553407105968*^9, 3.655553470052075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"departmentsTally", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.65555347173834*^9, 3.655553475318337*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.65555347570392*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summarising and Tallying Data: Summary Visualisations", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, 3.65916834383781*^9, {3.659168382677369*^9, 
   3.659168384620981*^9}, {3.659177634951868*^9, 3.659177638260498*^9}, 
   3.6640856138335247`*^9}],

Cell["\<\
Frequency tables can be useful in their own right to visualise data, which \
can be achieved in the Wolfram Language using Grid:\
\>", "Text",
 CellChangeTimes->{{3.659177240605611*^9, 3.659177271573247*^9}, {
  3.659177330122653*^9, 3.659177332785098*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "departmentsTally", "]"}]], "Input",
 CellChangeTimes->{{3.6591773348006067`*^9, 3.6591773481092987`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Physics\"\>", "3"},
    {"\<\"English\"\>", "2"},
    {"\<\"Chemistry\"\>", "2"},
    {"\<\"IT Services\"\>", "1"},
    {"\<\"Zoology\"\>", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.659177348636595*^9}]
}, Open  ]],

Cell[TextData[{
 "Through the use of the Prepend function column headings can be added to the \
table, note that the definition of the symbol ",
 StyleBox["departmentsTally",
  FontSlant->"Italic"],
 " has not been updated by the Prepend function."
}], "Text",
 CellChangeTimes->{{3.659177455748719*^9, 3.659177524745328*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Prepend", "[", 
   RowBox[{"departmentsTally", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Department\>\"", ",", "\"\<Number of Participants\>\""}], 
     "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.659177526180876*^9, 3.659177549857234*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Department\"\>", "\<\"Number of Participants\"\>"},
    {"\<\"Physics\"\>", "3"},
    {"\<\"English\"\>", "2"},
    {"\<\"Chemistry\"\>", "2"},
    {"\<\"IT Services\"\>", "1"},
    {"\<\"Zoology\"\>", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6591775502941847`*^9}]
}, Open  ]],

Cell[TextData[{
 "In the Wolfram Language, Options are used for controlling how input is \
evaluated - for analytical functions this might include the exact algorithm \
or tolerance used by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and for visualisation functions Options provide a way to customise the \
appearance of the output.\n\nThe most frequently used Options for a function \
can be discovered by typing a comma after the last argument of the function \
and pressing \[CommandKey]+K (\[ControlKey]+K). Remember that the \
documentation for a function also includes details for many of the available \
options, the documentation for a function can be found by selecting a symbol \
and pressing F1.\n\nOptions are given as Rules: these are typeset to appear \
as follows \[Rule]. They are inserted simply as ->"
}], "Text",
 CellChangeTimes->{{3.659177755679212*^9, 3.659177973872355*^9}, {
  3.659178004327476*^9, 3.659178023519074*^9}, {3.659178092598888*^9, 
  3.659178143940735*^9}, {3.659178228117546*^9, 3.659178251480897*^9}, {
  3.659178289722746*^9, 3.6591783530616503`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"departmentsTally", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Department\>\"", ",", "\"\<Number of Participants\>\""}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659177975600464*^9, 3.659177989634667*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Department\"\>", "\<\"Number of Participants\"\>"},
    {"\<\"Physics\"\>", "3"},
    {"\<\"English\"\>", "2"},
    {"\<\"Chemistry\"\>", "2"},
    {"\<\"IT Services\"\>", "1"},
    {"\<\"Zoology\"\>", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.659177990096781*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Summarising and Tallying Data: Summary Visualisations", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, 
   3.659178513038447*^9, {3.659181363046502*^9, 3.65918137580404*^9}, {
   3.659182002558535*^9, 3.659182007126169*^9}, 3.664085616611629*^9}],

Cell["\<\
In the Wolfram Language visualisations are split into two categories:\
\>", "Text",
 CellChangeTimes->{{3.659178717258232*^9, 3.6591787815512447`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Plots: visualisations used to display data or expressions for analysis\
\>", "Item",
 CellChangeTimes->{{3.659178783486902*^9, 3.6591788207586937`*^9}, {
  3.659178942724872*^9, 3.659178989655821*^9}, {3.659181445442285*^9, 
  3.659181446680204*^9}}],

Cell["\<\
Charts: visualisations used to represent data graphically for comparative or \
informative purposes\
\>", "Item",
 CellChangeTimes->{{3.659178783486902*^9, 3.659178816670637*^9}, {
  3.659178892837541*^9, 3.659178940246091*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"birthRate$LifeExpectancy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Tooltip", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CountryData", "[", 
          RowBox[{"c", ",", "\"\<BirthRateFraction\>\""}], "]"}], ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"c", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       "c"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", 
       RowBox[{"CountryData", "[", "\"\<Countries\>\"", "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TabView", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Plots\>\"", "->", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{"birthRate$LifeExpectancy", ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Child Mortality\>\"", ",", "\"\<Life Expectancy\>\""}], 
                "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Manipulate", "[", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"x", "^", "n"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"\"\<Plot of x^\>\"", "<>", 
                  RowBox[{"ToString", "[", "n", "]"}]}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
                 "}"}]}], "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MatrixPlot", "[", 
             RowBox[{
              RowBox[{"RandomReal", "[", 
               RowBox[{"1", ",", 
                RowBox[{"{", 
                 RowBox[{"20", ",", "20"}], "}"}]}], "]"}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", "\"\<Temperature\>\""}], 
              ",", 
              RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Manipulate", "[", 
             RowBox[{
              RowBox[{"Plot3D", "[", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"x", "+", 
                  RowBox[{"y", "^", "n"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y", ",", 
                  RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
                RowBox[{"PlotLabel", "\[Rule]", 
                 RowBox[{"\"\<Plot of Sin[x + y^\>\"", "<>", 
                  RowBox[{"ToString", "[", "n", "]"}], "<>", 
                  "\"\<]\>\""}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
        
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\[IndentingNewLine]",
        "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Charts\>\"", "->", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PieChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
             RowBox[{"ChartLabels", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
                  "\"\<d\>\""}], "}"}], ",", "\"\<RadialCallout\>\""}], 
               "]"}]}]}], "]"}], ",", 
           RowBox[{"BarChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
             RowBox[{"ChartLabels", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
                "\"\<d\>\""}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DistributionChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RandomReal", "[", 
                RowBox[{"1", ",", "10"}], "]"}], ",", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"2", ",", "10"}], "]"}]}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
           RowBox[{"Histogram3D", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RandomVariate", "[", 
                RowBox[{
                 RowBox[{"NormalDistribution", "[", 
                  RowBox[{"0", ",", "1"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"500", ",", "2"}], "}"}]}], "]"}], ",", 
               RowBox[{"RandomVariate", "[", 
                RowBox[{
                 RowBox[{"NormalDistribution", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"1", "/", "2"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"500", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.659180459922975*^9, 3.6591805065160522`*^9}, {
  3.659180541605551*^9, 3.659180582880281*^9}, {3.659180628677067*^9, 
  3.659180657006661*^9}, {3.659180692093977*^9, 3.659180693220007*^9}}],

Cell[BoxData[
 TabViewBox[{{1,"\<\"Plots\"\>"->
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {{{}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.009166666666666668], AbsoluteThickness[1.6], 
           PointBox[CompressedData["
1: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
n8nWsHXGQ0+Dfik6wgDsvTX8D2d2efE=
            "]]}, {}}, {
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029025381889095703`, 60.947}}]},
            TemplateBox[{"\"Afghanistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Afghanistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01272988359798132, 77.392}}]},
            TemplateBox[{"\"Albania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Albania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025378178663483634`, 71.}}]},
            TemplateBox[{"\"Algeria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Algeria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021785676051814584`, 73.72}}]},
            TemplateBox[{"\"American Samoa\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "AmericanSamoa"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.007394677284664818, 82.51}}]},
            TemplateBox[{"\"Andorra\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Andorra"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04534902648489603, 51.899}}]},
            TemplateBox[{"\"Angola\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Angola"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011552090715804392`, 80.65}}]},
            TemplateBox[{"\"Anguilla\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Anguilla"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01626595103784435, 75.954}}]},
            TemplateBox[{"\"Antigua and Barbuda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "AntiguaBarbuda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01658001774299256, 76.305}}]},
            TemplateBox[{"\"Argentina\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Argentina"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012848911795098198`, 74.561}}]},
            TemplateBox[{"\"Armenia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Armenia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009668432339302407, 75.455}}]},
            TemplateBox[{"\"Aruba\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Aruba"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013216366047995908`, 82.496}}]},
            TemplateBox[{"\"Australia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Australia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009664365497680395, 81.137}}]},
            TemplateBox[{"\"Austria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Austria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.017177043530490134`, 70.753}}]},
            TemplateBox[{"\"Azerbaijan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Azerbaijan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.016205289272766762`, 75.237}}]},
            TemplateBox[{"\"Bahamas\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bahamas"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014413593312196372`, 76.608}}]},
            TemplateBox[{"\"Bahrain\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bahrain"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019966147630768993`, 70.657}}]},
            TemplateBox[{"\"Bangladesh\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Bangladesh"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013080878779746579`, 75.37}}]},
            TemplateBox[{"\"Barbados\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Barbados"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010764721753046358`, 69.928}}]},
            TemplateBox[{"\"Belarus\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Belarus"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011951285723681182`, 80.548}}]},
            TemplateBox[{"\"Belgium\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Belgium"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.023240779457250546`, 73.882}}]},
            TemplateBox[{"\"Belize\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Belize"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.038685938274495735`, 59.33}}]},
            TemplateBox[{"\"Benin\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Benin"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010654874085506107`, 80.43}}]},
            TemplateBox[{"\"Bermuda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bermuda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018989305186092865`, 68.294}}]},
            TemplateBox[{"\"Bhutan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bhutan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02613981854909262, 67.26}}]},
            TemplateBox[{"\"Bolivia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Bolivia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009336738431517033, 76.37}}]},
            TemplateBox[{"\"Bosnia and Herzegovina\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "BosniaHerzegovina"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.022709038416839245`, 47.572}}]},
            TemplateBox[{"\"Botswana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Botswana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014771680536468955`, 73.937}}]},
            TemplateBox[{"\"Brazil\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Brazil"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014434256131268372`, 77.26}}]},
            TemplateBox[{"\"British Virgin Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"BritishVirginIslands\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "BritishVirginIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015076071922544952`, 78.547}}]},
            TemplateBox[{"\"Brunei\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Brunei"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009368102675336722, 73.549}}]},
            TemplateBox[{"\"Bulgaria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Bulgaria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03790404351758525, 56.344}}]},
            TemplateBox[{"\"Burkina Faso\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "BurkinaFaso"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.05131355177201367, 54.104}}]},
            TemplateBox[{"\"Burundi\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Burundi"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02628469595976638, 71.916}}]},
            TemplateBox[{"\"Cambodia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Cambodia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.039371303909643544`, 55.065}}]},
            TemplateBox[{"\"Cameroon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Cameroon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011338460651798075`, 81.482}}]},
            TemplateBox[{"\"Canada\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Canada"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019447367092834098`, 75.093}}]},
            TemplateBox[{"\"Cape Verde\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CapeVerde"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012055492875349965`, 80.44}}]},
            TemplateBox[{"\"Cayman Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CaymanIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.033530394226830115`, 50.179}}]},
            TemplateBox[{"\"Central African Republic\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"CentralAfricanRepublic\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CentralAfricanRepublic"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04819486098610291, 51.182}}]},
            TemplateBox[{"\"Chad\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Chad"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013828969442191863`, 79.955}}]},
            TemplateBox[{"\"Chile\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Chile"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01343078676567563, 75.331}}]},
            TemplateBox[{"\"China\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "China"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018516248631090432`, 74.038}}]},
            TemplateBox[{"\"Colombia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Colombia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03207696700007876, 60.874}}]},
            TemplateBox[{"\"Comoros\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Comoros"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01818759936406995, 74.22}}]},
            TemplateBox[{"\"Cook Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CookIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014948664096910261`, 79.93}}]},
            TemplateBox[{"\"Costa Rica\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CostaRica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009275597654075174, 77.048}}]},
            TemplateBox[{"\"Croatia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Croatia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009425207723573512, 79.262}}]},
            TemplateBox[{"\"Cuba\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Cuba"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012837451306219183`, 77.138}}]},
            TemplateBox[{"\"Curacao\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Curacao\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Curacao\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Curacao"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011417459027977066`, 79.841}}]},
            TemplateBox[{"\"Cyprus\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Cyprus"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011145948187309754`, 77.69}}]},
            TemplateBox[{"\"Czech Republic\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "CzechRepublic"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04009135012614612, 49.963}}]},
            TemplateBox[{"\"Democratic Republic of the Congo\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], 
                "]"}], 
              "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "DemocraticRepublicCongo"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011345616719826299`, 79.388}}]},
            TemplateBox[{"\"Denmark\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Denmark"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025099595353087062`, 61.801}}]},
            TemplateBox[{"\"Djibouti\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Djibouti\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Djibouti\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Djibouti"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014673028656535289`, 75.55}}]},
            TemplateBox[{"\"Dominica\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Dominica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Dominica\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Dominica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02065756502700392, 73.402}}]},
            TemplateBox[{"\"Dominican Republic\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"DominicanRepublic\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"DominicanRepublic\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "DominicanRepublic"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.027354505537861114`, 67.27}}]},
            TemplateBox[{"\"East Timor\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "EastTimor"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021474585400640796`, 76.471}}]},
            TemplateBox[{"\"Ecuador\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ecuador"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021911036311924346`, 71.157}}]},
            TemplateBox[{"\"Egypt\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Egypt"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.020110859372179466`, 72.599}}]},
            TemplateBox[{"\"El Salvador\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"ElSalvador\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"ElSalvador\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "ElSalvador"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.034770962926578435`, 53.062}}]},
            TemplateBox[{"\"Equatorial Guinea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "EquatorialGuinea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03978486806176674, 62.852}}]},
            TemplateBox[{"\"Eritrea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Eritrea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Eritrea\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Eritrea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010390029757344219`, 74.441}}]},
            TemplateBox[{"\"Estonia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Estonia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03484563709329464, 63.635}}]},
            TemplateBox[{"\"Ethiopia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ethiopia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ethiopia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Ethiopia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013253061559957261`, 79.44}}]},
            TemplateBox[{"\"Faroe Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "FaroeIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019967692873209705`, 69.81}}]},
            TemplateBox[{"\"Fiji\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Fiji\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Fiji\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Fiji"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01123855198913703, 80.535}}]},
            TemplateBox[{"\"Finland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Finland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012364630687411246`, 81.81}}]},
            TemplateBox[{"\"France\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "France"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.023479599692070825`, 77.121}}]},
            TemplateBox[{"\"French Guiana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "FrenchGuiana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.016043500116821603`, 76.257}}]},
            TemplateBox[{"\"French Polynesia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"FrenchPolynesia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"FrenchPolynesia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "FrenchPolynesia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.033170450147099455`, 63.48}}]},
            TemplateBox[{"\"Gabon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Gabon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04216062486816524, 58.818}}]},
            TemplateBox[{"\"Gambia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Gambia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Gambia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Gambia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03932803715766277, 73.42}}]},
            TemplateBox[{"\"Gaza Strip\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "GazaStrip"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01330612242977971, 74.301}}]},
            TemplateBox[{"\"Georgia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Georgia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008626742206204208, 80.743}}]},
            TemplateBox[{"\"Germany\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Germany"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.030082634978386022`, 61.132}}]},
            TemplateBox[{"\"Ghana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ghana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010450048766894246`, 80.19}}]},
            TemplateBox[{"\"Gibraltar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Gibraltar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Gibraltar\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Gibraltar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009308772995892419, 80.77}}]},
            TemplateBox[{"\"Greece\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Greece"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01613855882148565, 70.07}}]},
            TemplateBox[{"\"Greenland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Greenland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Greenland\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Greenland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01918401959860548, 72.768}}]},
            TemplateBox[{"\"Grenada\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Grenada\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Grenada\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Grenada"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013230337980249713`, 80.947}}]},
            TemplateBox[{"\"Guadeloupe\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guadeloupe\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guadeloupe\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Guadeloupe"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015431867154082825`, 78.854}}]},
            TemplateBox[{"\"Guam\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Guam"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.030508355579061605`, 72.099}}]},
            TemplateBox[{"\"Guatemala\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Guatemala"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008783699450823764, 80.77}}]},
            TemplateBox[{"\"Guernsey\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guernsey\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guernsey\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Guernsey"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.039854713566534895`, 56.112}}]},
            TemplateBox[{"\"Guinea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guinea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guinea\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Guinea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.039349189674959165`, 54.291}}]},
            TemplateBox[{"\"Guinea-Bissau\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"GuineaBissau\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"GuineaBissau\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "GuineaBissau"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02099025982559148, 66.295}}]},
            TemplateBox[{"\"Guyana\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Guyana"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025123764034804003`, 63.102}}]},
            TemplateBox[{"\"Haiti\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Haiti\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Haiti\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Haiti"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025526248207856348`, 73.817}}]},
            TemplateBox[{"\"Honduras\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Honduras\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Honduras\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Honduras"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.007589114525823635, 81.86}}]},
            TemplateBox[{"\"Hong Kong\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "HongKong"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009871574754619632, 74.62}}]},
            TemplateBox[{"\"Hungary\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Hungary"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01425970783390092, 82.086}}]},
            TemplateBox[{"\"Iceland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Iceland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019755294181806583`, 66.414}}]},
            TemplateBox[{"\"India\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "India"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018624024004282647`, 70.833}}]},
            TemplateBox[{"\"Indonesia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Indonesia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018773009142978008`, 74.048}}]},
            TemplateBox[{"\"Iran\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Iran"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02976630198351782, 69.419}}]},
            TemplateBox[{"\"Iraq\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Iraq"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015146596292814118`, 80.707}}]},
            TemplateBox[{"\"Ireland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ireland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010072870159730418`, 78.82}}]},
            TemplateBox[{"\"Isle of Man\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "IsleOfMan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019743077391024523`, 81.801}}]},
            TemplateBox[{"\"Israel\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Israel"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009086338317745765, 82.385}}]},
            TemplateBox[{"\"Italy\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Italy"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.034129128408706015`, 55.45}}]},
            TemplateBox[{"\"Ivory Coast\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "IvoryCoast"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01797144520656571, 73.525}}]},
            TemplateBox[{"\"Jamaica\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Jamaica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Jamaica\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Jamaica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008334813557403753, 83.58}}]},
            TemplateBox[{"\"Japan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Japan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008829082495716421, 79.75}}]},
            TemplateBox[{"\"Jersey\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Jersey"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029019111744966092`, 73.854}}]},
            TemplateBox[{"\"Jordan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Jordan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019943943901074544`, 66.536}}]},
            TemplateBox[{"\"Kazakhstan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Kazakhstan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0346632967679823, 61.716}}]},
            TemplateBox[{"\"Kenya\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kenya\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kenya\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Kenya"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02313184289104969, 68.905}}]},
            TemplateBox[{"\"Kiribati\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kiribati\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kiribati\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Kiribati"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02317521785061993, 74.288}}]},
            TemplateBox[{"\"Kuwait\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Kuwait"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.027360099878316453`, 67.533}}]},
            TemplateBox[{"\"Kyrgyzstan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Kyrgyzstan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02767669333339854, 68.309}}]},
            TemplateBox[{"\"Laos\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Laos"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010208631351823141`, 72.15}}]},
            TemplateBox[{"\"Latvia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Latvia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015024208449814303`, 80.007}}]},
            TemplateBox[{"\"Lebanon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Lebanon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02526015445131081, 49.446}}]},
            TemplateBox[{"\"Lesotho\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Lesotho"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.034590696159160605`, 60.556}}]},
            TemplateBox[{"\"Liberia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Liberia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Liberia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Liberia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01940341223206208, 75.325}}]},
            TemplateBox[{"\"Libya\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Libya"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009662921348314608, 80.06}}]},
            TemplateBox[{"\"Liechtenstein\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Liechtenstein"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010504127037023877`, 72.11}}]},
            TemplateBox[{"\"Lithuania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Lithuania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011636252463056483`, 80.547}}]},
            TemplateBox[{"\"Luxembourg\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Luxembourg"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008041090764607628, 84.36}}]},
            TemplateBox[{"\"Macau\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Macau"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010797237127856707`, 75.198}}]},
            TemplateBox[{"\"Macedonia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Macedonia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.035068743074013774`, 64.723}}]},
            TemplateBox[{"\"Madagascar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Madagascar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Madagascar\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Madagascar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03920603595198051, 55.311}}]},
            TemplateBox[{"\"Malawi\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Malawi"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01759597494242464, 75.017}}]},
            TemplateBox[{"\"Malaysia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Malaysia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.022737654469394623`, 77.919}}]},
            TemplateBox[{"\"Maldives\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Maldives\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Maldives\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Maldives"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04284355968354614, 55.032}}]},
            TemplateBox[{"\"Mali\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Mali"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009354168839665847, 79.75}}]},
            TemplateBox[{"\"Malta\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Malta"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.028920125368031156`, 71.19}}]},
            TemplateBox[{"\"Marshall Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"MarshallIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"MarshallIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "MarshallIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011009707694337097`, 81.41}}]},
            TemplateBox[{"\"Martinique\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Martinique\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Martinique\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Martinique"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03545952255818806, 61.55}}]},
            TemplateBox[{"\"Mauritania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Mauritania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010736820219843795`, 73.613}}]},
            TemplateBox[{"\"Mauritius\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mauritius\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mauritius\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Mauritius"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02854756662364285, 79.19}}]},
            TemplateBox[{"\"Mayotte\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mayotte\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mayotte\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Mayotte"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018817381387857962`, 77.501}}]},
            TemplateBox[{"\"Mexico\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Mexico"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.08815412423400786, 73.799}}]},
            TemplateBox[{"\"Micronesia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Micronesia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Micronesia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Micronesia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011974182701719235`, 68.899}}]},
            TemplateBox[{"\"Moldova\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Moldova\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Moldova\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Moldova"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009631027526517863, 80.09}}]},
            TemplateBox[{"\"Monaco\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Monaco"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02190910932927998, 67.503}}]},
            TemplateBox[{"\"Mongolia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Mongolia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011265875934876702`, 74.821}}]},
            TemplateBox[{"\"Montenegro\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Montenegro"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01967729240456513, 72.76}}]},
            TemplateBox[{"\"Montserrat\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Montserrat\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Montserrat\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Montserrat"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.022638099516739736`, 70.941}}]},
            TemplateBox[{"\"Morocco\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Morocco"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03974969456241976, 50.25}}]},
            TemplateBox[{"\"Mozambique\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Mozambique"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018389246981391685`, 65.176}}]},
            TemplateBox[{"\"Myanmar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Myanmar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.024708577975082344`, 64.483}}]},
            TemplateBox[{"\"Namibia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Namibia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02417215289378009, 64.2}}]},
            TemplateBox[{"\"Nauru\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nauru\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nauru\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Nauru"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018013593987011276`, 68.41}}]},
            TemplateBox[{"\"Nepal\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Nepal"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010658472802818253`, 81.038}}]},
            TemplateBox[{"\"Netherlands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Netherlands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015041404214746356`, 76.306}}]},
            TemplateBox[{"\"New Caledonia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NewCaledonia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"NewCaledonia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NewCaledonia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01363862495823141, 81.132}}]},
            TemplateBox[{"\"New Zealand\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NewZealand\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"NewZealand\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NewZealand"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02245901730295327, 74.839}}]},
            TemplateBox[{"\"Nicaragua\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nicaragua\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nicaragua\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Nicaragua"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.05160577417256911, 58.409}}]},
            TemplateBox[{"\"Niger\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Niger"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.041705536454762014`, 52.506}}]},
            TemplateBox[{"\"Nigeria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Nigeria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01859872324107284, 76.7}}]},
            TemplateBox[{"\"Northern Mariana Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"NorthernMarianaIslands\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NorthernMarianaIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014416366451771422`, 63.81}}]},
            TemplateBox[{"\"North Korea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "NorthKorea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012576666656711574`, 81.503}}]},
            TemplateBox[{"\"Norway\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Norway"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0250958929974095, 76.552}}]},
            TemplateBox[{"\"Oman\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Oman"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0246605181779804, 66.57}}]},
            TemplateBox[{"\"Pakistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Pakistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.017004009468141637`, 71.22}}]},
            TemplateBox[{"\"Palau\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Palau\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Palau\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Palau"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.020169608682146276`, 77.556}}]},
            TemplateBox[{"\"Panama\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Panama"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.028471553160917235`, 62.421}}]},
            TemplateBox[{"\"Papua New Guinea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "PapuaNewGuinea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.023534902934345264`, 72.259}}]},
            TemplateBox[{"\"Paraguay\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Paraguay"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019656433133276946`, 74.826}}]},
            TemplateBox[{"\"Peru\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Peru"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.024303252650360718`, 68.703}}]},
            TemplateBox[{"\"Philippines\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Philippines\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Philippines\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Philippines"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010774590483725126`, 76.408}}]},
            TemplateBox[{"\"Poland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Poland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.008426694715170525, 79.945}}]},
            TemplateBox[{"\"Portugal\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Portugal"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011746342078708377`, 78.864}}]},
            TemplateBox[{"\"Puerto Rico\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "PuertoRico"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011912956107193146`, 78.369}}]},
            TemplateBox[{"\"Qatar\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Qatar"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04015938111830055, 54.15}}]},
            TemplateBox[{"\"Republic of the Congo\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "RepublicCongo"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01661249177090191, 79.646}}]},
            TemplateBox[{"\"R\[EAcute]union\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Reunion\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Reunion\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Reunion"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010417339915768082`, 73.831}}]},
            TemplateBox[{"\"Romania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Romania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01177390605984691, 67.979}}]},
            TemplateBox[{"\"Russia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Russia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03499475997821651, 64.066}}]},
            TemplateBox[{"\"Rwanda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Rwanda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.011391907817205709`, 78.44}}]},
            TemplateBox[{"\"Saint Helena, Ascension and Tristan da Cunha\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintHelena\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaintHelena\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintHelena"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018017283548018913`, 73.2}}]},
            TemplateBox[{"\"Saint Kitts and Nevis\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintKittsNevis\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaintKittsNevis\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintKittsNevis"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015369587532146444`, 74.804}}]},
            TemplateBox[{"\"Saint Lucia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintLucia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaintLucia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintLucia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015043808894032071`, 79.07}}]},
            TemplateBox[{"\"Saint Pierre and Miquelon\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintPierreMiquelon\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"SaintPierreMiquelon\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintPierreMiquelon"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01603197249048873, 72.488}}]},
            TemplateBox[{"\"Saint Vincent and the Grenadines\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaintVincentGrenadines\""}], 
                "]"}], "\"Entity[\\\"Country\\\", \
\\\"SaintVincentGrenadines\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaintVincentGrenadines"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.026350750506230113`, 73.156}}]},
            TemplateBox[{"\"Samoa\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Samoa\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Samoa\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Samoa"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009691372077140721, 81.97}}]},
            TemplateBox[{"\"San Marino\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SanMarino"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.0365986554227371, 66.337}}]},
            
            TemplateBox[{
             "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaoTomePrincipe\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaoTomePrincipe\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaoTomePrincipe"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.018603768312132715`, 75.479}}]},
            TemplateBox[{"\"Saudi Arabia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SaudiArabia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03933473147854182, 63.451}}]},
            TemplateBox[{"\"Senegal\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Senegal\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Senegal\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Senegal"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009277795126693526, 74.059}}]},
            TemplateBox[{"\"Serbia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Serbia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.016388434260774687`, 73.187}}]},
            TemplateBox[{"\"Seychelles\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Seychelles"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03508422375332586, 45.561}}]},
            TemplateBox[{"\"Sierra Leone\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SierraLeone"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01023017471512738, 82.322}}]},
            TemplateBox[{"\"Singapore\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Singapore"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010592750142073464`, 75.397}}]},
            TemplateBox[{"\"Slovakia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Slovakia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01004679100019911, 79.591}}]},
            TemplateBox[{"\"Slovenia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Slovenia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029068732044152484`, 67.675}}]},
            TemplateBox[{"\"Solomon Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SolomonIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04548078063206645, 55.05}}]},
            TemplateBox[{"\"Somalia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Somalia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021355970492547796`, 56.916}}]},
            TemplateBox[{"\"South Africa\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SouthAfrica"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009895179219503536, 78.72}}]},
            TemplateBox[{"\"South Korea\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SouthKorea"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03664690610656131, 55.264}}]},
            TemplateBox[{"\"South Sudan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "SouthSudan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010172993715609376`, 82.1}}]},
            TemplateBox[{"\"Spain\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Spain"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01744621448719422, 74.293}}]},
            TemplateBox[{"\"Sri Lanka\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "SriLanka"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.026854112608077546`, 62.055}}]},
            TemplateBox[{"\"Sudan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Sudan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.017525395724355422`, 71.019}}]},
            TemplateBox[{"\"Suriname\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Suriname"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.029811132606050936`, 49.}}]},
            TemplateBox[{"\"Swaziland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Swaziland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012106253906079431`, 81.818}}]},
            TemplateBox[{"\"Sweden\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Sweden"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01099612798650676, 82.604}}]},
            TemplateBox[{"\"Switzerland\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Switzerland"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.024433263278576374`, 74.553}}]},
            TemplateBox[{"\"Syria\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Syria"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.00896414702264326, 77.96}}]},
            TemplateBox[{"\"Taiwan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Taiwan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03772258334942678, 67.248}}]},
            TemplateBox[{"\"Tajikistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Tajikistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03874020099243888, 61.53}}]},
            TemplateBox[{"\"Tanzania\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Tanzania"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.009536087568885233, 74.401}}]},
            TemplateBox[{"\"Thailand\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Thailand"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03838060140261355, 56.537}}]},
            TemplateBox[{"\"Togo\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Togo"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02502979737783075, 72.673}}]},
            TemplateBox[{"\"Tonga\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Tonga"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013968136728394153`, 69.865}}]},
            TemplateBox[{"\"Trinidad and Tobago\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "TrinidadTobago"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01732069567380019, 75.873}}]},
            TemplateBox[{"\"Tunisia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Tunisia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01643746866156241, 75.259}}]},
            TemplateBox[{"\"Turkey\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Turkey"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021126222400177218`, 65.452}}]},
            TemplateBox[{"\"Turkmenistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Turkmenistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.01408937448494032, 75.42}}]},
            TemplateBox[{"\"Turks and Caicos Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], "]"}],
               "\"Entity[\\\"Country\\\", \\\"TurksCaicosIslands\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "TurksCaicosIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.02311635554695812, 69.29}}]},
            TemplateBox[{"\"Tuvalu\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Tuvalu"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04378650408037754, 59.209}}]},
            TemplateBox[{"\"Uganda\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Uganda"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.010900802506002555`, 68.525}}]},
            TemplateBox[{"\"Ukraine\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Ukraine"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015713189472544808`, 76.841}}]},
            TemplateBox[{"\"United Arab Emirates\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}],
               "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedArabEmirates"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.012120362669980312`, 80.547}}]},
            TemplateBox[{"\"United Kingdom\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedKingdom"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.013157998841676802`, 78.941}}]},
            TemplateBox[{"\"United States\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedStates"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014829178208679595`, 80.152}}]},
            TemplateBox[{"\"United States Virgin Islands\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}],
                 "]"}], 
              "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"", "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "UnitedStatesVirginIslands"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.014388103718261491`, 77.23}}]},
            TemplateBox[{"\"Uruguay\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Uruguay"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.021578810261893858`, 68.241}}]},
            TemplateBox[{"\"Uzbekistan\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Uzbekistan"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.025777764311090575`, 71.626}}]},
            TemplateBox[{"\"Vanuatu\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Vanuatu"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019494763571904713`, 74.633}}]},
            TemplateBox[{"\"Venezuela\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "Venezuela"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.015366029406193154`, 75.945}}]},
            TemplateBox[{"\"Vietnam\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Vietnam"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.049026012997569035`, 74.54}}]},
            TemplateBox[{"\"West Bank\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "WestBank"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.019985647649802655`, 67.764}}]},
            TemplateBox[{"\"Western Sahara\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"", 
              "\"country\""}, "Entity"]],
           Annotation[#, 
            Entity["Country", "WesternSahara"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.028240466551240576`, 63.112}}]},
            TemplateBox[{"\"Yemen\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Yemen"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.04344620468527278, 58.105}}]},
            TemplateBox[{"\"Zambia\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"", "\"country\""}, 
             "Entity"]],
           Annotation[#, 
            Entity["Country", "Zambia"], "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            {Opacity[0.], PointBox[{{0.03308246841246873, 59.871}}]},
            TemplateBox[{"\"Zimbabwe\"", 
              RowBox[{"Entity", "[", 
                RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}], 
              "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"", "\"country\""},
              "Entity"]],
           Annotation[#, 
            Entity["Country", "Zimbabwe"], "Tooltip"]& ]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{
         FormBox["\"Child Mortality\"", TraditionalForm], 
         FormBox["\"Life Expectancy\"", TraditionalForm]},
       AxesOrigin->{0, 43.621050000000004`},
       DisplayFunction->Identity,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       Method->{},
       PlotRange->{{0, 0.08815412423400786}, {45.561, 84.36}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], 
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`n$$ = 4, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{
           Hold[$CellContext`n$$], {1, 2, 3, 4, 5}}}, Typeset`size$$ = {
         216., {72., 72.92636481165607}}, Typeset`update$$ = 0, 
         Typeset`initDone$$, Typeset`skipInitDone$$ = 
         True, $CellContext`n$113415$$ = 0}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
           "ControllerVariables" :> {
             Hold[$CellContext`n$$, $CellContext`n$113415$$, 0]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
           Plot[$CellContext`x^$CellContext`n$$, {$CellContext`x, -5, 5}, 
             PlotLabel -> StringJoin["Plot of x^", 
               ToString[$CellContext`n$$]], ImageSize -> 300], 
           "Specifications" :> {{$CellContext`n$$, {1, 2, 3, 4, 5}}}, 
           "Options" :> {}, "DefaultOptions" :> {}],
          ImageSizeCache->{252., {105., 108.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]},
     {
      GraphicsBox[RasterBox[CompressedData["
1:eJwtWHk0Ve/3VgkpEqkkiYyZpYHUk8pMRclYqQjlEymhMhYVpRQhFEpJiQxJ
g2SeLtc8z/Odjmik4fd+1/r9YV3rrHP3ec/ez36GK3Xcw9J5ARcX1/L///vf
/x2aIVvutrKgonjDjxk3glurTmwaT6zH12VyrS2rKbA0e+UC7djoa1mtOyfV
hrQN5cv0Gii0nh4/5/OCwu537grZ/4awY6DkV3wCBd3Ef3lhzygEdVA6E8ZM
fPNY7lLfQeGB8/fy0U8UVt2VjD26dBysvxwt30EWeAtuPJiuH4HPoWRaUlk9
XquKv7JxZKM4xsV1Qf0YWssxu1+NDnEVniODrRR+6BrsSiZ1wmXHzUSujuP2
KKN0uoCBB5ktU767GnHeyvLIRdVKpBYFpP6sofD2oJbJ3lQKKvfez7+qMohl
pvUGXXUUbvwW8zv4lEJ8dGqx6ewgAsKP+cpFUZBU3b45aZKD1S8eGBoUdmK7
eqjyXBoLTjCTbC4ehs7T5uGlf2lY3RSm72TDxPUqh4HpkS5MVqtf4Y+pRkpm
/QVR8r5tjbab7IoorMnWVSoqHoPuyxmNK7dZcJMceldnN4y0grDQZbk02KgN
yJs9YWPhmNDLU93jcPP7EZuRSMddtxNyRo9Y2F9qF++SOoysNNf03HEa/t6w
O22wkIPAl7TrY/aTcK15o/puayO8HuWJLTxHQfqmidbsFQ7mCSvtU27owI45
Yc1pco5/GmOOMm8oDO7Y0CDPNYkl16qvOQWw8EDog7CQwDBcleND2H40uB5M
aDK/RmHYiuZ3sooD1/vtdeXunWgK2Viovp8FzrtHpXu2DYFf80lPQX8d8pbb
T9w4xoBDb773FpkqeLL4bwQMl+PS8fBlXudYKPOI+GTXPYQJK6GPJ6xoOORY
+zwljIKFaUJ510MKdJ6VSz1If79InO+QT2The0fQg03Rw+CpLLy0p5eG4n3/
ilSs2Fj5dDzrQ8oYooPlYSNBRxfdbtsXQSZ2PRcUbrrUBpPKpN25l6rwujgy
9egyCnmTOkOxOmyoF0afDexoRXvx5q0RVkz4Gy/cqVTYhdb+qmmp8GqUJB0e
WXKJjZKn9flDW8aRsclXysSODoGnJrz78znINZCmL+FmIejyG/6tAs0oUemt
eEFwta2be+x5CoXutPzAtiWDePzfy8HjAwz4vQkqWpvdDN4AA8Wj1ZV4E/zb
YqCMhVMvXPLXmI+gp9hnm6pzPaJOLGgRbCd9/pTLXFNMYdd31f23PcfxoOfg
mdAMJjafWz83734f0pJXVJS+qYHU3GLayQoKd/7Tlr4eR2HZpEmavm8fcmeV
xzo2sdBxYnHq09JBpLnrLKi9Vof2a+KrSvcyIROzeT5jfxesxIuH5D2rUfGp
hy+3loJ10I/ZnscU0meuXi67PIjB/CBDmUo2FJMs/tx2noBSl5fBxxY62Oe4
ZdNaKDQL6Jv+I/iZOK3cfN5kFAZGEylNbiw0XtvVk541hDMzJ67rb6LhxMeb
R8Tes1Cb/NCpYN0INq4wW39zTz0MZT+WxR9igeXRetjRZggHeYuVJb7VocAs
Jitdmw25eXNHUrTG0CMRN3/tUANiU1SLN1ZROLhBYufPQgqeTHG5kpMTGIiL
5St0YsAkNH+tRFgVbiWtrcumylFw7euuBrLPDbvmbVN8ScFK5c0HhTsMSKzZ
Iv+S7PNvl3zhl3ksmD825l30pAVC1V8Oa+tRiNwvJz6vhw2/kxK6hmbtED1S
0ZtAI9eTC8OnCY9lx9yte2A2hM3Mw57RUUwkPtP2CcrtxalshfirJ2rQMZ5Z
p0xj4WkDn1+t1wj0IvesHgyqR97D1P6HYQy41C7qOBBXh6861h7Xz1bgttHM
Of4cBhR+X7ZNHye8diozvnNlJextrv+qiGWDtSFcs/L5OHDufMbV63TUu0pc
iRTjYNat4ty+l5NISfoUfti2EdeLZ3spfw50dpSPGekwUcu4xxmbbUQLr9PX
HB8yr0zBzpJ7HBQJqKpdm+lAmIyCIb8pB6cm1rACPBlw3TC3+l96I7YV+MtH
HaJI/22L/q3ngPepR93q6XaEa/fPxBBcVtZ6f2skcy/+5WA7NzKB2ez0yOps
Nr7feWtOLZnAC/EorrJsOmL7BM0ECU5WpASmfcinkMznO8+SfxTG10v6uZso
OMwTdTz2mkKO3bEDycojiI1sMvpN+rzz8Z7y4nQKiYWzFvHeQzhEu5r8KI2J
uuGxq9fc+tB/6fTXU09r0PkkQEL0BIWqPxXnt+zl4E+B32GbAx2wK1vjXxZO
Ibcw/tGdZAqffd9EDzuycN3dspKaZGGFSCi/87cRXOUZDRoYIHtneu1nM8FJ
6Om52Q+aZM7ZabTcY11QS3OdGv/FQdjy6itnmCzIcg4zFKVbEaMxs8KyjcLK
rMTS6HcUbDMyOlq4xiA3/+eLQ94UxJJyvesiOIh95yKtPtgBYTtRjY5GCn4D
E7R55H0X6i7iJIuN4P6hixEaRC/tvtdb/sqk8Eh8Z3ywIQMfc5zdz+Qz0f/f
9tQVv/og4eY5pdJdg2tnHxxQM2PBc5NK5nJFwp/fopxtm+ogdDyVzTOPwgar
1KFzC9gwU7Po8rdthTn7rMXTAyzESPzinzUZQuHHZ/m7mXW4LXdvy8wFJgTN
fi95+64Hq6wmI1fy12BOTGSM1cLGkJBizabECXBKf71mMugYELi4baaJA7+k
7G08rixsaBAp9p9pJrptf7ma8F6y0KrRRe8p6KhevczcNgEfF53nUddYeLR8
O/vd5mG8657QjIyjwVRTemXWDybCw0OKjj0fgFqRWti+t7WYCzoffbKNge9q
s3xJK5pxyJ7tL/m4Egfe/vKLtKCwcZnDz1UiHCinOg0o17YjJnBcLoXwnk5I
zRR3PIUAqcCp4ed9cB85pvxDm4G9AhddQ06Ugi7woHDStBwKzxoXsgzZuDPn
nafy3xhsnxyfmM9HR4CasFehJRPaed+Cm291QeuT8G6rwGos7V7gnniPBcp5
LY/bf8Ng14qHfSqmYXhwKtDcnY3eguwbp/6MobQrMTZyFx2S++/GbyY4uJ60
004tj+Do7hfR2L2TEGEXeO87zkGFXJPi5zoGWvhSXp2tb4RO8M97p4nOlf/O
En9NcL7tgZmbhjgT1vPvcPmQPlb87O3IJXV+1b1R79SexPB37r4efjZMYnuO
iV0axZBh0KJg0wZwV2r4RYYT3P+kqVi4MzGvxLdi09ImWCuveixYTuGpQRBX
egyFMGnGqaQDvdg1Npb0opn4pSXm0ZOkfuall7sPD4xgQeSAiGsICz7n21jG
ksO4mL9Y/sA1GhR6Qrenq7OQyPoSJPpyEJLy1ba+F+qgU6CU5kr2zaG9htnp
z4Bi/YK+U68akZBqfURJhYLj9cssuzg2ZrcGzruQ3QbfV+c3O+xjw9uXR+1F
+Bg0K3W3zonQcVlDdm6wmtyfs9pw9hGFL7PSBvwFA2iJTRVvJefrh0vhN7Iv
w9Wyr0ufTeKpQpPeHfJehxIeMgbeUuj8c6b58t0JvLojXxnGxcbWpytD11qO
IuKYU5LuhgYEDyp6/Ca+y69wDf8k4a30T6VzD/aPQ1uonfc80dmdt2WZXB8p
GN0dkRK/PAYvqzlRd1uiR+mvtqs7D8F3zkLg+t86PHrcwL1Gh4Jl5xH9eWVs
hOhKLuESbYe8RM3abcJM8L5UtXB81QZJzq1FZterEA3F74+IH07b2H9qF9Gd
Z6G7Y/gUhtHaLLnn/jgTFi9UF5s4DkC1b4F3TEgtdsX7FRXfIfcViu3kJ/rb
8UxUNucPE4512zruJRL8H6rk4xDdid86s/O9NhNdu7wGk+gcLPlXri1PeM0q
9tkth8FmGJwsrjMNpjB+q3ImjXzvUtuFma4/LJw5lro6roTC0vcL7E+Q51zJ
a5P32taNIMk7dewrxDe7LH/xIYnCye7ZRdpNLMT6/z2USfiK33+b6TDpT9c9
tZ731eM4aLPGfOA8A/MivBeVXqjBJaPoiDsqFdgilW3l8YiD6wqJ9jvfMTGR
qV2me6IJOobylxvLyH6ab9CSJTjMOnbJPkmyF/5T/wyPBlBop+/20M/gICgp
SddRvhMqYZr9AbeIvr7h3Wrcy4Hl80d8g4mdSBGoOXpqFxtNZYuZNtZjuFte
1Wf2twFacVw+DW4UFI0jbSadOHAzX3b04bUOJMdcGx2eZkLhFL9N0r0BtCkm
he5Lr0WHfnkXD5n7qbLJkys/UDgxq/A3y3wM+aeto8brKSxWusH9NoNCXe+3
c6mdQ3izu6a7iPC8btuEqz/ZS/+hly9E1MZgntqyhEn453qUJddjwj8tPLef
vZvow0i6mt9uUifV9CLbj9Tfujdtxd75E0iPOahwuJSC1i+9Vr67FPiidurP
H+5Gzn6fW5L5DIRdrl++eGUjYmhtSunrK1Fcs/0evzAL3nqKgUJSg5i/zizW
SKgOLVr7s7lDyVzSBf+pEf5Y5JsioVTMgmPCctuFj5jgul6kEaXSBwWO6f5j
d2rALzezaLkxAxdWSMcqapVj2Qv/xbRQEp5Cei32PWXgzJRApMVGOprTc44z
GBVgtxecX9HFRJuPKfdf6QEIj8bMu2ZVi+KtZ05736BQKHFAiIfoqUfTUHj0
BRZ+Bs+xPyUQPt/IkOtZSnTqv/jdF0Jr0H/IrDzvBwNZySVrkla0wlrk9M4c
6SrciTewSc9noy0r8eSOdRPQWajs9OAtHW9HlzkuC2LAs3z/aHd9LTb/WTF1
xqYCEsY+xf4Efw8iFhSrBVLoGbI5V72sGw0jZWOpYCHAbZAmNjWIvBUZJj7p
dTAf99VWvM3BUpni63cDmFg0a5D5cEUTVOaX3M5YwkHSZzdo+U1im6qB+KM9
jbiwUnNgksYhuWAXh8+a1LOnUfZ1zbgm8eSVTSWF0ZadAbceUODasUrrq34/
incd6xLbxsTpg+5JGdKdeDO850aHTDVUZjUT2DXEV20q7ftO9Ll982SnYn4z
Uh6m9aalsxG0w1wxgzWOxfV/mzMe0yG9y7dkH/E/ScUmN+flkDx6sl3Bx2wE
JpzxKgbxSV+s/9x0JdfvqaOvOmYSUr69O/iyKewp7Yn8lUV03lBT0uLHJGq4
X/RWkDrnagbNuXLJnlY9WC8eOAIBawm7px0stCm4bh57OgIZ+cVlKs/qERNm
NOtE/NiRENklF4h/G8kPf6qsNorCP8e/KBF8xqx2inpE8q4LM69LobAbR0JL
R7ssGDjp6TUzf1cFVkRJu59+Vo6BkDzP1nsk53+54rz/Ccmzb6xcH9cwYSim
m59E+HzVj4dwJXy+atRDacGDAezc3Su1ktQXdnNa3V1AoSij1Nrv/QQCygw6
Pjcz0bFCfyN4BmCcZjrqvLMWR1Zm6PKOsqHhnXdZoGcCx4M1Ilu5G7FGVwxj
Sky4yCb892trBz7u6xF/yKjC53flD66SPjxM/n7Pi/RtfPeqedTxEUzb/P6e
T87xw3Yt+91qwhPWKsEuG7og7MxIuk/2tHODdj8/2ffbfl+8thQMYbg3dKuR
InmfZ+GCOyLYENM7L7rrbhu+KohXLj3CQp9Jkb7exSFE6vlv4hakwYRp9bvS
iYWeZe+syuKGYF5oX3RWhgbxFa9THymxMH+J4E6dmEHMzAU5vnCug1hCgsM5
oguiOwcXDhPfFxKxRElYdBhbN5ZFOJP5bWJZvztM9G78hJbs7U+T2On/9+9L
wiPVGg8XaRFcRBlL1VTKTsI+RSaql8zR36j2lw/p53GahIDX8VH8fdB3crkw
BwyHkCcZkZMQ5ePfY2XeCDMNHXO6KIXpRXHr7hqzsfOJOOPvbCt4RNuz5wjO
n3xjyzESiE8YcVSMovfjiI7wg4WDHAjUivT7x7KQup6X1uTYggUP/Wt//Gbi
QYz2UsfPZK59IWenq2uRmWgc/oGc26JKejaT4PTQPsNY4e5JaKWL8kVEsCBf
GBNVYTSMMw39/Y1pNLQn/xNPJTruoC97Zvg+hYvhyvu5G3vBfTVuV/dNwo/0
wdL/SI6OHWjn09/BwqhJzoA5ud9H132PGrnf1fe8pNONXpRYLNGVIOdfU77V
WpDs6eaGHeouIv0YTTeTkT1I4VV8sWmLONGRu6o3jPvbYaL4yu69IxNBykO6
is7doFuvKfqdV42hJn1lzwYmJm97a+mP9uNJvXLgnEYthGYWVVmT/pYyfS//
I7hSvsPFUQiYhIAAt2hPJAXDwzda9FIprF3hDGEJFpi36B9kM9k4eXJqOujv
OAJ1nP0mMugQyIy3v/SZAyfB0ZtiKiwwTJ1+lZ1uRnGSU1V5IBOpkoaDVct6
obx3q6qoQg1+WHc1KnziYFPwc749siwMdZs+LrRtxuv0fT80ItnIaO5rrb4y
jmvapkpifnQc5BPjtyR6/c39Q+8Q4QcO7Y9h7MAweowUXERHGdBqFfl28Gcz
jnbM23u4uxJLNULe70lgI+uc1NOHBePI4zr0RTqSjrBM/sUh0hw8SRtMqGuY
hEbicdVyl0YkmW++zkensLzTXFSa5JS34+KeAQeH8VFDq66IzHugZi2/Bum3
xKML1z6/6sKQzQWhvAcM0BdEPqqe14BP4WcMvIsqcENuvdBILYV1s/0d+oQ3
ppJt2IlRgyTnHRj4Q3J9WHVaqynx0dR0gctL2wkY81bLMw0pSPYwJe5Ps4E7
RoUmQe3w8HCV2078ygJLKVMnYQpnK/vKNVd24YBNzqmH7Rx8vPejr9yHhSdH
mwZLV7YgKJomGOLCAPdjj/ufuqtw3+j3D/vZckyZPLMSfMSA4Xh6buK1BpQQ
5yjVUAEHVsKLtVoMzNbQTSuzSjD7xeZK6KZyPJkrnT5O/OTtXO+pf0UU6CYD
HVmDYzjo9Xt4PcGty6oJSorg9ovjkS/rTVj4omQnz+3BxIjC+9LinT2I/BhV
msushpnSlbNvrjAwqbKhkrmjDlYiDj+cTlbg6ol74nExxPdNLzL41t6L5fW+
aQzPGmzP9zJ+WMTCmyfNyFEfQcXV6XWm++sRKnnQ/GcmBwXulIARk4k7ZYsM
lVqaEKFR0WfBYCDm4PnaZqMWXLCRbztNVaKLtqFwjuhp33je+SLCJwL9GwPW
CE3ihcSC/gjST1mboPiDJI/oHpSjv1RkQrL0ybqbbA4UgvfoFn1mYVWDvalM
SQuygoVUrAspNPfzfG8ivOXRLVoncHgSYXa/Fn6RZ8JWVtZA6nc7Bl0mBLxJ
v89t/KCrWcXE+ZOByUGP+3GrNfRhgxjRef0lA0VfOJhyiE0cb2Ch9EB4ZslQ
C+oLRVUc7jAQsDxnb0UpDQ3nG2ra7legyyu76KYEE1MajjLHHNrhJBm/5llu
FTq+leTk6LDw3c/eLrNzEG4FTqVzsXX4+lhfO3cDA33v+24pRn7G8ZseOZ7L
ymEcl911leBJU7OSfWPZJIwLzAwjVjdCud39mEIhEypnh3g4q/vBrVr9LWm8
BlEt08I63zgQiU5vTesmvG5X+7X+Twsc/W6+9qhkYMdJhkmUehO6jErTaG6k
zyE1kjuI705fmZggpk/09XH9rwzJBkifr87XrGYhVJon6oPjCO79XMybcK4e
Pqf/RVj/ZcPVOe2z285JjEh5/IpSacToz2MePAPETxuID89sH8D2R+26Nm61
yHgs/mAJjYJ6oqpE8VMKEy13HF4vHYL0dj3baj4OXi+18G9ym0THurVVjjsa
8eeFQf7YBwZOvXfrS4xsxHst9dXn9CoxIbWc8YT4gIEnsqH5hN9ka2S2frwx
ibdWGQkniJ4evfQwQ5Xg3GtCXIv6OA7VIVOlqxuZCLiw0nbZqw6ELZwWq+Wt
Rq/v9j9vfFmo7W0YNJwZwtZD5ryzJ2mQeG/YmK3OhESzlV1KSAfYZrpHf/6u
QonHueWZdDbSlCxnHCImIDylv050hI6pz1F/9hN9pOz0jk0S3eOluAO6p8ah
6VNE73jGgXd4za3kNibKfMIC4540YfXv9TcM/zJQFM8tkHGpFepJEqz+bVWQ
uJXnv7KGgq3j1Dt34ldnU7uCa2gDSLh77dO3E2y86rn791DPGMInvj+W2kSH
4JkkJ2MPBn4ZLMieqKnGgdPh9+VXVSBpdq3XcxMKv2O9xNvn2Cg+vVkvIaYd
e/svq6QQP+MYu93yAfHzrpeyT3Wu6UFK9iXRP4QP908urz9CPr/UGF/1GSf5
fZmzcd0iJuYL9rV+UG7DFFdXy1+XKmh9FzoUu52NL7HnXLbuGYPljgsT5ZwG
mF4zeWyyjE321Wv//ehRpIlFEcg3gMsrrsJ1CeHZ7zKzHYps2IpP27Bft+L5
1cLlToRXA29AXIvkR60/wn2a9oPYx9yiqZDFxIrlVcnixX1g6Z1p062owYv3
ocfNSM5rqtgrsjR8BM4n9lTORtXjh9650BoWE2L97UFMnwH0jx+X/HqvFuLF
qpE5r0gum/98lzvRF4cuRoOHAAN1356KOxK/x7VsecAIySP8Fq+dmwIH4LLp
8gc34q/09wcMZDwnutRn4yf9ZAjel8uOUEVsrBgpiuHRn8DE0lKn65V0rOt2
eKOvwoCji5cRej/DxurOLxPxcqAys+F/82ZLdoQYiQzg4dbeP7PGtYgzumcl
R3gqvjRKrIDk64y5A9IzfgwYqURmnMti4F2RvVv3Jzp+O0x1cwQqYXs/6qLl
XZLbVU5HykWPI5U5Zv8xkI77gpc/L+hlIKetmdvkcjN2Rh/h9/5QiVl1I97g
NDI/eR3uR8SnfTDf1FGbxoD9rR37Pu5hYlqi/mrbm05UnA8fKTWuRhy37V0n
fhbMtsx7bvV3AO9p7Yc/fyc+9lChvOxZNnx2ltgnCY1j3SquYFsT8lwtt/dK
/xE/k5OtA08OHNelWL5L6cAx4ZWzvSFMfDe5vWVYpRdZ55cYu2nWgKt9tUBU
NAfp5TLTXNFMvLYIibOQbIIzy2FiVRDpe/nxxfIk77/xy51+S3DTH/BZ4Wgo
B+2fFjSVWDOxddm1ul6eJqSyOrcfJTp+yaghopvo+G87GV0Hv2Fszlpo4yPH
wX0u9fkB/ZMorRdsXX+mEf/p723bRvTuu4Wxc3wxhXzFbrrw4XGUqEnooI5C
TYBXGx/p05oK0TtH3w5Cmm3VeNCThVsxNg8304ZwY9ntz39NaMjoGYrj6WFB
Mt/yps6bEVSu+W7nlVMPpcJUjafJbFxtF2meqRtHdpDJw9r7dOiKhKJjhoFV
/haZO7tb8MzDs2FcpAq57heX9hOfwJji96MTvZJT4zvy1WgAji8SJLQI/vUT
vK/QiB9bkjtfpt5gEJbeF6f8ezkYPiiYEEN8aOygWZazfgu+hRyw446lUL5/
9/EUcv6pTh/NIaK7r/58LPAnvME+zXXckOj4Ia/enXq/BpBRo7HUOIRCytDl
V4LkuSlO36q82Sw8m9fVad9K/PNMimjYW5LnWGHG6+NGIXrnwrEAkisu2PPp
ZpE+H+M0NKw+wEAF34DOmrUkZ56tG+21HsThVwvZd7bWwdFWdI92CRvTebTT
QpYTqB/esrm5jg4hP55DlbeJv1RdJ/GYvFfKRalL7QIsBJdraLxtpyAlcSv/
LtHzy5v+W7UifgzFYQq7L+9moC1sUYTW9TKI7/lZ4uhZjvCIuDbflSxYuFvZ
F2oPYjg4us9Vug7beVVzRQbYeKrBu869agKympcqen/TsYB+oNGTnPudfa7t
YmPie69GxCyP6cIGW0WNsyR3bJU2nc/3icLV3Z8ZEwnjiK5YVbJfnfD5js/K
95eOIXbN/ITFZQ1o3RVY9m8tB/HxgzuGP0+i/7VZquTxRqTTJL+vLSO+IZhH
y4j0rdG1b75zxgRa/f+LYHOzcXGebkXUiVGcuagv7rK1AYXdY7b8GzlQGag1
s1nGwO6myPmOIY0QkXF8JEd8/2TXAxk20cHr736GTB8j+rQrfzWN4Nyhhe96
BeEtmxO6EsLpw8jv1kqlVVBw2sZQcCL+paXitMgX/wmYdMq4ZYYz0PoH5wRF
aeAzrT4nHFwBDWX1TdYaBAeCS/65P2VDKjvtTR+9DZlBFU/PyjBBH9Nudaho
x+kPv04tra+CiWgl7/wrBH/e/5TsCU66j685dHmQhbhdrYv/3mXAesvVmbzl
9Xh8puQ3M7kC/cKOfXJEx/leXdblJnq3sul14bvlpA9S60S3k/mWd/aeiCDX
L2g0HSlyGoPDPqezIqRfbzzrV5gT3yXYeX5kvtckdgTI5nd2s9HI6jieUTCB
tTkSMULf6XA4ePmFGemzfLnyukXRFJSySmUzX/XAulm+l/8wB+sT+c70FTCg
/mGv94/yRgzrNC384MzBwdvnzh7sYoAh2WD8tbkRW+kCneJTDKzpbRdoSmlB
ZpOwW9zCKng+Hh7IJDjYMu3/5yzxEVHrxU7P+zqBskWDf031mND13qvOCO5E
1/241dG61dhX1sQjWcpEl/Mjmpt3P1YKSqKfrxbRNw3uB3JYeP/dvFqcfxRu
RxNNV0/Vg37wtXzIDw7qed+L2AyzMG8yZvGNpa1I0tv/MTuYgvSzQ90X8glv
bRjVUtDrRMzmzo1txD/0/pk58+Z/v7vOf+K4CsOwcYvO9WsmOsRbSg/Io7Aw
W8FEpnYEJyzXXN2gRWGbceTQ1yw29GdzI5rG2jD9ue9ZUioLX21PKEW8HoaK
AK9LyzQNAWVHxyKfEB6O23Hvei0TsVozUosjmrCxQCvnsRQbVNzPlydbRyH3
XC2sIboBv4aNnqiOcNBfOTMjR+pxi+ODo18LTP5dmtmezcKHkW15p6hhyNG8
DPetq4eBzqtvJtocTN9mqEgT35oiU1vlcbMRI8E+6QxfBnZx8az9M10DutnE
Tf7tFdj76UHcbzsKWexGhwlNDsY4z16eXd4By6ixhrgxFnpfXmnTGRvBi88q
Q+9a6xG22CJwjzUDO7cRHZ+owKuCay1yH8oxaV/al5zPwke9TIEB3hHcTKa9
Ntasx0+NjRJDhHeGVwXdu0H4zE6qNUWnkYG4dZVuod9ZKPNj3D63YRSf08sG
+PgbIFzP/m37ggN5ywC21xATOYkf1Zs/NaHPYk+9B8H5QMA/s+hnFEpcP4j0
aw9h8lJBUoMjqZ9ixrplwEGhqcyhHL0OuOl/slxWQnLsscS2MyR/7xLco+le
NwGFL1uvbCQ6ZBRK/3HgOgX7Z9n57XLdEK1iKV+UZ2C5vV6zsNJn6C3N/2/V
wnIEGWi+sydzL55T1I8hPnaP/Qvt/sxxfH319WHYSSZcz+jt31bUjSD1JXqq
tdUgJOsUdIiDcG7BN1QSA/rVuk2e7xuRzb7tf4fk8ICXoz1v/AbBNAqX9LKo
g2Bxcn8V4WM2LeLUB4FBeGr8CRCZT3IH68DZ+VfYOB9+nOlpPU749YaAmAsd
8b/eBprdp5Cpv8DeiuiOt9qoVHUK2YenGwWG7zPAdSM6xetmPYS66pltWRVw
FzKVUmr9n79XGjtI9qxL9cTZ/tvjeJn8RVOfzUBoPHVE7UILhMJkBApnK3GF
92X85R9s2D09OrtNdhJLX/9suSHdiNcNL0TjiY5HT+i9P0fqjCZv1cv7OQbJ
JZb73q6n0PGE03fRl41ZqWOt/C5teCXt+yPhMQNfNYR8aYvomOXZpH13oAJy
6iY3/B5REHq/oWgd8XVennzBBcTXnv526t9YOQcmp1za5uuy8EPnzgmJyGa4
mrnaDp5nw+i8u6275Dg2yyfpOeynY8mPL1uOc7NwSeCh/ZLhAaj1sOtzhmrh
cqXnpcEKDix5bCrNH01iTMtn0YqDjcivL2t5F8fBrS/K6qmPmbhqfltVRq0J
tlEVVYtyOEg+T22Z94uJea+9NlbONGGyxteueIKNuI15BnTGBE75Me2a+Rtx
XGTE03WWgfyrs8JyO1uhPcBKXqxSBUHtaEFnondRHs9sh4heCJokFfGsZ+DG
UcX7gY0Unv85Y7yH+Plwmzna15lhlIk8C9ZZR2F7Z25Prjsb4xFxFgzTNlTX
i73LM2Si/2H/tOdIJ84GlZats6qGOtf90eFyCmHi8TKexHcEBA7+942vD+2C
55l7HIifjG1/H7muG68k0j6PPK7G/wGo0ZCA
        "], {{0, 0}, {20, 20}}, {0, 1}],
       Frame->True,
       FrameLabel->{None, None},
       FrameTicks->{{{{19.5, 
            FormBox["1", TraditionalForm]}, {15.5, 
            FormBox["5", TraditionalForm]}, {10.5, 
            FormBox["10", TraditionalForm]}, {5.5, 
            FormBox["15", TraditionalForm]}, {0.5, 
            FormBox["20", TraditionalForm]}}, {{19.5, 
            FormBox["1", TraditionalForm]}, {15.5, 
            FormBox["5", TraditionalForm]}, {10.5, 
            FormBox["10", TraditionalForm]}, {5.5, 
            FormBox["15", TraditionalForm]}, {0.5, 
            FormBox["20", TraditionalForm]}}}, {{{0.5, 
            FormBox["1", TraditionalForm]}, {4.5, 
            FormBox["5", TraditionalForm]}, {9.5, 
            FormBox["10", TraditionalForm]}, {14.5, 
            FormBox["15", TraditionalForm]}, {19.5, 
            FormBox["20", TraditionalForm]}}, {{0.5, 
            FormBox["1", TraditionalForm]}, {4.5, 
            FormBox["5", TraditionalForm]}, {9.5, 
            FormBox["10", TraditionalForm]}, {14.5, 
            FormBox["15", TraditionalForm]}, {19.5, 
            FormBox["20", TraditionalForm]}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
         "RangePadding" -> Scaled[0.05]}], 
      TagBox[
       StyleBox[
        DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
         Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
         Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
         "\"untitled\"", Typeset`specs$$ = {{
           Hold[$CellContext`n$$], {1, 2}}}, Typeset`size$$ = {
         216., {89., 89.54440405068831}}, Typeset`update$$ = 0, 
         Typeset`initDone$$, Typeset`skipInitDone$$ = 
         True, $CellContext`n$113452$$ = False}, 
         DynamicBox[Manipulate`ManipulateBoxes[
          1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
           "ControllerVariables" :> {
             Hold[$CellContext`n$$, $CellContext`n$113452$$, False]}, 
           "OtherVariables" :> {
            Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
             Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
             Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
             Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Plot3D[
             
             Sin[$CellContext`x + $CellContext`y^$CellContext`n$$], \
{$CellContext`x, -3, 3}, {$CellContext`y, -2, 2}, ImageSize -> 300, PlotLabel -> 
             StringJoin["Plot of Sin[x + y^", 
               ToString[$CellContext`n$$], "]"]], 
           "Specifications" :> {{$CellContext`n$$, {1, 2}}}, "Options" :> {}, 
           "DefaultOptions" :> {}],
          ImageSizeCache->{252., {122., 125.}},
          SingleEvaluation->True],
         Deinitialization:>None,
         DynamicModuleValues:>{},
         SynchronousInitialization->True,
         UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
         UnsavedVariables:>{Typeset`initDone$$},
         UntrackedVariables:>{Typeset`size$$}], "Manipulate",
        Deployed->True,
        StripOnInput->False],
       Manipulate`InterpretManipulate[1]]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]}, {2,"\<\"Charts\"\>"->
  TagBox[GridBox[{
     {
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$113020$113469 = False, 
         DynamicChart`click$113024$113469 = False, 
         DynamicChart`click$113028$113469 = False, 
         DynamicChart`click$113032$113469 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.722713633111154, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{34.58578643762689, 
                    109.41421356237308`}, {-30.69925186383071, 
                    1.4142135623731065`}}], {}},
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113020$113469, 
                    FEPrivate`Not[DynamicChart`click$113020$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113020$113469, {{{1., 0}, {
                    0, 1.}}, {-0.19562952014676113`, 
                   0.041582338163551946`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$113020$113469}]]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.4660765716752369`, 
                    2.722713633111154}]},
                    
                    ImageSizeCache->{{40.81051348735964, 
                    116.9402629176441}, {-73.41421356237306, 
                    1.4142135623731038`}}], {}},
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113024$113469, 
                    FEPrivate`Not[DynamicChart`click$113024$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113024$113469, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, 0.17320508075688776`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$113024$113469}]]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179586, 
                    1.4660765716752369`}]},
                    
                    ImageSizeCache->{{106.58578643762687`, 
                    181.41421356237305`}, {-73.01979002888875, 
                    43.734751727431174`}}], {}},
                    StatusArea[#, 5]& ,
                    TagBoxNote->"5"],
                   StyleBox["5", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[5, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113028$113469, 
                    FEPrivate`Not[DynamicChart`click$113028$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113028$113469, {{{1., 0}, {0, 1.}}, {
                   0.1827090915285202, 0.08134732861516004}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$113028$113469}]]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179586}]},
                    
                    ImageSizeCache->{{34.58578643762688, 
                    167.6634371573693}, {-1.4142135623730923`, 
                    73.4142135623731}}], {}},
                    StatusArea[#, 6]& ,
                    TagBoxNote->"6"],
                   StyleBox["6", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                  Annotation[#, 
                   Style[6, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$113032$113469, 
                    FEPrivate`Not[DynamicChart`click$113032$113469]], 
                   PassEventsDown -> True, PassEventsDown -> Automatic, 
                   PassEventsUp -> True}]], Dynamic[
                If[DynamicChart`click$113032$113469, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$113032$113469}]]}}}, {}}, {}}, {{{
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-0.9781476007338056, 
                    0.20791169081775973`}, {-1.0759623608071862`, 
                    0.22870285989953573`}}], 
                    LineBox[{{-1.0759623608071862`, 
                    0.22870285989953573`}, {-1.1759623608071863`, 
                    0.22870285989953573`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{-0.9781476007338056, 0.20791169081775973`}, 
                    0.016666666666666666`],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"a\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-1.2150882648365386`, 0.22870285989953573`}, \
{1, 0}]}}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[1, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113020$113469, 
                   FEPrivate`Not[DynamicChart`click$113020$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113020$113469, {{{1., 0}, {
                  0, 1.}}, {-0.19562952014676113`, 0.041582338163551946`}}, {{
                1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$113020$113469}]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-0.4999999999999998, 
                    0.8660254037844387}, {-0.5499999999999998, 
                    0.9526279441628827}}], 
                    LineBox[{{-0.5499999999999998, 
                    0.9526279441628827}, {-0.6499999999999998, 
                    0.9526279441628827}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{-0.4999999999999998, 0.8660254037844387}, 
                    0.016666666666666666`],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"b\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-0.6699999999999998, 0.9526279441628827}, {1, 0}]}}},
                  StatusArea[#, 3]& ,
                  TagBoxNote->"3"],
                 StyleBox["3", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[3, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113024$113469, 
                   FEPrivate`Not[DynamicChart`click$113024$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113024$113469, {{{1., 0}, {
                  0, 1.}}, {-0.09999999999999996, 0.17320508075688776`}}, {{1,
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$113024$113469}]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{0.9135454576426009, 0.4067366430758002}, {
                    1.0049000034068611`, 0.4474103073833803}}], 
                    LineBox[{{1.0049000034068611`, 0.4474103073833803}, {
                    1.1049000034068612`, 0.4474103073833803}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{0.9135454576426009, 0.4067366430758002}, 
                    0.016666666666666666`],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"c\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {1.1414418217125653`, 0.4474103073833803}, \
{-1, 0}]}}},
                  StatusArea[#, 5]& ,
                  TagBoxNote->"5"],
                 StyleBox["5", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[5, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113028$113469, 
                   FEPrivate`Not[DynamicChart`click$113028$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113028$113469, {{{1., 0}, {0, 1.}}, {
                 0.1827090915285202, 0.08134732861516004}}, {{1, 0}, {0, 
                1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$113028$113469}]], 
             GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-0.30901699437494734`, -0.9510565162951536}, \
{-0.3399186938124421, -1.046162167924669}}], 
                    LineBox[{{-0.3399186938124421, -1.046162167924669}, \
{-0.4399186938124421, -1.046162167924669}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[
                    DiskBox[{-0.30901699437494734`, -0.9510565162951536}, 
                    0.016666666666666666`],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox["\<\"d\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-0.45227937358743997`, -1.046162167924669}, \
{1, 0}]}}},
                  StatusArea[#, 6]& ,
                  TagBoxNote->"6"],
                 StyleBox["6", {
                   GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                  False]],
                Annotation[#, 
                 Style[6, {
                   GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$113032$113469, 
                   FEPrivate`Not[DynamicChart`click$113032$113469]], 
                 PassEventsDown -> True, PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]], Dynamic[
              If[DynamicChart`click$113032$113469, {{{1., 0}, {
                  0, 1.}}, {-0.06180339887498947, -0.19021130325903074`}}, {{
                1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {
                DynamicChart`click$113032$113469}]]}, {}}, {}}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       LabelStyle->{
         GrayLevel[0], FontFamily -> "Arial"},
       PlotRange->{{-1.2, 1.2}, {-1.2, 1.2}},
       PlotRangePadding->Scaled[0.1]], 
      GraphicsBox[{
        {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.6719999999999999], Thickness[Small]}], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 
                 1.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{9.542491862553842, 56.06592746835892}, {
                39.59104485413204, 60.50171875000001}}],
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 
                 3.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{60.13761728651619, 
                106.6610528923213}, {-1.5103029376038961`, 
                60.501718750000016`}}],
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 
                 5.}, "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{110.73274271047858`, 
                157.2561783162837}, {-42.61165072933982, 
                60.501718750000016`}}],
              StatusArea[#, 5]& ,
              TagBoxNote->"5"],
             StyleBox["5", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[5, {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6719999999999999], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 6.},
                  "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{161.32786813444096`, 
                207.85130374024607`}, {-63.162324625207795`, 
                60.501718750000016`}}],
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
        StyleBox[{
          {Thickness[Tiny], 
           LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, 
          StyleBox[{
            {Thickness[Tiny], 
             LineBox[{{0.5437956204379562, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 
                0.}]}], 
             LineBox[{{4.456204379562044, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
                0.}]}], {{}, {}, {}, {}, {
               LineBox[{{1.4562043795620436`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.4562043795620436`, 
                  0.}]}], 
               LineBox[{{1.543795620437956, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {1.543795620437956, 
                  0.}]}], 
               LineBox[{{2.4562043795620436`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.4562043795620436`, 
                  0.}]}], 
               LineBox[{{2.5437956204379564`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {2.5437956204379564`, 
                  0.}]}], 
               LineBox[{{3.4562043795620436`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.4562043795620436`, 
                  0.}]}], 
               LineBox[{{3.5437956204379564`, 0.}, 
                 Offset[{-7.347880794884119*^-16, -4.}, {3.5437956204379564`, 
                  0.}]}]}, {}}}, 
            StyleBox[
             {Thickness[Tiny], 
              InsetBox["\<\"a\"\>", 
               Offset[{0., -2.}, {0.9999999999999999, 0.}], {0, 1}, 
               Automatic, {1, 0}], 
              InsetBox["\<\"b\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1}, 
               Automatic, {1, 0}], 
              InsetBox["\<\"c\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
               Automatic, {1, 0}], 
              InsetBox["\<\"d\"\>", Offset[{0., -2.}, {4., 0.}], {0, 1}, 
               Automatic, {1, 0}]}, "GraphicsLabel",
             StripOnInput->False]}, "GraphicsTicks",
           StripOnInput->False]}, "GraphicsAxes",
         StripOnInput->False,
         Antialiasing->False]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, True},
       AxesLabel->{None, None},
       AxesOrigin->{0.4655474452554744, 0.},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {
           0.9999999999999999, 
            FormBox["\"a\"", TraditionalForm], 0}, {1.9999999999999998`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
            FormBox["\"b\"", TraditionalForm], 0}, {3., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
            FormBox["\"c\"", TraditionalForm], 0}, {4., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
            FormBox["\"d\"", TraditionalForm], 0}}, {{0.9999999999999999, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.004, 0}}}}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       PlotRange->{{All, All}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{None, Automatic}]},
     {
      GraphicsBox[{
        {Opacity[0], 
         PointBox[{{0.3836399216673073, -0.0560017525371722}, {
          2.6163600783326926`, 1.6395309340697881`}}]}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], {}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                PolygonBox[CompressedData["
1:eJxlmndYzn3497NJVsaNbptbdla2U1Jk72Rk74gyMktWkllKiChJGZkRepeK
kFTaRXtf19V1tdzc4vEcv/P8/fE8/uDoyNH4fj+f83yPV7dV1nPX1tXS0gr5
89f//Vf+/P2zzu2EnDh6vfrY+aZ5xygpp/BRg/NxVGm53P5lqBOdfvshdOTE
OLJ5vtDI8YUznV280jUl/xPZv8v6r1+GC9X9p9/tcSafSPFld7pHlzO0Q1MV
6nMzlvKfdVluEXWWCl+GJjZpGEvrjv4oG9PiPC12ciq1XveRGuu+bme31ZVi
5s3VSn4TQ3UrhjfokO9G47v83W5s7xjKutN3gMF2dwoqLeh34/gHWhPpU5PY
7iL1fHrfqHHxe9I3c5jbM9mT3A/tMd865T2dcDlpMiHoMjWeYbwl0f8dJTkm
rJ/l50X72zc7PLrJO+oWP3DR/ufXSJWXfNF7YzQdqKh/fm+1N624732v4fu3
tPPM0znVnW5Qwt5NkVZ931JISkT+24U+ZGo6LD3B+Q3duF25w8Xbl561+lU+
siyK5o1bsufLfzep75e3Da5Ni6KDNGzmgo236Ir/Ob0GdyJpidvtt6dK/Knl
jiWDN+tEkkdJAbocCCAH6jU53iqCXuWFeN/oeYeqtMuXjvj4ms4tMy4JzL5L
G5Kf2XgNeE31Y1X3Yx/cp9Trjk71TofTpDvBZ2fEBNH0LdOvblSF0b5Lx3/F
vn9AYSPbPf40M4x0dhxsFJT4kFY0DnPdbAnKru+WOKT0EU25Ng8juoTS2nq3
m3k0fUIGhkWl9bJf0uEr9hc6jHpKLT/ubRfn/YKGr/llUmUTTP+ubj7xysoQ
ct2hd3fZ82eU+uP6lg3dn5P5ybj3TjohFHZuuOewvGByWbUvztfqBfnrv4vU
8n1KTaa2yM1Me0lOWKqOWfOEoHcwzXx+KG1bqNbz7PWYjH6G6ozMBC1SHp68
tvAhOdhanfz4LIxGHvnLdvCtB9Qxu2/CdOdw6qoXeLV2fRC5Tgq77rPqNWmt
OeDmOuce2fVd/3eaUQTFnfMt6/c5kLpmFAZqekeSNz5MjJx/m9I+7FGr2kTR
CmWF59JkP+qwbNrDT43fkIFeR02VuS8tNHqYdKbeW9IyM5pyKu06PetqNle/
QTQ5KOPGT3t6lbYW1R1wptk76mrWRbnvuScZX5y3M/jv9xTmu+XynZdu5HLs
kMm5IR/IQcvONcT+DB13GvCmyawYCgtuo9Y7dpRytfWGN7X5SA5fVnn+aL+b
qn6OLt9/OZa0VuS6lQ4wo6EWNQeMP3wiB5O+VfYft+HT3JR53g5xFLbZzsty
hSOy9R6G3+4cTw6PMybUWrhg+90nk+8gnrwPdqn42McVy1acKHBbnUBde8Qb
e/1zEXZhvZRztD+Tw1vHC1Y9vPBUszf6/aPPpGV4qbJTy+swLVvVWbE8kQwa
2145etoHep9qf3g2T6IV6dNMlDp+aLH9fMdQJJH3nZ6q+Sf9sdms5TuyTaa4
g7XuL5sEwjT3RPcGfVJIa04y9XS6C4fsdhcqs1PI+5x5lUm9IHy6allTfimV
nv2IiN4z8QHSpqz2/LowjeJWG3jdPfQQY1aNuO3bJp3UMVe254Q9gmWnwz97
JaZTY8Mmpm21nqD+y3r6Ey9kkP61nR3N6CmG1l11/qt5Jk1onKvafzAY/Tws
pnzV+0KLts+MCHr1DEUeN+f2zPlCdukhHvk/n2PB25vRrre+0lnj3lbtx77A
f1fTc1pYZ5H/HdcJ0/e9xOdujeqF6mVTdFuttg4hrxA5tY5qmUM2ZR+0Knn0
PRTXPCnQoiCbftoqvtr+HYb9d2KX+0zNIRf/7u+avQxD7MEOKwcE5VD7L4se
3VoSjm0jro8sbZtL/q3OeBn9Fw6T6kC/mH25NMw06njGpdew9c3xeZuTS2F7
/9u+c3QEjBbFrYydnEez7w9e2iI9AuPGzJ+aeDePMvPWm97eE4lZ14utPrbO
pw3trxoYd4hCddj5eff25NO/0xM7fnkWhazaJ5c2ZOXTkUPaDXYvegOzCfPD
NJMKqM3TCeUt/32DkIwGHccHFJB36a60AI+3eFTtpDexRSH173I3YtKIaGy3
LZpZYVtIL+fl3f2aHI2jJW+nGacW0hSnDhftdr2D59Tfd/uMLaLEl7Mcddu9
h9mjfU0vXSuiNZqjVneevMfhvj4lTnWLSd3r5ULTBR8wf5/xw9I1xbR/ccWE
7KoP8Fw3xP/Rm2LSOaPfb69bDJRTkZHSu4QuRli2bTPsIyZqdegyzamE9P91
+33380eE/PrwQ6u4hB73/1Ay2TYWDb4duKEwLaUJK+sk5uh+gv5rnVKtm6UU
d2FE6L6Hn7D0h+EYg7plNLDAMFG7Txx++VadtLIsox2/57xLsYvDulZ+C249
L6OXHbaE+kbHoa/t+FPxrRVUd5jTo+3t45EYcfpKhpWCpsz08R+/IR6PeiQu
fRKpoLMbQr2aPotHqwmBujP1lJTsmHY+tVEC7Mc6bXbbpqTOXlXHb5on4PeY
uP27IpW0JrjFAZtbCZhWeS8yp52KAuL72tC3BIwNQP+I9SqqKDNZrzP5M9SR
Xs0bBatoZMOVS9PcP8NoyZbRnvXL6WDX/XP8Cj8j0m3D7zWzy+nNaA9TW8NE
jLPba7jgUjnpLHg4ZsKxRHz3K5s5P7ec5lt/NGiWnIgZZ84O/KeNmi6dKO6V
3isJI2Y/vtDaUE3ZPvX0bu1Mgk7hmn+KFqpJP7Rzyx1RSXg0qOjihV1q2pY6
qoFR22QsC/a41vqCmh5XzP/RbG0yijfqVy54qKafOtvK0x8nw/5N8PI5sWqa
1Ptk/q36KfC7/yDhR7GanIz80nbMT8GmwvUbJ9fVUNyS8Fgj3xScHjTToX9H
DbXflRnRvCoFQw0jX18z0NDSs9+eZRinInDHgjEeJhryDdC95++airZvFqxp
YqEhReQAn515qVjyFiOVmzRkkDXl4sShaUj5OtJk9D4N2X1ffarF4TS09On0
vPiEhsJa2ztmJqSh71a73Rp3DdUfeGn37e7pGGQY0XvmDQ1Nn/LEapdNOhQm
C0y/B2rIbVXcSuPX6RgzaNkw1SMNpe4vW9hSNwMHp0ye3CdEQ109Gk7/sjID
MWO2p9wK1dCGB92MAh5koOBa05kbwjV058NYw911MqGa0HTIptcaqiow7zdp
TiYe+esMu/fn82O1bLu2up6Jg5eajTKEho50PN32qzoTDm45qxu80FD0sNva
gRO+wKF2cqeuTzTUclbk791nv6B2q0tHl7saWrQxq2pS9hckHL+8aravhq4c
/lHSyuAr9L7YzdnpqaF8r7ZZX+2/4klV/Uv1T2mo/zODxMBPX3EvqL5pE3sN
bUuY9s6uSxb6DLF8fMZaQ88U60JNrLNw/duhCzctNaTVyPGRLrJgGf+9wGK6
hm6cnZlo3SgbY4d0LHo5UkNvOmXOXDgoG90sk9pm99BQacDGd2PN/3z+58Mu
yc00pDPym3EP+2zYemmSHtaoySDqSGiTW9l4HJfe+eRXNc2fqztKHZuN26sW
FOyIUtOurGuPkmuy8dwysuHxwD/n02rAwFedc7Bj1iRKO6um0O8h/j6mOchs
vqTNkZ1qyj02pYfz1hysGjQ41NtCTfXbJHttc89B9NWtLczG/Tm/11e3Nw/N
QV/P5CUeXdU0faDm/LjCHGjNCl/mV09NW18cbNazeS5uOPYe3v1jOZ2fouOk
bZiLf08HuRScL6enSZ51NctyYf91xIyPi8opdVXvAylHczEvw6qkRZdy+ln+
+Nuru7lYNnWyfV6BiroemGjjm5SLvncHXD5wV0UTteMUzrW5MPuY/UN3l4rW
eSxbv71XHoKt7WenkIqce5blmM/Iw7vU6ga12iq688Bu6fideYjX9K/zJEVJ
ceMbpvT0ykM7p+kbB/opqeqD65ymUXmwNlq9xX2XktpZdIvRKPKw+FiUTnsz
JY0uvGea2iYfXm9scjI6KcnSdmx46Nh8mP4Tq2hUrSBHrfdjbq7JR3Vc1TrE
Ksj3lPnTky75cFX+e7Z7oIKiOxYY2DzOR7bdJOeZzgpS3LIJXJSZD3eD1X2W
/Zl3zYdr/UP1/2jNkVtT18xR0JDXp7x79S/AZeNZO+1GKWjhLD09nfkFGJTf
1PBWTwXZZfpfqNhXgJu6k8791FXQlY2GLdN8CuA2t0k/h/oKCquJcMaHAgz7
MODN8O9llHt4TgO/ygKsdew5upOmjBq2yrJ30SuE9ZmjW4YoyqjvVasfNsaF
mO8zccGW0jKa3u/HDovNhdgVcu7f8LIy2vbseDm5FqLv8FN7uqrLyM2k7aZ/
XhQi7feh7ju/ldHThBv5OnmFuFb0Zbd/HQWlLzdYXqldBPvw2zOvNVfQL8Wr
tLQhRRj0YEfR6M4K6r532vywxUWgO2eaWRgoaFKjtFg/xyI8X2gzOnGSgja4
rTM7FVCENq5/vzq8REEu3aoibBOKsOfqxIIxOxR0796h8Yt/FOGOpc6Q2NMK
ShjT4vmE7sWYfqvfkSZ/nndN9JWhvacWIy248byQaAW1X9j3XjObYuzUDcsP
KFLQ2Lxg/SrPYrjo3nbyaaSkFdtMfNLDixG8vEPiJn0lOdYmdAovKcarQ+1y
ov68fz/nFRdvtSpByB7f03ablfT+L5Xu6VElyLO0fG1ySkkK332ndqwsgblr
/cDye0pqOaRJ4yUnSnBqTGC9kXFKGgZ3R6MHJfhlONQ8W62khdN71vZOK8ET
ZbBxQEsV7U17sLt5nVK8Sr3yynyQiq6uo4oq/VL8elE4J3C6isIqY6wyZpdi
r+7p9Rs2qCjfYXFRuF0plhrstZ/nqKLGzYtX+nuX4knrFJshl1TU//LOzNPR
pTAM33s/5r6KZurXM9+pLkW2ua5N2WsV2Tw5G7+kfRmOByfUWnxWkfvEztMn
TiiD8oZVfEG2ip59Cnyjv6EMO283TrMsU1Hm0lFGLc6W4djn1l4eFSrSKn3z
ojq4DLl1AresrVFR993zDTOzypDfzc7Z+8/HpvVzg143UqDhqzTTnpUq2nTO
ut/tQQpM/T6k76c/X8+lc+3NM+YKdIibrHP4z/cLCnTuusteAXWjMwN6xaso
cWT7y0tvKdB47sZpV1+pqCbqZlvjTwrcjhoSlH5TRR3nDT3b55sCOVF96P0J
FY3PDtNu2UWJmO7996/YqKIVW2YerTFVYmrl7DNuk1R05EfG78ytStQz2Dxp
pZ6K/I9v3BvhrkSHvccaRimVFNPmW9XtUCXu+e9ICX+hJNX1I9ZnC5XoE3Tc
eNlRJekO0i3d1VyFHQMuzvGeqiTDl9fWLDNUYcHsA9YeTZW0yGxAlrGlCivr
d1ky9895258cYtH3mAqLtWc1zndQkPfqKYkt76kQPMjz8KrhCnqtTpr5LUkF
VI5LKCwoo8IDq999qVXhr7unPrmcLyPtphrjyF7lWO2X2ch2TBn1v3gwNGBG
OZYFTD0Xkl1Ks3vpjDq3sxzRbS/lHnMspR0PPR/t9ipHu/B5/rVdS8mdeg+0
jCrH/m1VU01ellBIzGP/Scpy+J+0jToxv4TK+18/d0FbDUWvMzeqS4rJobIo
1qmzGnBLH/xkfzHphgzU2T9EjTLTuQ41OsXk67DTzNpUjeYj1z0vvlREhpNf
Hlu1WI2hro2+vfiniN42qxe5YKsal30Vra4HFZJFolkdM0c1Av4ytnk3spDK
Lp0dP9ZdjfwZDXPWoYD2r0zZNyhAjaL+AxYH/tHHzfU7P+8eqoZO++ys6Oh8
8latqWmboMY6Vf5MzbR8GvwkcGiTQjX6Z2wetjA2jyL2VWz7+V0NJ/c1N/Vn
59GCiaPulTfTIH2Vw1+e8blU2NihLLebBrtv1RmbMjeX7D690U8ersE9512Z
rRJzSNu92bp3Zho8avnNZOeCHLq8dL7Py2UajKow1RikZNOAHpez72/XYGHT
VlrWFtmEkpxOPkc1OHSscvLDZ1k0O0h/ibunBhsPn3k4KOwr5e6yvnjirgZW
407o+b77QjvGPU3aH67BgeiiDouTMqlh/VrdbUkafBho9OViXgZ5vDeevbpE
g8gZ9i18q9KpzznnUwtrNTjex+TFi8bp9MI8/r1ZqwrkexUY/t01jaZ3bt94
XK8KOGclt/41OpW+5luaGIyqQGr3E7ruFim0LfCmY48ZFZj781DHtvuTqY6N
Au1WVuB5oKeh/40kch05tLbJzgpcdRx6we5jIvX6vWd0rVMF4v8zdQn8+Zme
RoXtVl+pwPHcptdXGXymKS6NnuQFVcC6YwfXFxsSKH3uzIrkyAoMMojYFHcz
njZ3uDDofWoFzFKPOgcXxVFtVobVK0UFjPKNIg4PjKMzft0DgrQq0ah6ULJT
VSx13bKxyKdNJezqz1Jqu3+kh0ODenroV+L0Zo3+NaMYmvSjZqXz2ErEz37g
Nvvbe0oKG3ftwOxKWOzJ1O8Z/I7WHz+SuW1NJRa2vNa0w6Fo+j7jQ4c1dpU4
lYlE/QVv6WQbXXNzl0qc83L4PHnoG/o7Y5HbVO9KjKwcsXCtXhTdu34tftzj
SkxaMK5yc7NImrChsPng6EpUDIxIMGoSQfEDB0zvmVmJaT3pe3Tz17S62vbE
X+pKWIXes8zqFE7VL0LeaNevgkveppMWhmF0zLFO/V9/VSEx3097VFAotTeb
YqTpV4WK1mmmpQ1eUUCLMwfzqQol0zQma7e8oDHJSS9S5lVhuYv/xqmFz+nj
lb+/v19fBeu/nA9P2PaMlq9ebRi6rwoRFo26JWoHk7pPgO2DM1UYNnaK9cUn
T8hRrQ7y9anCgPa/Ejtte0xtgkeoPIKrsLYgx6pi1CO6eeBgv5MfqnD7rzn7
bug+pBGTojYczPrz/f759PXZ9yB6p63jt72yChPW7a45+OU+LYmfm7emUTWW
Zw4g+9y7pPDw7LpIrxpnjbfGHKlzhw5aZi+bNqgavTY87XxjVAC17NX78njj
aoTFFE3JP+FP18u2pA42r4bnkQ7OFho/Gvrwcdtem6sx06Ng7TjrmxRl99/c
9vbVMPBo3Pl8XV8yp4lnm7pWw1Q95uOOgBtU0uDEx19+1fDaNaVPw3XXaU/M
J+2KkGpsGNOzdNMwb2rq2m5KQWw1Atp1n3Gxz1Xyslh2NDW3GqGzWs24r3OF
BnX1ff2hphq/e9C2XS0vUXhh6e9Q7Roc8jnTevLQizTv7uBxDzvXYPJv9x4q
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
XpZ5WghPy7wthLf9f3nc/wOK9/pB
                 "]], {{{0.20233681324789438`, 
                 0.}, {0., -1.}}, {1., 0.}}]},
              
              ImageSizeCache->{{53.46506009869108, 
               96.36429986529188}, {-28.265131965604738`, 
               43.213481416375046`}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], 
                  "0.9966261757472066`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                  "0.8668229468053272`"}, {
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "0.5046190592413617`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                  "0.4228319342111344`"}, {
                  StyleBox["\"min\"", Bold, StripOnInput -> False], 
                  "0.1659206765967678`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 0.9966261757472066}, {
                 Style["75%", Bold], 0.8668229468053272}, {
                 Style["median", Bold], 0.5046190592413617}, {
                 Style["25%", Bold], 0.4228319342111344}, {
                 Style["min", Bold], 0.1659206765967678}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], "Tooltip"]& ]}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
           TagBox[
            TooltipBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               GeometricTransformationBox[
                PolygonBox[CompressedData["
1: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
WlhgpYaTnnfZw5s99mM23BYWBI40f6iz1A6ONidJOXgLC9buLP4wyuY6zL0y
XD7zjbAgdN3vj/5ptYFi0fUq4h+EBZ0FC3aNtrwKt/0va+gVCAu8xQ5b3Jp+
BdTWxhn7NgoLkt5ny6g8/heEM3vONfUICzivjTJSdFg+btj/+0z/H/n/0/dD
/n7085B/Hv0+yL8P/b7Ivy9dD/L10PUiXy/dD+T7QfcL+X7R/US+n3S/ke83
PQ/k50HPC/l50fNEfp70vJGfN50H5PNA5wX5vNB5Qj5PdN6QzxudR+TzSOcV
+bzSeUY+z3Tekc87vQ/I7wO9L8jvC71PyO8TvW/I7xu9j8jvI72vyO8rvc/I
7zO978jvO80D5HlA8wL/Oy/+M0+Q5wnNG+R5Q/MIeR7RvEKeVzTPkOcZzTvk
eUfzEHke0rxEnpc0T5HnKc1b5HlL8xh5HtO8Rp7XNM+R5znNe+R5T/sAeR/Q
vkDeF7RPkPcJ7RvkfUP7CHkf0b5C3le0z5D3Ge075H1H+xB5H9K+RN6XtE+R
9yntW+R9S/sYeR/Tvkbe17TPkfc57XvkfU96AFkPkF5A1gukJ5D1BOkNZL1B
egRZj5BeQdYrpGeQ9QzpHWS9Q3oIWQ+RXkLWS6SnkPUU6S1kvUV6DFmPkV5D
1muk55D1HOk9ZL1HehBZD5JeRNaLpCeR9STpTWS9SXoUWY+SXkXWq6RnkfUs
6V1kvUt6GFkPk15G1sukp5H1NOltZL1NehxZj5NeR9brpOeR9TzpfWS9T34A
2Q+QX0D2C+QnkP0E+Q1kv0F+BNmPkF9B9ivkZ5D9DPkdZL9DfgjZD5FfQvZL
5KeQ/RT5LWS/RX4M2Y+RX0P2a+TnkP0c+T1kv0d+ENkPkl9E9ovkJ5H9JPlN
ZL9JfhTZj5JfRfar5GeR/Sz5XWS/S34Y2Q+TX0b2y+Sn8b9++j9+G9lvkx9H
9uPk15H9Ovl5ZD9Pfh/Z71MegJwHUF6AnBdQnoCcJ1DegJw3UB6BnEdQXoGc
V1CegZxnUN6BnHdQHoKch1BegpyXUJ6CnKdQ3oKct1Aeg5zHUF6DnNdQnoOc
51Deg5z3UB6EnAdRXoScF1GehJwnUd6EnDdRHoWcR1FehZxXUZ6FnGdR3oWc
d1EehpyHUV6GnJdRnoacp1Hehpy3UR6HnMdRXoec11Geh5znUd6HnPdRHoic
B1JeiJwXUp6InCdS3oicN1IeiZxHUl6JnFdSnomcZ1LeiZx3Uh6KnIdSXoqc
l1KeipynUt6KnLdSHoucx1Jei5zXUp6LnOdS3ouc91IejJwHU16MnBdTnoz/
zZP/kzcj582URyPn0ZRXI+fVlGcj59mUdyPn3ZSHI+fhlJcj5+WUpyPn6ZS3
I+ftlMcj5/GU1yPn9ZTnI+f5lPcj5/3UByD3AdQXIPcF1Ccg9wnUNyD3DdRH
IPcR1Fcg9xXUZyD3GdR3IPcd1Icg9yHUlyD3JdSnIPcp1Lcg9y3UxyD3MdTX
IPc11Ocg9znU9yD3PdQHIfdB1Bch90XUJyH3SdQ3IfdN1Ech91HUVyH3VdRn
IfdZ1Hch913UhyH3YdSXIfdl1Kch92nUtyH3bdTHIfdx1Nch93XU5yH3edT3
Ifd91Aci94HUFyL3hdQnIveJ1Dci943URyL3kdRXIveV1Gci95nUdyL3ndSH
Iveh1Jci96XUpyL3qdS3Ivet1Mci97HU1yL3tdTnIve51Pci973UByP3wdQX
I/fF1Ccj98nUNyP3zdRHI/fR1Fcj99XUZyP32dR3I/fd1Icj9+HUlyP35dSn
I/fp1Lcj9+3UxyP38dTXI/f11Ocj9/nU9yP3/cQDIPMAxAsg8wLEEyDzBMQb
IPMGxCMg8wjEKyDzCsQzIPMMxDsg8w7EQyDzEMRLIPMSxFMg8xTEWyDzFsRj
IPMYxGsg8xrEcyDzHMR7IPMexIMg8yDEiyDzIsSTIPMkxJsg8ybEoyDzKMSr
IPMqxLMg8yzEuyDzLsTDIPMwxMsg8zLE0yDzNMTbIPM2xOMg8zjE6yDzOsTz
IPM8xPsg8z7EAyHzQMQLIfNCxBMh80TEGyHzRsQjIfNIxCsh80rEMyHzTMQ7
IfNOxEMh81DESyHzUsRTIfNUxFsh81bEYyHzWMRrIfNaxHMh81zEeyHzXsSD
IfNgxIsh82LEkyHzZMSbIfNmxKMh82jEqyHzasSzIfNsxLsh827EwyHzcMTL
IfNyxNMh83TE2yHzdsTjIfN4xOsh83rE8yHzfMT7IfN+xAMi84DECyLzgsQT
IvOExBsi84bEIyLziMQrIvOKxDMi84zEOyLzjsRDIvOQxEsi85LEUyLzlMRb
IvOWxGMi85jEayLzmsRzIvOcxHsi857EgyLzoMSLIvOixJMi86TEmyLzpsSj
IvOoxKsi86rEsyLzrMS7IvOuxMMi87DEyyLzssTTIvO0/5e3/R/UbLRd
                 
                 "]], {{{0.30434419160194653`, 0.}, {
                 0., -0.9999999999999999}}, {2., -1.1102230246251565`*^-16}}]},
              
              ImageSizeCache->{{134.3911571689971, 
               177.3910735432105}, {-60.265131965604716`, 58.21348141637504}}],
             StyleBox[
              TagBox[
               GridBox[{{
                  StyleBox["\"max\"", Bold, StripOnInput -> False], 
                  "1.5624612664967445`"}, {
                  StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                  "1.297076526883818`"}, {
                  StyleBox["\"median\"", Bold, StripOnInput -> False], 
                  "0.8482140054628031`"}, {
                  StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                  "0.5764973100209567`"}, {
                  StyleBox["\"min\"", Bold, StripOnInput -> False], 
                  "0.021067915035871465`"}}, 
                GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
                AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                    Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                    Directive[
                    GrayLevel[0.3]]}}, 
                GridBoxFrame -> {
                 "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> Directive[
                  AbsoluteThickness[1], 
                  Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Grid[{{
                 Style["max", Bold], 1.5624612664967445`}, {
                 Style["75%", Bold], 1.297076526883818}, {
                 Style["median", Bold], 0.8482140054628031}, {
                 Style["25%", Bold], 0.5764973100209567}, {
                 Style["min", Bold], 0.021067915035871465`}}, Dividers -> {{
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}, {
                  Directive[
                   GrayLevel[0.3]], {
                   Directive[
                    GrayLevel[0.3]]}, 
                  Directive[
                   GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
               Frame -> GrayLevel[0], BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], {}], 
             "Tooltip"]& ]}}, {}, {}}, {{{{{{{}, {}}, {}}, {{{}, {}}, {}}}, \
{}}, {}}, {}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{False, False},
       AxesLabel->{None, None},
       AxesOrigin->{0.7754133086869819, 0.021067915035871465`},
       Frame->True,
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, Automatic}, {{{1., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {
           0.7754133086869819, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}, {2.224586691313018, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}}, {{1., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {2., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0.008, 0}}, {
           0.7754133086869819, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}, {2.224586691313018, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[0]], TraditionalForm], {0, 0}}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->300,
       PlotRangePadding->{{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{{{1., 
           FormBox[
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.008, 0}}, {2., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0.008, 0}}, {0.7754133086869819, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0, 0}}, {2.224586691313018, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[0]], TraditionalForm], {0, 0}}}, Automatic}], 
      Graphics3DBox[
       {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
        EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], 
        StyleBox[{{{}, 
           {RGBColor[0.4947336, 0.6054231999999999, 0.7678384], Opacity[0.5], 
            EdgeForm[RGBColor[0.44526024, 0.5448808799999999, 0.69105456]], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-3., 1.5, 0.}, {-2.5, 2., 1.}]},
                 
                 ImageSizeCache->{{65.57043343647138, 
                  78.40777184357034}, {-20.573745271717232`, \
-11.886205152604509`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, -1., 0.}, {-2., -0.5, 1.}]},
                 
                 ImageSizeCache->{{50.750179267848964`, 64.35738720046135}, {
                  1.8836225713746124`, 11.382290104898276`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, -0.5, 0.}, {-2., 0., 2.}]},
                 
                 ImageSizeCache->{{55.203208716631494`, 
                  68.71253011364993}, {-2.9751449163672827`, 
                  6.992632012219472}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, 0., 0.}, {-2., 0.5, 1.}]},
                 
                 ImageSizeCache->{{59.67137045270591, 
                  72.97118151053438}, {-6.4894308202277955`, 
                  2.701319607903372}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2.5, 0.5, 0.}, {-2., 1., 2.}]},
                 
                 ImageSizeCache->{{63.93604291341191, 
                  77.13651302099345}, {-11.158522517906732`, \
-1.4949154937659213`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -3., 0.}, {-1.5, -2.5, 1.}]},
                 
                 ImageSizeCache->{{38.934626543994426`, 53.24814660017602}, {
                  22.535342312614574`, 32.821454461651655`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -2.5, 0.}, {-1.5, -2., 1.}]},
                 
                 ImageSizeCache->{{43.83099074680699, 57.96973961449353}, {
                  17.832372873040676`, 27.935656670733035`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -1.5, 0.}, {-1.5, -1., 5.}]},
                 
                 ImageSizeCache->{{53.0362339091726, 67.08615086225942}, {
                  6.209062799087215, 18.506146120610037`}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -1., 0.}, {-1.5, -0.5, 1.}]},
                 
                 ImageSizeCache->{{57.846164991177766`, 71.48842167227497}, {
                  4.363424588521056, 13.954541620847044`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., -0.5, 0.}, {-1.5, 0., 1.}]},
                 
                 ImageSizeCache->{{62.30598694270975, 75.79142423978469}, {
                  0.07513591965170541, 9.50674311537703}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 0., 0.}, {-1.5, 0.5, 6.}]},
                 ImageSizeCache->{{66.43081057142945, 
                  79.99847877853605}, {-7.251195177601749, 
                  5.15923947128937}}]},
               StatusArea[#, 6]& ,
               TagBoxNote->"6"],
              StyleBox["6", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[6, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 0.5, 0.}, {-1.5, 1., 5.}]},
                 
                 ImageSizeCache->{{70.75910180724287, 
                  84.11275906712201}, {-10.7110148135568, 
                  0.9086761376304171}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 1., 0.}, {-1.5, 1.5, 3.}]},
                 
                 ImageSizeCache->{{75.02239988771709, 
                  88.13730043393329}, {-13.468886103116986`, \
-3.24815348698613}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 1.5, 0.}, {-1.5, 2., 1.}]},
                 
                 ImageSizeCache->{{79.17770634279388, 
                  92.0750072252545}, {-16.157648699091652`, \
-7.314316121910952}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 2., 0.}, {-1.5, 2.5, 1.}]},
                 
                 ImageSizeCache->{{83.16931885301305, 
                  95.92865979511849}, {-20.000410063558412`, \
-11.29274614978915}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-2., 3.5, 0.}, {-1.5, 4., 1.}]},
                 
                 ImageSizeCache->{{94.64617062134343, 
                  107.01137047506923`}, {-31.054211730386974`, \
-22.729144572453237`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -2.5, 0.}, {-1., -2., 2.}]},
                 
                 ImageSizeCache->{{51.11732548536306, 65.3601799027243}, {
                  19.884399881281702`, 30.73317513421704}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -2., 0.}, {-1., -1.5, 1.}]},
                 
                 ImageSizeCache->{{55.909842218426114`, 69.91593140293739}, {
                  15.869277046935824`, 25.89685727627364}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -1.5, 0.}, {-1., -1., 1.}]},
                 
                 ImageSizeCache->{{60.526451731677525`, 74.36588149948255}, {
                  11.320622870380987`, 21.174176143344283`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -1., 0.}, {-1., -0.5, 7.}]},
                 
                 ImageSizeCache->{{64.73625050329858, 78.7136735363986}, {
                  3.0647002146797018`, 16.56117313770448}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, -0.5, 0.}, {-1., 0., 10.}]},
                 
                 ImageSizeCache->{{69.03533654043403, 
                  82.96278547467648}, {-3.1739200397823915`, 
                  12.054071417673567`}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 0., 0.}, {-1., 0.5, 9.}]},
                 
                 ImageSizeCache->{{73.425568546331, 
                  87.11653917104337}, {-6.757748166957965, 
                  7.649265584503956}}]},
               StatusArea[#, 9]& ,
               TagBoxNote->"9"],
              StyleBox["9", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[9, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 0.5, 0.}, {-1., 1., 9.}]},
                 
                 ImageSizeCache->{{77.67240377015153, 
                  91.17810903897725}, {-10.886425366932494`, 
                  3.3433120636084688`}}]},
               StatusArea[#, 9]& ,
               TagBoxNote->"9"],
              StyleBox["9", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[9, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 1., 0.}, {-1., 1.5, 4.}]},
                 
                 ImageSizeCache->{{81.9853716253655, 
                  95.15053013941102}, {-11.796211031416748`, \
-0.8670798738070182}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 1.5, 0.}, {-1., 2., 1.}]},
                 
                 ImageSizeCache->{{86.10956917450554, 
                  99.0367057444631}, {-13.90843524623704, \
-4.985056497903285}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1.5, 2., 0.}, {-1., 2.5, 1.}]},
                 
                 ImageSizeCache->{{90.05113769929982, 
                  102.83941441380873`}, {-17.79884933026317, \
-9.013627461084956}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -3., 0.}, {-0.5, -2.5, 2.}]},
                 
                 ImageSizeCache->{{53.787930291806745`, 68.2453113906379}, {
                  27.44330150278376, 38.59356094399878}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -2., 0.}, {-0.5, -1.5, 1.}]},
                 ImageSizeCache->{{63.30724041662447, 77.35058796583388}, {
                  18.535625409275998`, 28.666116658201044`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -1.5, 0.}, {-0.5, -1., 13.}]},
                 
                 ImageSizeCache->{{67.28672374346127, 81.74356560843422}, {
                  6.200400145245464, 23.878530865856195`}}]},
               StatusArea[#, 13]& ,
               TagBoxNote->"13"],
              StyleBox["13", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[13, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -1., 0.}, {-0.5, -0.5, 14.}]},
                 
                 ImageSizeCache->{{71.75702703190922, 86.03502245334002}, {
                  1.0846371118875595`, 19.20287856310567}}]},
               StatusArea[#, 14]& ,
               TagBoxNote->"14"],
              StyleBox["14", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[14, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., -0.5, 0.}, {-0.5, 0., 23.}]},
                 
                 ImageSizeCache->{{75.81464404776243, 
                  90.2284374879269}, {-9.142659747811903, 
                  14.63527961052804}}]},
               StatusArea[#, 23]& ,
               TagBoxNote->"23"],
              StyleBox["23", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[23, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 0., 0.}, {-0.5, 0.5, 14.}]},
                 
                 ImageSizeCache->{{80.48391232287936, 
                  94.32713253428129}, {-7.538322001012553, 
                  10.172031158562596`}}]},
               StatusArea[#, 14]& ,
               TagBoxNote->"14"],
              StyleBox["14", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[14, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 0.5, 0.}, {-0.5, 1., 17.}]},
                 
                 ImageSizeCache->{{84.60747730669937, 
                  98.3342810251284}, {-13.628499924715284`, 
                  5.809597636042932}}]},
               StatusArea[#, 17]& ,
               TagBoxNote->"17"],
              StyleBox["17", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[17, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 1., 0.}, {-0.5, 1.5, 1.}]},
                 
                 ImageSizeCache->{{89.15272210760071, 
                  102.25291619820939`}, {-7.605596074695878, 
                  1.5446014095649652`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 1.5, 0.}, {-0.5, 2., 2.}]},
                 
                 ImageSizeCache->{{93.10758628220105, 
                  106.08593875357737`}, {-12.24968155008376, \
-2.6261859381734727`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-1., 2., 0.}, {-0.5, 2.5, 2.}]},
                 
                 ImageSizeCache->{{97.00131068284348, 
                  109.83612401443669`}, {-16.185535659971006`, \
-6.705851758392052}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -3.5, 0.}, {0., -3., 1.}]},
                 
                 ImageSizeCache->{{56.62560266867368, 71.24272406108835}, {
                  35.944898062899135`, 46.76367614263574}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -2., 0.}, {0., -1.5, 1.}]},
                 
                 ImageSizeCache->{{70.80666056755409, 84.88715968108485}, {
                  21.238311586200897`, 31.47379491812922}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -1.5, 0.}, {0., -1., 8.}]},
                 
                 ImageSizeCache->{{75.0220723968659, 89.22119362111248}, {
                  12.069155184776369`, 26.619957203073323`}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -1., 0.}, {0., -0.5, 12.}]},
                 
                 ImageSizeCache->{{79.30691171346393, 93.45439841792988}, {
                  4.940864513659765, 21.88037060512141}}]},
               StatusArea[#, 12]& ,
               TagBoxNote->"12"],
              StyleBox["12", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[12, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, -0.5, 0.}, {0., 0., 24.}]},
                 
                 ImageSizeCache->{{83.26373871179676, 
                  97.59025222258397}, {-7.322691047867163, 
                  17.251048131183037`}}]},
               StatusArea[#, 24]& ,
               TagBoxNote->"24"],
              StyleBox["24", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[24, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 0., 0.}, {0., 0.5, 14.}]},
                 
                 ImageSizeCache->{{87.84504333753816, 
                  101.6320750306235}, {-5.097431311963449, 
                  12.728186165893034`}}]},
               StatusArea[#, 14]& ,
               TagBoxNote->"14"],
              StyleBox["14", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[14, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 0.5, 0.}, {0., 1., 28.}]},
                 
                 ImageSizeCache->{{91.6703523976763, 
                  105.58303757044705`}, {-18.41952849851562, 
                  8.308154048618388}}]},
               StatusArea[#, 28]& ,
               TagBoxNote->"28"],
              StyleBox["28", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[28, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 1., 0.}, {0., 1.5, 10.}]},
                 
                 ImageSizeCache->{{96.14419580524452, 
                  109.44616959888292`}, {-10.90152282462475, 
                  3.9874843533925137`}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 1.5, 0.}, {0., 2., 1.}]},
                 ImageSizeCache->{{100.2379055942655, 
                  113.22436764961454`}, {-9.325087639084272, \
-0.23713618291476202`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{-0.5, 2.5, 0.}, {0., 3., 1.}]},
                 
                 ImageSizeCache->{{107.82830955381381`, 
                  120.53879818958335`}, {-17.21657241276141, \
-8.410762305158316}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -2.5, 0.}, {0.5, -2., 2.}]},
                 
                 ImageSizeCache->{{73.81466539306541, 88.15097844170928}, {
                  28.183067130633557`, 39.363103683829046`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -2., 0.}, {0.5, -1.5, 3.}]},
                 
                 ImageSizeCache->{{78.33314866028927, 92.52775660862734}, {
                  22.690481895287213`, 34.32069713790256}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -1.5, 0.}, {0.5, -1., 7.}]},
                 
                 ImageSizeCache->{{82.6510223764536, 96.80081026519179}, {
                  15.38079427485312, 29.39922268884304}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -1., 0.}, {0.5, -0.5, 10.}]},
                 
                 ImageSizeCache->{{86.93001722418492, 100.97378345551864`}, {
                  8.83405134165812, 24.594381413313993`}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., -0.5, 0.}, {0.5, 0., 13.}]},
                 
                 ImageSizeCache->{{91.13352802506273, 105.0501515030607}, {
                  2.401452111870505, 19.902075760714432`}}]},
               StatusArea[#, 13]& ,
               TagBoxNote->"13"],
              StyleBox["13", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[13, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 0., 0.}, {0.5, 0.5, 21.}]},
                 
                 ImageSizeCache->{{95.15932728968579, 
                  109.0332306636631}, {-7.181481569119475, 
                  15.318397898633629`}}]},
               StatusArea[#, 21]& ,
               TagBoxNote->"21"],
              StyleBox["21", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[21, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 0.5, 0.}, {0.5, 1., 13.}]},
                 
                 ImageSizeCache->{{99.4211109510695, 
                  112.92618712337747`}, {-6.258075725539646, 
                  10.839618858459081`}}]},
               StatusArea[#, 13]& ,
               TagBoxNote->"13"],
              StyleBox["13", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[13, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 1., 0.}, {0.5, 1.5, 7.}]},
                 
                 ImageSizeCache->{{103.49759019056883`, 
                  116.73204539234429`}, {-6.630128409239063, 
                  6.462178417771533}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 1.5, 0.}, {0.5, 2., 5.}]},
                 
                 ImageSizeCache->{{107.4040031206132, 
                  120.46297846731335`}, {-9.485381093794656, 
                  2.1826756618319383`}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0., 2., 0.}, {0.5, 2.5, 1.}]},
                 
                 ImageSizeCache->{{111.21954116839966`, 
                  124.09907296367855`}, {-11.028692051251218`, \
-2.002139828428664}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -3.5, 0.}, {1., -3., 1.}]},
                 
                 ImageSizeCache->{{72.31251439695197, 87.01169609600107}, {
                  41.87918929699888, 52.939073178746085`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -2.5, 0.}, {1., -2., 2.}]},
                 
                 ImageSizeCache->{{81.59487563872614, 95.96166645666314}, {
                  31.026736675518883`, 42.321688261907326`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -2., 0.}, {1., -1.5, 1.}]},
                 
                 ImageSizeCache->{{86.12012706376171, 100.2745474623364}, {
                  26.75570977499831, 37.20765105198187}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -1.5, 0.}, {1., -1., 8.}]},
                 
                 ImageSizeCache->{{90.31764198166812, 104.48451642810504`}, {
                  17.433240308756183`, 32.217116192370014`}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -1., 0.}, {1., -0.5, 11.}]},
                 
                 ImageSizeCache->{{94.56167237961597, 108.59521338723017`}, {
                  10.817208814348799`, 27.345663246203532`}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, -0.5, 0.}, {1., 0., 18.}]},
                 ImageSizeCache->{{98.65941736233002, 112.61010870775338`}, {
                  1.7000247008605207`, 22.58908024638762}}]},
               StatusArea[#, 18]& ,
               TagBoxNote->"18"],
              StyleBox["18", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[18, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 0., 0.}, {1., 0.5, 11.}]},
                 
                 ImageSizeCache->{{102.90555854351524`, 116.5325128639431}, {
                  1.82203267467656, 17.94335154939664}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 0.5, 0.}, {1., 1., 4.}]},
                 
                 ImageSizeCache->{{106.99694237294406`, 
                  120.37288537676793`}, {1.9396443730039827`, 
                  13.404646528506435`}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 1., 0.}, {1., 1.5, 8.}]},
                 
                 ImageSizeCache->{{110.88390520620348`, 
                  124.15532335186924`}, {-4.856914685710013, 
                  8.96930903955051}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 1.5, 0.}, {1., 2., 3.}]},
                 
                 ImageSizeCache->{{114.72717314418324`, 
                  127.80181373725772`}, {-5.873906900044997, 
                  4.6338475983144605`}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 2., 0.}, {1., 2.5, 1.}]},
                 
                 ImageSizeCache->{{118.45369614151221`, 
                  131.37023409258427`}, {-8.715076274208398, 
                  0.39492621410619577`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{0.5, 2.5, 0.}, {1., 3., 1.}]},
                 
                 ImageSizeCache->{{122.09390352486876`, 
                  134.87791838384325`}, {-12.716628481456535`, \
-3.7506441710749527`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -2.5, 0.}, {1.5, -2., 1.}]},
                 
                 ImageSizeCache->{{89.51411888162849, 103.88301770815754`}, {
                  34.559737626965116`, 45.322712996096}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -1.5, 0.}, {1.5, -1., 1.}]},
                 
                 ImageSizeCache->{{98.25613155946519, 112.27447109845383`}, {
                  24.703357834146626`, 35.074448664735264`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -1., 0.}, {1.5, -0.5, 4.}]},
                 
                 ImageSizeCache->{{102.4284137452285, 116.32077966757483`}, {
                  18.023757796620064`, 30.13498916642295}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., -0.5, 0.}, {1.5, 0., 10.}]},
                 
                 ImageSizeCache->{{106.49679747481366`, 
                  120.29013820334691`}, {9.52177465731711, 
                  25.312798949524712`}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 0., 0.}, {1.5, 0.5, 8.}]},
                 
                 ImageSizeCache->{{110.5640597600714, 124.17631202734589`}, {
                  6.301698665109075, 20.603750815558243`}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 0.5, 0.}, {1.5, 1., 10.}]},
                 
                 ImageSizeCache->{{114.51373043540248`, 
                  127.99470302306122`}, {0.6089489596947164, 
                  16.003908991613507`}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 1., 0.}, {1.5, 1.5, 5.}]},
                 
                 ImageSizeCache->{{118.36558554011638`, 
                  131.65153718566762`}, {-0.5158314481213644, 
                  11.509518159314393`}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 1.5, 0.}, {1.5, 2., 1.}]},
                 
                 ImageSizeCache->{{122.11234411945433`, 
                  135.20780961808754`}, {-2.229594637433351, 
                  7.116993229760052}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -3., 0.}, {2., -2.5, 1.}]},
                 
                 ImageSizeCache->{{93.04321608419389, 107.6342146986513}, {
                  42.67054656924042, 53.76283231921031}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -2.5, 0.}, {2., -2., 1.}]},
                 
                 ImageSizeCache->{{97.51063906552461, 111.91740082078468`}, {
                  37.48602232382753, 48.36709767359749}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -1.5, 0.}, {2., -1., 2.}]},
                 ImageSizeCache->{{106.10867128050745`, 
                  120.17637240948154`}, {26.845809394158422`, 
                  37.9720539169808}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -1., 0.}, {2., -0.5, 2.}]},
                 
                 ImageSizeCache->{{110.26199461848053`, 
                  124.16405511790796`}, {22.02934225259993, 
                  32.96315376491111}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, -0.5, 0.}, {2., 0., 7.}]},
                 
                 ImageSizeCache->{{114.30578231216394`, 128.1051694193568}, {
                  14.109864109572237`, 28.073989520111045`}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 0., 0.}, {2., 0.5, 2.}]},
                 
                 ImageSizeCache->{{118.27215050941771`, 
                  131.85957737773762`}, {12.732152613965168`, 
                  23.30031852819476}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 0.5, 0.}, {2., 1., 9.}]},
                 
                 ImageSizeCache->{{122.13188613817951`, 135.6907137909629}, {
                  3.7747939869955296`, 18.638096237377663`}}]},
               StatusArea[#, 9]& ,
               TagBoxNote->"9"],
              StyleBox["9", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[9, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 1.5, 0.}, {2., 2., 4.}]},
                 
                 ImageSizeCache->{{129.58891329447738`, 
                  142.79676409317295`}, {-1.6892547163879126`, 
                  9.632742272472953}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 2., 0.}, {2., 2.5, 2.}]},
                 
                 ImageSizeCache->{{133.19208649437908`, 
                  146.21879969215868`}, {-4.623616442905805, 
                  5.282412995211903}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., -1.5, 0.}, {2.5, -1., 1.}]},
                 
                 ImageSizeCache->{{114.09326340229389`, 128.1919970966681}, {
                  30.317594868691028`, 40.91078943132786}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., -1., 0.}, {2.5, -0.5, 1.}]},
                 
                 ImageSizeCache->{{118.17289338851556`, 132.1067370360129}, {
                  25.431253456654265`, 35.83097391556908}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., -0.5, 0.}, {2.5, 0., 3.}]},
                 
                 ImageSizeCache->{{122.15263129790586`, 
                  135.96318860343294`}, {19.37691139237575, 
                  30.87343059943743}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 0., 0.}, {2.5, 0.5, 2.}]},
                 
                 ImageSizeCache->{{126.03835868652682`, 139.6808184042643}, {
                  15.362941769736207`, 26.033797306845777`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 0.5, 0.}, {2.5, 1., 4.}]},
                 
                 ImageSizeCache->{{129.83336778496385`, 
                  143.37757400403416`}, {9.5400664637562, 
                  21.307916922788063`}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., -1., 0.}, {3.5, -0.5, 1.}]},
                 
                 ImageSizeCache->{{134.3043306300507, 148.33884449009307`}, {
                  31.065941806949063`, 41.688964537119666`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ]}, {}, {}}, {{}, 
           {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
            Opacity[0.5], EdgeForm[RGBColor[
            0.81411984, 0.6199495199999999, 0.28227672000000004`]], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1., 3., 0.}, {1.5, 3.5, 1.}]},
                 
                 ImageSizeCache->{{132.86293732411116`, 
                  145.55746871829314`}, {-14.389112087013189`, \
-5.4828794884419345`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 2., 0.}, {2., 2.5, 2.}]},
                 
                 ImageSizeCache->{{133.19208649437908`, 
                  146.21879969215868`}, {-4.623616442905805, 
                  5.282412995211903}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 2.5, 0.}, {2., 3., 3.}]},
                 
                 ImageSizeCache->{{136.71540329984677`, 
                  149.6391345691841}, {-9.346797465450104, 
                  1.0291180241109696`}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 3., 0.}, {2., 3.5, 7.}]},
                 
                 ImageSizeCache->{{140.16148937636575`, 
                  153.08613649503013`}, {-15.844009500730724`, \
-3.1303533655236073`}}]},
               StatusArea[#, 7]& ,
               TagBoxNote->"7"],
              StyleBox["7", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[7, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{1.5, 3.5, 0.}, {2., 4., 1.}]},
                 
                 ImageSizeCache->{{143.53285652871335`, 
                  156.13908974074403`}, {-16.04635410371372, \
-7.199071792708557}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 1.5, 0.}, {2.5, 2., 1.}]},
                 
                 ImageSizeCache->{{137.1636489469695, 150.34596481346512`}, {
                  2.654399682875928, 12.181741088236619`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 2., 0.}, {2.5, 2.5, 11.}]},
                 
                 ImageSizeCache->{{140.70477979800603`, 
                  154.08322553053162`}, {-7.910573097612357, 
                  7.774053563571313}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 2.5, 0.}, {2.5, 3., 32.}]},
                 
                 ImageSizeCache->{{144.16692555314452`, 
                  158.2216123228843}, {-25.619536869650908`, 
                  3.465314827362132}}]},
               StatusArea[#, 32]& ,
               TagBoxNote->"32"],
              StyleBox["32", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[32, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 3., 0.}, {2.5, 3.5, 16.}]},
                 
                 ImageSizeCache->{{147.55269971484483`, 
                  160.91374997121255`}, {-19.23858964339266, \
-0.7477701081819603}}]},
               StatusArea[#, 16]& ,
               TagBoxNote->"16"],
              StyleBox["16", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[16, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 3.5, 0.}, {2.5, 4., 10.}]},
                 
                 ImageSizeCache->{{150.8646017407431, 
                  163.8822846882724}, {-19.388314475425904`, \
-4.868351539766554}}]},
               StatusArea[#, 10]& ,
               TagBoxNote->"10"],
              StyleBox["10", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[10, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2., 4., 0.}, {2.5, 4.5, 2.}]},
                 
                 ImageSizeCache->{{154.10502319720717`, 
                  166.66754820482518`}, {-18.30234531114751, \
-8.899442928948892}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 1.5, 0.}, {3., 2., 3.}]},
                 ImageSizeCache->{{144.83849722480255`, 
                  158.14056276714075`}, {3.8812050044102158`, 
                  14.7646532379661}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 2., 0.}, {3., 2.5, 23.}]},
                 
                 ImageSizeCache->{{148.3156385659669, 
                  162.31540186795468`}, {-13.254265324141087`, 
                  10.298465543435182`}}]},
               StatusArea[#, 23]& ,
               TagBoxNote->"23"],
              StyleBox["23", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[23, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 2.5, 0.}, {3., 3., 62.}]},
                 
                 ImageSizeCache->{{151.71472107898762`, 
                  167.4638850506523}, {-43.74419891461922, 
                  5.9331918173476055`}}]},
               StatusArea[#, 62]& ,
               TagBoxNote->"62"],
              StyleBox["62", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[62, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 3., 0.}, {3., 3.5, 53.}]},
                 
                 ImageSizeCache->{{155.0383441174265, 
                  170.35355522292642`}, {-41.41543271075014, 
                  1.6654500262190197`}}]},
               StatusArea[#, 53]& ,
               TagBoxNote->"53"],
              StyleBox["53", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[53, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 3.5, 0.}, {3., 4., 19.}]},
                 
                 ImageSizeCache->{{158.28899289078413`, 
                  171.85445329018324`}, {-22.828471327458683`, \
-2.5079924056625913`}}]},
               StatusArea[#, 19]& ,
               TagBoxNote->"19"],
              StyleBox["19", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[19, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{2.5, 4., 0.}, {3., 4.5, 3.}]},
                 
                 ImageSizeCache->{{161.4690446619001, 
                  174.12741345551171`}, {-16.690653543093976`, \
-6.590226762011309}}]},
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 1.5, 0.}, {3.5, 2., 1.}]},
                 
                 ImageSizeCache->{{152.61545606117073`, 
                  165.88535324023113`}, {7.666991011853803, 
                  17.382160057606704`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 2., 0.}, {3.5, 2.5, 29.}]},
                 
                 ImageSizeCache->{{156.0265994866036, 
                  170.54576146345005`}, {-14.789081523569422`, 
                  12.856299755913817`}}]},
               StatusArea[#, 29]& ,
               TagBoxNote->"29"],
              StyleBox["29", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[29, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 2.5, 0.}, {3.5, 3., 57.}]},
                 
                 ImageSizeCache->{{159.36066777692486`, 
                  175.3552206824528}, {-37.958475170431875`, 
                  8.433370989718334}}]},
               StatusArea[#, 57]& ,
               TagBoxNote->"57"],
              StyleBox["57", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[57, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 3., 0.}, {3.5, 3.5, 50.}]},
                 
                 ImageSizeCache->{{162.62024403030986`, 
                  178.2055745561444}, {-37.107429256227206`, 
                  4.109901786244308}}]},
               StatusArea[#, 50]& ,
               TagBoxNote->"50"],
              StyleBox["50", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[50, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 3.5, 0.}, {3.5, 4., 29.}]},
                 
                 ImageSizeCache->{{165.80779719346253`, 
                  180.12421929337665`}, {-27.02357212440856, \
-0.11742541312969479`}}]},
               StatusArea[#, 29]& ,
               TagBoxNote->"29"],
              StyleBox["29", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[29, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3., 4., 0.}, {3.5, 4.5, 5.}]},
                 
                 ImageSizeCache->{{168.92568829839462`, 
                  181.75254798116543`}, {-15.676641726205176`, \
-4.2517822428338}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 1., 0.}, {4., 1.5, 1.}]},
                 
                 ImageSizeCache->{{157.07478645885377`, 170.5350763009107}, {
                  14.746009996590898`, 24.730435339642682`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 1.5, 0.}, {4., 2., 1.}]},
                 
                 ImageSizeCache->{{160.49657690857939`, 173.8105281321041}, {
                  10.223108257735861`, 20.034961257328902`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 2., 0.}, {4., 2.5, 8.}]},
                 
                 ImageSizeCache->{{163.8396505302585, 177.40701262387984`}, {
                  1.3578730334016011`, 15.448224370195094`}}]},
               StatusArea[#, 8]& ,
               TagBoxNote->"8"],
              StyleBox["8", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[8, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 2.5, 0.}, {4., 3., 22.}]},
                 
                 ImageSizeCache->{{167.1066927063732, 
                  181.39306166937752`}, {-11.966928432625354`, 
                  10.96649073006263}}]},
               StatusArea[#, 22]& ,
               TagBoxNote->"22"],
              StyleBox["22", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[22, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 3., 0.}, {4., 3.5, 22.}]},
                 
                 ImageSizeCache->{{170.30026804560092`, 
                  184.49802226230602`}, {-16.122912326315827`, 
                  6.58619541506269}}]},
               StatusArea[#, 22]& ,
               TagBoxNote->"22"],
              StyleBox["22", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[22, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 3.5, 0.}, {4., 4., 11.}]},
                 ImageSizeCache->{{173.42282709700328`, 
                  186.82111716314213`}, {-13.147366324246516`, 
                  2.3039330724248384`}}]},
               StatusArea[#, 11]& ,
               TagBoxNote->"11"],
              StyleBox["11", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[11, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 4., 0.}, {4., 4.5, 2.}]},
                 
                 ImageSizeCache->{{176.4767126212257, 
                  189.1761864405072}, {-11.533366690872072`, \
-1.8835509107913317`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{3.5, 4.5, 0.}, {4., 5., 1.}]},
                 
                 ImageSizeCache->{{179.46416545243483`, 
                  191.9724602351391}, {-14.868521735837074`, \
-5.9793686571325075`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4., 2.5, 0.}, {4.5, 3., 2.}]},
                 
                 ImageSizeCache->{{174.9547737058557, 188.09532175525612`}, {
                  3.327150620217001, 13.533206357341276`}}]},
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4., 3., 0.}, {4.5, 3.5, 4.}]},
                 
                 ImageSizeCache->{{178.08033343664, 
                  191.2236903402696}, {-2.2067313007844884`, 
                  9.094957158343494}}]},
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4., 3.5, 0.}, {4.5, 4., 5.}]},
                 
                 ImageSizeCache->{{181.13594173979914`, 
                  194.22263326217308`}, {-7.009415607157784, 
                  4.756681817959873}}]},
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {"Graphics3DLabel"}], "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[{{}, 
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], 
                  CuboidBox[{4.5, 3., 0.}, {5., 3.5, 1.}]},
                 
                 ImageSizeCache->{{185.96240775372152`, 198.9405420129665}, {
                  2.129038495543085, 11.636829792263105`}}]},
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {"Graphics3DLabel"}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {"Graphics3DLabel"}], "Tooltip"]& ]}, {}, {}}},
         FontColor->GrayLevel[0.4]]},
       Axes->{True, True, True},
       AxesLabel->{None, None, None},
       BoxRatios->{1, 1, 0.4},
       FaceGridsStyle->Automatic,
       ImageSize->300,
       Lighting->"Neutral",
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-3., 5.}, {-3.5, 5.}, {All, All}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.1]}},
       Ticks->{Automatic, Automatic, Automatic}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]}}, 2,
  Alignment->{Center, Center}]], "Output",
 CellChangeTimes->{{3.65918048910951*^9, 3.6591805250987663`*^9}, {
   3.659180571042089*^9, 3.659180585091605*^9}, {3.6591806395860786`*^9, 
   3.659180700996031*^9}, 3.6591854656292667`*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell["Visualising Frequency Tables", "Section",
 CellChangeTimes->{{3.659179177972837*^9, 3.659179181009468*^9}, {
  3.659181380238792*^9, 3.659181391509631*^9}, {3.659181463637103*^9, 
  3.659181481139413*^9}}],

Cell["\<\
When visualising data using a chart it is crucial to understand that your \
visualisation is a representation of the data - and to choose as clear and \
unambiguous chart as possible. Consider the following three charts that all \
visualise the same data:\
\>", "Text",
 CellChangeTimes->{{3.659178999679151*^9, 3.6591789999945383`*^9}, {
  3.659181396463543*^9, 3.65918142899436*^9}, {3.659181489107718*^9, 
  3.659181585169118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TabView", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<PieChart\>\"", "->", 
      RowBox[{"PieChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"",
            ",", "\"\<IT Services\>\"", ",", "\"\<Zoology\>\""}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"LabelingFunction", "\[Rule]", "None"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PieChart3D\>\"", "->", 
      RowBox[{"PieChart3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ChartLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"",
            ",", "\"\<IT Services\>\"", ",", "\"\<Zoology\>\""}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"LabelingFunction", "\[Rule]", "None"}], ",", 
        RowBox[{"ViewPoint", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.21149154538597087"}], ",", " ", 
           "3.001197517299212", ",", " ", "0.8414777408745291"}], "}"}]}], 
        ",", " ", "\n", "   ", 
        RowBox[{"ViewVertical", " ", "->", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.04958960267809786"}], ",", " ", 
           "0.40720144552881316", ",", " ", "9.11991148019252"}], "}"}]}], 
        ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<BarChart\>\"", "\[Rule]", 
      RowBox[{"BarChart", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"ChartLabels", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"",
            ",", "\"\<IT Services\>\"", ",", "\"\<Zoology\>\""}], "}"}]}], 
        ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659173659295195*^9, 3.6591736678072443`*^9}, {
  3.659173783673476*^9, 3.6591737970160227`*^9}, {3.65917410861942*^9, 
  3.659174221245366*^9}, {3.659174263854562*^9, 3.659174307533519*^9}}],

Cell[BoxData[
 TabViewBox[{{1,"\<\"PieChart\"\>"->
  TemplateBox[{GraphicsBox[{{}, {}, 
      DynamicModuleBox[{
       DynamicChart`click$35547$35803 = False, DynamicChart`click$35550$35803 = 
        False, DynamicChart`click$35553$35803 = False, 
        DynamicChart`click$35556$35803 = False, 
        DynamicChart`click$35559$35803 = False}, {{
         Directive[
          RGBColor[0.5, 0.5, 1.], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.5]]]], {{{{{{}, {{
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.982864, 0.7431472, 0.3262672]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35547$35803, 
                    FEPrivate`Not[DynamicChart`click$35547$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35547$35803, {{{1., 0}, {
                    0, 1.}}, {-0.10000000000000005`, 0.1732050807568877}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35547$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[1., 0.544, 0.2]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.34906585039886595`, 
                    1.0471975511965979`}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35550$35803, 
                    FEPrivate`Not[DynamicChart`click$35550$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35550$35803, {{{1., 0}, {0, 1.}}, {
                    0.18793852415718168`, 0.06840402866513376}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35550$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.7453292519943293`, -0.34906585039886595`}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35553$35803, 
                    FEPrivate`Not[DynamicChart`click$35553$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35553$35803, {{{1., 0}, {0, 1.}}, {
                    0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35553$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.6754608, 0.4848, 0.7224792]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.443460952792061, -1.7453292519943293`}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35556$35803, 
                    FEPrivate`Not[DynamicChart`click$35556$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35556$35803, {{{1., 0}, {
                    0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$35556$35803}]]}, {
                Directive[
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5]]], 
                 RGBColor[0.4992, 0.5552, 0.8309304]], 
                GeometricTransformationBox[
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.443460952792061}]}], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$35559$35803, 
                    FEPrivate`Not[DynamicChart`click$35559$35803]], 
                    PassEventsDown -> True, PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  If[
                  DynamicChart`click$35559$35803, {{{1., 0}, {
                    0, 1.}}, {-0.18793852415718168`, -0.06840402866513377}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$35559$35803}]]}}}}}, {}}, {{}}}}, {{{{
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35547$35803, 
                  FEPrivate`Not[DynamicChart`click$35547$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35547$35803, {{{1., 0}, {
                 0, 1.}}, {-0.10000000000000005`, 0.1732050807568877}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35547$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35550$35803, 
                  FEPrivate`Not[DynamicChart`click$35550$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35550$35803, {{{1., 0}, {0, 1.}}, {
                0.18793852415718168`, 0.06840402866513376}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35550$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35553$35803, 
                  FEPrivate`Not[DynamicChart`click$35553$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35553$35803, {{{1., 0}, {0, 1.}}, {
                0.10000000000000003`, -0.17320508075688773`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35553$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35556$35803, 
                  FEPrivate`Not[DynamicChart`click$35556$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35556$35803, {{{1., 0}, {
                 0, 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$35556$35803}]], 
            GeometricTransformationBox[
             TagBox[{{}, {}}, 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35559$35803, 
                  FEPrivate`Not[DynamicChart`click$35559$35803]], 
                PassEventsDown -> True, PassEventsDown -> Automatic, 
                PassEventsUp -> True}]], 
             Dynamic[
              If[
              DynamicChart`click$35559$35803, {{{1., 0}, {
                 0, 1.}}, {-0.18793852415718168`, -0.06840402866513377}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$35559$35803}]]}, {}}}, {}}}, 
       DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
     ContentSelectable -> False, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], LabelStyle -> {
        GrayLevel[0], FontFamily -> "Arial"}, 
      PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, PlotRangePadding -> 
      Scaled[0.02]}],FormBox[
     FormBox[
      TemplateBox[{
       "\"Physics\"", "\"English\"", "\"Chemistry\"", "\"IT Services\"", 
        "\"Zoology\""}, "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
          Background -> Automatic, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "None", ",", "None", ",", "None", ",", "None", ",", 
                    "None"}], "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {
  2,"\<\"PieChart3D\"\>"->
  TemplateBox[{Graphics3DBox[{
      RGBColor[0.5, 0.5, 1.], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.1]}], {{{}, {{
          RGBColor[0.980722, 0.7110406, 0.2420506], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35828 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJzt1mtIU2EYB3C1G1SjMrtoZk2RVqhYKLa0HisLLAsvEJk5YZkEfpAKKyLS
uTLLYWZeoiK6fZA2bIa3UHxNamlWSxRXq9Ri6bxse6S0qZnZB98D8fShz+2B
A+N34MDO4f3/H7E8LfbwDCcnJ5epK2Lq+v3bMY5xzL8OsonW9J5Bv+q6aSna
vfaJwmZj4+crX6rCtDDtR8Zmz1peb2MmpcupgKAG7r59IbXDqTam0tzOlEub
uPtkLM1LG7WyGznvnPWub7gPRR7LHU+xMsMqb3GCvY27rLzzQWClhX29KoqL
aTZwzwh226AzDbKz4cZzjYr33JPuzLQXjAww9z1b+t+u7OJei8kXVAP9bO7+
Wrsl6hP3fRuuiHVP+9jO89fne4x+5r4xWn83TWlmXkvDYquvmLhXSpdEtkt6
2eQyKFy9pIf7tegiWXzVF3bO/eopnaKXe/jio81n/E0sJ1zsub7DzN1FLcpq
u/yZlWzdUey8qJ97ot/toTld3ezE62z518AB7gmVkK6VdrLAm14PPwYNcq9x
ff5OUmxki/2seRUrLNxz43L2Sg0d7MlQmeiSSfDE7Ydi6p3a2IRPmO/lPCv3
/APdu+L9X7Mu2ViBm7tN8OPzznps0rFlngpVrlJwj8GaVFNSHQvStcRmvxL8
zmqtpPRgKVNqDtyrGRG8fEyiXwf5YJPqZ9t/Cj7cZL7/OLICUlIe/QjtEdwY
sSA5KaQRbNs2zrylETyqU230CHkBrOS7Ij5W8ILMxgCzqBVmaLRZLQbhf4WK
FSfLrO3wLE6ecGyz4MG533q7H7+FQp+FayxK4f1cbL4mK079ADFzGrzH1cJ7
/jn5e7pAHbXffLpK+C704F/uO9zh/7fT5wiBPncI9DlFoM81Ap0DCHRuINA5
g0DnEgKdYwh07iHQOYlA5+qUkzmMQOc2Ap3zCHQvINA9MvV8sncQ6J5CoHsN
ge5BBLo3EeieRaB7GYHucQS69xHoPQGB3isQ6D0Egd5bEOg9B4HeixDoPWr6
vPy5dyH8AuY5laI=
                 "]], 
                
                BSplineSurface3DBox[{{{0.4999999999999999, 0.8660254037844387,
                   0.}, {-0.3660254037844388, 1.3660254037844386`, 
                  0.}, {-0.8660254037844387, 0.4999999999999999, 0.}, {-1., 
                  0.2679491924311227, 0.}, {-1., 5.551115123125783*^-17, 
                  0.}}, {{
                   0.4999999999999999, 0.8660254037844387, 
                    1}, {-0.3660254037844388, 1.3660254037844386`, 
                    1}, {-0.8660254037844387, 0.4999999999999999, 1}, {-1., 
                    0.2679491924311227, 1}, {-1., 5.551115123125783*^-17, 
                    1}}}, SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7071067811865475, 1., 
                  0.9659258262890683, 1.}, {1., 0.7071067811865475, 1., 
                  0.9659258262890683, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 2}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.4999999999999999, 0.8660254037844387, 1.}, {
                 0.4999999999999999, 0.8660254037844387, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-1., -3.216245299353273*^-16, 
                 1.}, {-1., -3.216245299353273*^-16, 0.}}}]}}, 
              ImageSizeCache -> {{100.38834872409797`, 
               488.0127567638249}, {-61.680548519600066`, 
               121.37388017888667`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35828, 
                 FEPrivate`Not[DynamicChart`click$35828]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35828, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {-0.10000000000000005`, 0.1732050807568877, 
                0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$35828}]],
            DynamicModuleValues :> {}]}, {
          RGBColor[1., 0.487, 0.1], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35829 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmI9IAaxR8EoIAb8/g8C9+3X+ES8qNr22h4mfvbZnYnb
dj60nxSm2Zm55BVc/MwWnonqiY/tZzTxdz4sewkXb4sor5/35Yn9Ig2r3ZL6
L+DiN+22llUXPbPf8fwwY8q5Z3DxmKDjV0xuPre/3J72UTvsKVxc9cGtixHq
L+2/VGyM+nr8MVw8Vqb8b1/0K3s1N9ddUaqP4OKdkd0LZ5a8tk8R3jCRu+AB
XPzgp/ec4YVv7D+tsAudGnwX4R5/jvWHAt7a32tM6rmx4iZcXFo3yOmb4Dv7
H9xdJSseX4WLhwecna215Z39gd6yv8/ZL8HFnT+5te8we2//UHPJJiXjM3Bx
FtutBZIz39u/PGJ2LNnyCFw8zuTju+e33tt/DnY/Oj10B1ycnd1B58Hv9/ab
btecXGK3AEN8FUR8P7o5ryHm7Ee39xnEXrg4zJ33Ie6Ei6P5Cy4OC4dvkHCA
i2MHH+xHxUfFkcWxp58P9tjT2wd77Onzgz329PzBHnv6/2CPPb8gxFHzF8Ic
1PyIsBc1/yLciZrfMfwFF8dennywx17+fLDHXl59sMdevn2wx14efrDHXn5+
sMde3gLdg7V8/mCPvTz/YI+9/P9gj72++GCPvX75YA8A4hXGVw==
                 "]], 
                
                BSplineSurface3DBox[{{{
                  0.9396926207859083, -0.34202014332566877`, 0.}, {
                  1.2266815969056775`, 0.4464755881957988, 0.}, {
                  0.4999999999999999, 0.8660254037844387, 
                  0.}}, {{0.9396926207859083, -0.34202014332566877`, 1}, {
                   1.2266815969056775`, 0.4464755881957988, 1}, {
                   0.4999999999999999, 0.8660254037844387, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7660444431189779, 1.}, {1., 
                  0.7660444431189779, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.4999999999999997, 0.8660254037844388, 1.}, {
                 0.4999999999999997, 0.8660254037844388, 0.}}}]}}, 
              ImageSizeCache -> {{32.68711992982149, 
               336.64511697853015`}, {-94.56686068843058, 
               43.70694303276039}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35829, 
                 FEPrivate`Not[DynamicChart`click$35829]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35829, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {
               0.18793852415718168`, 0.06840402866513376, 0}}, {{1, 0, 0}, {0,
               1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$35829}]], 
           DynamicModuleValues :> {}]}, {
          RGBColor[0.757, 0.40959999999999996`, 0.1], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35830 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmI9IAaxR8EoIAZI6wY5fRN8Z/+Nu6tkxeOr+2HiN/05
1h8KeGt/pzGp58aKm3DxQ5/ec4YXvrH/sMIudGrwXbh4V2T3wpklr+2ThDdM
5C54ABePkyn/2xf9yl7VzXVXlOojuLjag1sXI9Rf2n+q2Bj19fhjhPqg41dM
bj63v9Se9lE77Clc/Jbd1rLqomf2254fZkw59wwu3h5RXj/vyxP7hRpWuyX1
X8DFz27hmaie+Nh+ehN/58Oyl3DxC8/uTNy286H9hDDNzswlr+DijGDygf0q
n4gXVdtew8V7T86Im5Z9xz6Q/YDS79Vv4OKW3V+eP9h5w36ysoD62+a3cHF7
xcbyde+u2B8NToousn0HF5/acEjvBe9Fe+Y1G5pOX0eIB99bfUvK/JT9/unf
GyOD3sPFH7nwp8SbH7J/72TBMm8NQlz05IslOz232Kembfpj/Qwh/vGXxnkt
+wn27y3Ps/34hxBPUtigsSJmxf7mNVGLd3xDiHO92ZH9JH7PfpNjp4PaziLE
G4q566Ssju2XkGns6W5GiGMHH+xHxUfFkcWxp58P9tjT2wd77Onzgz329PzB
Hnv6/2CPPb98sMeevz7YY8+PH+yx598P9tjz+wd77OXDB3vs5ckHe+zlzwd7
7OXVB3vs5dsHe+zl4Qd77OXnB3vs5S1QPdby+YM99vL8gz328v+DPfb64oM9
9vrlgz0ARFXOXw==
                 "]], 
                
                BSplineSurface3DBox[{{{-0.17364817766693008`, \
-0.9848077530122081, 0.}, {0.6527036446661394, -1.130515874847136, 0.}, {
                  0.9396926207859084, -0.34202014332566877`, 
                  0.}}, {{-0.17364817766693008`, -0.9848077530122081, 1}, {
                   0.6527036446661394, -1.130515874847136, 1}, {
                   0.9396926207859084, -0.34202014332566877`, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.7660444431189779, 1.}, {1., 
                  0.7660444431189779, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 1.}, {
                 0.9396926207859083, -0.34202014332566877`, 0.}}}]}}, 
              ImageSizeCache -> {{160.41750263717344`, 
               410.9131333719787}, {-114.01463571982481`, 
               1.8576382744329578`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35830, 
                 FEPrivate`Not[DynamicChart`click$35830]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35830, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {
               0.10000000000000003`, -0.17320508075688773`, 0}}, {{1, 0, 0}, {
              0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$35830}]], 
           DynamicModuleValues :> {}]}, {
          RGBColor[0.6348934, 0.4204, 0.6877891], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35831 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIJIAaxRwF+0FDMXSdldWy/hExjT3fz+/1w8agHXpG6
5/Y/iPs1SUQSIR7qnBy4j+Hy/n/KNqr9fe/g4i3BHX6W16/tP/xxHW/Xk7dw
8Y1Cx29qTLu1X1TnXd8WaYR4yFb70g2W9/YbzZFbf9fkDVw8SmfBR/b7D/ZX
nmtL+mzwGi7OtJq36XL/o/3THV2nMQq+govbCheerNF9sr/LQVHG8NoLuPjU
gKlxkdue7m+XnFxxrPE5XHyTpajnFY3n+5kk7KcoiD6Di1sEnF+U3/xiv5yY
TdD2iU/g4tjBB/tRcYg49nD7YI89nD/YY4+XD/bY4/GDPfZ4/2CPPZ18sMee
rj7YY0+HH+yxp9sP9tjT+Qd77PkCKI41H32wBwCBrOa0
                 "]], 
                
                BSplineSurface3DBox[{{{-0.7660444431189779, \
-0.6427876096865395, 0.}, {-0.5320888862379558, -0.9216049851068764, 
                  0.}, {-0.17364817766693008`, -0.9848077530122081, 
                  0.}}, {{-0.7660444431189779, -0.6427876096865395, 
                    1}, {-0.5320888862379558, -0.9216049851068764, 
                    1}, {-0.17364817766693008`, -0.9848077530122081, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9396926207859082, 1.}, {1., 
                  0.9396926207859082, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 
                 1.}, {-0.17364817766693008`, -0.9848077530122081, 0.}}}]}}, 
              ImageSizeCache -> {{308.55514959893014`, 
               496.78385961843867`}, {-86.5085239176434, 
               21.629167413722968`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35831, 
                 FEPrivate`Not[DynamicChart`click$35831]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35831, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {-0.09999999999999996, -0.17320508075688776`, 
                0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$35831}]],
            DynamicModuleValues :> {}]}, {
          RGBColor[0.4366, 0.49960000000000004`, 0.8097967], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          DynamicModuleBox[{DynamicChart`click$35832 = False}, 
           GeometricTransformation3DBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  RGBColor[
                  0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
                   
                  AbsoluteThickness[1.5]}], {}, {}], {
                Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIJIAaxRwF+YBFwflF+84v9cmI2QdsnPtkPEw82mqh4
7MjL/V6ts3ikfj6Ci+/8kNLe8/rVft6I3T/e+jyEi8cvZPkx6dvr/ZK+dq9u
yN6Hi9eaihgde/Jmf6vDrZZDjbfh4jEb760y2Pp2/+/JvMGBJ6/DxT94FnX/
Tnu3/568kmL0j8twceV6sb78n+/2z+64yXhe6AJcXOWl+e6v2e/3z16zoCHJ
8gRcPOMXG6vEvvf7vzQzVeiZHICLT/HWPNj4/v1+6batZ3psNsDFobbvZ48R
MVZbtnAP/lD7YD8qjiyOHm4f7LGH8wd77PHywR57PH6wxx7vH+yxp5MP9tjT
1Qd77Onwgz32dPvBHns6/2CPPV98sMeejz7YAwBAwfB2
                 "]], 
                
                BSplineSurface3DBox[{{{-1., -1.2246467991473532`*^-16, 
                  0.}, {-1., -0.3639702342662025, 
                  0.}, {-0.7660444431189779, -0.6427876096865395, 
                  0.}}, {{-1., -1.2246467991473532`*^-16, 
                    1}, {-1., -0.3639702342662025, 
                    1}, {-0.7660444431189779, -0.6427876096865395, 1}}}, 
                 SplineDegree -> {1, 2}, 
                 SplineWeights -> {{1., 0.9396926207859082, 1.}, {1., 
                  0.9396926207859082, 1.}}, 
                 SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-1., -1.2246467991473532`*^-16, 
                 1.}, {-1., -1.2246467991473532`*^-16, 0.}}}], 
                
                Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 
                 1.}, {-0.7660444431189779, -0.6427876096865395, 0.}}}]}}, 
              ImageSizeCache -> {{308.55514959893014`, 
               520.0339307170566}, {-73.73511949261572, 
               29.762863828736457`}}], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$35832, 
                 FEPrivate`Not[DynamicChart`click$35832]], PassEventsDown -> 
               True, PassEventsDown -> Automatic, PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$35832, {{{1., 0, 0}, {0, 1., 0}, {
                0, 0, 1.}}, {-0.18793852415718168`, -0.06840402866513377, 
                0}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], TrackedSymbols :> {DynamicChart`click$35832}]],
            DynamicModuleValues :> {}]}}}, {}}, {}}, BoxRatios -> {1, 1, 0.1},
      Boxed -> False, FaceGridsStyle -> Automatic, ImageSize -> Large, 
     LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, Lighting -> "Neutral", 
     PlotRange -> {{1.2, -1.2}, {1.2, -1.2}, {0, 1}}, 
     ViewPoint -> {-1.12978742660665, 2.7505787502997205`, 
      0.9580693654851675}, 
     ViewVertical -> {-0.09954770908724002, 0.36361595093833105`, 
      9.262147126010767}],FormBox[
     FormBox[
      TemplateBox[{
       "\"Physics\"", "\"English\"", "\"Chemistry\"", "\"IT Services\"", 
        "\"Zoology\""}, "SwatchLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.980722, 0.7110406, 0.2420506]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[1., 0.487, 0.1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.757, 0.40959999999999996`, 0.1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.6348934, 0.4204, 0.6877891]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
          Background -> Automatic, StripOnInput -> False], 
         TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.980722, 0.7110406, 0.2420506], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6538146666666667, 0.4740270666666667, 
                    0.16136706666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.980722, 0.7110406, 0.2420506]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.980722, 0.7110406, 0.2420506]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.980722, 0.7110406, 0.2420506], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.487, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.32466666666666666`, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.487, 0.1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.487, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.487, 0.1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.757, 0.40959999999999996`, 0.1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5046666666666667, 0.2730666666666667, 
                    0.06666666666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.757, 0.40959999999999996, 0.1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.757, 0.40959999999999996`, 0.1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.757, 0.40959999999999996`, 0.1], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6348934, 0.4204, 0.6877891], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4232622666666667, 0.28026666666666666`, 
                    0.45852606666666673`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6348934, 0.4204, 0.6877891]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6348934, 0.4204, 0.6877891]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6348934, 0.4204, 0.6877891], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2910666666666667, 0.33306666666666673`, 
                    0.5398644666666668], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4366, 0.49960000000000004, 0.8097967]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4366, 0.49960000000000004`, 0.8097967], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
             ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"{", 
                  
                  RowBox[{
                   "None", ",", "None", ",", "None", ",", "None", ",", 
                    "None"}], "}"}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
            ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}, {
  3,"\<\"BarChart\"\>"->
  GraphicsBox[{
    {Opacity[0], PointBox[{0.4451141552511416, 0.}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.54337899543379, 0.}, {1.45662100456621, 3.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{23.49680607904926, 
            93.60668831928412}, {-118.62898714788555`, 115.480234375}}],
          StatusArea[#, 3]& ,
          TagBoxNote->"3"],
         StyleBox["3", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[3, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.54337899543379, 0.}, {2.45662100456621, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{99.87292713210643, 
            169.98280937234125`}, {-40.71257997359038, 115.48023437499998`}}],
          
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5433789954337898`, 0.}, {3.45662100456621, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{176.24904818516356`, 
            246.3589304253984}, {-40.71257997359038, 115.48023437499998`}}],
          StatusArea[#, 2]& ,
          TagBoxNote->"2"],
         StyleBox["2", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[2, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5433789954337898`, 0.}, {4.45662100456621, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{252.6251692382207, 322.7350514784556}, {
            37.20382720070481, 115.48023437499998`}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ]}, 
      {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
       0.6649999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.543378995433789, 0.}, {5.456621004566209, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{329.0012902912779, 399.1111725315127}, {
            37.20382720070481, 115.48023437499998`}}],
          StatusArea[#, 1]& ,
          TagBoxNote->"1"],
         StyleBox["1", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4451141552511416, 0.}, {5.55685114155251, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5433789954337899, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5433789954337899, 0.}]}],
          LineBox[{{5.456621004566209, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {5.456621004566209, 
            0.}]}], {{}, {}, {}, {}, {}, {
           LineBox[{{1.4566210045662098`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4566210045662098`, 
              0.}]}], LineBox[{{1.5433789954337898`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5433789954337898`, 
              0.}]}], LineBox[{{2.4566210045662094`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4566210045662094`, 
              0.}]}], LineBox[{{2.5433789954337893`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5433789954337893`, 
              0.}]}], LineBox[{{3.456621004566209, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.456621004566209, 
              0.}]}], LineBox[{{3.543378995433789, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.543378995433789, 
              0.}]}], LineBox[{{4.456621004566209, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.456621004566209, 
              0.}]}], LineBox[{{4.543378995433789, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.543378995433789, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Physics\"\>", 
           Offset[{0., -1.9999999999999998`}, {0.9999999999999998, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"English\"\>", 
           Offset[{0., -1.9999999999999998`}, {1.9999999999999996`, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Chemistry\"\>", 
           Offset[{0., -1.9999999999999998`}, {2.999999999999999, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"IT Services\"\>", 
           Offset[{0., -1.9999999999999998`}, {3.999999999999999, 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Zoology\"\>", 
           Offset[{0., -1.9999999999999998`}, {4.999999999999999, 0.}], {0, 1},
            Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]}, "GraphicsAxes",
     StripOnInput->False,
     Antialiasing->False]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, True},
   AxesLabel->{None, None},
   AxesOrigin->{0.4451141552511416, 0.},
   BaseStyle->{FontSize -> 14},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Identity[
        Part[#, 1]], 
       Identity[
        Part[#, 2]]}& )},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {{{1., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
        FormBox["\"Physics\"", TraditionalForm], 0}, {2., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
        FormBox["\"English\"", TraditionalForm], 0}, {3., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
        FormBox["\"Chemistry\"", TraditionalForm], 0}, {4., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
        FormBox["\"IT Services\"", TraditionalForm], 0}, {4.999999999999999, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
        FormBox["\"Zoology\"", TraditionalForm], 0}}, {{1., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], TraditionalForm], {0.004, 0}}}}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Large,
   PlotRange->{{All, All}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{None, Automatic}]}}, 1,
  Alignment->{Center, Center},
  ControlPlacement->Top]], "Output",
 CellChangeTimes->{{3.659174127345495*^9, 3.6591742257558804`*^9}, {
   3.659174264621051*^9, 3.6591743124202414`*^9}, {3.659176350463203*^9, 
   3.65917636299478*^9}, 3.659177581131789*^9, {3.6591816021092663`*^9, 
   3.659181617340329*^9}, {3.6591854738383913`*^9, 3.6591855020386677`*^9}, {
   3.661669400863825*^9, 3.661669404036663*^9}}]
}, {2}]],

Cell["\<\
BarCharts are the most versatile and easy to consume visualisation of \
categorical data and can be easily generated in the Wolfram Language by \
operating on the output of Tally:\
\>", "Text",
 CellChangeTimes->{{3.6591816194837923`*^9, 3.6591817080757732`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"departmentsTally", "=", 
  RowBox[{"Tally", "[", "departments", "]"}]}]], "Input",
 CellChangeTimes->{{3.655552126028328*^9, 3.6555521454869204`*^9}, {
   3.655552668043029*^9, 3.655552674893113*^9}, 3.6555527881212587`*^9, {
   3.659168939963677*^9, 3.659168959121826*^9}, {3.659181718967143*^9, 
   3.659181722380641*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Physics\"\>", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"English\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Chemistry\"\>", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IT Services\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Zoology\"\>", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.659181722760269*^9}]
}, Open  ]],

Cell["\<\
BarChart expects a list (or list of lists) in the first argument and has a \
number of options for labelling the bars:\
\>", "Text",
 CellChangeTimes->{{3.659181801576024*^9, 3.6591818255271397`*^9}, {
  3.6591818607657824`*^9, 3.6591819244048967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"", 
      ",", "\"\<IT Services\>\"", ",", "\"\<Zoology\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6591819260215273`*^9, 3.6591819881945*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4451141552511416, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6649999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.54337899543379, 0.}, {1.45662100456621, 3.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{15.657563787463507`, 
           59.42581518117649}, {-73.33013933863027, 72.50171875}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.54337899543379, 0.}, {2.45662100456621, 2.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{63.18959906357922, 
           106.95785045729218`}, {-24.839519975753518`, 72.50171874999998}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5433789954337898`, 0.}, {3.45662100456621, 2.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{110.72163433969492`, 
           154.4898857334079}, {-24.839519975753518`, 72.50171874999998}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.5433789954337898`, 0.}, {4.45662100456621, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.25366961581062`, 202.02192100952357`}, {
           23.65109938712324, 72.50171875}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.543378995433789, 0.}, {5.456621004566209, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{205.78570489192631`, 249.55395628563923`}, {
           23.65109938712324, 72.50171875}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.4451141552511416, 0.}, {5.55685114155251, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5433789954337899, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5433789954337899, 0.}]}], 
        LineBox[{{5.456621004566209, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {5.456621004566209, 
           0.}]}], {{}, {}, {}, {}, {}, {
          LineBox[{{1.4566210045662098`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.4566210045662098`, 
             0.}]}], LineBox[{{1.5433789954337898`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.5433789954337898`, 
             0.}]}], LineBox[{{2.4566210045662094`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.4566210045662094`, 
             0.}]}], LineBox[{{2.5433789954337893`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.5433789954337893`, 
             0.}]}], LineBox[{{3.456621004566209, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.456621004566209, 0.}]}],
           LineBox[{{3.543378995433789, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.543378995433789, 0.}]}],
           LineBox[{{4.456621004566209, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.456621004566209, 0.}]}],
           LineBox[{{4.543378995433789, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.543378995433789, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"Physics\"\>", 
          Offset[{0., -1.9999999999999998`}, {0.9999999999999998, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"English\"\>", 
          Offset[{0., -1.9999999999999998`}, {1.9999999999999996`, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"Chemistry\"\>", 
          Offset[{0., -1.9999999999999998`}, {2.999999999999999, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"IT Services\"\>", 
          Offset[{0., -1.9999999999999998`}, {3.999999999999999, 0.}], {0, 1},
           Automatic, {1, 0}], 
         InsetBox["\<\"Zoology\"\>", 
          Offset[{0., -1.9999999999999998`}, {4.999999999999999, 0.}], {0, 1},
           Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4451141552511416, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Physics\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"English\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Chemistry\"", TraditionalForm], 0}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"IT Services\"", TraditionalForm], 0}, {4.999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
       FormBox["\"Zoology\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.6591819672152367`*^9, 3.6591819886487827`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting Elements from Tally", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, 
   3.659178513038447*^9, {3.659181363046502*^9, 3.65918137580404*^9}, {
   3.659182002558535*^9, 3.659182007126169*^9}, {3.6591822630592003`*^9, 
   3.659182292519182*^9}, {3.6591828843655987`*^9, 3.659182888741393*^9}, 
   3.664085620875903*^9}],

Cell["\<\
The output of Tally is a nested list with the count of each item distinct in \
the second element of each list, the structure of the object can be \
visualised using TreeForm:\
\>", "Text",
 CellChangeTimes->{{3.659182305221986*^9, 3.659182355576645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"departmentsTally", "=", 
   RowBox[{"Tally", "[", "departments", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TreeForm", "[", "departmentsTally", "]"}]}], "Input",
 CellChangeTimes->{{3.655552126028328*^9, 3.6555521454869204`*^9}, {
   3.655552668043029*^9, 3.655552674893113*^9}, 3.6555527881212587`*^9, {
   3.659168939963677*^9, 3.659168959121826*^9}, {3.659181718967143*^9, 
   3.659181722380641*^9}, {3.659182357682729*^9, 3.659182363260741*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{2.2983926330486213`, 1.0215078369104984`}, {
    0.2553769592276246, 0.5107539184552492}, {0., 0.}, {0.5107539184552492, 
    0.}, {1.276884796138123, 0.5107539184552492}, {1.0215078369104984`, 0.}, {
    1.5322617553657474`, 0.}, {2.2983926330486213`, 0.5107539184552492}, {
    2.043015673820997, 0.}, {2.553769592276246, 0.}, {3.3199004699591197`, 
    0.5107539184552492}, {3.0645235107314948`, 0.}, {3.575277429186744, 0.}, {
    4.341408306869618, 0.5107539184552492}, {4.086031347641994, 0.}, {
    4.596785266097243, 0.}}, {
     {RGBColor[0.55, 0.45, 0.45], 
      LineBox[{{1, 2}, {1, 5}, {1, 8}, {1, 11}, {1, 14}, {2, 3}, {2, 4}, {5, 
       6}, {5, 7}, {8, 9}, {8, 10}, {11, 12}, {11, 13}, {14, 15}, {14, 
       16}}]}, {
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 1],
        TagBox[
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"Physics\"", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"English\"", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"Chemistry\"", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"IT Services\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"Zoology\"", ",", "1"}], "}"}]}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{{"Physics", 3}, {"English", 2}, {"Chemistry", 2}, {
          "IT Services", 1}, {"Zoology", 1}}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 2],
        TagBox[
         RowBox[{"{", 
           RowBox[{"\"Physics\"", ",", "3"}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{"Physics", 3}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"Physics\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 3],
        TagBox["\"Physics\"", HoldForm]],
       Annotation[#, 
        HoldForm["Physics"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["3",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 4],
        TagBox["3", HoldForm]],
       Annotation[#, 
        HoldForm[3], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 5],
        TagBox[
         RowBox[{"{", 
           RowBox[{"\"English\"", ",", "2"}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{"English", 2}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"English\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 6],
        TagBox["\"English\"", HoldForm]],
       Annotation[#, 
        HoldForm["English"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["2",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 7],
        TagBox["2", HoldForm]],
       Annotation[#, 
        HoldForm[2], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 8],
        TagBox[
         RowBox[{"{", 
           RowBox[{"\"Chemistry\"", ",", "2"}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{"Chemistry", 2}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"Chemistry\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 9],
        TagBox["\"Chemistry\"", HoldForm]],
       Annotation[#, 
        HoldForm["Chemistry"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["2",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 10],
        TagBox["2", HoldForm]],
       Annotation[#, 
        HoldForm[2], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 11],
        TagBox[
         RowBox[{"{", 
           RowBox[{"\"IT Services\"", ",", "1"}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{"IT Services", 1}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"IT Services\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 12],
        TagBox["\"IT Services\"", HoldForm]],
       Annotation[#, 
        HoldForm["IT Services"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["1",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 13],
        TagBox["1", HoldForm]],
       Annotation[#, 
        HoldForm[1], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox["List", "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 14],
        TagBox[
         RowBox[{"{", 
           RowBox[{"\"Zoology\"", ",", "1"}], "}"}], HoldForm]],
       Annotation[#, 
        HoldForm[{"Zoology", 1}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"Zoology\"\>",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 15],
        TagBox["\"Zoology\"", HoldForm]],
       Annotation[#, 
        HoldForm["Zoology"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[InsetBox[
         FrameBox[
          StyleBox[
           TagBox["1",
            HoldForm], "StandardForm", "Output",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Scaled[0.017391304347826087`],
           FontColor->GrayLevel[0]],
          Background->RGBColor[1., 1., 0.871],
          FrameStyle->GrayLevel[0.5],
          StripOnInput->False], 16],
        TagBox["1", HoldForm]],
       Annotation[#, 
        HoldForm[1], "Tooltip"]& ]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{2.2983926330486213`, 1.0215078369104984`}, {
     0.2553769592276246, 0.5107539184552492}, {0., 0.}, {0.5107539184552492, 
     0.}, {1.276884796138123, 0.5107539184552492}, {1.0215078369104984`, 
     0.}, {1.5322617553657474`, 0.}, {2.2983926330486213`, 
     0.5107539184552492}, {2.043015673820997, 0.}, {2.553769592276246, 0.}, {
     3.3199004699591197`, 0.5107539184552492}, {3.0645235107314948`, 0.}, {
     3.575277429186744, 0.}, {4.341408306869618, 0.5107539184552492}, {
     4.086031347641994, 0.}, {4.596785266097243, 0.}}]& ],
  AspectRatio->NCache[Rational[3, 23]^Rational[1, 2], 0.3611575592573076],
  FrameTicks->Automatic,
  ImageSize->{528.3515625, Automatic},
  PlotRange->All,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{3.6591823327950573`*^9, 3.659182363648629*^9}]
}, Open  ]],

Cell["\<\
In order to insert the output of Tally into BarChart we must be able to \
extract the relevant parts of the data structure:\
\>", "Text",
 CellChangeTimes->{{3.659182375717043*^9, 3.6591824295940113`*^9}}],

Cell[TextData[{
 "In the Wolfram Language the ",
 StyleBox["n-th",
  FontSlant->"Italic"],
 " element of a list is the ",
 StyleBox["n-th",
  FontSlant->"Italic"],
 " element of a list, and can be extracted using the function Part:"
}], "Text",
 CellChangeTimes->{{3.6555531422630043`*^9, 3.655553174888493*^9}}],

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{"departments", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553042611*^9, 3.655553060733569*^9}, {
  3.655553245827072*^9, 3.655553247946261*^9}}],

Cell["This is more typically written in shorthand:", "Text",
 CellChangeTimes->{{3.655553186466704*^9, 3.655553193846209*^9}}],

Cell[BoxData[
 RowBox[{"departments", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553042611*^9, 3.655553068217494*^9}, 
   3.655553249701075*^9}],

Cell["\<\
It is often convenient to extract elements by negative index:\
\>", "Text",
 CellChangeTimes->{{3.655553204635379*^9, 3.655553219271543*^9}}],

Cell[BoxData[
 RowBox[{"departments", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553220941392*^9, 3.655553250825769*^9}}],

Cell[TextData[{
 "When using Part it is useful to remember that the Wolfram Language is (at \
least in general) ",
 StyleBox["row orientated",
  FontSlant->"Italic"],
 " - so to extract the second column of the third element of ",
 StyleBox["departmentsTally",
  FontSlant->"Italic"],
 " the following would be evaluated:"
}], "Text",
 CellChangeTimes->{{3.6555532624739933`*^9, 3.655553338918837*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"departmentsTally", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655553341088389*^9, 3.6555533482459*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.659182512982643*^9}]
}, Open  ]],

Cell[TextData[{
 "To extract the entirety of the second column it is therefore necessary to \
use the operator ",
 StyleBox["All",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.655553407105968*^9, 3.655553470052075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"departmentsTally", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.65555347173834*^9, 3.655553475318337*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6591824735504313`*^9, 3.65918251415696*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using Transpose to Construct Tally like Lists", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.655552711051566*^9, 3.655552712516822*^9}, {3.655552752506794*^9, 
   3.655552760731312*^9}, {3.6591683331399317`*^9, 3.659168336964799*^9}, 
   3.659178513038447*^9, {3.659181363046502*^9, 3.65918137580404*^9}, {
   3.659182002558535*^9, 3.659182007126169*^9}, {3.6591822630592003`*^9, 
   3.659182292519182*^9}, {3.6591828843655987`*^9, 3.659182888741393*^9}, {
   3.66166910597604*^9, 3.661669116978153*^9}, {3.6616692738494463`*^9, 
   3.661669286033122*^9}, {3.661669439271811*^9, 3.661669439923424*^9}, {
   3.661674536865087*^9, 3.6616745407563467`*^9}, {3.6640856234748487`*^9, 
   3.664085623654896*^9}}],

Cell["\<\
Lists are the primary data structure in the Wolfram Language, and it is \
crucial to understand how data can be combined together or otherwise operated \
on to create usefully shaped lists for visualisation and further analysis.\
\>", "Text",
 CellChangeTimes->{{3.661669135237503*^9, 3.661669135889264*^9}, {
  3.6616692552957087`*^9, 3.6616693671915827`*^9}, {3.661670188867084*^9, 
  3.661670209014935*^9}}],

Cell["\<\
The Wolfram Language is designed as a very mathematically-orientated \
language, it\[CloseCurlyQuote]s functions are therefore typically named after \
the mathematical operation you are undertaking. For instance, to combine two \
lists into a Tally like operation you would use the function Transpose.\
\>", "Text",
 CellChangeTimes->{{3.661669371083886*^9, 3.6616693790378933`*^9}, {
  3.661669442645891*^9, 3.6616694780498343`*^9}, {3.661670123503139*^9, 
  3.661670123986568*^9}, {3.6616702121510353`*^9, 3.661670314495791*^9}, {
  3.661670373043047*^9, 3.661670387205349*^9}}],

Cell[CellGroupData[{

Cell["Generating Data for Transpose", "Section",
 CellChangeTimes->{{3.661670377611808*^9, 3.66167040859166*^9}}],

Cell[TextData[{
 "For the purposes of an example, let us generate some data concerning the \
typical RCUK grant holder. Unfortunately, the RCUK do not provide the \
underlying data for their diversity report (",
 ButtonBox["http://www.rcuk.ac.uk/RCUK-prod/assets/documents/skills/\
RCUKDiversityNarrativesanddata.pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.rcuk.ac.uk/RCUK-prod/assets/documents/skills/\
RCUKDiversityNarrativesanddata.pdf"], None},
  ButtonNote->
   "http://www.rcuk.ac.uk/RCUK-prod/assets/documents/skills/\
RCUKDiversityNarrativesanddata.pdf"],
 ") but we can infer that the average age of a grant holder is 49."
}], "Text",
 CellChangeTimes->{{3.6627110374731483`*^9, 3.662711158108086*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s create example profiles for these researchers, firstly \
by obtaining likely names for the individuals from the ONS website. The \
details of Import will be introduced later, but by referring to the \
documentation for Import it should be possible to understand the basics of \
this input:\
\>", "Text",
 CellChangeTimes->{{3.661674134278111*^9, 3.661674232740019*^9}, {
  3.6627111700559683`*^9, 3.662711239287945*^9}}],

Cell[BoxData[
 RowBox[{"boysNames", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/\
1904-1994/top-100-baby-names-historical-data.xls\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Data\>\"", ",", "\"\<Boys\>\"", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "105"}], "]"}], ",", "8"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.66167382009092*^9, 3.6616738532312403`*^9}, {
  3.661673909900702*^9, 3.661673940665359*^9}, {3.6616739706816177`*^9, 
  3.661673981627241*^9}, {3.6616740468349*^9, 3.661674096974449*^9}, {
  3.661674129589719*^9, 3.661674129870181*^9}, {3.661674235306056*^9, 
  3.661674237050056*^9}}],

Cell[BoxData[
 RowBox[{"girlsNames", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/\
1904-1994/top-100-baby-names-historical-data.xls\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Data\>\"", ",", "\"\<Girls\>\"", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"6", ",", "105"}], "]"}], ",", "8"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.661674244926053*^9, 3.661674251586299*^9}}],

Cell["Lists can easily be joined together using Join:", "Text",
 CellChangeTimes->{{3.66167426098838*^9, 3.661674269133719*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersNames", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"boysNames", ",", "girlsNames"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.661674271153577*^9, 3.661674287687158*^9}}],

Cell["\<\
We might be interested to know the birth months of these individuals, which \
we\[CloseCurlyQuote]ll assume are equally distributed through the year and \
can therefore be generated with RandomInteger:\
\>", "Text",
 CellChangeTimes->{{3.661674341483078*^9, 3.661674385718924*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersBirthMonth", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "12"}], "}"}], ",", 
    RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.661671336504637*^9, 3.661671359013241*^9}, {
  3.66167439057473*^9, 3.661674427245219*^9}}],

Cell["\<\
Thus far in the course we have only considered discretised data, however the \
Wolfram Language provides a huge variety of tools for generating data from \
continuous distributions:\
\>", "Text",
 CellChangeTimes->{{3.661671776447544*^9, 3.661671801186346*^9}, {
  3.661672318061791*^9, 3.6616723840650873`*^9}, {3.6616725409947357`*^9, 
  3.661672544076191*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersHeight", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"160", ",", "20"}], "]"}], ",", 
    RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6616725460532637`*^9, 3.6616725658793707`*^9}, {
  3.6616744188701153`*^9, 3.661674452380265*^9}}],

Cell["\<\
We could continue to generate data about these grant holders as necessary\
\>", "Text",
 CellChangeTimes->{{3.661674736374516*^9, 3.661674761281514*^9}}],

Cell[BoxData[
 RowBox[{"grantHoldersWeight", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{
    RowBox[{"SkewNormalDistribution", "[", 
     RowBox[{"75", ",", "20", ",", "5"}], "]"}], ",", 
    RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.661674764572199*^9, 3.6616747651864243`*^9}, {
  3.66167497286985*^9, 3.661674991379861*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transposing Data", "Section",
 CellChangeTimes->{{3.661672329277121*^9, 3.661672331718397*^9}}],

Cell["These lists can now be combined together using Transpose:", "Text",
 CellChangeTimes->{{3.661670506029069*^9, 3.6616705218124313`*^9}, {
  3.661672589841762*^9, 3.661672592799776*^9}}],

Cell[BoxData[
 RowBox[{"grantHolders", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
    "grantHoldersNames", ",", "grantHolderBirthMonth", ",", 
     "grantHoldersHeight", ",", "grantHoldersWeight"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6616705234461193`*^9, 3.661670544291562*^9}, {
  3.661670581214118*^9, 3.66167058175782*^9}, {3.6616713806064787`*^9, 
  3.6616713840123167`*^9}, {3.66167259939467*^9, 3.6616725995424013`*^9}, {
  3.6616744639031878`*^9, 3.661674480287891*^9}, {3.661675000719933*^9, 
  3.661675000843225*^9}}],

Cell["\<\
Using our knowledge of the Part function we can now visualise the \
distribution of birth weights using the DistributionChart function\
\>", "Text",
 CellChangeTimes->{{3.661670575644802*^9, 3.661670650277361*^9}, {
  3.661671436424642*^9, 3.661671472660356*^9}, {3.661672607370328*^9, 
  3.6616726179774323`*^9}}],

Cell[BoxData[
 RowBox[{"DistributionChart", "[", 
  RowBox[{"grantHolders", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6616714738205347`*^9, 3.661671481256831*^9}, {
   3.661671563568568*^9, 3.661671564890362*^9}, {3.661672622979789*^9, 
   3.661672628676832*^9}, 3.661674507539925*^9}],

Cell["\<\
It is important to consider the disadvantages of combining data into nested \
lists in the manner - despite data being collected together about each \
individual it is dependent on you to remember what data each column contains. 

It may be more convenient to use Associations, as discussed later in the \
course.\
\>", "Text",
 CellChangeTimes->{{3.661675083339182*^9, 3.661675174891433*^9}, {
  3.66271127093705*^9, 3.662711271395855*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises: Parts and BarCharts", "Title",
 CellChangeTimes->{{3.659169073065624*^9, 3.6591690839888353`*^9}, {
   3.659182499836954*^9, 3.65918251106387*^9}, {3.659182891838498*^9, 
   3.659182902488941*^9}, {3.66167550777286*^9, 3.661675507849574*^9}, 
   3.6640856269510508`*^9}],

Cell[CellGroupData[{

Cell["Department BarChart", "Section",
 CellChangeTimes->{{3.659182491973536*^9, 3.6591824922652483`*^9}, {
  3.659182523461635*^9, 3.6591825488985167`*^9}}],

Cell["\<\
Using the data you entered into your notebook previously build a BarChart, in \
case you do not have the data still at hand here is some example data:\
\>", "Text",
 CellChangeTimes->{{3.6616751865138597`*^9, 3.6616752246621103`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"departments", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Physics\>\"", ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"", ",", 
     "\"\<IT Services\>\"", ",", "\"\<Physics\>\"", ",", "\"\<Zoology\>\"", 
     ",", "\"\<English\>\"", ",", "\"\<Chemistry\>\"", ",", 
     "\"\<Physics\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"monthsAtOx", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"12", "*", "3"}], ",", 
     RowBox[{"3", "*", "12"}], ",", 
     RowBox[{"6", "*", "12"}], ",", 
     RowBox[{"7", "*", "12"}], ",", 
     RowBox[{"10", "*", "12"}], ",", "3", ",", "8", ",", "10"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.655552126028328*^9, 3.6555521454869204`*^9}, {
  3.655552668043029*^9, 3.655552674893113*^9}, {3.6616752494401217`*^9, 
  3.661675253496347*^9}}],

Cell["Your output should look something like this:", "Text",
 CellChangeTimes->{{3.663577032868114*^9, 3.6635770456474533`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0., 0.4451141552511416}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6649999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 0.54337899543379}, {3., 1.45662100456621}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.664296875, 247.71144371811226`}, {
           41.445605728332474`, 66.16107071719807}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 1.54337899543379}, {2., 2.45662100456621}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.664296875, 176.48239477040818`}, {
           14.776371565524641`, 39.49183655439025}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 2.5433789954337898`}, {2., 3.45662100456621}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.664296875, 
           176.48239477040818`}, {-11.892862597283184`, 12.822602391582421`}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 3.5433789954337898`}, {1., 4.45662100456621}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.664296875, 
           105.25334582270409`}, {-38.56209676009101, -13.846631771225404`}}],
         
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6649999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 4.543378995433789}, {1., 5.456621004566209}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.664296875, 
           105.25334582270409`}, {-65.23133092289882, -40.515865934033215`}}],
         
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0., 0.4451141552511416}, {0., 5.55685114155251}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0., 0.5433789954337899}, 
          Offset[{-6., 0.}, {0., 0.5433789954337899}]}], 
        LineBox[{{0., 5.456621004566209}, 
          Offset[{-6., 0.}, {0., 5.456621004566209}]}], {{}, {}, {}, {}, {}, {
          LineBox[{{0., 1.4566210045662098`}, 
            Offset[{-4., 0.}, {0., 1.4566210045662098`}]}], 
          LineBox[{{0., 1.5433789954337898`}, 
            Offset[{-4., 0.}, {0., 1.5433789954337898`}]}], 
          LineBox[{{0., 2.4566210045662094`}, 
            Offset[{-4., 0.}, {0., 2.4566210045662094`}]}], 
          LineBox[{{0., 2.5433789954337893`}, 
            Offset[{-4., 0.}, {0., 2.5433789954337893`}]}], 
          LineBox[{{0., 3.456621004566209}, 
            Offset[{-4., 0.}, {0., 3.456621004566209}]}], 
          LineBox[{{0., 3.543378995433789}, 
            Offset[{-4., 0.}, {0., 3.543378995433789}]}], 
          LineBox[{{0., 4.456621004566209}, 
            Offset[{-4., 0.}, {0., 4.456621004566209}]}], 
          LineBox[{{0., 4.543378995433789}, 
            Offset[{-4., 0.}, {0., 4.543378995433789}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"Physics\"\>", 
          Offset[{-1.9999999999999998`, 0.}, {0., 0.9999999999999998}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"English\"\>", 
          Offset[{-1.9999999999999998`, 0.}, {0., 1.9999999999999996`}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"Chemistry\"\>", 
          Offset[{-1.9999999999999998`, 0.}, {0., 2.999999999999999}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"IT Services\"\>", 
          Offset[{-1.9999999999999998`, 0.}, {0., 3.999999999999999}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"Zoology\"\>", Offset[{-1.9999999999999998`, 0.}, 
          {0., 4.999999999999999}], {1, 0}, Automatic, {1, 0}]}, 
        "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.4451141552511416},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Physics\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"English\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Chemistry\"", TraditionalForm], 0}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox["\"IT Services\"", TraditionalForm], 0}, {4.999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
       FormBox["\"Zoology\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4.999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}, {Automatic, Automatic}},
  
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"BarChart with a sensible title\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.05]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{{3.6591827859017897`*^9, 3.659182798117619*^9}, 
   3.659182939232662*^9, {3.663577048677422*^9, 3.6635770663880663`*^9}, 
   3.663577106227212*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Use the ",
 StyleBox["Part",
  FontSlant->"Italic"],
 " function to build a ",
 StyleBox["BarChart",
  FontSlant->"Italic"],
 " from the output of Tally[departments]"
}], "ItemNumbered",
 CellChangeTimes->{{3.6591825517896223`*^9, 3.659182611006369*^9}}],

Cell["\<\
Refer to the documentation for BarChart to find the appropriate option to \
achieve the following:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.6591825517896223`*^9, 3.659182610998452*^9}, {
  3.659182645919438*^9, 3.659182653389104*^9}, {3.659182685396946*^9, 
  3.6591826856213627`*^9}, {3.65918281040834*^9, 3.6591828266391993`*^9}}],

Cell[CellGroupData[{

Cell["Add an appropriate title for the chart", "SubitemNumbered",
 CellChangeTimes->{{3.6591825517896223`*^9, 3.659182610998452*^9}, {
  3.659182645919438*^9, 3.659182653389104*^9}, {3.659182685396946*^9, 
  3.6591826856213627`*^9}, {3.65918281040834*^9, 3.6591828672062263`*^9}}],

Cell["\<\
Rotate the bars to run horizontally: increasing from left to right\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.6591825517896223`*^9, 3.659182610998452*^9}, {
  3.659182645919438*^9, 3.659182653389104*^9}, {3.659182685396946*^9, 
  3.6591826856213627`*^9}, {3.65918281040834*^9, 3.659182867197263*^9}, {
  3.6591829559954977`*^9, 3.6591830260833263`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Years at Oxford BarChart", "Section",
 CellChangeTimes->{{3.659183043172783*^9, 3.659183062713541*^9}}],

Cell[CellGroupData[{

Cell["Create a BarChart from a Tally of the months at Oxford", "ItemNumbered",
 CellChangeTimes->{{3.661675324575223*^9, 3.66167537018626*^9}}],

Cell["\<\
Ensure that a casual reader understands the axes of the chart using \
appropriate Options for the Chart.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.661675324575223*^9, 3.661675380013385*^9}}],

Cell["\<\
Consider whether this is the most appropriate visualisation for this \
continuous dataset - is there a more appropriate Chart available?\
\>", "ItemNumbered",
 CellChangeTimes->{{3.661675324575223*^9, 3.661675447684102*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184985964301*^9}, {3.661676350003971*^9, 3.661676355872403*^9}, 
   3.66408562984235*^9}],

Cell[TextData[{
 "It is almost trivially simple to create interactive elements in the \
notebook interface of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " using the Wolfram Language - the \[OpenCurlyDoubleQuote]Hello World\
\[CloseCurlyDoubleQuote] example of an interactive element is as follows:"
}], "Text",
 CellChangeTimes->{{3.6616755145210953`*^9, 3.661675576082089*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "19"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6591839379018803`*^9, 3.659183942563328*^9}}],

Cell["\<\
The Syntax for Manipulate variables is very similar to that of Range and it\
\[CloseCurlyQuote]s relatives:\
\>", "Text",
 CellChangeTimes->{{3.661675633447165*^9, 3.6616756555078077`*^9}, {
  3.6616756938254547`*^9, 3.66167572214186*^9}, {3.661675771080003*^9, 
  3.661675771676622*^9}}],

Cell["Generate the range 0.0, 0.2, 0.4, 0.6, 0.8, 1.0", "Item",
 CellChangeTimes->{{3.661675727093205*^9, 3.661675729522307*^9}, {
  3.661675773853593*^9, 3.661675803986834*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "1", ",", ".2"}], "]"}]], "Input",
 CellChangeTimes->{{3.66167573342934*^9, 3.661675749075077*^9}, {
  3.661675791515975*^9, 3.661675792898858*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.2`", ",", "0.4`", ",", "0.6000000000000001`", ",", "0.8`", 
   ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.661675744590089*^9, 3.661675749376975*^9}, 
   3.661675793446368*^9}]
}, Open  ]],

Cell[TextData[{
 "Variable ",
 StyleBox["x",
  FontSlant->"Italic"],
 " is only allows to have the values 0.0, 0.2, 0.4, 0.6, 0.8, 1.0"
}], "Item",
 CellChangeTimes->{{3.66167580771161*^9, 3.661675828171205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66167580771161*^9, 3.6616758406742277`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0.6000000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 1, 0.2}}, Typeset`size$$ = {
    16.8486328125, {0., 5.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`x$73964$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$73964$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`x$$, 
      "Specifications" :> {{$CellContext`x$$, 0, 1, 0.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{183., {38., 41.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6616758411146812`*^9}]
}, Open  ]],

Cell["\<\
Labels and default values are provided to Manipulate as follows\
\>", "Text",
 CellChangeTimes->{{3.661675898599774*^9, 3.661675918006757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "0.6", ",", "\"\<Slider 1\>\""}], "}"}], ",", "0", 
     ",", "1", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66167580771161*^9, 3.6616758406742277`*^9}, {
  3.661675965271031*^9, 3.661675975788569*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0.6000000000000001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`x$$], 0.6, "Slider 1"}, 0, 1, 0.2}}, 
    Typeset`size$$ = {16.8486328125, {0., 5.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$74168$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0.6}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$74168$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`x$$, 
      "Specifications" :> {{{$CellContext`x$$, 0.6, "Slider 1"}, 0, 1, 0.2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{201., {38., 41.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6616758411146812`*^9, 3.6616759767944193`*^9}]
}, Open  ]],

Cell["There are a variety of ControlTypes available to Manipulate:", "Text",
 CellChangeTimes->{{3.661675854128248*^9, 3.6616758700814*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "sliderValue", ",", "checkboxValue", ",", "setterValue", ",", 
     "textValue"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sliderValue", ",", "12", ",", "\"\<Slider\>\""}], "}"}], ",", 
     "0", ",", "1", ",", "0.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"checkboxValue", ",", "False", ",", "\"\<Checkbox\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "textValue", ",", "\"\<Hello World\>\"", ",", "\"\<Enter Text:\>\""}], 
     "}"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.661675656522537*^9, 3.661675685421533*^9}, {
  3.661675872990848*^9, 3.6616758909850683`*^9}, {3.661676169808901*^9, 
  3.661676250001696*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`checkboxValue$$ = 
    False, $CellContext`sliderValue$$ = 12, $CellContext`textValue$$ = 
    "Hello World", Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sliderValue$$], 12, "Slider"}, 0, 1, 0.2}, {{
       Hold[$CellContext`checkboxValue$$], False, "Checkbox"}, {
      True, False}}, {{
       Hold[$CellContext`textValue$$], "Hello World", "Enter Text:"}}}, 
    Typeset`size$$ = {199.951171875, {1., 5.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`sliderValue$7201$$ = 
    0, $CellContext`checkboxValue$7202$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`checkboxValue$$ = 
        False, $CellContext`sliderValue$$ = 12, $CellContext`textValue$$ = 
        "Hello World"}, "ControllerVariables" :> {
        Hold[$CellContext`sliderValue$$, $CellContext`sliderValue$7201$$, 0], 
        
        Hold[$CellContext`checkboxValue$$, $CellContext`checkboxValue$7202$$, 
         False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> {$CellContext`sliderValue$$, $CellContext`checkboxValue$$, \
$CellContext`setterValue, $CellContext`textValue$$}, 
      "Specifications" :> {{{$CellContext`sliderValue$$, 12, "Slider"}, 0, 1, 
         0.2}, {{$CellContext`checkboxValue$$, False, "Checkbox"}, {
         True, False}}, {{$CellContext`textValue$$, "Hello World", 
          "Enter Text:"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{236., {59., 62.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.66167621273289*^9, 3.6616762505428877`*^9}, {
  3.6627115074627037`*^9, 3.6627115136020613`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate: ListPlot", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184985964301*^9}, {3.661676406598858*^9, 3.661676436524478*^9}, {
   3.661682748870563*^9, 3.661682761777513*^9}, 3.664085633003646*^9}],

Cell["\<\
ListPlot and its relatives provide tools for visualising scatter charts and \
are extremely flexible:\
\>", "Text",
 CellChangeTimes->{{3.661676443003499*^9, 3.6616765080978947`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "6"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.661676510104022*^9, 3.661676530377696*^9}}],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "4"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.66167653503655*^9, 3.6616765646420794`*^9}}],

Cell["\<\
Often there is an expression that you wish to evaluate at particular points \
and visualise the results using ListPlot - to first generate the data one \
would use the Table function:\
\>", "Text",
 CellChangeTimes->{{3.661676594398283*^9, 3.661676646620613*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", 
     RowBox[{"i", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6616766483780193`*^9, 3.661676663803398*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "12", ",", "20", ",", "30", ",", "42", ",", "56", ",", 
   "72", ",", "90", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{3.662711459887048*^9}]
}, Open  ]],

Cell["\<\
Manipulate then becomes a powerful tool for exploring your expression:\
\>", "Text",
 CellChangeTimes->{{3.661676686321846*^9, 3.661676715133062*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "+", 
       RowBox[{"i", "^", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "5", ",", "8"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.661676732419573*^9, 3.6616767952921467`*^9}}],

Cell["\<\
Conversly, Manipulate might be used for scanning through an existing dataset \
such as the following:\
\>", "Text",
 CellChangeTimes->{{3.6616768231356*^9, 3.661676843092497*^9}, {
  3.66168080549387*^9, 3.661680810725644*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"price", "=", 
   RowBox[{
    RowBox[{"RandomFunction", "[", 
     RowBox[{
      RowBox[{"WienerProcess", "[", 
       RowBox[{".3", ",", ".5"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0.01"}], "}"}]}], "]"}], "[", 
    "\"\<Values\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", "price", "]"}]}], "Input",
 CellChangeTimes->{{3.661677024133597*^9, 3.661677040288912*^9}, {
  3.661677166670905*^9, 3.661677211309897*^9}, {3.661680784405415*^9, 
  3.6616807887316732`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVlHtMW2UYhxsm22AgxCEQN2GbQAqMm2ygHY4fl7as3EoplKpz4Y5ohgES
iQNtuQhsCAjC5hwXLXeVcrFbsCA4xp2BlFvZso5NYbhJIBIgIHNqePuHJzk5
ec7z/c77vl/OOUejkgSxOgwGI/bf87/r7rHqyfj/gaf60emGrl/S/f3Iu5uc
FsMuJzbGO+XpLipVHbEJGDtVH6VYJHfvsjl8Gktb7AoqiA/j/HJWTeFSA60/
gj0yTYC7fQv5YxjRmE556bcTW6Htrpu8N0dJbAP15o19054jxEzYP8kIlURN
ENuhnLudaSXQ8nHUbXho0l5UETsitYsVZ+Q9TuyMA2NbtVk6A8QuyJ7KVRwp
GyJ+FbddkuOlyVp2BVOUqPlEqe3nBH7eGIhMClEQn0RqQWL2mMU3xG4QWW5f
8LKpIXZH6Db7WdVGK/FreO/ifda3BbXEr2PBetTJo01OzMILRq+0SBlXiU8h
JbU4zD6wmdgDH+zc4X6cF0X7+QaaXftv/SrOJH8aju7ZkrdXa8l7grNw3eQn
v4vEwGZ0Zd8Ep2WXJcDq2eGOsg9LyHuhUznONuS3k/fCQ6X06WxJK3lvtKat
J4jttHlvbDeoSpxdtf37IIHX3X/5Gs0r8cF8V35mZKR2fl+8afAwvaia5pf4
QlomeC6iT0aejauX/+gyq24jz8ad4PG9xuaV5DkImu28VzpM6yUcCPOvTBVz
Pqf+uDhky5buHO+g/riI/iIuMXtPP3k/7BzzC+/4a5i8H2L1KoeDTFTkz2Bq
UXZTMDRC/gyMpFUOhinEDB7sPyuUaUqHyPOgmIzh/O1PzPBHSE1O+z6l9vn+
GPN1y4/i3SYfgP33T8crnAbIB2Aqg5dkMz1GPhDSHa5vmuUo+UAwneqt2WHa
+kHQmB44r9s7Tj4IlnrGS+9LB8kHQyTv2ZR9p+0/GJmmf3avZmrn58Pva5cC
xRzVAx9W2Qkp59aIJXwcnGw1bXKg/ejhY0bOrtDNmqB8CE7ZPjaRMScpHwK1
XuN8eid5SQj4Ww+OrtVr8yFYb+m14MzTeoYAi+rKlfrxKcoLoJRrKmTTM5QX
wHFy2dQ5lXyPAHNbgwjI/YXyoXBujzWX/UbzIxQNZW4bBdFUTxKKFWVck0PO
LcqH4nD+A/OKvD7KC8Grsnte2UX7ASFsnpQ1veV0k/JCND8KjMydpfenRwiG
rUrMe9xG+TCYL61UmQ59uvv+IQyD/aus5RPJlA9DTH/K8LV2BeXDYHZPX3xS
VU35cLCaR99VD39F+XA4J59dSTQoonw4XCvjA18WFlI+HEz1OYNHkkbKi9Dq
sm6sLr9O/Yswv3bhJVVRPOVFyFdnLAjq6P/UI8IQ8+Dc6O8/0PcTAeH2opjB
ov8LIiApTg0+ZMaifAR01uQ/BgX2UP0IRA1c4X4vvUH1xZh7dok/o0vfP8TY
u2ktjJ5ReP4D9ejwHg==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 101.}, {-0.28256055548613757`, 0.35678949753741634`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6616770443725147`*^9, 3.661677057657251*^9}, 
   3.6616807892119637`*^9, 3.662711477518969*^9, 3.663584140038473*^9}]
}, Open  ]],

Cell["\<\
Using the Take function an IntervalSlider can be used to effectively slice \
through this data:\
\>", "Text",
 CellChangeTimes->{{3.6616808133915586`*^9, 3.661680835149486*^9}, {
  3.661681063440205*^9, 3.661681069612692*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "@", 
    RowBox[{"Take", "[", 
     RowBox[{"price", ",", "foo"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"foo", ",", 
     RowBox[{
      RowBox[{"IntervalSlider", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "100", ",", "1"}], "}"}]}], "]"}], "&"}]}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.661677058768635*^9, 3.6616771548454647`*^9}, {
  3.661677232292555*^9, 3.661677240121356*^9}, {3.661677273313944*^9, 
  3.661677274482154*^9}, {3.661677315723669*^9, 3.6616773779182987`*^9}, {
  3.661677496456463*^9, 3.661677504467162*^9}, {3.661680838451715*^9, 
  3.661680839710635*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`foo$$ = {26, 75}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`foo$$], IntervalSlider[#, {1, 100, 1}]& }}, 
    Typeset`size$$ = {191.3349609375, {1., 6.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     3, StandardForm, 
      "Variables" :> {$CellContext`foo$$ = IntervalSlider[#, {1, 100, 1}]& }, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Take[$CellContext`price, $CellContext`foo$$]], 
      "Specifications" :> {{$CellContext`foo$$, 
         IntervalSlider[#, {1, 100, 1}]& }}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{228., {40., 43.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.661680841900317*^9, 3.662711481307575*^9, 
  3.66358414163407*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Take", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \[NoBreak]\\!\\(\
\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"Take\\\", \\\"[\\\", RowBox[{\\\"price\\\", \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"26\\\", \\\",\\\", \\\"75\\\"}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"Take::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664085595202569*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListLinePlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"Take\\\", \\\"[\\\", \
RowBox[{\\\"price\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"26\\\", \
\\\",\\\", \\\"75\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is not a \
list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListLinePlot\\\", ButtonNote -> \
\\\"ListLinePlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6640855954227123`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises: Manipulate", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591845164548397`*^9, 3.659184520086424*^9}, {3.659184961912386*^9, 
   3.659184989576367*^9}, {3.661682772245614*^9, 3.661682785883873*^9}, {
   3.662711577782604*^9, 3.662711582314618*^9}, {3.662716709489929*^9, 
   3.662716726058938*^9}, {3.663574619338147*^9, 3.663574619426814*^9}, 
   3.6635773395621634`*^9}],

Cell[CellGroupData[{

Cell["Labelling Buttons in Manipulate", "Section",
 CellChangeTimes->{{3.661681316612306*^9, 3.661681323055728*^9}}],

Cell["\<\
The Setter ControlType of Manipulate provides the ability to label buttons \
with a different value to what is assigned to a variable when clicked, for \
insance:\
\>", "Text",
 CellChangeTimes->{{3.6616813263855543`*^9, 3.6616814427675047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{"variable", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"variable", ",", "\"\<a\>\"", ",", "\"\<Choose a letter\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<y\>\""}], ",", 
       RowBox[{"\"\<c\>\"", "\[Rule]", "\"\<x\>\""}]}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6616814445735607`*^9, 3.661681498336681*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`variable$$ = "a", Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`variable$$], "a", "Choose a letter"}, {
      "a" -> "z", "b" -> "y", "c" -> "x"}}}, Typeset`size$$ = {
    5.6162109375, {0., 4.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`variable$202314$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`variable$$ = "a"}, 
      "ControllerVariables" :> {
        Hold[$CellContext`variable$$, $CellContext`variable$202314$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`variable$$, 
      "Specifications" :> {{{$CellContext`variable$$, "a", 
          "Choose a letter"}, {"a" -> "z", "b" -> "y", "c" -> "x"}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{112., {38., 41.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6616814771345673`*^9, 3.6616815092561083`*^9}}]
}, Open  ]],

Cell["\<\
Using this information attempt to build the following interface, the steps \
below will help you\
\>", "Text",
 CellChangeTimes->{{3.661681779731337*^9, 3.661681782240443*^9}, {
  3.661681819119162*^9, 3.661681828894083*^9}, {3.661681869259809*^9, 
  3.661681877517845*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`number$$ = 1, $CellContext`variable$$ = 3, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`number$$], 5}, 1, 10, 1}, {{
       Hold[$CellContext`variable$$], 5, "Operation"}, {
      1 -> "Identity", 2 -> "Square", 3 -> "Cube", 4 -> "Quartic", 5 -> 
       "Quintic"}}}, Typeset`size$$ = {5.6162109375, {0., 5.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`number$202642$$ = 0, $CellContext`variable$202643$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`number$$ = 5, $CellContext`variable$$ = 5},
       "ControllerVariables" :> {
        Hold[$CellContext`number$$, $CellContext`number$202642$$, 0], 
        Hold[$CellContext`variable$$, $CellContext`variable$202643$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`number$$^$CellContext`variable$$, 
      "Specifications" :> {{{$CellContext`number$$, 5}, 1, 10, 
         1}, {{$CellContext`variable$$, 5, "Operation"}, {
         1 -> "Identity", 2 -> "Square", 3 -> "Cube", 4 -> "Quartic", 5 -> 
          "Quintic"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{208., {49., 52.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6616818413303423`*^9}],

Cell[CellGroupData[{

Cell["Provide a slider for the user to select the number", "ItemNumbered",
 CellChangeTimes->{{3.6616818620496807`*^9, 3.661681908732855*^9}}],

Cell["\<\
Experiment with the standard arithmetic operations from Excel etc to decide \
how the operations listed above could be achieved\
\>", "ItemNumbered",
 CellChangeTimes->{{3.6616818620496807`*^9, 3.661682012946103*^9}}],

Cell["\<\
Add to the Manipulate a control that allows the operations above to be \
performed\
\>", "ItemNumbered",
 CellChangeTimes->{{3.6616818620496807`*^9, 3.661682051622278*^9}}],

Cell["Provide the control values with the appropriate labels.", "ItemNumbered",
 CellChangeTimes->{{3.6616818620496807`*^9, 3.6616820664071074`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changing Visualisations in Manipulate", "Section",
 CellChangeTimes->{{3.6616832325984297`*^9, 3.661683233839501*^9}, {
  3.661685619175482*^9, 3.66168564427164*^9}}],

Cell["\<\
In many languages it is necessary to use control structures like Switch \
statements to change the function applied to a series of arguments, in the \
Wolfram Language this can often be circumvented by changing the head of an \
expression in Manipulate:\
\>", "Text",
 CellChangeTimes->{{3.661683236628181*^9, 3.661683243715819*^9}, {
  3.6616837808998833`*^9, 3.661683784255731*^9}, {3.661685704921557*^9, 
  3.661685761623564*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"chart", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "4", ",", "7"}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"chart", ",", 
     RowBox[{"{", 
      RowBox[{"PieChart", ",", "BarChart"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6616837851910458`*^9, 3.661683823109874*^9}}],

Cell["\<\
Using this information attempt to build the following interface, the steps \
below will help you\
\>", "Text",
 CellChangeTimes->{{3.661681779731337*^9, 3.661681782240443*^9}, {
  3.661681819119162*^9, 3.661681828894083*^9}, {3.661681869259809*^9, 
  3.661681877517845*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`chartType$$ = 
    ListPlot, $CellContext`func1$$ = Cos, $CellContext`func2$$ = Cos, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`chartType$$], {ListPlot, ListLinePlot}}, {
      Hold[$CellContext`func1$$], {Cos, Sin}}, {
      Hold[$CellContext`func2$$], {Cos, Sin}}}, Typeset`size$$ = {
    303., {77., 78.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`chartType$222832$$ = 
    False, $CellContext`func1$222833$$ = False, $CellContext`func2$222834$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`chartType$$ = 
        ListPlot, $CellContext`func1$$ = Cos, $CellContext`func2$$ = Cos}, 
      "ControllerVariables" :> {
        Hold[$CellContext`chartType$$, $CellContext`chartType$222832$$, 
         False], 
        Hold[$CellContext`func1$$, $CellContext`func1$222833$$, False], 
        Hold[$CellContext`func2$$, $CellContext`func2$222834$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`chartType$$[{
         Table[{$CellContext`i, \
$CellContext`func1$$[$CellContext`i]/$CellContext`i}, {$CellContext`i, 20}], 
         Table[{$CellContext`i, \
$CellContext`func2$$[$CellContext`i]/$CellContext`i^2}, {$CellContext`i, 
           20}]}, PlotLegends -> {$CellContext`func1$$/$CellContext`i, \
$CellContext`func2$$/$CellContext`i^2}], 
      "Specifications" :> {{$CellContext`chartType$$, {
         ListPlot, ListLinePlot}}, {$CellContext`func1$$, {
         Cos, Sin}}, {$CellContext`func2$$, {Cos, Sin}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{339., {131., 134.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.661683408278448*^9, 3.661683487682908*^9}, 
   3.661683522689529*^9, {3.661683560321405*^9, 3.661683574057687*^9}, 
   3.661683620134191*^9, {3.661683675599699*^9, 3.6616836804735603`*^9}, {
   3.661685670357543*^9, 3.661685682953734*^9}}],

Cell[CellGroupData[{

Cell["\<\
Use ListPlot to visualise the output of the two following expressions from 0 \
to 20, you will need to refer to your notes on the Table function\
\>", "ItemNumbered",
 CellChangeTimes->{
  3.66168387211147*^9, {3.66168619664052*^9, 3.6616862437292852`*^9}, {
   3.66168628281104*^9, 3.661686329128443*^9}}],

Cell["Sin[i]/i", "Item",
 CellChangeTimes->{{3.661686262090336*^9, 3.661686271915663*^9}}],

Cell["Sin[i]/i^2", "Item",
 CellChangeTimes->{{3.661686262090336*^9, 3.661686276804729*^9}}],

Cell["\<\
Wrap your ListPlot inside of Manipulate and allow the user to select between \
Sin and Cos for the two functions\
\>", "ItemNumbered",
 CellChangeTimes->{
  3.66168387211147*^9, {3.66168619664052*^9, 3.6616862280908403`*^9}, {
   3.661686387675221*^9, 3.661686417383666*^9}}],

Cell["\<\
Allow the user to switch between ListPlot and ListLinePlot visualisations of \
the data\
\>", "ItemNumbered",
 CellChangeTimes->{
  3.66168387211147*^9, {3.66168619664052*^9, 3.6616862280908403`*^9}, {
   3.661686387675221*^9, 3.661686451226068*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pivoting Through Data with Manipulate", "Section",
 CellChangeTimes->{{3.6616811531910152`*^9, 3.6616811539551907`*^9}, {
  3.661683635012465*^9, 3.661683648284885*^9}}],

Cell["\<\
Manipulate is particularly useful for providing a way to interactively pivot \
through your datasets, in this exercise we will build a tool that allows us \
to visualise the distribution of the different properties of grant holders we \
looked at previously:\
\>", "Text",
 CellChangeTimes->{{3.6616865799056664`*^9, 3.661686644164998*^9}, {
  3.661686795627198*^9, 3.661686807719878*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`chartType$$ = 
    Histogram, $CellContext`col$$ = 4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`chartType$$], Histogram, "Chart Type"}, {
      Histogram, BoxWhiskerChart, DistributionChart}}, {{
       Hold[$CellContext`col$$], 3, "Property to Plot"}, {
      3 -> "Height", 4 -> "Weight"}}}, Typeset`size$$ = {
    259.2, {82., 83.36574496301705}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`chartType$17176$$ = 0, $CellContext`col$17177$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`chartType$$ = 
        Histogram, $CellContext`col$$ = 3}, "ControllerVariables" :> {
        Hold[$CellContext`chartType$$, $CellContext`chartType$17176$$, 0], 
        Hold[$CellContext`col$$, $CellContext`col$17177$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`chartType$$[
        Part[$CellContext`grantHolders, All, $CellContext`col$$], AxesLabel -> {
          Part[$CellContext`columnNames, $CellContext`col$$ - 1], "Count"}, 
        PlotLabel -> StringJoin["Distribution of ", 
          Part[$CellContext`columnNames, $CellContext`col$$ - 1], 
          " Amongst Grant Holders"]], 
      "Specifications" :> {{{$CellContext`chartType$$, Histogram, 
          "Chart Type"}, {
         Histogram, BoxWhiskerChart, 
          DistributionChart}}, {{$CellContext`col$$, 3, "Property to Plot"}, {
         3 -> "Height", 4 -> "Weight"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{296., {126., 129.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`grantHolders = {{
         "DAVID", 1, 153.05699698060732`, 72.40819579515212}, {
         "PAUL", 11, 144.3674982863825, 96.74491738625878}, {
         "ANDREW", 1, 179.38115872110308`, 97.43329733118253}, {
         "MARK", 2, 130.66533135707104`, 93.03143494731813}, {
         "JOHN", 5, 158.25993207472257`, 113.56690755579984`}, {
         "MICHAEL", 3, 166.2358678024236, 101.14331111181112`}, {
         "STEPHEN", 4, 189.29999244066659`, 89.44246497817487}, {
         "IAN", 10, 128.46405858778132`, 76.86079823646568}, {
         "ROBERT", 2, 143.0659772441906, 94.28215164804448}, {
         "RICHARD", 11, 159.99477696163834`, 93.4502934527263}, {
         "CHRISTOPHER", 7, 141.6904706177919, 97.65362819782949}, {
         "PETER", 11, 144.51388888773886`, 75.87919657211998}, {
         "SIMON", 11, 149.26111091779373`, 85.51702893779121}, {
         "ANTHONY", 7, 188.05995866206436`, 98.33016368890605}, {
         "KEVIN", 4, 173.83256531918656`, 82.19090490314944}, {
         "GARY", 9, 120.64150392617289`, 81.43824554235479}, {
         "STEVEN", 9, 154.612482768071, 110.13012837474264`}, {
         "MARTIN", 7, 155.49377370959124`, 111.90495698871295`}, {
         "JAMES", 8, 180.89023816227976`, 103.42863849722647`}, {
         "PHILIP", 3, 186.97600254046344`, 93.78504059845466}, {
         "ALAN", 10, 172.23293423103996`, 124.74331800029675`}, {
         "NEIL", 11, 159.28998527661275`, 89.98271910103195}, {
         "NIGEL", 4, 163.11926599087215`, 88.39991093355661}, {
         "TIMOTHY", 10, 130.9581782604533, 85.24457842248002}, {
         "COLIN", 8, 147.08617088913692`, 77.83101743336577}, {
         "GRAHAM", 6, 169.8739499609269, 78.04591246489966}, {
         "JONATHAN", 4, 153.405341896703, 103.15689488095288`}, {
         "NICHOLAS", 9, 129.687150997123, 99.17710299753823}, {
         "WILLIAM", 9, 166.8752697896192, 83.95094483868246}, {
         "ADRIAN", 8, 144.7164894334626, 78.47316667653678}, {
         "BRIAN", 11, 165.9821953259068, 69.62636399610572}, {
         "STUART", 7, 185.81905097996224`, 85.853184700319}, {
         "KEITH", 5, 178.50825888849607`, 92.3607861601794}, {
         "THOMAS", 6, 163.71962245450445`, 90.42141291440085}, {
         "PATRICK", 3, 201.2816079489377, 84.68362960429252}, {
         "SEAN", 5, 171.50649674964174`, 83.99963519033888}, {
         "CARL", 8, 158.16546501154784`, 86.97074185370158}, {
         "TREVOR", 2, 186.3473675226552, 71.30923035864053}, {
         "WAYNE", 10, 170.9513386935156, 80.3017516765964}, {
         "SHAUN", 1, 116.26111698059464`, 87.96707046804946}, {
         "KENNETH", 12, 173.9517895559707, 83.83981834083956}, {
         "BARRY", 3, 172.9949329686951, 91.93117705891878}, {
         "DEREK", 11, 136.4607107724595, 103.69875927325432`}, {
         "DEAN", 7, 194.34923609509343`, 85.99160671269492}, {
         "RAYMOND", 10, 138.08063908899294`, 92.93413209857687}, {
         "ANTONY", 4, 163.69033518592167`, 88.43260987740891}, {
         "JEREMY", 3, 187.4964465136431, 80.41755603403224}, {
         "JOSEPH", 3, 187.46101472856907`, 91.56578379997795}, {
         "EDWARD", 12, 174.58515916576061`, 75.27407495294867}, {
         "LEE", 11, 170.98245129173392`, 103.15109498112926`}, {
         "TERENCE", 2, 170.6429263181309, 102.52442785391356`}, {
         "MATTHEW", 12, 143.43536854259492`, 92.73441885512997}, {
         "DANIEL", 3, 160.25959872829787`, 96.92255421728046}, {
         "GEORGE", 9, 144.61030240212432`, 78.89188371018778}, {
         "RUSSELL", 7, 148.93883259530088`, 101.81064170706821`}, {
         "CHARLES", 11, 148.88096748298813`, 89.63361836774594}, {
         "JEFFREY", 12, 191.04101738888858`, 96.48363099988603}, {
         "CLIVE", 5, 140.43696943306006`, 115.76175089678591`}, {
         "PHILLIP", 1, 145.64839564521128`, 91.42186125132616}, {
         "CRAIG", 4, 167.69616479991092`, 139.71762947968568`}, {
         "ROGER", 1, 147.48950082893097`, 106.3760686028615}, {
         "JULIAN", 4, 119.87685329175437`, 69.84150941200626}, {
         "GEOFFREY", 2, 105.95551380732303`, 94.84693965763923}, {
         "KARL", 3, 176.52652919771978`, 97.72866793996516}, {
         "MALCOLM", 5, 229.10136104746567`, 96.96766423512457}, {
         "DARREN", 9, 208.78014260791267`, 72.669515904182}, {
         "TONY", 2, 126.9718691663387, 100.46381449127784`}, {
         "ADAM", 6, 127.68880770146589`, 94.48028221612822}, {
         "ROBIN", 12, 141.4599469528744, 111.98404127435619`}, {
         "GARRY", 4, 206.71154959410143`, 84.6768422446463}, {
         "ROY", 12, 163.8539141284106, 84.15697102253009}, {
         "VINCENT", 2, 160.1213249700257, 77.0446765932462}, {
         "MOHAMMED", 2, 151.7836293134373, 78.13564123597185}, {
         "GORDON", 8, 181.44419355072654`, 94.82713879880006}, {
         "DUNCAN", 4, 193.09290144456824`, 83.91489379815732}, {
         "LESLIE", 11, 154.75174723535383`, 87.32542821039573}, {
         "ALEXANDER", 6, 169.22410119159633`, 108.30252203150654`}, {
         "GREGORY", 2, 154.29681994903666`, 82.95987299315436}, {
         "GARETH", 4, 193.2110389226156, 83.59190213634156}, {
         "RONALD", 9, 161.95644405334897`, 85.64444737674407}, {
         "DOUGLAS", 4, 150.64818907747568`, 107.56682611705162`}, {
         "FRANCIS", 11, 138.09177132764862`, 80.52985597266105}, {
         "STEWART", 11, 151.05205304062127`, 101.95801961610327`}, {
         "GRAEME", 10, 156.0335430540477, 91.77175186776087}, {
         "GUY", 1, 124.57256218718436`, 81.65467968455754}, {
         "TERRY", 2, 146.16751199269305`, 79.11383847840595}, {
         "MARTYN", 4, 137.13803190305305`, 101.53066053567007`}, {
         "ERIC", 5, 172.29250970856467`, 77.75735658358776}, {
         "ALLAN", 4, 164.60048206584625`, 86.10022649731647}, {
         "GERARD", 6, 181.85444864043038`, 68.7501447845252}, {
         "GERALD", 6, 145.25052474082028`, 88.26846724654592}, {
         "HOWARD", 3, 136.62285584281238`, 87.49595405429011}, {
         "JASON", 2, 170.0348897175493, 122.38839723027769`}, {
         "IAIN", 10, 145.49730460626753`, 72.88261695587897}, {
         "GLENN", 5, 135.4407079475314, 87.18477046716872}, {
         "DENNIS", 4, 165.14624643335776`, 82.23620350949983}, {
         "GAVIN", 6, 176.23193719254925`, 115.15320471750704`}, {
         "BRUCE", 3, 149.07119230784724`, 99.43225371318356}, {
         "DONALD", 6, 170.337454459101, 96.75321322303873}, {
         "DOMINIC", 1, 172.71051491107636`, 71.69724645980943}, {
         "SUSAN", 11, 152.5421599770109, 101.00837045746091`}, {
         "JULIE", 3, 157.11797114142047`, 77.80264325704188}, {
         "KAREN", 2, 146.986722004392, 89.44171968339825}, {
         "JACQUELINE", 10, 173.38511640238693`, 124.67744206118425`}, {
         "DEBORAH", 2, 169.73706977240633`, 79.99217502416418}, {
         "TRACEY", 1, 160.26608687294748`, 78.02485623712724}, {
         "JANE", 12, 128.68046215448234`, 78.00861341373839}, {
         "HELEN", 11, 185.091525294274, 78.66553208210432}, {
         "DIANE", 2, 110.94650406355507`, 109.14057304670334`}, {
         "SHARON", 6, 166.89690134866333`, 85.8601081469395}, {
         "TRACY", 6, 183.40735270307533`, 87.63424257180796}, {
         "ANGELA", 11, 161.21530159820688`, 86.18718224812194}, {
         "SARAH", 3, 134.9382624328121, 73.25733241570984}, {
         "ALISON", 10, 173.11607709033655`, 85.72641502143426}, {
         "CAROLINE", 8, 150.86618593744893`, 100.24076867409453`}, {
         "AMANDA", 8, 130.34899182596146`, 97.53504040881036}, {
         "SANDRA", 11, 169.79780794969815`, 82.1549916233784}, {
         "LINDA", 5, 152.8188441117288, 89.09710202914869}, {
         "CATHERINE", 1, 163.33952357516313`, 89.5950862353509}, {
         "ELIZABETH", 7, 176.29129258765772`, 82.90698583783207}, {
         "CAROL", 9, 175.13634992809267`, 101.86417444139364`}, {
         "JOANNE", 9, 136.85921292649266`, 91.28211844494145}, {
         "WENDY", 4, 180.75403493416258`, 83.57795798792746}, {
         "JANET", 8, 194.2630327301081, 94.64980160529915}, {
         "DAWN", 9, 164.65158151389124`, 88.45384038940477}, {
         "CHRISTINE", 5, 155.94472494135837`, 107.33290617965682`}, {
         "NICOLA", 4, 167.19931733411173`, 94.59570390951187}, {
         "GILLIAN", 2, 171.56827824364018`, 78.7237261808526}, {
         "SALLY", 11, 125.03424313206318`, 114.78672941493934`}, {
         "MARIA", 8, 153.30870978104576`, 107.77689885575363`}, {
         "MICHELLE", 9, 152.26145406957954`, 87.30768422277582}, {
         "DEBRA", 5, 157.0759526406178, 96.10460191359488}, {
         "PAULA", 5, 185.45827545765678`, 107.69038779867782`}, {
         "ANNE", 3, 154.14540246860867`, 118.9690123437473}, {
         "LORRAINE", 7, 167.12427438454623`, 103.34629135119962`}, {
         "PATRICIA", 11, 132.74138361730712`, 91.78774290236815}, {
         "MARY", 10, 199.63889357008384`, 97.5805957419186}, {
         "DENISE", 4, 125.84472314047512`, 99.26474358683468}, {
         "MARGARET", 7, 150.16206757739917`, 83.76650697083167}, {
         "ANN", 1, 151.33756035387142`, 86.56533007552348}, {
         "BEVERLEY", 7, 131.44848132842355`, 93.01938470570256}, {
         "DONNA", 4, 114.57656438669204`, 113.51700036003179`}, {
         "ELAINE", 11, 145.025298831917, 101.41638654307926`}, {
         "FIONA", 5, 137.17738208303356`, 94.13575401835656}, {
         "JENNIFER", 4, 152.50580716141351`, 86.44763756596542}, {
         "LESLEY", 2, 150.7750097000099, 79.42336398024335}, {
         "LOUISE", 9, 143.08006491418837`, 85.80083315688282}, {
         "MANDY", 1, 167.63830272621573`, 104.55798982003577`}, {
         "TINA", 10, 157.7197620089166, 89.07876415054176}, {
         "JAYNE", 1, 170.90499888657098`, 78.70201063547256}, {
         "SUZANNE", 7, 161.2122790124351, 79.67287666658835}, {
         "ANDREA", 7, 162.7305463195309, 99.34980212516021}, {
         "PAULINE", 9, 179.05529647719953`, 85.5312677062828}, {
         "LISA", 2, 116.69414381814249`, 97.06904442895089}, {
         "CLAIRE", 8, 149.0292012363618, 78.4228693468191}, {
         "KIM", 6, 187.76515717559573`, 83.20412702152069}, {
         "JULIA", 6, 156.14852994118095`, 85.37889703368607}, {
         "TERESA", 6, 151.17879489630934`, 102.71367272666635`}, {
         "HEATHER", 6, 163.07286611103962`, 92.40100451386219}, {
         "KATHRYN", 12, 184.75303949166766`, 86.52149578589932}, {
         "LYNN", 10, 150.17817241678418`, 93.72711343678498}, {
         "RUTH", 8, 162.76431483389447`, 99.62689640287944}, {
         "YVONNE", 6, 144.10893436289984`, 99.62426505750014}, {
         "JUDITH", 5, 149.91887417331418`, 86.40255856193437}, {
         "MELANIE", 3, 136.28771493784708`, 94.80692490214447}, {
         "MARIE", 2, 167.6653048144736, 89.65238548044184}, {
         "PAMELA", 11, 158.89027280054248`, 94.53763636888264}, {
         "CAROLE", 12, 147.69964354295337`, 85.35773367247377}, {
         "BARBARA", 2, 199.3407114555873, 78.60259219368085}, {
         "GAIL", 3, 159.50892514196858`, 105.61993355210532`}, {
         "LYNNE", 8, 123.45120422882107`, 98.73106755897471}, {
         "CLARE", 8, 179.06459801368496`, 73.27199826779383}, {
         "JANICE", 2, 162.6692851509827, 85.8776485076234}, {
         "RACHEL", 1, 155.66935422033617`, 78.2114410984266}, {
         "JILL", 12, 140.33618437706988`, 92.10863031514283}, {
         "KATHERINE", 6, 176.97180029602384`, 93.27870824127933}, {
         "KATHLEEN", 2, 115.24776264831024`, 77.42400739754079}, {
         "SHIRLEY", 1, 139.2283038574463, 86.16989739830949}, {
         "ANNETTE", 3, 173.1940199550529, 87.7035182790227}, {
         "CAROLYN", 12, 169.841032761887, 95.2398797184451}, {
         "ANNA", 7, 152.8414988373677, 110.39908370304303`}, {
         "SARA", 2, 157.44782946880386`, 76.02727779193724}, {
         "VALERIE", 10, 144.76141736737858`, 96.66639876419364}, {
         "CHERYL", 8, 168.12079778406425`, 84.10735587269843}, {
         "JEANETTE", 8, 179.43840178465385`, 87.86855322944584}, {
         "KAY", 9, 168.16480833599834`, 79.91980517689723}, {
         "ANITA", 3, 187.0129413660036, 100.30645322383455`}, {
         "MAXINE", 9, 162.63770883696924`, 76.07390451273785}, {
         "FRANCES", 11, 122.51333136410926`, 92.73398206810488}, {
         "JOANNA", 6, 158.7750403176811, 90.33375507283642}, {
         "THERESA", 5, 177.65535841698554`, 87.09556485059869}, {
         "DEBBIE", 8, 152.9384121511354, 83.94182035014143}, {
         "LYNDA", 5, 173.79508583582347`, 83.07747012152355}, {
         "MAUREEN", 2, 147.6184015257136, 77.47736639487685}, {
         "ROSEMARY", 3, 182.59531443916367`, 84.3036448849383}, {
         "MICHELE", 3, 156.61567501849584`, 84.9104493028288}, {
         "LAURA", 1, 180.06997914014616`, 79.74417454363066}, {
         "REBECCA", 9, 173.67803213221538`, 85.14494797798156}, {
         "SHEILA", 8, 154.72353923990676`, 88.10499652485782}, {
         "STEPHANIE", 9, 155.46215199650666`, 
          89.26396727334539}}, $CellContext`columnNames = {
        "Birth Month", "Height", "Weight"}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.661686481225089*^9, 3.6616864849765253`*^9}, {
   3.6616865407910137`*^9, 3.661686559513768*^9}, 3.6616866209018106`*^9, {
   3.661686701176491*^9, 3.6616867080498247`*^9}, 3.6627127084496937`*^9}],

Cell[TextData[{
 "For convenience, the code for recomputing ",
 StyleBox["grantHolders",
  FontSlant->"Italic"],
 " is provided below:"
}], "Text",
 CellChangeTimes->{{3.661686827036633*^9, 3.6616868651628323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"boysNames", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/\
1904-1994/top-100-baby-names-historical-data.xls\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "\"\<Boys\>\"", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"6", ",", "105"}], "]"}], ",", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"girlsNames", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/\
1904-1994/top-100-baby-names-historical-data.xls\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "\"\<Girls\>\"", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"6", ",", "105"}], "]"}], ",", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"grantHoldersNames", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"boysNames", ",", "girlsNames"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"grantHoldersBirthMonth", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}], ",", 
     RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"grantHoldersHeight", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"160", ",", "20"}], "]"}], ",", 
     RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"grantHoldersWeight", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"SkewNormalDistribution", "[", 
      RowBox[{"75", ",", "20", ",", "5"}], "]"}], ",", 
     RowBox[{"Length", "[", "grantHoldersNames", "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"grantHolders", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
     "grantHoldersNames", ",", "grantHoldersBirthMonth", ",", 
      "grantHoldersHeight", ",", "grantHoldersWeight"}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.66167382009092*^9, 3.6616738532312403`*^9}, {
   3.661673909900702*^9, 3.661673940665359*^9}, {3.6616739706816177`*^9, 
   3.661673981627241*^9}, {3.6616740468349*^9, 3.661674096974449*^9}, {
   3.661674129589719*^9, 3.661674129870181*^9}, {3.661674235306056*^9, 
   3.661674237050056*^9}, {3.6616811592386627`*^9, 3.6616811674446363`*^9}, 
   3.66271161442969*^9}],

Cell[CellGroupData[{

Cell["\<\
Histogram is a new visualisation function but works similarly to other charts \
- create a Histogram showing the distribution of birth months in the dataset \
through the use of the Part function\
\>", "ItemNumbered",
 CellChangeTimes->{{3.661686876862461*^9, 3.661686926905328*^9}, {
  3.661687005022933*^9, 3.661687009771048*^9}}],

Cell[TextData[{
 "Wrap the Histogram in Manipulate and provide buttons that allow the user to \
switch between the different columns of ",
 StyleBox["grantHolders",
  FontSlant->"Italic"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.661686876862461*^9, 3.6616870350094433`*^9}, {
  3.661687124229167*^9, 3.661687124234253*^9}}],

Cell["\<\
Provide names to the columns following the steps in the first exercise\
\>", "ItemNumbered",
 CellChangeTimes->{{3.661686876862461*^9, 3.6616870350094433`*^9}, {
  3.661687124229167*^9, 3.661687139124713*^9}}],

Cell["\<\
Allow the user to switch between Histogram, DistributionChart and Histogram\
\>", "ItemNumbered",
 CellChangeTimes->{{3.661686876862461*^9, 3.661687059747019*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["Additional Steps ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.661687062331338*^9, 3.661687083561016*^9}}],

Cell[CellGroupData[{

Cell["Create a list of the column names", "ItemNumbered",
 CellChangeTimes->{{3.661686876862461*^9, 3.6616870597324667`*^9}, {
  3.661687099280632*^9, 3.6616871567286158`*^9}}],

Cell["\<\
Use the function StringJoin to label the chart with \
\[OpenCurlyDoubleQuote]Distribution of <<columnName>> Amongst Grant Holders\
\[CloseCurlyDoubleQuote]. To achieve this you will benefit from using this \
list:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.661686876862461*^9, 3.6616870597324667`*^9}, {
  3.661687099280632*^9, 3.661687174360792*^9}, {3.6627116578180323`*^9, 
  3.662711704592595*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"columnNames", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<Height\>\"", ",", "\"\<Weight\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6616824755611763`*^9, 3.66168248991115*^9}, 
   3.662712725431814*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sharing Interactive Elements", "Title",
 CellChangeTimes->{{3.662712823754702*^9, 3.662712836882587*^9}, 
   3.664085643960926*^9}],

Cell[TextData[{
 "There are two mechanisms through which interactive content built with the \
Wolfram Language can be shared with others, including those who do not have a \
",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " licenses."
}], "Text",
 CellChangeTimes->{{3.662712839132394*^9, 3.6627128690127773`*^9}, {
  3.662712916466858*^9, 3.66271292022328*^9}}],

Cell[CellGroupData[{

Cell["Computable Document Format (.cdf) files", "Section",
 CellChangeTimes->{{3.6627129274233*^9, 3.662712940653337*^9}}],

Cell["\<\
Wolfram Language notebooks may be saved as .cdf files which can then be \
opened by others in the freely available CDF Player \
(http://www.wolfram.com/cdf-player/).\
\>", "Text",
 CellChangeTimes->{{3.662712948820715*^9, 3.662713005055793*^9}, {
  3.6627130446161957`*^9, 3.662713049880343*^9}}],

Cell[TextData[{
 "It is important to understand that CDF files are ",
 StyleBox["runtime only",
  FontSlant->"Italic"],
 " - the user cannot ",
 StyleBox["evaluate ",
  FontSlant->"Italic"],
 "or modify any code within the file. For this reason, any interactive \
elements must already have their data embedded within them."
}], "Text",
 CellChangeTimes->{{3.662713051765089*^9, 3.6627131146718597`*^9}}],

Cell["Take for example the following interactive element:", "Text",
 CellChangeTimes->{{3.662713118540038*^9, 3.662713126325448*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
     "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6627131367379827`*^9, 3.662713141513438*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{";;", "i"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", "\"\<Elements of list to show\>\""}], "}"}],
      ",", "1", ",", 
     RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.662713144691347*^9, 3.6627132197262373`*^9}}],

Cell["\<\
Creating a .cdf containing only these files and opening it in CDF Player will \
not work as expected:\
\>", "Text",
 CellChangeTimes->{{3.66271342740171*^9, 3.662713469130116*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ieKNNeJaQ8u/ZVSe25uo8x1PxU5x7bHN75V1Pf2o89VlfS2Grl2ByTSE3gOB
/ueGvhsJnQMfMh4wpPUZdq60+aAk1lriI4dUf1tZfBltJz9DzWZ1DZnc124o
Prha80d13ZR+tR3zrYfmdfift1+w8SJKi3v8flIg9u/dpb9GQWCcLuCDy9eY
UbahJ0of6mJeDzwT64DG//zT/52Lw91LKPd5zYnb809XiL8mayr1yovRH5se
Am2qv70bivyAdH3wZpfWBol4pa4ODQ0N/hjl528Pyo4TpT2rELHMtWOvKe3m
6NwMWjep8ae5WRtbkx4s9m1o2B1or5TxMLVvT/EeGeRp7WegDrMwvau2yXWi
fZN9s4F5HXPorXve70+bKqpQXV2Ng91jCZ0VX1tffTwwV8OXX02f3f+eMj4Z
1oc8L4J8UC+emrt6WMcHEzg2Eafv88X5s2r/5Xwi1alz72jjwf3inM4G+oXn
rqJai8F6fU1P0HsJnQexfZXv+7ZhE6pE3avFtYZp8kv/OVH6il/vUF76+r7l
93L2sno+gq8bXBfeCcTDd9Rrq6o2Mzp3PKu83zl6QalfotcBwVjeV9fkyv3F
wTTNawm0g+l4pm/0tcTvokbzgkcKzajcPiS8qFdbH6UfFm9g/K3spPxstTU1
tTVMffNP5Pw/tf25p+Qn081ag2TrvqR62/YpeLzyufnBLdW9QH6y41H4mfTd
ghR8cOHXA8+sD0b7/NP/nYuDdwy1JT9QyqzUi7nipSvEW5N1nmumTp1BkVz/
QHpvyyDsNius9vABmHSuw6qNI73ysWgnb6P9YCtMxkalTRsKatP87XHQeNGc
zweFD+xrb0e7VGc7DooYoX3IGeKDo8fKlOv/a6I8xQdfOYKL2hwX2Rcq91P2
b29R+xdnAnWT+12ZUyqh5BdchysHwsYHZZutmaHryjFUVVWjrqYaFVo8qrSL
U/HHcn0+WHM64HkDmudWBXmj0kaL47+S7LxK7RzJ86E3zKZ33hM7NvX6pnD9
+35/nZuHF/qve4LKVbzQ72EbYfIbtw01vlg5oesBOSd0t/C/GtRUVymxoOJj
JX9QvU07J5s+Gle2Dh4D9s0bKnw1cL7874lzOOOri7g+8PfbFhdHfJaJYtmj
zpFbu+0Tnd93Mr9DrV/s60/5/SSVPKOvJT7pX+fzh9uvKv1+TUKNDUPK3Et3
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
QgghhBBCCCGEEEIIIYQQkj7+Pwj0SnU=
    "], {{0, 223}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{450, 223},
  PlotRange->{{0, 450}, {0, 223}}]], "Input"],

Cell["\<\
This is because the output of Manipulate does not know the value of the \
symbol list. There are a number of ways of solving this:\
\>", "Text",
 CellChangeTimes->{{3.6627134751474457`*^9, 3.6627135172666388`*^9}}],

Cell["\<\
SaveDefinitions \[Rule] True will ensure* that the Manipulate stores all of \
the necessary information for it to run\
\>", "Item",
 CellChangeTimes->{{3.662713520069293*^9, 3.662713563177786*^9}}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{";;", "i"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", "\"\<Elements of list to show\>\""}], "}"}],
      ",", "1", ",", 
     RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.66271358356621*^9, 3.662713587943028*^9}}],

Cell["\<\
Initialization \[RuleDelayed] (expr;) allows the Manipulate to pre-evaluate \
expressions before it is displayed on screen\
\>", "Item",
 CellChangeTimes->{{3.6627135913273582`*^9, 3.662713628349728*^9}, {
   3.662713919660427*^9, 3.6627139442300997`*^9}, 3.662714127981997*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{";;", "i"}], "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "2", ",", "\"\<Elements of list to show\>\""}], "}"}],
      ",", "1", ",", 
     RowBox[{"Length", "[", "list", "]"}], ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"list", "=", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
        "}"}]}], ";"}], ")"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.662713937013605*^9, 3.6627139389171886`*^9}, {
  3.6627140754346*^9, 3.6627141247754107`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wolfram Cloud", "Section",
 CellChangeTimes->{{3.662712942723468*^9, 3.662712945749763*^9}}],

Cell["\<\
The Wolfram Cloud is a collection of tools for using the Wolfram Language in \
the cloud, either as a service or so for sharing interactive content built \
using the language.\
\>", "Text",
 CellChangeTimes->{{3.6627145453069677`*^9, 3.662714593329175*^9}}],

Cell["\<\
This is achieved very easily, by simply wrapping a Manipulate with the \
function CloudDeploy. Note the use of Permissions\[Rule]\
\[CloseCurlyDoubleQuote]Public\[CloseCurlyDoubleQuote] to create a URL that \
can be accessed by anyone.\
\>", "Text",
 CellChangeTimes->{{3.66271504133158*^9, 3.6627150598463993`*^9}, {
  3.6627156298786297`*^9, 3.662715686822019*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DistributionChart", "[", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{
            RowBox[{"mean", "^", "exponent"}], ",", "sd"}], "]"}], ",", 
          "25"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"mean", ",", "1", ",", "5"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"sd", ",", "1", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"exponent", ",", 
       RowBox[{"{", 
        RowBox[{"0.8", ",", "1", ",", "1.2"}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662715061743771*^9, 3.662715228598864*^9}, 
   3.662715317722471*^9, {3.662715525953508*^9, 3.662715537827187*^9}, {
   3.662716088455348*^9, 3.662716088969108*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TagBox[
    ButtonBox[
     PaneSelectorBox[{
      False->"\<\"https://www.wolframcloud.com/objects/ab0b1954-3594-43db-\
810b-9b0250c36011\"\>", True->
      StyleBox["\<\"https://www.wolframcloud.com/objects/ab0b1954-3594-43db-\
810b-9b0250c36011\"\>", "HyperlinkActive"]}, Dynamic[
       CurrentValue["MouseOver"]],
      BaseStyle->{"Hyperlink"},
      FrameMargins->0,
      ImageSize->Automatic],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL[
       "https://www.wolframcloud.com/objects/ab0b1954-3594-43db-810b-\
9b0250c36011"], None},
     ButtonNote->
      "https://www.wolframcloud.com/objects/ab0b1954-3594-43db-810b-\
9b0250c36011"],
    Annotation[#, 
     "https://www.wolframcloud.com/objects/ab0b1954-3594-43db-810b-\
9b0250c36011", "Hyperlink"]& ], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/ab0b1954-3594-43db-810b-9b0250c36011"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.662715148974058*^9, {3.662715200352487*^9, 3.662715229154437*^9}, 
   3.662715318591324*^9, 3.66271553998722*^9, 3.6627160917267647`*^9}]
}, Open  ]],

Cell[TextData[{
 "A free Wolfram Development Platform is available to anyone that registers \
for a Wolfram Cloud account, however the Cloud is a subscription based \
service which is charged in terms of \[OpenCurlyDoubleQuote]compute time\
\[CloseCurlyDoubleQuote] for content that you develop which is used by \
others. \[OpenCurlyDoubleQuote]Compute time\[CloseCurlyDoubleQuote] is \
measured in terms of ",
 StyleBox["Cloud Credits.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.662716237798057*^9, 3.6627163040161963`*^9}, {
  3.662716372455802*^9, 3.6627164159920187`*^9}, {3.6627164525104513`*^9, 
  3.662716473313458*^9}, {3.662716554633605*^9, 3.6627165895980043`*^9}}],

Cell[TextData[{
 "Deliminating the Wolfram Cloud services is somewhat beyond the scope of the \
course, but briefly:\n\n",
 StyleBox["Wolfram Development Platform\n",
  FontWeight->"Bold"],
 "Useful for deploying Wolfram Language applications, i.e. as an API. For \
example, the Wolfram Language has very powerful statistical analysis \
capabilities and you may wish to build a CloudAPI that allows data to be sent \
through for analysis and output either as a visualisation or, for instance, \
as JSON for consumption elsewhere.\nAny computation time used by others will \
consume ",
 StyleBox["Cloud Credits.",
  FontSlant->"Italic"],
 "\n\n",
 StyleBox["Mathematica",
  FontWeight->"Bold"],
 " ",
 StyleBox["Online",
  FontWeight->"Bold"],
 "\nDesigned for sharing entire notebooks with a select group of individuals, \
for instance lecture notes for a seminar series. Nominated users of these \
notebooks will not consume ",
 StyleBox["Cloud Credits",
  FontSlant->"Italic"],
 " through their interaction with interactive content or evaluation of code."
}], "Text",
 CellChangeTimes->{{3.662714597061775*^9, 3.662714625349503*^9}, {
  3.662714799423593*^9, 3.662715004643406*^9}, {3.662715705015099*^9, 
  3.662715778246241*^9}, {3.662715985356246*^9, 3.66271603559792*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing Data from XLSX", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183624948501*^9}, {3.659184993074416*^9, 3.659184998317258*^9}, {
   3.66168287838774*^9, 3.6616828789809847`*^9}, {3.66271416488163*^9, 
   3.662714173431085*^9}, {3.662722685127851*^9, 3.6627226896038303`*^9}, 
   3.6640856483370047`*^9}],

Cell[TextData[{
 "The Wolfram Language implements many operations through \
\[OpenCurlyDoubleQuote]super functions\[CloseCurlyDoubleQuote], importing \
data is a good example of this as ",
 StyleBox["Import",
  FontSlant->"Italic"],
 " is used to import all of the supported file formats:"
}], "Text",
 CellChangeTimes->{{3.662716750387608*^9, 3.662716820916387*^9}}],

Cell[BoxData["$ImportFormats"], "Input",
 CellChangeTimes->{{3.6627168222629347`*^9, 3.662716825209447*^9}}],

Cell["\<\
For example purposes, we\[CloseCurlyQuote]ll export data from a Google Sheet \
as an .xls file. The Google Sheet contains survey results concerning how many \
desktop items University employees had on their work machines, it can be \
downloaded directly from here: https://goo.gl/cGr5kN\
\>", "Text",
 CellChangeTimes->{{3.6627168597658463`*^9, 3.662716971556547*^9}}],

Cell["\<\
The expanded URL clearly has a .xlsx extension, this can be imported directly \
using the Wolfram Language as follows:\
\>", "Text",
 CellChangeTimes->{{3.662716977888221*^9, 3.662716989314011*^9}, {
  3.662717361891135*^9, 3.662717374928392*^9}, {3.662722010911344*^9, 
  3.662722021932438*^9}}],

Cell[BoxData[
 RowBox[{"desktopItems$Import", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://docs.google.com/spreadsheets/d/1dYg-w-\
k0upVEKhBzXCbikDN33o3pMtjPhy7Zb9E7kDg/pub?gid=651658206&single=true&output=\
xlsx\>\"", ",", "\"\<XLSX\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662717048741501*^9, 3.662717071301218*^9}, {
  3.662717341887258*^9, 3.6627173558660507`*^9}, {3.662717438040263*^9, 
  3.662717443522843*^9}, {3.6627220265065823`*^9, 3.662722042610621*^9}}],

Cell["\<\
The output of importing an XLSX (or XLS) file is as follows, even in the case \
of a single sheet workbook:\
\>", "Text",
 CellChangeTimes->{{3.6627222837953253`*^9, 3.662722339094901*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"sheet1", ",", "sheet2"}], "}"}]], "Input",
 CellChangeTimes->{{3.66272230423664*^9, 3.662722309980299*^9}}],

Cell["\<\
Additional information can be supplied in the second argument of the function \
to restrict the import to specific sheets, and columns. This was performed \
previously for the ONS data:\
\>", "Text",
 CellChangeTimes->{{3.66272234431494*^9, 3.6627224018261547`*^9}}],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<http://www.ons.gov.uk/ons/rel/vsob1/baby-names--england-and-wales/1904-\
1994/top-100-baby-names-historical-data.xls\>\"", ",", "\[IndentingNewLine]", 
   
   RowBox[{"{", 
    RowBox[{"\"\<XLS\>\"", ",", 
     RowBox[{"(*", 
      RowBox[{"file", " ", "format"}], "*)"}], "\[IndentingNewLine]", 
     "\"\<Data\>\"", ",", 
     RowBox[{"(*", 
      RowBox[{
      "representation", " ", "of", " ", "data", " ", "to", " ", "import"}], 
      "*)"}], "\[IndentingNewLine]", "\"\<Boys\>\"", ",", 
     RowBox[{"(*", 
      RowBox[{"sheet", " ", "name", " ", "or", " ", "index"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Range", "[", 
      RowBox[{"6", ",", "105"}], "]"}], ",", 
     RowBox[{"(*", "rows", "*)"}], "\[IndentingNewLine]", "8"}], 
    RowBox[{"(*", "column", "*)"}], "\[IndentingNewLine]", "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6627224575597343`*^9, 3.662722458505851*^9}, {
  3.662722525085849*^9, 3.662722529696157*^9}, {3.662722600509651*^9, 
  3.662722644843217*^9}}],

Cell["\<\
The Google Sheet name isn\[CloseCurlyQuote]t meaningful in this case so let \
us import the first sheet by it\[CloseCurlyQuote]s index:\
\>", "Text",
 CellChangeTimes->{{3.662722316959866*^9, 3.662722319672587*^9}, {
  3.662722921270032*^9, 3.662722937252674*^9}, {3.662722983423271*^9, 
  3.662723001040351*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"desktopItems$Import", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://docs.google.com/spreadsheets/d/1dYg-w-\
k0upVEKhBzXCbikDN33o3pMtjPhy7Zb9E7kDg/pub?gid=651658206&single=true&output=\
xlsx\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<XLSX\>\"", ",", "\"\<Data\>\"", ",", "1"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662723026489583*^9, 3.6627230375151453`*^9}, 
   3.662723562884252*^9}],

Cell["\<\
The following pattern is useful for extracting the column headings and data \
from the import:\
\>", "Text",
 CellChangeTimes->{{3.662723053163669*^9, 3.662723060340107*^9}, 
   3.662723118017549*^9, {3.6627234911307993`*^9, 3.662723545850256*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"desktopItems$Headers", "=", 
   RowBox[{"First", "[", "desktopItems$Import", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"desktopItems$Data", "=", 
   RowBox[{"Rest", "[", "desktopItems$Import", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.662723548115226*^9, 3.662723578116168*^9}}],

Cell["\<\
As before, the data can be displayed as a Grid easily to inspect the data for \
consistency.\
\>", "Text",
 CellChangeTimes->{{3.662723582030444*^9, 3.662723590636346*^9}, {
  3.662723652333479*^9, 3.6627236569002733`*^9}, {3.6627237361136217`*^9, 
  3.662723745404994*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"desktopItems$Data", "[", 
      RowBox[{"[", 
       RowBox[{"10", ";;", "15"}], "]"}], "]"}], ",", 
     "desktopItems$Headers"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662723609552423*^9, 3.662723629709384*^9}, {
  3.662723664159422*^9, 3.662723721330789*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Timestamp\"\>", "\<\"How many items are there on your \
desktop?\"\>", "\<\"What's your operating system?\"\>", "\<\"Which University \
Department do you belong to?\"\>", "\<\"Which University do you belong \
to?\"\>"},
    {
     TemplateBox[{RowBox[{"\"Fri 6 Nov 2015 14:16:31\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}],
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "11", ",", "6"}], "}"}], ",", 
           RowBox[{"TimeObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"14", ",", "16", ",", "31.744`"}], "}"}], ",", 
               RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}]},
      "DateObject",
      Editable->False], 
     "20.`", "\<\"Windows 7\"\>", "\<\"Electrical Engineering\"\>", \
"\<\"University of Glasgow\"\>"},
    {
     TemplateBox[{RowBox[{"\"Fri 6 Nov 2015 14:25:27\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}],
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "11", ",", "6"}], "}"}], ",", 
           RowBox[{"TimeObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"14", ",", "25", ",", "27.537`"}], "}"}], ",", 
               RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}]},
      "DateObject",
      Editable->
       False], "\<\"7 shortcuts to folders\"\>", "\<\"Mac (OS X)\"\>", \
"\<\"IT Services\"\>", "\<\"University of Oxford\"\>"},
    {
     TemplateBox[{RowBox[{"\"Fri 6 Nov 2015 14:25:53\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}],
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "11", ",", "6"}], "}"}], ",", 
           RowBox[{"TimeObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"14", ",", "25", ",", "53.601`"}], "}"}], ",", 
               RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}]},
      "DateObject",
      Editable->False], 
     "20.`", "\<\"Windows 7\"\>", "\<\"IT Services\"\>", "\<\"University of \
Oxford\"\>"},
    {
     TemplateBox[{RowBox[{"\"Fri 6 Nov 2015 14:26:35\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}],
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "11", ",", "6"}], "}"}], ",", 
           RowBox[{"TimeObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"14", ",", "26", ",", "35.158`"}], "}"}], ",", 
               RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}]},
      "DateObject",
      Editable->False], 
     "21.`", "\<\"Windows 7\"\>", "\<\"IT\"\>", "\<\"University of \
Oxford\"\>"},
    {
     TemplateBox[{RowBox[{"\"Fri 6 Nov 2015 14:26:35\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}],
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "11", ",", "6"}], "}"}], ",", 
           RowBox[{"TimeObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"14", ",", "26", ",", "35.853`"}], "}"}], ",", 
               RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}]},
      "DateObject",
      Editable->False], 
     "0.`", "\<\"Linux\"\>", "\<\"IT Services\"\>", "\<\"University of Oxford\
\"\>"},
    {
     TemplateBox[{RowBox[{"\"Fri 6 Nov 2015 14:26:54\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}],
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2015", ",", "11", ",", "6"}], "}"}], ",", 
           RowBox[{"TimeObject", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"14", ",", "26", ",", "54.948`"}], "}"}], ",", 
               RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}], ",", 
           RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}]},
      "DateObject",
      Editable->False], 
     "0.`", "\<\"Linux\"\>", "\<\"Nuffield Department of Population \
Health\"\>", "\<\"Universit of Oxford\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.662723622644804*^9, 3.662723630237392*^9}, {
  3.6627236698070507`*^9, 3.6627237218757687`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filtering and Cleaning Data with Patterns", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
  3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
  3.659183624948501*^9}, {3.659184993074416*^9, 3.659184998317258*^9}, {
  3.66168287838774*^9, 3.6616828789809847`*^9}, {3.66271416488163*^9, 
  3.662714173431085*^9}, {3.662723835069718*^9, 3.66272384591357*^9}, {
  3.662723923403994*^9, 3.6627239287705917`*^9}, {3.6627251785342627`*^9, 
  3.662725192721465*^9}, {3.6635746383509808`*^9, 3.663574638452464*^9}, {
  3.6640856519482*^9, 3.664085652128784*^9}}],

Cell["\<\
The Wolfram Language provides extremely useful tools for data processing and \
cleansing, through the use of pattern matching through both Cases and \
replacement rules.\
\>", "Text",
 CellChangeTimes->{{3.662723847251773*^9, 3.66272390385151*^9}}],

Cell["\<\
We\[CloseCurlyQuote]re going to address two issues with the second column of \
the data:\
\>", "Text",
 CellChangeTimes->{{3.662724114047991*^9, 3.6627241510054493`*^9}}],

Cell[CellGroupData[{

Cell["\<\
A user entered \[OpenCurlyDoubleQuote]7 shortcuts to folders\
\[CloseCurlyDoubleQuote] which we will replace with the number 7\
\>", "Item",
 CellChangeTimes->{{3.66272415403172*^9, 3.662724184111546*^9}}],

Cell["\<\
A user entered 4384 which is an unrealistic value - this record will be \
removed from the dataset\
\>", "Item",
 CellChangeTimes->{{3.66272415403172*^9, 3.6627242320171223`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cases", "Section",
 CellChangeTimes->{{3.6627239053586693`*^9, 3.662723906078884*^9}}],

Cell["\<\
Cases is a super function for filtering data according to patterns and/or \
conditions, in order to use the function it is important to introduce the \
concept of Heads.\
\>", "Text",
 CellChangeTimes->{{3.662723913537644*^9, 3.662723944227998*^9}, {
  3.662723994936528*^9, 3.6627240208640547`*^9}}],

Cell["In the Wolfram Language every expression has a Head:", "Text",
 CellChangeTimes->{{3.662724023496148*^9, 3.6627240750997753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Head", "[", "1", "]"}], ",", 
   RowBox[{"Head", "[", "\"\<1\>\"", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6627240769616003`*^9, 3.662724095520808*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Integer", ",", "String"}], "}"}]], "Output",
 CellChangeTimes->{3.662724096031269*^9}]
}, Open  ]],

Cell["\<\
Cases can be used to find all elements that have a particular Head using the \
syntax, _Head\
\>", "Text",
 CellChangeTimes->{{3.6627241013468237`*^9, 3.6627241082437*^9}, {
  3.662724246713488*^9, 3.662724288616811*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.", ",", "\"\<1\>\"", ",", "4."}], "}"}], ",", "_Real"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.662724289578599*^9, 3.662724305031344*^9}, {
  3.662724348019272*^9, 3.662724354239965*^9}, {3.662724979627913*^9, 
  3.662724980538176*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "4.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6627243054698877`*^9, {3.6627243514062634`*^9, 3.662724354656177*^9}, 
   3.662724981029848*^9}]
}, Open  ]],

Cell["\<\
This can be applied to the dataset above to find all elements that are \
Strings:\
\>", "Text",
 CellChangeTimes->{{3.6627243787874527`*^9, 3.66272439439223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"desktopItems$Data", ",", 
   RowBox[{"{", 
    RowBox[{
    "date_", ",", "number_String", ",", "os_", ",", "department_", ",", 
     "uni_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.662724396110639*^9, 3.662724428310628*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{RowBox[{"\"Fri 6 Nov 2015 14:25:27\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}],
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2015", ",", "11", ",", "6"}], "}"}], ",", 
          RowBox[{"TimeObject", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"14", ",", "25", ",", "27.537`"}], "}"}], ",", 
              RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}], ",", 
          RowBox[{"TimeZone", "\[Rule]", "0.`"}]}], "]"}]},
     "DateObject",
     Editable->False], ",", "\<\"7 shortcuts to folders\"\>", 
    ",", "\<\"Mac (OS X)\"\>", ",", "\<\"IT Services\"\>", 
    ",", "\<\"University of Oxford\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6627244286548853`*^9}]
}, Open  ]],

Cell[TextData[{
 "Cases is primarily useful where data needs to be subsetted and operated \
upon, however we are interested in ",
 StyleBox["replacing ",
  FontSlant->"Italic"],
 "the element of the dataset - which will be achieved using replacement rules."
}], "Text",
 CellChangeTimes->{{3.662724450764455*^9, 3.662724511684268*^9}}],

Cell["\<\
We can, however, use DeleteCases to remove those elements where the number of \
items is greater or equal to 1000:\
\>", "Text",
 CellChangeTimes->{{3.662724513472589*^9, 3.662724589647403*^9}, {
  3.662725683828452*^9, 3.662725685477293*^9}}],

Cell[BoxData[
 RowBox[{"desktopItems$Data", "=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"desktopItems$Data", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "date_", ",", "number_", ",", "os_", ",", "department_", ",", "uni_"}], 
      "}"}], "/;", 
     RowBox[{"number", ">=", "1000"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.662724555576086*^9, 3.662724566597357*^9}, {
  3.6627245975162992`*^9, 3.662724599313731*^9}, {3.6627256578394737`*^9, 
  3.6627256740599327`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Replacement Rules", "Section",
 CellChangeTimes->{{3.662723907383566*^9, 3.662723910320428*^9}}],

Cell["\<\
Replacement rules are useful where elements must be modified should they meet \
a pattern and/or condition, they are typically implemented using the \
following syntax:\
\>", "Text",
 CellChangeTimes->{{3.662724614128552*^9, 3.662724662503187*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "\"\<7 shortcuts\>\""}], "}"}]}], "}"}], "/.", 
  RowBox[{"element_String", "\[RuleDelayed]", 
   RowBox[{"StringSplit", "[", 
    RowBox[{"element", ",", "\"\< \>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6627246924153*^9, 3.662724808305791*^9}, {
  3.662724970139586*^9, 3.662724988858368*^9}, {3.662727883806024*^9, 
  3.662727895348024*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "13.`", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "13.`", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"7\"\>", ",", "\<\"shortcuts\"\>"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.662724809017809*^9, 3.66272499241954*^9, 
  3.66272789588235*^9}]
}, Open  ]],

Cell[TextData[{
 "The /. is an ",
 StyleBox["infix ",
  FontSlant->"Italic"],
 "operator for the function ReplaceAll, and the symbol \[RuleDelayed] is \
simply :>"
}], "Text",
 CellChangeTimes->{{3.6627248163591547`*^9, 3.662724866770546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.", ",", "13.", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.", ",", "13.", ",", "\"\<7 shortcuts\>\""}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"element_String", "\[RuleDelayed]", 
    RowBox[{"StringSplit", "[", 
     RowBox[{"element", ",", "\"\< \>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66272486951406*^9, 3.662724881084083*^9}, {
   3.662724990085554*^9, 3.662724991063781*^9}, 3.6627279025973577`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "13.`", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "13.`", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"7\"\>", ",", "\<\"shortcuts\"\>"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.66272488158342*^9, 3.662724993171636*^9, 
  3.66272790305103*^9}]
}, Open  ]],

Cell["\<\
More processing of the string is required to obtain the 7 and to convert it \
into a Real:\
\>", "Text",
 CellChangeTimes->{{3.6627249287065153`*^9, 3.662724965873885*^9}, {
  3.662725028874013*^9, 3.662725033182837*^9}}],

Cell["\<\
The following will extract the first element of the List resultant from \
StringSplit\
\>", "Item",
 CellChangeTimes->{{3.662725036019412*^9, 3.662725059542418*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StringSplit", "[", 
   RowBox[{"\"\<7 shortcuts\>\"", ",", "\"\< \>\""}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662725008120306*^9, 3.662725022440504*^9}}],

Cell[BoxData["\<\"7\"\>"], "Output",
 CellChangeTimes->{3.662725022915501*^9}]
}, Open  ]],

Cell["ToExpression will convert the String into an Integer:", "Item",
 CellChangeTimes->{{3.6627250638634157`*^9, 3.662725089275941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", "\"\<7\>\"", "]"}], "+", "2"}]], "Input",
 CellChangeTimes->{{3.662725095792325*^9, 3.662725111755258*^9}}],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.662725112585999*^9}]
}, Open  ]],

Cell["\<\
These steps can then be combined to replace the string with the number 7:\
\>", "Text",
 CellChangeTimes->{{3.6627251181774397`*^9, 3.662725138754652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.", ",", "13.", ",", "\"\<7 shortcuts\>\""}], "}"}]}], "}"}], "/.", 
  RowBox[{"element_String", "\[RuleDelayed]", 
   RowBox[{"ToExpression", "[", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"element", ",", "\"\< \>\""}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662725149551869*^9, 3.662725162279739*^9}, 
   3.662727908986261*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "13.`", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "13.`", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.662725163554723*^9, 3.66272790949086*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises: Processing Data and Importing From Excel", "Title",
 CellChangeTimes->{{3.6627175986264544`*^9, 3.6627176055645933`*^9}, {
  3.6627251714843683`*^9, 3.6627251730215187`*^9}, {3.6627252076420527`*^9, 
  3.6627252150189734`*^9}, {3.662725324977351*^9, 3.662725332131886*^9}, {
  3.6627294177264967`*^9, 3.662729419917474*^9}, {3.6635746436951323`*^9, 
  3.6635746437275887`*^9}, {3.6640856553238077`*^9, 3.664085655830401*^9}}],

Cell[CellGroupData[{

Cell["Tidying the Desktop Items", "Section",
 CellChangeTimes->{{3.662725216795562*^9, 3.6627252308928013`*^9}}],

Cell["\<\
Use your knowledge of Parts to ensure that the row containing the string \
\[OpenCurlyDoubleQuote]7 shortcuts\[CloseCurlyDoubleQuote] is replaced with \
the number string.\
\>", "Text",
 CellChangeTimes->{{3.66272523717142*^9, 3.6627252978423653`*^9}}],

Cell[TextData[{
 "You do not ",
 StyleBox["need",
  FontSlant->"Italic"],
 " to use the /. function if you choose to use another method, and you may \
wish to consider alternatives. One alternative may be made obvious to you \
through the following example. \n\nHowever, you shoud ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "hardcode for a specific string as this is not a flexible solution."
}], "Text",
 CellChangeTimes->{{3.6627253004856977`*^9, 3.662725448131495*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"thisList", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "\"\<this is 4\>\"", ",", "7"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thisList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", "4"}], 
  ";"}], "\[IndentingNewLine]", "thisList"}], "Input",
 CellChangeTimes->{{3.662725375904716*^9, 3.662725394583255*^9}, {
  3.6627254509794273`*^9, 3.662725453466164*^9}}],

Cell["\<\
To test whether you have succesfully completed this task the following should \
evaluate as True:\
\>", "Text",
 CellChangeTimes->{{3.662725463062009*^9, 3.662725491692937*^9}}],

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"desktopItems$Data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"q_", "?", "NumericQ"}], " ", "/;", 
    RowBox[{"q", "\[LessEqual]", "1000"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6627258458606043`*^9, 3.662725897137281*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing Excel Files Locally", "Section",
 CellChangeTimes->{{3.6627259199518423`*^9, 3.6627259255302563`*^9}}],

Cell["\<\
On the desktop is folder called \[OpenCurlyDoubleQuote]Wolfram Language \
Example files\[CloseCurlyDoubleQuote] which contains two Excel files that \
requires cleaning in a similar fashion to the previously studied Excel file. \
However, the files must be imported from a local source. \
\>", "Text",
 CellChangeTimes->{{3.662726250277134*^9, 3.6627262738907757`*^9}, {
  3.662726310297079*^9, 3.662726333381373*^9}, {3.6627265233205547`*^9, 
  3.662726524904208*^9}, {3.662726845238912*^9, 3.662726853090993*^9}}],

Cell[TextData[{
 "This can be achieved by navigating in the menubar to Insert \[Rule] File \
Path and then selecting the files individually and providing their filepaths \
to Import. You are encouraged to use this solution if necessary.\n\nHowever, \
it is much more useful to be able to specify a folder location to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " as the WorkingDirectory through the use of the SetDirectory function:"
}], "Text",
 CellChangeTimes->{{3.662726341042*^9, 3.662726373836157*^9}, {
  3.662726472850111*^9, 3.662726568957943*^9}, {3.66272686137167*^9, 
  3.662726888303073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", "$HomeDirectory", "]"}]], "Input",
 CellChangeTimes->{{3.662726569884096*^9, 3.662726574304339*^9}}],

Cell[BoxData["\<\"/Users/martinjohnhadley\"\>"], "Output",
 CellChangeTimes->{3.662726574812059*^9, 3.662726630738793*^9}]
}, Open  ]],

Cell["\<\
Files in the working directory can now be listed easily, and can be imported \
by specifying their filenames alone:\
\>", "Text",
 CellChangeTimes->{{3.6627266482839108`*^9, 3.662726674102359*^9}, {
  3.662726929477668*^9, 3.662726942574987*^9}, {3.662726993280096*^9, 
  3.662727033284444*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"FileNames", "[", "]"}], "]"}], ",", 
   RowBox[{"Import", "[", "\"\<homedirectory.txt\>\"", "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.6627265767420483`*^9, 3.662726585143162*^9}, {
  3.662726625243622*^9, 3.662726627382388*^9}, {3.662726979916389*^9, 
  3.6627269892846727`*^9}, {3.662727027033691*^9, 3.662727044187286*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"{", 
     RowBox[{"\<\".android\"\>", ",", "\<\"Applications\"\>", 
      ",", "\<\".atom\"\>", ",", "\<\".bash_history\"\>", ",", 
      RowBox[{"\[LeftSkeleton]", "54", "\[RightSkeleton]"}], 
      ",", "\<\".thumbnails\"\>", ",", "\<\"tmp.txt\"\>", 
      ",", "\<\".Trash\"\>", ",", "\<\"VirtualBox VMs\"\>"}], "}"}],
    Short], ",", "\<\"I was in the $HomeDirectory\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.662726627725165*^9, 3.662726632259509*^9}, {
   3.662726974006578*^9, 3.662726989693241*^9}, 3.6627270445743103`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Import the two Excel files into ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "and store the ",
 StyleBox["data ",
  FontSlant->"Italic"],
 "from the workbooks against two appropriately named symbols."
}], "ItemNumbered",
 CellChangeTimes->{{3.662727059408133*^9, 3.662727105079534*^9}}],

Cell["\<\
In each file there are incorrectly or suspicious, replace each of these in \
turn:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.662727059408133*^9, 3.6627271423320007`*^9}, {
  3.662727361179764*^9, 3.662727397022814*^9}, {3.662727486675807*^9, 
  3.662727486681838*^9}}],

Cell[CellGroupData[{

Cell["\<\
There are two dates incorrect typed as \[OpenCurlyDoubleQuote]45 y\
\[CloseCurlyDoubleQuote] - replace these using the method used above.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.662727059408133*^9, 3.6627271423320007`*^9}, {
  3.662727361179764*^9, 3.662727397022814*^9}, {3.662727486675807*^9, 
  3.662727513405632*^9}}],

Cell["\<\
Gavin has an age of 333 - this is suspiciously high and impossible to decide \
how to fix. Remove or drop this element.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.662727059408133*^9, 3.6627271423320007`*^9}, {
  3.662727361179764*^9, 3.662727461182562*^9}, {3.662727523046006*^9, 
  3.66272752305729*^9}}],

Cell["\<\
Louis has an age of -19 which is impossible but convincingly interpretable as \
19. Find a method to replace any negative number (those below 0) to be \
replaced with their absolute value.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.662727059408133*^9, 3.6627271423320007`*^9}, {
  3.662727361179764*^9, 3.662727461182562*^9}, {3.662727523046006*^9, 
  3.662727601302724*^9}}],

Cell["\<\
Michael\[CloseCurlyQuote]s age has been entered as 34y which cannot be split \
using a \[OpenCurlyDoubleQuote] \[OpenCurlyDoubleQuote] character. \
\[LineSeparator]Decide on an appropriate way to treat this entry, note that \
the most flexible method would look for digit characters.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.662727059408133*^9, 3.6627271423320007`*^9}, {
  3.662727361179764*^9, 3.662727461182562*^9}, {3.662727523046006*^9, 
  3.662727720226839*^9}}]
}, Open  ]],

Cell["\<\
Join the two tables of data together into a Grid.\[LineSeparator]\
\[LineSeparator]The output should look as follows:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.662727059408133*^9, 3.6627271423320007`*^9}, {
  3.662727361179764*^9, 3.662727461182562*^9}, {3.662727523046006*^9, 
  3.6627277588382883`*^9}, {3.662728313852029*^9, 3.662728319467141*^9}}]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Name\"\>", "\<\"Age\"\>", "\<\"City of Birth\"\>"},
    {"\<\"Jane\"\>", "23.`", "\<\"Northampton\"\>"},
    {"\<\"Sally\"\>", "21.`", "\<\"Bellyinborough\"\>"},
    {"\<\"Rita\"\>", "25.`", "\<\"Budapest\"\>"},
    {"\<\"Louis\"\>", "10.`", "\<\"Birmingham\"\>"},
    {"\<\"James\"\>", "45", "\<\"Edinborough\"\>"},
    {"\<\"Michael\"\>", "34", "\<\"Cardiff\"\>"},
    {"\<\"Paul\"\>", "21.`", "\<\"Leicester\"\>"},
    {"\<\"Richard\"\>", "45", "\<\"Johannesburg\:200e\"\>"},
    {"\<\"Andrew\"\>", "31.`", "\<\"Liverpool\"\>"},
    {"\<\"Zoe\"\>", "40.`", "\<\"Portsmouth\"\>"},
    {"\<\"Marlena\"\>", "31.`", "\<\"Cardiff\"\>"}
   },
   AutoDelete->False,
   BaseStyle->"Text",
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.662727825474004*^9, 3.662727837046214*^9}, 
   3.6627279280218697`*^9, {3.6627279774440193`*^9, 3.6627279975673943`*^9}, 
   3.662728165935511*^9, {3.6627281964749928`*^9, 3.662728217661416*^9}, {
   3.662728261172559*^9, 3.6627282735306873`*^9}, {3.662728330695856*^9, 
   3.662728357635387*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Associations", "Title",
 CellChangeTimes->{{3.655552218285063*^9, 3.655552226025772*^9}, {
   3.6591832070896397`*^9, 3.6591832167727127`*^9}, {3.659183617524934*^9, 
   3.659183638786973*^9}, {3.6591837390277233`*^9, 3.659183757542976*^9}, {
   3.6591838212196493`*^9, 3.659183823220511*^9}, {3.659184479677973*^9, 
   3.659184483365548*^9}, {3.6591852029720583`*^9, 3.659185207288683*^9}, {
   3.6627284053047047`*^9, 3.662728405416157*^9}, {3.662729401647541*^9, 
   3.66272940449356*^9}, {3.662799157839304*^9, 3.662799158212596*^9}, {
   3.6635746475876226`*^9, 3.66357464768878*^9}, 3.664085666247805*^9}],

Cell["\<\
Thus far we have used Lists to store and operate on our data, however it can \
be incredibly useful to use Associations. Associations are similar to \
associative arrays and dictionaries found in other programming languages. \
They are introduced here to provide a basic introduction only.\
\>", "Text",
 CellChangeTimes->{{3.662728411535742*^9, 3.6627285223387127`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"assoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Key1\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Key 2\>\"", "\[Rule]", "3"}], ",", 
     RowBox[{"\"\<This is my third key\>\"", "\[Rule]", "\"\<data\>\""}]}], 
    "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662728524546283*^9, 3.662728591279059*^9}, {
  3.6627292668959618`*^9, 3.662729268449264*^9}}],

Cell["\<\
Data can be accessed directly from an association using the key:\
\>", "Text",
 CellChangeTimes->{{3.662729284837614*^9, 3.6627292991588783`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"assoc", "[", 
  RowBox[{"[", "\"\<Key 2\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662729300804017*^9, 3.662729308542307*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.662729308960779*^9}]
}, Open  ]],

Cell["\<\
The following code creates a list of associations using the function Map - it \
is beyond the scope of this course but is addressed in detail in the Wolfram \
Language programming course:\
\>", "Text",
 CellChangeTimes->{{3.6627294913783693`*^9, 3.662729540496049*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"desktopItems$Headers", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Timestamp\>\"", ",", "\"\<Desktop Items\>\"", ",", "\"\<OS\>\"", 
     ",", "\"\<Department\>\"", ",", "\"\<University\>\""}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"desktopItems$Associations", " ", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{"desktopItems$Headers", "\[Rule]", "#"}], "]"}], "&"}], ",", 
     "desktopItems$Data"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.659183774482112*^9, 3.659183775586823*^9}, {
   3.659183963672213*^9, 3.6591840097028008`*^9}, 3.659184412335277*^9, 
   3.6627297917399473`*^9}],

Cell["\<\
This structure is useful as all Desktop Items can be extracted easily:\
\>", "Text",
 CellChangeTimes->{{3.662729832716797*^9, 3.6627298537667713`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"desktopItems$Associations", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "\"\<Desktop Items\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662729828251193*^9, 3.662729860055945*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "20.`", ",", "21.`", ",", "0.`", ",", "0.`", ",", "46.`", ",", "18.`", ",", 
   "0.`", ",", "2.`", ",", "89.`", ",", "23.`", ",", "4.`", ",", "81.`", ",", 
   "10.`", ",", "22.`", ",", "146.`", ",", "99.`", ",", "104.`", ",", "5.`", 
   ",", "35.`", ",", "0.`", ",", "44.`", ",", "194.`", ",", "4.`", ",", 
   "28.`", ",", "21.`", ",", "0.`", ",", "8.`", ",", "7.`", ",", "39.`", ",", 
   "15.`", ",", "22.`", ",", "31.`", ",", "85.`", ",", "19.`", ",", "0.`", 
   ",", "0.`", ",", "3.`", ",", "4.`", ",", "140.`", ",", "27.`", ",", "7.`", 
   ",", "92.`", ",", "1.`", ",", "137.`", ",", "68.`", ",", "10.`", ",", 
   "10.`", ",", "113.`", ",", "27.`", ",", "34.`", ",", "12.`", ",", "22.`", 
   ",", "16.`", ",", "6.`", ",", "21.`", ",", "54.`", ",", "82.`", ",", 
   "25.`", ",", "9.`", ",", "17.`", ",", "29.`", ",", "48.`", ",", "4.`", ",",
    "9.`", ",", "16.`", ",", "1.`", ",", "19.`", ",", "198.`", ",", "11.`", 
   ",", "59.`", ",", "0.`", ",", "15.`", ",", "72.`", ",", "29.`", ",", 
   "35.`", ",", "38.`", ",", "8.`", ",", "54.`", ",", "13.`", ",", "24.`", 
   ",", "82.`", ",", "31.`", ",", "24.`", ",", "84.`", ",", "76.`", ",", 
   "34.`", ",", "6.`", ",", "0.`", ",", "53.`", ",", "0.`", ",", "17.`", ",", 
   "110.`", ",", "60.`", ",", "3.`", ",", "15.`", ",", "7.`", ",", "48.`", 
   ",", "9.`", ",", "50.`"}], "}"}]], "Output",
 CellChangeTimes->{3.662729860418818*^9}]
}, Open  ]],

Cell["\<\
Associations allow for SQL-like queries to be written and offer a more \
streamlined and (computationally) faster approach to filtering data than \
using Cases (or /.) on a list.

The following query will select all elements where the key OS is equal to \
\[OpenCurlyDoubleQuote]Mac (OS X)\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.663579121768373*^9, 3.663579240997813*^9}, {
  3.663579338246004*^9, 3.663579350158848*^9}}],

Cell[BoxData[
 RowBox[{"macOS", "=", 
  RowBox[{
   RowBox[{"Query", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#\"OS\"", "\[Equal]", "\"\<Mac (OS X)\>\""}], "&"}], "]"}], 
    "]"}], "[", "desktopItems$Associations", "]"}]}]], "Input",
 CellChangeTimes->{{3.6635791931542587`*^9, 3.663579211839258*^9}}],

Cell["Additional criteria may be added easily:", "Text",
 CellChangeTimes->{{3.6635793638963747`*^9, 3.663579376832683*^9}}],

Cell[BoxData[
 RowBox[{"messyMacs", "=", 
  RowBox[{
   RowBox[{"Query", "[", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#\"OS\"", "\[Equal]", "\"\<Mac (OS X)\>\""}], ")"}], "&&", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{"#\"Desktop Items\"", " ", ">", " ", "20"}], ")"}]}], "&"}], 
     "]"}], "]"}], "[", "desktopItems$Associations", "]"}]}]], "Input",
 CellChangeTimes->{{3.6635791931542587`*^9, 3.663579211839258*^9}, {
  3.663579378488552*^9, 3.663579466306614*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises: Associations", "Title",
 CellChangeTimes->{{3.663579711325551*^9, 3.6635797315079193`*^9}, {
   3.663580347345605*^9, 3.663580349584774*^9}, {3.663580553303797*^9, 
   3.6635805536527653`*^9}, 3.6640856770379972`*^9}],

Cell[CellGroupData[{

Cell["Practicing Queries", "Section",
 CellChangeTimes->{{3.663579748013123*^9, 3.663579751915773*^9}}],

Cell["\<\
It is useful to have example data sets to learn how functions work, use the \
skills learned previously to create and then filter a dataset with the \
following structure:\
\>", "Text",
 CellChangeTimes->{{3.6635799721740522`*^9, 3.6635800432068853`*^9}}],

Cell[BoxData[
 RowBox[{"testAssociation", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Category\>\"", "->", "\"\<A\>\""}], ",", 
      RowBox[{"\"\<Size\>\"", "->", "10"}], ",", 
      RowBox[{"\"\<Users\>\"", "->", "1021"}], ",", 
      RowBox[{"\"\<Interactions\>\"", "\[Rule]", "12"}]}], "|>"}], ",", 
    "\[IndentingNewLine]", "..."}], "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.66357975561989*^9, 3.663579756224229*^9}, {
  3.66357986845759*^9, 3.663579952001719*^9}, {3.663580045580887*^9, 
  3.66358004733597*^9}}],

Cell["\<\
Use Table to create a list of associations with 50 individuals in it, the \
following template will help ypu\
\>", "ItemNumbered",
 CellChangeTimes->{{3.663580058373479*^9, 3.663580099300675*^9}, {
  3.66358049165256*^9, 3.66358049839141*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Key 1\>\"", ",", "\"\<Value\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Key 2\>\"", ",", 
       RowBox[{"RandomInteger", "[", "10", "]"}]}], "}"}]}], "}"}], ",", 
   "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.663580100159631*^9, 3.663580144561861*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Key 1\"\>", ",", "\<\"Value\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Key 2\"\>", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Key 1\"\>", ",", "\<\"Value\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Key 2\"\>", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Key 1\"\>", ",", "\<\"Value\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Key 2\"\>", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Key 1\"\>", ",", "\<\"Value\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Key 2\"\>", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Key 1\"\>", ",", "\<\"Value\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Key 2\"\>", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.6635801287788467`*^9, 3.6635801449725857`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ensure your association\[CloseCurlyQuote]s keys have the following properties:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.6635801497927933`*^9, 3.663580167940192*^9}}],

Cell[CellGroupData[{

Cell["\<\
\[OpenCurlyDoubleQuote]Category\[CloseCurlyDoubleQuote] should make a random \
choice from {\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]B\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]C\
\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]D\[CloseCurlyDoubleQuote]}\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.6635801497927933`*^9, 3.663580191712576*^9}}],

Cell["\[OpenCurlyDoubleQuote]Size\[CloseCurlyDoubleQuote] should be a random \
integer between 5 and 50", "SubitemNumbered",
 CellChangeTimes->{{3.6635801497927933`*^9, 3.663580209398222*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]Users\[CloseCurlyDoubleQuote] should be a random \
variate from a NormalDistribution with a mean of 1500 and standard deviation \
of 400\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.6635801497927933`*^9, 3.663580244423707*^9}}],

Cell["\<\
\[OpenCurlyDoubleQuote]Interactions\[CloseCurlyDoubleQuote] should be a \
random variate from the following: SkewNormalDistribution[10,5,-6]\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.6635801497927933`*^9, 3.66358030754244*^9}}]
}, Open  ]],

Cell["\<\
Write a query that only selects those entries where \
\[OpenCurlyDoubleQuote]Category\[CloseCurlyDoubleQuote] is \
\[OpenCurlyDoubleQuote]A\[CloseCurlyDoubleQuote] OR \[OpenCurlyDoubleQuote]B\
\[CloseCurlyDoubleQuote]\
\>", "ItemNumbered",
 CellChangeTimes->{{3.663580314721489*^9, 3.663580344378583*^9}}],

Cell["\<\
Write a query that selects all entries with greater than 8 \
\[OpenCurlyDoubleQuote]Interactions\[CloseCurlyDoubleQuote] and a \
\[OpenCurlyDoubleQuote]Size\[CloseCurlyDoubleQuote] greater than 11 from \
\[OpenCurlyDoubleQuote]Category\[CloseCurlyDoubleQuote] \
\[OpenCurlyDoubleQuote]C\[CloseCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]D\
\[CloseCurlyDoubleQuote]\
\>", "ItemNumbered",
 CellChangeTimes->{{3.663580314721489*^9, 3.663580438618878*^9}}],

Cell["\<\
Tally the number of individuals in each category and display the results in a \
BarChart\
\>", "ItemNumbered",
 CellChangeTimes->{{3.6635804552368298`*^9, 3.663580528317346*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Going Further with the Wolfram Language", "Title",
 CellChangeTimes->{{3.663583479730219*^9, 3.663583484510553*^9}, {
  3.663583567111652*^9, 3.66358359280107*^9}}],

Cell["\<\
The ITLP Courses catalog currently has two courses dedicated to the Wolfram \
Language, with additional content planned for the future. If there are \
specific courses you\[CloseCurlyQuote]re interested in then please do pass on \
this feedback in the survey you\[CloseCurlyQuote]ll receive after this course.\
\>", "Text",
 CellChangeTimes->{{3.663583572521284*^9, 3.663583670781012*^9}}],

Cell[TextData[{
 "Oxford provides access to ",
 ButtonBox["Lynda.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.lynda.com"], None},
  ButtonNote->"http://www.lynda.com"],
 " for all staff and students; Lynda is an video learning service with a \
variety of content dedicated to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " and the Wolfram Language."
}], "Text",
 CellChangeTimes->{{3.6635836736943493`*^9, 3.663583780246174*^9}, {
  3.663583822889921*^9, 3.663583822898226*^9}}],

Cell[TextData[{
 "The Wolfram company maintain a Q&A community at ",
 ButtonBox["community.wolfram.com",
  BaseStyle->"Hyperlink",
  ButtonData->{"community.wolfram.com", None}],
 " where users of Wolfram technologies can discuss their experiences and ask \
for assistance. "
}], "Text",
 CellChangeTimes->{{3.6635837820797663`*^9, 3.663583861011942*^9}}],

Cell[TextData[{
 "Stackexchange is the canonical Q&A community for programming questions, and \
the dedicated subsite ",
 ButtonBox["mathematica.stackexchange.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/"], None},
  ButtonNote->"http://mathematica.stackexchange.com/"],
 " is an excellent source of information and support in using the language \
and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " environment."
}], "Text",
 CellChangeTimes->{{3.6635838629136972`*^9, 3.663583981611245*^9}}]
}, Open  ]]
},
WindowSize->{960, 992},
WindowMargins->{{Automatic, 424}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{18, 18}, {36, 36}}},
ShowCellBracket->True,
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["PresenterNote"], CellMargins -> {{66, 10}, {7, 7}}, 
    LineSpacing -> {1, 3}, CounterIncrements -> "PresenterNote", 
    MenuSortingValue -> 1400, FontFamily -> "Arial", FontSize -> 14, 
    FontColor -> RGBColor[255, 0, 30]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Title"], CellMargins -> {{27, Inherited}, {10, 30}}, 
       StyleKeyMapping -> {"Tab" -> "Subtitle"}, 
       CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Title", 
       CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
         "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1100, MenuCommandKey -> "1", FontFamily -> "Gill Sans", FontSize -> 44,
        FontColor -> RGBColor[93/255, 170/255, 218/255]], 
      Cell[
       StyleData["Title", "Presentation"], 
       CellMargins -> {{67, Inherited}, {15, 45}}, LineSpacing -> {1, 18}, 
       FontSize -> 72], 
      Cell[
       StyleData["Title", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
         15, 0.12 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
       LineSpacing -> {1, 2}, FontSize -> 72], 
      Cell[
       StyleData["Title", "Condensed"], CellMargins -> {{18, 10}, {4, 8}}, 
       FontSize -> 20], 
      Cell[
       StyleData["Title", "Printout"], 
       CellMargins -> {{10, Inherited}, {10, 30}}], 
      Cell[
       StyleData["Title", "PrintoutGray"], 
       CellMargins -> {{10, Inherited}, {10, 30}}, FontColor -> 
       GrayLevel[0]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, 
       CellMargins -> {{27, Inherited}, {8, 18}}, 
       StyleKeyMapping -> {"Tab" -> "Subsection"}, 
       CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> False, 
       CellFrameMargins -> 4, CellFrameColor -> GrayLevel[0.7], 
       LineSpacing -> {1, 2}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Item", 0}, {"Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1250, MenuCommandKey -> "4", FontFamily -> "Gill Sans", FontSize -> 28,
        FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["Section", "Presentation"], CellFrame -> {{0, 0}, {0, 2}}, 
       CellMargins -> {{67, Inherited}, {12, 24}}, CellFrameMargins -> 8, 
       LineSpacing -> {1, 10}, FontSize -> 40], 
      Cell[
       StyleData["Section", "SlideShow"], 
       CellMargins -> {{
         0.06 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
         12, 0.06 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
       LineSpacing -> {1, 2}, FontSize -> 40], 
      Cell[
       StyleData["Section", "Condensed"], 
       CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 12], 
      Cell[
       StyleData["Section", "Printout"], 
       CellMargins -> {{10, Inherited}, {8, 18}}], 
      Cell[
       StyleData["Section", "PrintoutGray"], 
       CellMargins -> {{10, Inherited}, {8, 18}}, FontColor -> 
       GrayLevel[0.2]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], CellMargins -> {{50.34765625, 3.}, {8., 12.}},
        StyleKeyMapping -> {
        "Tab" -> "Subsubsection", "Backspace" -> "Section", 
         KeyEvent["Tab", Modifiers -> {Shift}] -> "Section"}, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
       "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1300, MenuCommandKey -> "5", FontFamily -> "Gill Sans", FontSize -> 20,
        FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["Subsection", "Presentation"], 
       CellMargins -> {{100, Inherited}, {12, 18}}, LineSpacing -> {1, 10}, 
       FontSize -> 28], 
      Cell[
       StyleData["Subsection", "SlideShow"], 
       CellMargins -> {{
         0.1 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.02 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
         12, 0.046 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
       LineSpacing -> {1, 2}, FontSize -> 32], 
      Cell[
       StyleData["Subsection", "Condensed"], 
       CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 11], 
      Cell[
       StyleData["Subsection", "Printout"], 
       CellMargins -> {{30, Inherited}, {8., 16}}], 
      Cell[
       StyleData["Subsection", "PrintoutGray"], 
       CellMargins -> {{30, Inherited}, {8., 16}}, FontColor -> 
       GrayLevel[0.3]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellMargins -> {{66, Inherited}, {2, 10}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subsubsubsection", "Backspace" -> "Subsection", 
         KeyEvent["Tab", Modifiers -> {Shift}] -> "Subsection"}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
       "Subsubsection", 
       CounterAssignments -> {{"Subsubsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1350, MenuCommandKey -> "6", FontFamily -> "Gill Sans", FontSize -> 19,
        FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["Subsubsection", "Presentation"], 
       CellMargins -> {{100, Inherited}, {3, 15}}, LineSpacing -> {1, 6}, 
       FontSize -> 24], 
      Cell[
       StyleData["Subsubsection", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {3, 15}}, 
       LineSpacing -> {1, 2}, FontSize -> 28], 
      Cell[
       StyleData["Subsubsection", "Condensed"], 
       CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 11], 
      Cell[
       StyleData["Subsubsection", "Printout"], 
       CellMargins -> {{49, Inherited}, {6, 16}}], 
      Cell[
       StyleData["Subsubsection", "PrintoutGray"], 
       CellMargins -> {{49, Inherited}, {6, 16}}, FontColor -> 
       GrayLevel[0.3]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsection"], 
       CellMargins -> {{66, Inherited}, {2, 10}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subsubsubsubsection", "Backspace" -> "Subsubsection", 
         KeyEvent["Tab", Modifiers -> {Shift}] -> "Subsubsection"}, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> False, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
       "Subsubsubsection", 
       CounterAssignments -> {{"Subsubsubsubsection", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       None, FontFamily -> "Arial", FontSize -> 14, FontWeight -> "Bold", 
       FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["Subsubsubsection", "Presentation"], 
       CellMargins -> {{100, Inherited}, {3, 15}}, LineSpacing -> {1, 7}, 
       FontSize -> 24], 
      Cell[
       StyleData["Subsubsubsection", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {3, 15}}, 
       LineSpacing -> {1, 2}, FontFamily -> "Arial", FontSize -> 22], 
      Cell[
       StyleData["Subsubsubsection", "Condensed"], 
       CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 10], 
      Cell[
       StyleData["Subsubsubsection", "Printout"], 
       CellMargins -> {{49, Inherited}, {6, 14}}], 
      Cell[
       StyleData["Subsubsubsection", "PrintoutGray"], 
       CellMargins -> {{49, Inherited}, {6, 14}}, FontColor -> 
       GrayLevel[0.4]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsubsubsection"], 
       CellMargins -> {{66, Inherited}, {2, 10}}, 
       StyleKeyMapping -> {
        "Backspace" -> "Subsubsubsection", 
         KeyEvent["Tab", Modifiers -> {Shift}] -> "Subsubsubsection"}, 
       CellGroupingRules -> {"SectionGrouping", 70}, PageBreakBelow -> False, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
       "Subsubsubsubsection", 
       CounterAssignments -> {{"Item", 0}, {"Subitem", 0}, {
         "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
         "SubsubitemNumbered", 0}}, MenuSortingValue -> None, FontFamily -> 
       "Arial", FontSize -> 14, FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["Subsubsubsubsection", "Presentation"], 
       CellMargins -> {{100, Inherited}, {3, 15}}, LineSpacing -> {1, 7}, 
       FontSize -> 24], 
      Cell[
       StyleData["Subsubsubsubsection", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {3, 15}}, 
       LineSpacing -> {1, 2}, FontSize -> 22], 
      Cell[
       StyleData["Subsubsubsubsection", "Condensed"], 
       CellMargins -> {{18, Inherited}, {6, 12}}, FontSize -> 10], 
      Cell[
       StyleData["Subsubsubsubsection", "Printout"], 
       CellMargins -> {{49, Inherited}, {6, 14}}], 
      Cell[
       StyleData["Subsubsubsubsection", "PrintoutGray"], 
       CellMargins -> {{49, Inherited}, {6, 14}}, FontColor -> 
       GrayLevel[0.3]]}, Closed]]}, Visible -> False, FrontEndVersion -> 
  "10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, 2015)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 4, 148, "Title"],
Cell[740, 28, 283686, 4662, 160, "Input"],
Cell[284429, 4692, 430, 11, 49, "Text"],
Cell[284862, 4705, 407, 8, 49, "Text"],
Cell[285272, 4715, 719, 18, 68, "Text"],
Cell[285994, 4735, 318, 7, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286349, 4747, 109, 1, 92, "Title"],
Cell[286461, 4750, 488, 9, 49, "Text"],
Cell[286952, 4761, 15772, 253, 278, "Output"],
Cell[302727, 5016, 619, 14, 68, "Text"],
Cell[303349, 5032, 361, 6, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303747, 5043, 274, 3, 92, "Title"],
Cell[304024, 5048, 214, 4, 30, "Text"],
Cell[304241, 5054, 513, 8, 68, "Text"],
Cell[304757, 5064, 109, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[304891, 5069, 88, 1, 28, "Item"],
Cell[304982, 5072, 85, 1, 28, "Item"],
Cell[305070, 5075, 98, 1, 28, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305205, 5081, 109, 1, 64, "Section"],
Cell[305317, 5084, 487, 10, 87, "Text"],
Cell[305807, 5096, 139, 1, 28, "Item"],
Cell[305949, 5099, 233, 8, 28, "Input"],
Cell[306185, 5109, 197, 4, 28, "Item"],
Cell[306385, 5115, 230, 6, 28, "Input"],
Cell[306618, 5123, 431, 9, 49, "Text"],
Cell[307052, 5134, 578, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[307655, 5147, 132077, 2466, 275, "Input",
 CellID->481840482],
Cell[439735, 7615, 202, 5, 28, "Output"]
}, Open  ]],
Cell[439952, 7623, 403, 7, 49, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[440404, 7636, 284, 4, 92, "Title"],
Cell[440691, 7642, 263, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[440979, 7653, 89, 1, 64, "Section"],
Cell[441071, 7656, 410, 15, 30, "Text"],
Cell[441484, 7673, 22469, 373, 128, "Input"],
Cell[463956, 8048, 254, 5, 49, "Text"],
Cell[464213, 8055, 738, 17, 38, "Input"],
Cell[464954, 8074, 323, 9, 49, "Text"],
Cell[465280, 8085, 2210, 41, 33, "Input"],
Cell[467493, 8128, 321, 10, 30, "Text"],
Cell[467817, 8140, 138, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[467980, 8145, 179, 5, 28, "Item"],
Cell[468162, 8152, 159, 3, 28, "Item"]
}, Open  ]],
Cell[468336, 8158, 129320, 2131, 199, "Input"],
Cell[597659, 10291, 296, 9, 30, "Text"],
Cell[597958, 10302, 4020, 71, 61, "Input"],
Cell[601981, 10375, 482, 9, 68, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602500, 10389, 157, 2, 64, "Section"],
Cell[602660, 10393, 294, 5, 49, "Text"],
Cell[602957, 10400, 16872, 282, 165, "Text"],
Cell[CellGroupData[{
Cell[619854, 10686, 312, 7, 49, "ItemNumbered"],
Cell[620169, 10695, 236, 4, 49, "ItemNumbered"],
Cell[620408, 10701, 277, 7, 49, "ItemNumbered"]
}, Open  ]],
Cell[620700, 10711, 253, 7, 30, "Text"],
Cell[620956, 10720, 234, 4, 49, "Text"],
Cell[621193, 10726, 19103, 318, 166, "Text"],
Cell[640299, 11046, 166, 3, 30, "Text"],
Cell[640468, 11051, 188, 4, 30, "Text"],
Cell[640659, 11057, 244, 6, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640940, 11068, 122, 2, 64, "Section"],
Cell[641065, 11072, 388, 7, 49, "Text"],
Cell[641456, 11081, 4589, 80, 91, "Input"],
Cell[646048, 11163, 160, 3, 30, "Text"],
Cell[646211, 11168, 116, 2, 28, "Input"],
Cell[646330, 11172, 245, 5, 49, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646612, 11182, 154, 2, 64, "Section"],
Cell[646769, 11186, 386, 11, 49, "Text"],
Cell[647158, 11199, 100, 1, 28, "Input"],
Cell[647261, 11202, 277, 5, 49, "Text"],
Cell[647541, 11209, 25843, 428, 153, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673421, 11642, 96, 1, 64, "Section"],
Cell[673520, 11645, 328, 6, 49, "Text"],
Cell[673851, 11653, 179, 4, 30, "Text"],
Cell[674033, 11659, 235, 5, 30, "Text"],
Cell[674271, 11666, 76566, 1260, 483, "Input"],
Cell[750840, 12928, 103, 1, 28, "Item"],
Cell[750946, 12931, 289, 6, 49, "Text"],
Cell[751238, 12939, 96, 1, 28, "Item"],
Cell[751337, 12942, 193, 2, 30, "Text"],
Cell[751533, 12946, 93, 1, 28, "Item"],
Cell[751629, 12949, 540, 9, 68, "Text"],
Cell[752172, 12960, 8949, 152, 106, "Input"],
Cell[761124, 13114, 94, 1, 28, "Item"],
Cell[761221, 13117, 291, 5, 49, "Text"],
Cell[761515, 13124, 90, 1, 28, "Item"],
Cell[761608, 13127, 201, 4, 30, "Text"],
Cell[761812, 13133, 96, 1, 28, "Item"],
Cell[761911, 13136, 211, 4, 30, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[762171, 13146, 386, 8, 92, "Title"],
Cell[762560, 13156, 281, 7, 30, "Text"],
Cell[762844, 13165, 158, 3, 28, "Input"],
Cell[763005, 13170, 341, 6, 49, "Text"],
Cell[763349, 13178, 465, 13, 46, "Input"],
Cell[763817, 13193, 187, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[764041, 13202, 329, 4, 92, "Title"],
Cell[764373, 13208, 308, 5, 49, "Text"],
Cell[764684, 13215, 768, 18, 63, "Input"],
Cell[765455, 13235, 162, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[765642, 13242, 172, 3, 28, "Input"],
Cell[765817, 13247, 488, 13, 28, "Output"]
}, Open  ]],
Cell[766320, 13263, 259, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[766604, 13273, 138, 2, 64, "Section"],
Cell[766745, 13277, 312, 9, 30, "Text"],
Cell[767060, 13288, 202, 4, 28, "Input"],
Cell[767265, 13294, 126, 1, 30, "Text"],
Cell[767394, 13297, 202, 5, 28, "Input"],
Cell[767599, 13304, 151, 3, 30, "Text"],
Cell[767753, 13309, 172, 4, 28, "Input"],
Cell[767928, 13315, 222, 4, 30, "Text"],
Cell[768153, 13321, 146, 2, 28, "Input"],
Cell[768302, 13325, 402, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[768729, 13339, 180, 4, 28, "Input"],
Cell[768912, 13345, 70, 1, 28, "Output"]
}, Open  ]],
Cell[768997, 13349, 231, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[769253, 13359, 183, 4, 28, "Input"],
Cell[769439, 13365, 144, 3, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[769644, 13375, 381, 5, 148, "Title"],
Cell[770028, 13382, 267, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[770320, 13391, 142, 2, 28, "Input"],
Cell[770465, 13395, 354, 11, 97, "Output"]
}, Open  ]],
Cell[770834, 13409, 326, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[771185, 13420, 299, 7, 28, "Input"],
Cell[771487, 13429, 418, 12, 115, "Output"]
}, Open  ]],
Cell[771920, 13444, 1103, 18, 182, "Text"],
Cell[CellGroupData[{
Cell[773048, 13466, 363, 9, 28, "Input"],
Cell[773414, 13477, 478, 13, 129, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[773941, 13496, 427, 5, 148, "Title"],
Cell[774371, 13503, 161, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[774557, 13510, 260, 5, 28, "Item"],
Cell[774820, 13517, 238, 5, 28, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775095, 13527, 6712, 162, 335, "Input"],
Cell[781810, 13691, 293983, 6508, 698, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[1075827, 20204, 211, 3, 64, "Section"],
Cell[1076041, 20209, 444, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[1076510, 20221, 2932, 68, 216, "Input"],
Cell[1079445, 20291, 98650, 2017, 423, "Output"]
}, {2}]],
Cell[1178107, 22311, 273, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[1178405, 22320, 348, 6, 28, "Input"],
Cell[1178756, 22328, 466, 13, 28, "Output"]
}, Open  ]],
Cell[1179237, 22344, 263, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1179525, 22353, 442, 11, 28, "Input"],
Cell[1179970, 22366, 10289, 260, 243, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1190320, 22633, 508, 7, 92, "Title"],
Cell[1190831, 22642, 265, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[1191121, 22651, 492, 8, 46, "Input"],
Cell[1191616, 22661, 12923, 343, 206, "Output"]
}, Open  ]],
Cell[1204554, 23007, 215, 4, 30, "Text"],
Cell[1204772, 23013, 312, 9, 30, "Text"],
Cell[1205087, 23024, 202, 4, 28, "Input"],
Cell[1205292, 23030, 126, 1, 30, "Text"],
Cell[1205421, 23033, 176, 4, 28, "Input"],
Cell[1205600, 23039, 151, 3, 30, "Text"],
Cell[1205754, 23044, 172, 4, 28, "Input"],
Cell[1205929, 23050, 402, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[1206356, 23064, 180, 4, 28, "Input"],
Cell[1206539, 23070, 70, 1, 28, "Output"]
}, Open  ]],
Cell[1206624, 23074, 231, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[1206880, 23084, 183, 4, 28, "Input"],
Cell[1207066, 23090, 168, 3, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1207283, 23099, 748, 10, 92, "Title"],
Cell[1208034, 23111, 420, 7, 49, "Text"],
Cell[1208457, 23120, 590, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[1209072, 23133, 113, 1, 64, "Section"],
Cell[1209188, 23136, 735, 15, 68, "Text"],
Cell[1209926, 23153, 453, 8, 68, "Text"],
Cell[1210382, 23163, 713, 15, 63, "Input"],
Cell[1211098, 23180, 472, 11, 63, "Input"],
Cell[1211573, 23193, 128, 1, 30, "Text"],
Cell[1211704, 23196, 203, 4, 28, "Input"],
Cell[1211910, 23202, 291, 5, 49, "Text"],
Cell[1212204, 23209, 351, 8, 28, "Input"],
Cell[1212558, 23219, 373, 7, 49, "Text"],
Cell[1212934, 23228, 378, 8, 28, "Input"],
Cell[1213315, 23238, 163, 3, 30, "Text"],
Cell[1213481, 23243, 386, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1213904, 23256, 101, 1, 64, "Section"],
Cell[1214008, 23259, 190, 2, 30, "Text"],
Cell[1214201, 23263, 566, 12, 28, "Input"],
Cell[1214770, 23277, 324, 6, 30, "Text"],
Cell[1215097, 23285, 350, 7, 28, "Input"],
Cell[1215450, 23294, 451, 9, 87, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1215950, 23309, 287, 4, 92, "Title"],
Cell[CellGroupData[{
Cell[1216262, 23317, 157, 2, 64, "Section"],
Cell[1216422, 23321, 244, 4, 49, "Text"],
Cell[1216669, 23327, 842, 21, 63, "Input"],
Cell[1217514, 23350, 128, 1, 30, "Text"],
Cell[1217645, 23353, 10236, 264, 235, "Output"],
Cell[CellGroupData[{
Cell[1227906, 23621, 272, 9, 30, "ItemNumbered"],
Cell[1228181, 23632, 345, 6, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[1228551, 23642, 280, 3, 24, "SubitemNumbered"],
Cell[1228834, 23647, 367, 6, 24, "SubitemNumbered"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1229262, 23660, 109, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[1229396, 23665, 143, 1, 30, "ItemNumbered"],
Cell[1229542, 23668, 202, 4, 30, "ItemNumbered"],
Cell[1229747, 23674, 234, 4, 49, "ItemNumbered"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230042, 23685, 418, 6, 92, "Title"],
Cell[1230463, 23693, 388, 8, 49, "Text"],
Cell[1230854, 23703, 214, 5, 28, "Input"],
Cell[1231071, 23710, 298, 6, 30, "Text"],
Cell[1231372, 23718, 178, 2, 28, "Item"],
Cell[CellGroupData[{
Cell[1231575, 23724, 206, 4, 28, "Input"],
Cell[1231784, 23730, 243, 6, 28, "Output"]
}, Open  ]],
Cell[1232042, 23739, 212, 6, 28, "Item"],
Cell[CellGroupData[{
Cell[1232279, 23749, 224, 5, 28, "Input"],
Cell[1232506, 23756, 1575, 32, 120, "Output"]
}, Open  ]],
Cell[1234096, 23791, 153, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1234274, 23798, 359, 9, 28, "Input"],
Cell[1234636, 23809, 1645, 33, 120, "Output"]
}, Open  ]],
Cell[1236296, 23845, 140, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1236461, 23850, 1025, 27, 114, "Input"],
Cell[1237489, 23879, 2497, 48, 166, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1240035, 23933, 475, 6, 92, "Title"],
Cell[1240513, 23941, 193, 4, 30, "Text"],
Cell[1240709, 23947, 184, 4, 28, "Input"],
Cell[1240896, 23953, 404, 12, 28, "Input"],
Cell[1241303, 23967, 273, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[1241601, 23976, 289, 8, 28, "Input"],
Cell[1241893, 23986, 211, 5, 28, "Output"]
}, Open  ]],
Cell[1242119, 23994, 160, 3, 30, "Text"],
Cell[1242282, 23999, 552, 14, 114, "Input"],
Cell[1242837, 24015, 237, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1243099, 24024, 550, 14, 46, "Input"],
Cell[1243652, 24040, 2478, 51, 229, "Output"]
}, Open  ]],
Cell[1246145, 24094, 236, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1246406, 24103, 788, 18, 80, "Input"],
Cell[1247197, 24123, 1677, 35, 126, "Output"],
Cell[1248877, 24160, 675, 13, 24, "Message"],
Cell[1249555, 24175, 623, 12, 24, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1250227, 24193, 578, 8, 92, "Title"],
Cell[CellGroupData[{
Cell[1250830, 24205, 116, 1, 64, "Section"],
Cell[1250949, 24208, 256, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[1251230, 24217, 602, 14, 80, "Input"],
Cell[1251835, 24233, 1778, 34, 116, "Output"]
}, Open  ]],
Cell[1253628, 24270, 284, 6, 30, "Text"],
Cell[1253915, 24278, 2129, 41, 144, "Output"],
Cell[CellGroupData[{
Cell[1256069, 24323, 142, 1, 30, "ItemNumbered"],
Cell[1256214, 24326, 227, 4, 49, "ItemNumbered"],
Cell[1256444, 24332, 182, 4, 30, "ItemNumbered"],
Cell[1256629, 24338, 149, 1, 30, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256827, 24345, 172, 2, 64, "Section"],
Cell[1257002, 24349, 443, 8, 49, "Text"],
Cell[1257448, 24359, 454, 12, 80, "Input"],
Cell[1257905, 24373, 284, 6, 30, "Text"],
Cell[1258192, 24381, 2787, 53, 366, "Output"],
Cell[CellGroupData[{
Cell[1261004, 24438, 316, 6, 49, "ItemNumbered"],
Cell[1261323, 24446, 90, 1, 28, "Item"],
Cell[1261416, 24449, 92, 1, 28, "Item"],
Cell[1261511, 24452, 285, 6, 30, "ItemNumbered"],
Cell[1261799, 24460, 260, 6, 30, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262108, 24472, 175, 2, 64, "Section"],
Cell[1262286, 24476, 399, 7, 49, "Text"],
Cell[1262688, 24485, 15792, 254, 364, "Output"],
Cell[1278483, 24741, 215, 6, 30, "Text"],
Cell[1278701, 24749, 2424, 64, 250, "Input"],
Cell[CellGroupData[{
Cell[1281150, 24817, 342, 6, 49, "ItemNumbered"],
Cell[1281495, 24825, 330, 8, 49, "ItemNumbered"],
Cell[1281828, 24835, 219, 4, 30, "ItemNumbered"],
Cell[1282050, 24841, 173, 3, 30, "ItemNumbered"]
}, Open  ]],
Cell[1282238, 24847, 140, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[1282403, 24853, 176, 2, 30, "ItemNumbered"],
Cell[1282582, 24857, 413, 8, 49, "ItemNumbered"]
}, Open  ]],
Cell[1283010, 24868, 248, 7, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1283307, 24881, 137, 2, 92, "Title"],
Cell[1283447, 24885, 367, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[1283839, 24898, 122, 1, 64, "Section"],
Cell[1283964, 24901, 306, 6, 49, "Text"],
Cell[1284273, 24909, 404, 10, 49, "Text"],
Cell[1284680, 24921, 133, 1, 30, "Text"],
Cell[1284816, 24924, 242, 6, 28, "Input"],
Cell[1285061, 24932, 552, 14, 80, "Input"],
Cell[1285616, 24948, 190, 4, 30, "Text"],
Cell[1285809, 24954, 17959, 299, 238, "Input"],
Cell[1303771, 25255, 224, 4, 30, "Text"],
Cell[1303998, 25261, 207, 4, 28, "Item"],
Cell[1304208, 25267, 633, 16, 97, "Input"],
Cell[1304844, 25285, 288, 5, 28, "Item"],
Cell[1305135, 25292, 886, 23, 97, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306058, 25320, 98, 1, 64, "Section"],
Cell[1306159, 25323, 267, 5, 49, "Text"],
Cell[1306429, 25330, 377, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[1306831, 25341, 1169, 27, 148, "Input"],
Cell[1308003, 25370, 1153, 30, 31, "Output"]
}, Open  ]],
Cell[1309171, 25403, 691, 12, 68, "Text"],
Cell[1309865, 25417, 1278, 28, 220, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1311192, 25451, 433, 6, 92, "Title"],
Cell[1311628, 25459, 367, 8, 49, "Text"],
Cell[1311998, 25469, 108, 1, 28, "Input"],
Cell[1312109, 25472, 378, 6, 49, "Text"],
Cell[1312490, 25480, 306, 6, 30, "Text"],
Cell[1312799, 25488, 489, 9, 80, "Input"],
Cell[1313291, 25499, 199, 4, 30, "Text"],
Cell[1313493, 25505, 147, 3, 28, "Input"],
Cell[1313643, 25510, 276, 5, 49, "Text"],
Cell[1313922, 25517, 1066, 25, 165, "Input"],
Cell[1314991, 25544, 323, 6, 30, "Text"],
Cell[1315317, 25552, 469, 12, 80, "Input"],
Cell[1315789, 25566, 258, 5, 30, "Text"],
Cell[1316050, 25573, 342, 8, 46, "Input"],
Cell[1316395, 25583, 284, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[1316704, 25593, 421, 11, 28, "Input"],
Cell[1317128, 25606, 4811, 114, 359, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1321988, 25726, 612, 8, 92, "Title"],
Cell[1322603, 25736, 258, 5, 49, "Text"],
Cell[1322864, 25743, 180, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1323069, 25751, 215, 4, 28, "Item"],
Cell[1323287, 25757, 189, 4, 28, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1323513, 25766, 92, 1, 64, "Section"],
Cell[1323608, 25769, 310, 6, 49, "Text"],
Cell[1323921, 25777, 136, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1324082, 25782, 212, 5, 28, "Input"],
Cell[1324297, 25789, 126, 3, 28, "Output"]
}, Open  ]],
Cell[1324438, 25795, 231, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1324694, 25804, 321, 8, 28, "Input"],
Cell[1325018, 25814, 198, 5, 28, "Output"]
}, Open  ]],
Cell[1325231, 25822, 172, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1325428, 25830, 284, 7, 28, "Input"],
Cell[1325715, 25839, 854, 20, 42, "Output"]
}, Open  ]],
Cell[1326584, 25862, 335, 7, 49, "Text"],
Cell[1326922, 25871, 253, 5, 30, "Text"],
Cell[1327178, 25878, 496, 12, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1327711, 25895, 102, 1, 64, "Section"],
Cell[1327816, 25898, 258, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[1328099, 25907, 532, 13, 28, "Input"],
Cell[1328634, 25922, 368, 11, 28, "Output"]
}, Open  ]],
Cell[1329017, 25936, 243, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[1329285, 25947, 558, 14, 28, "Input"],
Cell[1329846, 25963, 368, 11, 28, "Output"]
}, Open  ]],
Cell[1330229, 25977, 231, 5, 30, "Text"],
Cell[1330463, 25984, 175, 4, 28, "Item"],
Cell[CellGroupData[{
Cell[1330663, 25992, 231, 5, 28, "Input"],
Cell[1330897, 25999, 78, 1, 28, "Output"]
}, Open  ]],
Cell[1330990, 26003, 137, 1, 28, "Item"],
Cell[CellGroupData[{
Cell[1331152, 26008, 162, 3, 28, "Input"],
Cell[1331317, 26013, 70, 1, 28, "Output"]
}, Open  ]],
Cell[1331402, 26017, 165, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1331592, 26024, 562, 15, 28, "Input"],
Cell[1332157, 26041, 264, 7, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1332482, 26055, 442, 5, 148, "Title"],
Cell[CellGroupData[{
Cell[1332949, 26064, 112, 1, 64, "Section"],
Cell[1333064, 26067, 262, 5, 30, "Text"],
Cell[1333329, 26074, 535, 14, 87, "Text"],
Cell[1333867, 26090, 438, 12, 63, "Input"],
Cell[1334308, 26104, 187, 4, 30, "Text"],
Cell[1334498, 26110, 351, 9, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334886, 26124, 118, 1, 64, "Section"],
Cell[1335007, 26127, 524, 8, 49, "Text"],
Cell[1335534, 26137, 614, 11, 106, "Text"],
Cell[CellGroupData[{
Cell[1336173, 26152, 144, 2, 28, "Input"],
Cell[1336320, 26156, 122, 1, 28, "Output"]
}, Open  ]],
Cell[1336457, 26160, 305, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[1336787, 26170, 413, 9, 28, "Input"],
Cell[1337203, 26181, 601, 12, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1337841, 26198, 313, 9, 49, "ItemNumbered"],
Cell[1338157, 26209, 280, 6, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[1338462, 26219, 338, 6, 24, "SubitemNumbered"],
Cell[1338803, 26227, 319, 6, 24, "SubitemNumbered"],
Cell[1339125, 26235, 389, 7, 41, "SubitemNumbered"],
Cell[1339517, 26244, 484, 8, 41, "SubitemNumbered"]
}, Open  ]],
Cell[1340016, 26255, 363, 6, 68, "ItemNumbered"]
}, Open  ]],
Cell[1340394, 26264, 1205, 24, 269, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1341648, 26294, 617, 8, 92, "Title"],
Cell[1342268, 26304, 381, 6, 68, "Text"],
Cell[1342652, 26312, 411, 10, 28, "Input"],
Cell[1343066, 26324, 156, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1343247, 26331, 159, 3, 28, "Input"],
Cell[1343409, 26336, 70, 1, 28, "Output"]
}, Open  ]],
Cell[1343494, 26340, 279, 5, 49, "Text"],
Cell[1343776, 26347, 708, 18, 46, "Input"],
Cell[1344487, 26367, 162, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[1344674, 26374, 213, 4, 28, "Input"],
Cell[1344890, 26380, 1431, 21, 97, "Output"]
}, Open  ]],
Cell[1346336, 26404, 452, 9, 87, "Text"],
Cell[1346791, 26415, 324, 8, 28, "Input"],
Cell[1347118, 26425, 124, 1, 30, "Text"],
Cell[1347245, 26428, 598, 14, 80, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1347880, 26447, 234, 3, 92, "Title"],
Cell[CellGroupData[{
Cell[1348139, 26454, 103, 1, 64, "Section"],
Cell[1348245, 26457, 265, 5, 49, "Text"],
Cell[1348513, 26464, 607, 13, 80, "Input"],
Cell[1349123, 26479, 253, 5, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[1349401, 26488, 388, 11, 28, "Input"],
Cell[1349792, 26501, 1130, 34, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1350959, 26540, 178, 3, 30, "ItemNumbered"],
Cell[CellGroupData[{
Cell[1351162, 26547, 398, 6, 24, "SubitemNumbered"],
Cell[1351563, 26555, 192, 2, 24, "SubitemNumbered"],
Cell[1351758, 26559, 262, 5, 24, "SubitemNumbered"],
Cell[1352023, 26566, 242, 4, 24, "SubitemNumbered"]
}, Open  ]],
Cell[1352280, 26573, 315, 6, 30, "ItemNumbered"],
Cell[1352598, 26581, 463, 8, 49, "ItemNumbered"],
Cell[1353064, 26591, 188, 4, 30, "ItemNumbered"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1353313, 26602, 170, 2, 92, "Title"],
Cell[1353486, 26606, 399, 6, 49, "Text"],
Cell[1353888, 26614, 509, 14, 49, "Text"],
Cell[1354400, 26630, 355, 8, 49, "Text"],
Cell[1354758, 26640, 549, 14, 49, "Text"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
